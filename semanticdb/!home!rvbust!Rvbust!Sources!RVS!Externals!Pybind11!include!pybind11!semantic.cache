;; Object pybind11/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "pybind11/"
  :tables
  (list
    (semanticdb-table "pybind11.h"
      :major-mode 'c++-mode
      :tags 
        '( ("attr.h" include nil nil [2328 2345])
            ("options.h" include nil nil [2346 2366])
            ("detail/class.h" include nil nil [2367 2392])
            ("detail/init.h" include nil nil [2393 2417])
            ("cpp_function" type
               (:superclasses 
                  ( ("function" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [2587 2594])
                    ("cpp_function" function
                       (:constructor-flag t
                        :type ("cpp_function" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2599 2617])
                    ("cpp_function" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable (:type ("std::nullptr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2635 2650]))                          
                        :type ("cpp_function" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2622 2654])
                    ("cpp_function" function
                       (:constructor-flag t
                        :arguments 
                          ( ("f" function
                               (:function-pointer t
                                :arguments 
                                  ( ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2818 2823])
                                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [2822 2826]))                                  
                                :type ("Return" type (:type "class") nil nil))
                                nil nil)
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2828 2841])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2844 2850]))                          
                        :type ("cpp_function" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2793 2894])
                    ("cpp_function" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Func" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3126 3133])
                            ("" variable (:type ("f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3133 3135])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3136 3149])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3152 3158]))                          
                        :type ("cpp_function" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3113 3286])
                    ("cpp_function" function
                       (:constructor-flag t
                        :arguments ((nil variable (:pointer (("" variable (:type ("Arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3472 3476]) ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [3475 3479])) :type ("Return" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3453 3480]) ("" variable (:reference 1 :constant-flag t :type ("Extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) #<overlay from 3481 to 3494 in pybind11.h>) ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) #<overlay from 3497 to 3503 in pybind11.h>))
                        :type ("cpp_function" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3440 3667])
                    ("cpp_function" function
                       (:constructor-flag t
                        :arguments ((nil variable (:pointer (("" variable (:type ("Arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3849 3853]) ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [3852 3856])) :type ("Return" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3830 3862]) ("" variable (:reference 1 :constant-flag t :type ("Extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) #<overlay from 3864 to 3877 in pybind11.h>) ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) #<overlay from 3880 to 3886 in pybind11.h>))
                        :type ("cpp_function" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3817 4062])
                    ("name" function (:type ("object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4101 4149])
                    ("protected" label nil (reparse-symbol classsubparts) [4151 4161])
                    ("make_function_record" function
                       (:pointer 1
                        :type ("detail::function_record" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4263 4364])
                    ("initialize" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Func" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4543 4550])
                            ("" variable (:type ("f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4550 4552])
                            ("" function
                               (:function-pointer t
                                :arguments 
                                  ( ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4564 4569])
                                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [4568 4572]))                                  
                                :type ("Return" type (:type "class") nil nil))
                                nil nil)
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4574 4587])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4590 4596]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [4527 8936])
                    ("initialize_generic" function
                       (:arguments 
                          ( ("rec" variable
                               (:pointer 1
                                :type ("detail::function_record" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9050 9079])
                            ("text" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [9080 9097])
                            ("types" variable
                               (:pointer 2
                                :constant-flag t
                                :type ("std::type_info" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9126 9161])
                            ("args" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9162 9174]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [9026 18586])
                    ("destruct" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("rec" variable
                               (:pointer 1
                                :type ("detail::function_record" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [18691 18720]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [18670 19412])
                    ("dispatcher" function
                       (:pointer 1
                        :typemodifiers ("static")
                        :arguments 
                          ( ("self" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [19518 19533])
                            ("args_in" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [19534 19552])
                            ("kwargs_in" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [19553 19573]))                          
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [19490 37261]))                  
                :type "class")
                nil [2548 37264])
            ("module" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [37338 37345])
                    ("module" function
                       (:constructor-flag t
                        :arguments 
                          ( ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [37506 37523])
                            ("doc" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "nullptr"
                                :type "char")
                                (reparse-symbol arg-sub-list) [37524 37549]))                          
                        :type ("module" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [37499 38070])
                    ("def" function
                       (:arguments 
                          ( ("name_" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [38412 38430])
                            ("" variable
                               (:reference 1
                                :type ("Func" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [38431 38438])
                            ("" variable (:type ("f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38438 38440])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [38441 38455])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38458 38464]))                          
                        :type ("module" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [38400 38900])
                    ("def_submodule" function
                       (:arguments 
                          ( ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [39343 39360])
                            ("doc" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "nullptr"
                                :type "char")
                                (reparse-symbol arg-sub-list) [39361 39386]))                          
                        :type ("module" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [39322 39774])
                    ("import" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [39867 39884]))                          
                        :type ("module" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [39846 40049])
                    ("reload" function (:type "void") (reparse-symbol classsubparts) [40112 40292])
                    ("add_object" function
                       (:arguments 
                          ( ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [40613 40630])
                            ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40631 40642])
                            ("overwrite" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [40643 40665]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [40597 40963]))                  
                :type "class")
                nil [37307 40966])
            ("globals" function
               (:typemodifiers ("inline")
                :type ("dict" type (:type "class") nil nil))
                nil [41181 41341])
            ("generic_type" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("class_" friend nil (reparse-symbol classsubparts) [41486 41505])
                    ("public" label nil (reparse-symbol classsubparts) [41507 41514])
                    ("protected" label nil (reparse-symbol classsubparts) [41579 41589])
                    ("initialize" function
                       (:arguments 
                          ( ("rec" variable
                               (:reference 1
                                :constant-flag t
                                :type ("type_record" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [41610 41633]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [41594 43858])
                    ("mark_parents_nonsimple" function
                       (:arguments 
                          ( ("value" variable
                               (:pointer 1
                                :type ("PyTypeObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [43973 43993]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [43945 44299])
                    ("install_buffer_funcs" function
                       (:arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("buffer_info" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [44344 44370])
                            ("get_buffer_data" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [44404 44426]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [44305 44984])
                    ("def_property_static_impl" function
                       (:arguments 
                          ( ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [45073 45090])
                            ("fget" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45125 45137])
                            ("fset" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45138 45150])
                            ("rec_func" variable
                               (:pointer 1
                                :type ("detail::function_record" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [45185 45219]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [45043 45834]))                  
                :type "class")
                nil [41422 45837])
            ("set_operator_new" function
               (:arguments 
                  ( ("r" variable
                       (:pointer 1
                        :type ("type_record" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [46060 46075]))                  
                :type "void")
                nil [46038 46115])
            ("set_operator_new" function
               (:arguments 
                  ( ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [46159 46163]))                  
                :type "void")
                nil [46137 46167])
            ("has_operator_delete" type
               (:superclasses 
                  ( ("std::false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [46215 46264])
            ("std::true_type" variable (:type "int") nil [46392 46411])
            ("has_operator_delete_size" type
               (:superclasses 
                  ( ("std::false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :type "struct")
                nil [46458 46512])
            ("std::true_type" variable (:type "int") nil [46653 46672])
            ("call_operator_delete" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [46868 46873])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46874 46881])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46882 46889]))                  
                :type "void")
                nil [46842 46916])
            ("call_operator_delete" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [47057 47062])
                    ("s" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47063 47072])
                    ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47073 47080]))                  
                :type "void")
                nil [47031 47110])
            ("call_operator_delete" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("p" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [47145 47153])
                    ("s" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47154 47163])
                    ("a" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47164 47173]))                  
                :type "void")
                nil [47112 47408])
            ("decltype" function
               (:arguments 
                  ( ("" variable (:type ("std::forward" type
                         (:template-specifier 
                            ( ("F" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [47631 47649]))                  
                :type "int")
                nil [47622 47681])
            ("Return" function
               (:arguments 
                  ( ("" variable (:type ("Derived" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47824 47832]))                  
                :type "int")
                nil [47816 47844])
            ("Return" function
               (:arguments 
                  ( ("" variable (:type ("Derived" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48176 48184]))                  
                :type "int")
                nil [48168 48196])
            ("class_" type
               (:superclasses 
                  ( ("detail::generic_type" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("detail::is_holder_type" variable (:type "int") (reparse-symbol classsubparts) [48523 48556])
                    ("detail::is_strict_base_of" variable (:type "int") (reparse-symbol classsubparts) [48602 48638])
                    ("detail::is_strict_base_of" variable (:type "int") (reparse-symbol classsubparts) [48681 48717])
                    ("is_valid_class_option" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :superclasses 
                          ( ("detail::any_of" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol classsubparts) [48772 48892])
                    ("public" label nil (reparse-symbol classsubparts) [48894 48901])
                    ("type" variable
                       (:default-value "type_"
                        :type "int")
                        (reparse-symbol classsubparts) [48912 48925])
                    ("std::is_void::value" variable (:type "int") (reparse-symbol classsubparts) [49041 49073])
                    ("static_assert" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("detail::all_of" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49186 49201])
                            ("" variable (:type ("is_valid_class_option" type
                                 (:template-specifier 
                                    ( ("options" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [49201 49232])
                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49237 49243]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [49172 49311])
                    ("static_assert" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("has_alias" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49332 49343])
                            ("" variable (:type ("std::is_polymorphic::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49345 49378]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [49317 49448])
                    ("class_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("scope" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49551 49564])
                            ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [49565 49582])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [49583 49597])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49600 49606]))                          
                        :type ("class_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49544 51359])
                    ("add_base" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("rec" variable
                               (:reference 1
                                :type ("detail::type_record" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [51467 51492]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [51446 51644])
                    ("add_base" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("detail::type_record" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [51753 51775]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [51732 51779])
                    ("def" function
                       (:arguments 
                          ( ("name_" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [51845 51863])
                            ("" variable
                               (:reference 1
                                :type ("Func" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [51864 51870])
                            ("" variable (:type ("f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51871 51873])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [51874 51887])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51890 51896]))                          
                        :type ("class_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [51833 52131])
                    ("def_static" function
                       (:arguments 
                          ( ("name_" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [52205 52223])
                            ("" variable
                               (:reference 1
                                :type ("Func" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [52224 52231])
                            ("" variable (:type ("f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52231 52233])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [52234 52247])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52250 52256]))                          
                        :type ("class_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [52181 52619])
                    ("def" function
                       (:arguments 
                          ( ("op" variable
                               (:reference 1
                                :constant-flag t
                                :type ("detail::op_" type
                                     (:template-specifier 
                                        ( ("id" type nil nil nil)
                                          ("ot" type nil nil nil)
                                          ("L" type nil nil nil)
                                          ("R" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [52732 52768])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [52769 52782])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52785 52791]))                          
                        :type ("class_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [52720 52858])
                    ("def_cast" function
                       (:arguments 
                          ( ("op" variable
                               (:reference 1
                                :constant-flag t
                                :type ("detail::op_" type
                                     (:template-specifier 
                                        ( ("id" type nil nil nil)
                                          ("ot" type nil nil nil)
                                          ("L" type nil nil nil)
                                          ("R" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [52977 53013])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [53014 53027])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53030 53036]))                          
                        :type ("class_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [52959 53108])
                    ("def" function
                       (:arguments 
                          ( ("" variable
                               (:constant-flag t
                                :type ("detail::initimpl::constructor" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [53177 53213])
                            ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53213 53218])
                            ("" variable (:type ("init" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53223 53228])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [53229 53242])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53245 53251]))                          
                        :type ("class_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [53165 53320])
                    ("def" function
                       (:arguments 
                          ( ("" variable
                               (:constant-flag t
                                :type ("detail::initimpl::alias_constructor" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [53389 53431])
                            ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53431 53436])
                            ("" variable (:type ("init" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53441 53446])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [53447 53460])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53463 53469]))                          
                        :type ("class_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [53377 53538])
                    ("def" function
                       (:arguments 
                          ( ("" variable (:type ("detail::initimpl::factory" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53607 53633])
                            ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53633 53638])
                            ("" variable (:type ("init" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53644 53649])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [53650 53663])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53666 53672]))                          
                        :type ("class_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [53595 53752])
                    ("def" function
                       (:arguments 
                          ( ("" variable (:type ("detail::initimpl::pickle_factory" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53821 53854])
                            ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53854 53859])
                            ("" variable (:type ("pf" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53865 53868])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [53869 53883])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53885 53891]))                          
                        :type ("class_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [53809 53969])
                    ("def_buffer" function
                       (:template 
                          ( ("Func" type (:type "class") nil nil))                          
                        :type ("class_" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Func" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [54019 54026])
                            ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54026 54031]))                          )
                        (reparse-symbol classsubparts) [53975 54447])
                    ("def_buffer" function
                       (:arguments ((nil variable (:pointer (("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54559 54564]) ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [54563 54567])) :type ("Return" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54537 54568]))
                        :type ("class_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [54518 54649])
                    ("def_buffer" function
                       (:arguments ((nil variable (:pointer (("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54761 54766]) ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [54765 54769])) :type ("Return" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54739 54775]))
                        :type ("class_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [54720 54863])
                    ("def_readwrite" function
                       (:arguments 
                          ( ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [54948 54965])
                            ("C" variable (:type ("D" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54966 54970])
                            ("" variable (:type ("pm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54972 54975])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [54976 54989])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54992 54998]))                          
                        :type ("class_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [54926 55432])
                    ("def_readonly" function
                       (:arguments 
                          ( ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [55516 55533])
                            ("C" variable
                               (:constant-flag t
                                :type ("D" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [55534 55544])
                            ("" variable (:type ("pm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55546 55549])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [55550 55564])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55566 55572]))                          
                        :type ("class_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [55495 55913])
                    ("def_readwrite_static" function
                       (:arguments 
                          ( ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [55993 56010])
                            ("pm" variable
                               (:pointer 1
                                :type ("D" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [56011 56017])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [56018 56032])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56034 56040]))                          
                        :type ("class_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [55964 56330])
                    ("def_readonly_static" function
                       (:arguments 
                          ( ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [56409 56426])
                            ("pm" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("D" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [56427 56439])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [56440 56454])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56456 56462]))                          
                        :type ("class_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [56381 56667])
                    ("def_property_readonly" function
                       (:arguments 
                          ( ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [56817 56834])
                            ("fget" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Getter" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [56835 56854])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [56855 56869])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [56871 56877]))                          
                        :type ("class_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [56787 57059])
                    ("def_property_readonly" function
                       (:arguments 
                          ( ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [57187 57204])
                            ("fget" variable
                               (:reference 1
                                :constant-flag t
                                :type ("cpp_function" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [57205 57230])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [57231 57245])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57247 57253]))                          
                        :type ("class_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [57157 57321])
                    ("def_property_readonly_static" function
                       (:arguments 
                          ( ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [57469 57486])
                            ("fget" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Getter" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [57487 57506])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [57507 57521])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57523 57529]))                          
                        :type ("class_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [57432 57650])
                    ("def_property_readonly_static" function
                       (:arguments 
                          ( ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [57785 57802])
                            ("fget" variable
                               (:reference 1
                                :constant-flag t
                                :type ("cpp_function" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [57803 57828])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [57829 57843])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57845 57851]))                          
                        :type ("class_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [57748 57926])
                    ("def_property" function
                       (:arguments 
                          ( ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [58084 58101])
                            ("fget" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Getter" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [58102 58121])
                            ("fset" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Setter" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [58122 58141])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [58142 58156])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58158 58164]))                          
                        :type ("class_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [58063 58265])
                    ("def_property" function
                       (:arguments 
                          ( ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [58341 58358])
                            ("fget" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Getter" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [58359 58378])
                            ("fset" variable
                               (:reference 1
                                :constant-flag t
                                :type ("cpp_function" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [58379 58404])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [58405 58419])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58421 58427]))                          
                        :type ("class_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [58320 58597])
                    ("def_property" function
                       (:arguments 
                          ( ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [58716 58733])
                            ("fget" variable
                               (:reference 1
                                :constant-flag t
                                :type ("cpp_function" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [58734 58759])
                            ("fset" variable
                               (:reference 1
                                :constant-flag t
                                :type ("cpp_function" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [58760 58785])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [58786 58800])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58802 58808]))                          
                        :type ("class_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [58695 58898])
                    ("def_property_static" function
                       (:arguments 
                          ( ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [59037 59054])
                            ("fget" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Getter" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [59055 59074])
                            ("fset" variable
                               (:reference 1
                                :constant-flag t
                                :type ("cpp_function" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [59075 59100])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [59101 59115])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59117 59123]))                          
                        :type ("class_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [59009 59241])
                    ("def_property_static" function
                       (:arguments 
                          ( ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [59367 59384])
                            ("fget" variable
                               (:reference 1
                                :constant-flag t
                                :type ("cpp_function" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [59385 59410])
                            ("fset" variable
                               (:reference 1
                                :constant-flag t
                                :type ("cpp_function" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [59411 59436])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [59437 59451])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59453 59459]))                          
                        :type ("class_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [59339 60431])
                    ("private" label nil (reparse-symbol classsubparts) [60433 60441])
                    ("init_holder" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("inst" variable
                               (:pointer 1
                                :type ("detail::instance" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [60585 60608])
                            ("v_h" variable
                               (:reference 1
                                :type ("detail::value_and_holder" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [60609 60639])
                            ("" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("holder_type" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [60652 60685])
                            ("" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("std::enable_shared_from_this" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [60686 60738]))                          
                        :typemodifiers ("static"))
                        (reparse-symbol classsubparts) [60535 61335])
                    ("init_holder_from_existing" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("v_h" variable
                               (:reference 1
                                :constant-flag t
                                :type ("detail::value_and_holder" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [61379 61415])
                            ("holder_ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("holder_type" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [61428 61458])
                            ("" variable (:type ("std::true_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61459 61500]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [61341 61629])
                    ("init_holder_from_existing" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("v_h" variable
                               (:reference 1
                                :constant-flag t
                                :type ("detail::value_and_holder" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [61673 61709])
                            ("holder_ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("holder_type" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [61722 61752])
                            ("" variable (:type ("std::false_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61753 61795]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [61635 61923])
                    ("init_holder" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("inst" variable
                               (:pointer 1
                                :type ("detail::instance" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [62056 62079])
                            ("v_h" variable
                               (:reference 1
                                :type ("detail::value_and_holder" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [62080 62110])
                            ("holder_ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("holder_type" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [62123 62153])
                            ("" variable
                               (:pointer 1
                                :constant-flag t
                                :type "void")
                                (reparse-symbol arg-sub-list) [62154 62214]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [62032 62626])
                    ("init_instance" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("inst" variable
                               (:pointer 1
                                :type ("detail::instance" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [63031 63054])
                            ("holder_ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type "void")
                                (reparse-symbol arg-sub-list) [63055 63078]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [63005 63418])
                    ("dealloc" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("v_h" variable
                               (:reference 1
                                :type ("detail::value_and_holder" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [63536 63566]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [63516 63938])
                    ("get_function_record" function
                       (:pointer 1
                        :typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [63996 64005]))                          
                        :type ("detail::function_record" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [63944 64184]))                  
                :type "class")
                nil [48434 64187])
            ("init" function (:type "int") nil [64315 64336])
            ("init_alias" function (:type "int") nil [64552 64579])
            ("init" function
               (:arguments 
                  ( ("" variable
                       (:reference 1
                        :type ("Func" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [64709 64716])
                    ("" variable (:type ("f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64716 64718]))                  
                :type ("Ret" type (:type "class") nil nil))
                nil [64700 64754])
            ("init" function
               (:arguments 
                  ( ("" variable
                       (:reference 1
                        :type ("CFunc" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [65061 65069])
                    ("" variable (:type ("c" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [65069 65071])
                    ("" variable
                       (:reference 1
                        :type ("AFunc" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [65072 65080])
                    ("" variable (:type ("a" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [65080 65082]))                  
                :type ("Ret" type (:type "class") nil nil))
                nil [65052 65147])
            ("pickle" function
               (:template 
                  ( ("GetState" type (:type "class") nil nil)
                    ("SetState" type (:type "class") nil nil))                  
                :type ("detail::initimpl::pickle_factory" type
                     (:template-specifier 
                        ( ("GetState" type nil nil nil)
                          ("SetState" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :arguments 
                  ( ("" variable
                       (:reference 1
                        :type ("GetState" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [65433 65444])
                    ("" variable (:type ("g" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [65444 65446])
                    ("" variable
                       (:reference 1
                        :type ("SetState" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [65447 65458])
                    ("" variable (:type ("s" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [65458 65460]))                  )
                nil [65325 65531])
            ("enum_base" type
               (:members 
                  ( ("enum_base" function
                       (:constructor-flag t
                        :arguments 
                          ( ("base" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [65590 65602])
                            ("parent" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [65603 65617]))                          
                        :type ("enum_base" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [65580 65654])
                    ("init" function
                       (:arguments 
                          ( ("is_arithmetic" variable (:type "bool") (reparse-symbol arg-sub-list) [65688 65707])
                            ("is_convertible" variable (:type "bool") (reparse-symbol arg-sub-list) [65708 65728]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [65678 71185])
                    ("value" function
                       (:arguments 
                          ( ("name_" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [71220 71238])
                            ("value" variable (:type ("object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71239 71252])
                            ("doc" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "nullptr"
                                :type "char")
                                (reparse-symbol arg-sub-list) [71253 71278]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [71209 71680])
                    ("export_values" function (:type "void") (reparse-symbol classsubparts) [71704 71878])
                    ("m_base" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol classsubparts) [71884 71898])
                    ("m_parent" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol classsubparts) [71903 71919]))                  
                :type "struct")
                nil [65557 71922])
            ("enum_" type
               (:template 
                  ( ("Type" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [72069 72076])
                    ("class_" variable (:type "int") (reparse-symbol classsubparts) [72094 72107])
                    ("Base::def" variable (:type "int") (reparse-symbol classsubparts) [72118 72128])
                    ("Base::attr" variable (:type "int") (reparse-symbol classsubparts) [72139 72150])
                    ("Base::def_property_readonly" variable (:type "int") (reparse-symbol classsubparts) [72161 72189])
                    ("Base::def_property_readonly_static" variable (:type "int") (reparse-symbol classsubparts) [72200 72235])
                    ("std::underlying_type::type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [72255 72297])
                    ("enum_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("scope" variable
                               (:reference 1
                                :constant-flag t
                                :type ("handle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [72342 72362])
                            ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [72363 72380])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Extra" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [72381 72394])
                            ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72397 72403]))                          
                        :type ("enum_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [72336 73143])
                    ("export_values" function (:type ("enum_" type (:type "class") nil nil)) (reparse-symbol classsubparts) [73206 73290])
                    ("value" function
                       (:arguments 
                          ( ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [73342 73359])
                            ("value" variable (:type ("Type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73360 73371])
                            ("doc" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "nullptr"
                                :type "char")
                                (reparse-symbol arg-sub-list) [73372 73397]))                          
                        :type ("enum_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [73329 73511])
                    ("private" label nil (reparse-symbol classsubparts) [73513 73521])
                    ("m_base" variable (:type ("detail::enum_base" type (:type "class") nil nil)) (reparse-symbol classsubparts) [73526 73551]))                  
                :superclasses 
                  ( ("class_" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [72008 73554])
            ("keep_alive_impl" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("nurse" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73610 73623])
                    ("patient" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73624 73639]))                  
                :type "void")
                nil [73582 74615])
            ("keep_alive_impl" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("Nurse" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74663 74676])
                    ("Patient" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74677 74692])
                    ("call" variable
                       (:reference 1
                        :type ("function_call" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [74693 74713])
                    ("ret" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74714 74725]))                  
                :type "void")
                nil [74635 75051])
            ("all_type_info_get_cache" function
               (:arguments 
                  ( ("type" variable
                       (:pointer 1
                        :type ("PyTypeObject" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [75152 75171]))                  
                :type "int")
                nil [75128 75719])
            ("iterator_state" type
               (:template 
                  ( ("Iterator" type (:type "class") nil nil)
                    ("Sentinel" type (:type "class") nil nil)
                    ("bool" type nil nil nil)
                    ("return_value_policy" type nil nil nil))                  
                :type "struct"
                :members 
                  ( ("it" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [75843 75855])
                    ("end" variable (:type ("Sentinel" type (:type "class") nil nil)) (reparse-symbol classsubparts) [75860 75873])
                    ("first_or_done" variable (:type "bool") (reparse-symbol classsubparts) [75878 75897]))                  )
                nil [75721 75900])
            ("make_iterator" function
               (:arguments 
                  ( ("first" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76260 76275])
                    ("last" variable (:type ("Sentinel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76276 76290])
                    ("" variable
                       (:reference 1
                        :type ("Extra" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [76291 76299])
                    ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76303 76309]))                  
                :type ("iterator" type (:type "class") nil nil))
                nil [76237 77051])
            ("make_key_iterator" function
               (:arguments 
                  ( ("first" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77449 77464])
                    ("last" variable (:type ("Sentinel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77465 77479])
                    ("" variable
                       (:reference 1
                        :type ("Extra" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [77480 77488])
                    ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77492 77498]))                  
                :type ("iterator" type (:type "class") nil nil))
                nil [77422 78245])
            ("make_iterator" function
               (:arguments 
                  ( ("value" variable
                       (:reference 1
                        :type ("Type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [78510 78522])
                    ("" variable
                       (:reference 1
                        :type ("Extra" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [78523 78530])
                    ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [78534 78540]))                  
                :type ("iterator" type (:type "class") nil nil))
                nil [78487 78624])
            ("make_key_iterator" function
               (:arguments 
                  ( ("value" variable
                       (:reference 1
                        :type ("Type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [78895 78907])
                    ("" variable
                       (:reference 1
                        :type ("Extra" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [78908 78915])
                    ("" variable (:type ("extra" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [78919 78925]))                  
                :type ("iterator" type (:type "class") nil nil))
                nil [78868 79013])
            ("implicitly_convertible" function
               (:template 
                  ( ("InputType" type (:type "class") nil nil)
                    ("OutputType" type (:type "class") nil nil))                  
                :type "void")
                nil [79015 80055])
            ("register_exception_translator" function
               (:template 
                  ( ("ExceptionTranslator" type (:type "class") nil nil))                  
                :type "void"
                :arguments 
                  ( ("" variable
                       (:reference 1
                        :type ("ExceptionTranslator" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [80132 80153])
                    ("" variable (:type ("translator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80154 80165]))                  )
                nil [80057 80298])
            ("exception" type
               (:template 
                  ( ("type" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [80584 80591])
                    ("exception" function
                       (:constructor-flag t
                        :arguments 
                          ( ("scope" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80633 80646])
                            ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [80647 80664])
                            ("base" variable
                               (:pointer 1
                                :default-value "PyExc_Exception"
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [80665 80697]))                          
                        :type ("exception" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [80623 81157])
                    ("()" function
                       (:operator-flag t
                        :arguments 
                          ( ("message" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [81268 81288]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [81252 81337]))                  
                :superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [80525 81340])
            ("get_exception_object" function
               (:template 
                  ( ("CppException" type (:type "class") nil nil))                  
                :type ("exception" type
                     (:template-specifier 
                        ( ("CppException" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [81632 81762])
            ("register_exception" function
               (:template 
                  ( ("CppException" type (:type "class") nil nil))                  
                :type ("exception" type
                     (:template-specifier 
                        ( ("CppException" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :arguments 
                  ( ("scope" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82212 82225])
                    ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [82270 82287])
                    ("base" variable
                       (:pointer 1
                        :default-value "PyExc_Exception"
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [82332 82364]))                  )
                nil [82135 82774])
            ("print" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("args" variable (:type ("tuple" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82836 82847])
                    ("kwargs" variable (:type ("dict" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82848 82860]))                  
                :type "void")
                nil [82818 83837])
            ("print" function
               (:arguments 
                  ( ("" variable
                       (:reference 1
                        :type ("Args" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [83971 83978])
                    ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83981 83986]))                  
                :type "void")
                nil [83960 84108])
            ("gil_scoped_acquire" type (:type "class") nil [89257 89286])
            ("gil_scoped_release" type (:type "class") nil [89287 89316])
            ("error_already_set" function
               (:destructor-flag t
                :parent "error_already_set"
                :type "void")
                nil [89325 89553])
            ("get_type_overload" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("this_ptr" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [89589 89610])
                    ("this_type" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("detail::type_info" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [89611 89646])
                    ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [89647 89664]))                  
                :type ("function" type (:type "class") nil nil))
                nil [89555 91732])
            ("get_overload" function
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type ("function" type (:type "class") nil nil)
                :arguments 
                  ( ("this_ptr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [91775 91793])
                    ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [91794 91811]))                  )
                nil [91734 91940])
            ("PYBIND11_OVERLOAD_INT" variable (:constant-flag t) nil [91950 91971])
            ("PYBIND11_OVERLOAD_NAME" variable (:constant-flag t) nil [92600 92622])
            ("PYBIND11_OVERLOAD_PURE_NAME" variable (:constant-flag t) nil [92794 92821])
            ("PYBIND11_OVERLOAD" variable (:constant-flag t) nil [93071 93088])
            ("PYBIND11_OVERLOAD_PURE" variable (:constant-flag t) nil [93222 93244]))          
      :file "pybind11.h"
      :pointmax 93568
      :fsize 93567
      :lastmodtime '(23752 6143 865743 964000)
      :unmatched-syntax '((symbol 93557 . 93560) (symbol 93546 . 93556) (symbol 93542 . 93545) (symbol 93535 . 93541) (punctuation 93532 . 93533) (semantic-list 93388 . 93408) (symbol 93375 . 93388) (punctuation 83980 . 83981) (punctuation 83979 . 83980) (punctuation 83978 . 83979) (punctuation 83977 . 83978) (punctuation 83958 . 83959) (symbol 83954 . 83958) (punctuation 83952 . 83953) (punctuation 83951 . 83952) (punctuation 83950 . 83951) (TYPENAME 83942 . 83950) (punctuation 83940 . 83941) (symbol 83921 . 83940) (punctuation 83920 . 83921) (punctuation 83919 . 83920) (symbol 83900 . 83919) (punctuation 83898 . 83899) (symbol 83891 . 83897) (symbol 83871 . 83890) (punctuation 83870 . 83871) (TEMPLATE 83861 . 83869) (semantic-list 83851 . 83859) (symbol 83838 . 83851) (symbol 82800 . 82817) (semantic-list 82791 . 82799) (symbol 82776 . 82791) (semantic-list 81776 . 81784) (symbol 81763 . 81776) (semantic-list 81357 . 81365) (symbol 81342 . 81357) (punctuation 80617 . 80618) (DEFAULT 80610 . 80617) (punctuation 80608 . 80609) (semantic-list 80605 . 80607) (symbol 80596 . 80605) (punctuation 80152 . 80153) (punctuation 78917 . 78918) (punctuation 78916 . 78917) (punctuation 78915 . 78916) (punctuation 78914 . 78915) (punctuation 78866 . 78867) (symbol 78861 . 78866) (punctuation 78859 . 78860) (punctuation 78858 . 78859) (punctuation 78857 . 78858) (TYPENAME 78849 . 78857) (punctuation 78847 . 78848) (symbol 78843 . 78847) (TYPENAME 78834 . 78842) (punctuation 78822 . 78823) (symbol 78804 . 78822) (punctuation 78803 . 78804) (punctuation 78802 . 78803) (symbol 78783 . 78802) (punctuation 78781 . 78782) (symbol 78774 . 78780) (symbol 78754 . 78773) (punctuation 78753 . 78754) (TEMPLATE 78744 . 78752) (punctuation 78532 . 78533) (punctuation 78531 . 78532) (punctuation 78530 . 78531) (punctuation 78529 . 78530) (punctuation 78485 . 78486) (symbol 78480 . 78485) (punctuation 78478 . 78479) (punctuation 78477 . 78478) (punctuation 78476 . 78477) (TYPENAME 78468 . 78476) (punctuation 78466 . 78467) (symbol 78462 . 78466) (TYPENAME 78453 . 78461) (punctuation 78441 . 78442) (symbol 78423 . 78441) (punctuation 78422 . 78423) (punctuation 78421 . 78422) (symbol 78402 . 78421) (punctuation 78400 . 78401) (symbol 78393 . 78399) (symbol 78373 . 78392) (punctuation 78372 . 78373) (TEMPLATE 78363 . 78371) (punctuation 77490 . 77491) (punctuation 77489 . 77490) (punctuation 77488 . 77489) (punctuation 77487 . 77488) (punctuation 77420 . 77421) (symbol 77415 . 77420) (punctuation 77413 . 77414) (punctuation 77412 . 77413) (punctuation 77411 . 77412) (TYPENAME 77403 . 77411) (punctuation 77391 . 77392) (semantic-list 77356 . 77391) (symbol 77348 . 77356) (punctuation 77384 . 77385) (semantic-list 77357 . 77384) (punctuation 77346 . 77347) (symbol 77338 . 77345) (TYPENAME 77329 . 77337) (punctuation 77317 . 77318) (symbol 77309 . 77317) (TYPENAME 77300 . 77308) (punctuation 77288 . 77289) (symbol 77280 . 77288) (TYPENAME 77271 . 77279) (punctuation 77259 . 77260) (symbol 77241 . 77259) (punctuation 77240 . 77241) (punctuation 77239 . 77240) (symbol 77220 . 77239) (punctuation 77218 . 77219) (symbol 77211 . 77217) (symbol 77191 . 77210) (punctuation 77190 . 77191) (TEMPLATE 77181 . 77189) (punctuation 76301 . 76302) (punctuation 76300 . 76301) (punctuation 76299 . 76300) (punctuation 76298 . 76299) (punctuation 76235 . 76236) (symbol 76230 . 76235) (punctuation 76228 . 76229) (punctuation 76227 . 76228) (punctuation 76226 . 76227) (TYPENAME 76218 . 76226) (punctuation 76206 . 76207) (semantic-list 76179 . 76206) (symbol 76171 . 76179) (semantic-list 76203 . 76205) (punctuation 76180 . 76181) (punctuation 76169 . 76170) (symbol 76159 . 76168) (TYPENAME 76150 . 76158) (punctuation 76138 . 76139) (symbol 76130 . 76138) (TYPENAME 76121 . 76129) (punctuation 76109 . 76110) (symbol 76101 . 76109) (TYPENAME 76092 . 76100) (punctuation 76080 . 76081) (symbol 76062 . 76080) (punctuation 76061 . 76062) (punctuation 76060 . 76061) (symbol 76041 . 76060) (punctuation 76039 . 76040) (symbol 76032 . 76038) (symbol 76012 . 76031) (punctuation 76011 . 76012) (TEMPLATE 76002 . 76010) (semantic-list 75915 . 75923) (symbol 75902 . 75915) (punctuation 75126 . 75127) (BOOL 75122 . 75126) (punctuation 75120 . 75121) (symbol 75112 . 75120) (punctuation 75111 . 75112) (punctuation 75110 . 75111) (semantic-list 75078 . 75110) (symbol 75070 . 75078) (punctuation 75069 . 75070) (symbol 75065 . 75069) (punctuation 75064 . 75065) (punctuation 75063 . 75064) (symbol 75060 . 75063) (INLINE 75053 . 75059) (symbol 74617 . 74634) (semantic-list 73571 . 73579) (symbol 73556 . 73571) (punctuation 72395 . 72396) (punctuation 72394 . 72395) (punctuation 72393 . 72394) (punctuation 72330 . 72331) (symbol 72325 . 72330) (punctuation 72323 . 72324) (punctuation 72322 . 72323) (punctuation 72321 . 72322) (TYPENAME 72313 . 72321) (punctuation 72312 . 72313) (TEMPLATE 72303 . 72311) (punctuation 72253 . 72254) (symbol 72246 . 72252) (USING 72240 . 72245) (USING 72194 . 72199) (USING 72155 . 72160) (USING 72133 . 72138) (USING 72112 . 72117) (punctuation 72092 . 72093) (symbol 72087 . 72091) (USING 72081 . 72086) (semantic-list 71937 . 71945) (symbol 71924 . 71937) (symbol 71686 . 71703) (symbol 71191 . 71208) (symbol 65660 . 65677) (semantic-list 65548 . 65556) (symbol 65533 . 65548) (symbol 71686 . 71703) (symbol 71191 . 71208) (symbol 65660 . 65677) (symbol 71686 . 71703) (symbol 71191 . 71208) (symbol 65660 . 65677) (punctuation 65457 . 65458) (punctuation 65443 . 65444) (punctuation 65079 . 65080) (punctuation 65068 . 65069) (punctuation 65050 . 65051) (punctuation 65049 . 65050) (symbol 65044 . 65049) (punctuation 65042 . 65043) (symbol 65037 . 65042) (punctuation 65036 . 65037) (symbol 65029 . 65036) (punctuation 65028 . 65029) (punctuation 65027 . 65028) (symbol 65019 . 65027) (punctuation 65018 . 65019) (punctuation 65017 . 65018) (symbol 65011 . 65017) (punctuation 65009 . 65010) (symbol 65005 . 65008) (TYPENAME 64996 . 65004) (punctuation 64994 . 64995) (symbol 64989 . 64994) (TYPENAME 64980 . 64988) (punctuation 64978 . 64979) (symbol 64973 . 64978) (TYPENAME 64964 . 64972) (punctuation 64963 . 64964) (TEMPLATE 64954 . 64962) (punctuation 64715 . 64716) (punctuation 64698 . 64699) (punctuation 64697 . 64698) (symbol 64693 . 64697) (punctuation 64692 . 64693) (symbol 64685 . 64692) (punctuation 64684 . 64685) (punctuation 64683 . 64684) (symbol 64675 . 64683) (punctuation 64674 . 64675) (punctuation 64673 . 64674) (symbol 64667 . 64673) (punctuation 64665 . 64666) (symbol 64661 . 64664) (TYPENAME 64652 . 64660) (punctuation 64650 . 64651) (symbol 64646 . 64650) (TYPENAME 64637 . 64645) (punctuation 64636 . 64637) (TEMPLATE 64627 . 64635) (punctuation 64550 . 64551) (punctuation 64549 . 64550) (punctuation 64548 . 64549) (punctuation 64547 . 64548) (symbol 64543 . 64547) (punctuation 64542 . 64543) (symbol 64525 . 64542) (punctuation 64524 . 64525) (punctuation 64523 . 64524) (symbol 64515 . 64523) (punctuation 64514 . 64515) (punctuation 64513 . 64514) (symbol 64507 . 64513) (punctuation 64505 . 64506) (symbol 64501 . 64505) (punctuation 64499 . 64500) (punctuation 64498 . 64499) (punctuation 64497 . 64498) (TYPENAME 64489 . 64497) (punctuation 64488 . 64489) (TEMPLATE 64479 . 64487) (punctuation 64313 . 64314) (punctuation 64312 . 64313) (punctuation 64311 . 64312) (punctuation 64310 . 64311) (symbol 64306 . 64310) (punctuation 64305 . 64306) (symbol 64294 . 64305) (punctuation 64293 . 64294) (punctuation 64292 . 64293) (symbol 64284 . 64292) (punctuation 64283 . 64284) (punctuation 64282 . 64283) (symbol 64276 . 64282) (punctuation 64274 . 64275) (symbol 64270 . 64274) (punctuation 64268 . 64269) (punctuation 64267 . 64268) (punctuation 64266 . 64267) (TYPENAME 64258 . 64266) (punctuation 64257 . 64258) (TEMPLATE 64248 . 64256) (punctuation 59452 . 59453) (punctuation 59451 . 59452) (punctuation 59450 . 59451) (punctuation 59333 . 59334) (symbol 59328 . 59333) (punctuation 59326 . 59327) (punctuation 59325 . 59326) (punctuation 59324 . 59325) (TYPENAME 59316 . 59324) (punctuation 59315 . 59316) (TEMPLATE 59306 . 59314) (punctuation 59116 . 59117) (punctuation 59115 . 59116) (punctuation 59114 . 59115) (punctuation 59003 . 59004) (symbol 58998 . 59003) (punctuation 58996 . 58997) (punctuation 58995 . 58996) (punctuation 58994 . 58995) (TYPENAME 58986 . 58994) (punctuation 58984 . 58985) (symbol 58978 . 58984) (TYPENAME 58969 . 58977) (punctuation 58968 . 58969) (TEMPLATE 58959 . 58967) (punctuation 58801 . 58802) (punctuation 58800 . 58801) (punctuation 58799 . 58800) (punctuation 58689 . 58690) (symbol 58684 . 58689) (punctuation 58682 . 58683) (punctuation 58681 . 58682) (punctuation 58680 . 58681) (TYPENAME 58672 . 58680) (punctuation 58671 . 58672) (TEMPLATE 58662 . 58670) (punctuation 58420 . 58421) (punctuation 58419 . 58420) (punctuation 58418 . 58419) (punctuation 58314 . 58315) (symbol 58309 . 58314) (punctuation 58307 . 58308) (punctuation 58306 . 58307) (punctuation 58305 . 58306) (TYPENAME 58297 . 58305) (punctuation 58295 . 58296) (symbol 58289 . 58295) (TYPENAME 58280 . 58288) (punctuation 58279 . 58280) (TEMPLATE 58270 . 58278) (punctuation 58157 . 58158) (punctuation 58156 . 58157) (punctuation 58155 . 58156) (punctuation 58057 . 58058) (symbol 58052 . 58057) (punctuation 58050 . 58051) (punctuation 58049 . 58050) (punctuation 58048 . 58049) (TYPENAME 58040 . 58048) (punctuation 58038 . 58039) (symbol 58032 . 58038) (TYPENAME 58023 . 58031) (punctuation 58021 . 58022) (symbol 58015 . 58021) (TYPENAME 58006 . 58014) (punctuation 58005 . 58006) (TEMPLATE 57996 . 58004) (punctuation 57844 . 57845) (punctuation 57843 . 57844) (punctuation 57842 . 57843) (punctuation 57742 . 57743) (symbol 57737 . 57742) (punctuation 57735 . 57736) (punctuation 57734 . 57735) (punctuation 57733 . 57734) (TYPENAME 57725 . 57733) (punctuation 57724 . 57725) (TEMPLATE 57715 . 57723) (punctuation 57522 . 57523) (punctuation 57521 . 57522) (punctuation 57520 . 57521) (punctuation 57426 . 57427) (symbol 57421 . 57426) (punctuation 57419 . 57420) (punctuation 57418 . 57419) (punctuation 57417 . 57418) (TYPENAME 57409 . 57417) (punctuation 57407 . 57408) (symbol 57401 . 57407) (TYPENAME 57392 . 57400) (punctuation 57391 . 57392) (TEMPLATE 57382 . 57390) (punctuation 57246 . 57247) (punctuation 57245 . 57246) (punctuation 57244 . 57245) (punctuation 57151 . 57152) (symbol 57146 . 57151) (punctuation 57144 . 57145) (punctuation 57143 . 57144) (punctuation 57142 . 57143) (TYPENAME 57134 . 57142) (punctuation 57133 . 57134) (TEMPLATE 57124 . 57132) (punctuation 56870 . 56871) (punctuation 56869 . 56870) (punctuation 56868 . 56869) (punctuation 56781 . 56782) (symbol 56776 . 56781) (punctuation 56774 . 56775) (punctuation 56773 . 56774) (punctuation 56772 . 56773) (TYPENAME 56764 . 56772) (punctuation 56762 . 56763) (symbol 56756 . 56762) (TYPENAME 56747 . 56755) (punctuation 56746 . 56747) (TEMPLATE 56737 . 56745) (punctuation 56455 . 56456) (punctuation 56454 . 56455) (punctuation 56453 . 56454) (punctuation 56375 . 56376) (symbol 56370 . 56375) (punctuation 56368 . 56369) (punctuation 56367 . 56368) (punctuation 56366 . 56367) (TYPENAME 56358 . 56366) (punctuation 56356 . 56357) (symbol 56355 . 56356) (TYPENAME 56346 . 56354) (punctuation 56345 . 56346) (TEMPLATE 56336 . 56344) (punctuation 56033 . 56034) (punctuation 56032 . 56033) (punctuation 56031 . 56032) (punctuation 55958 . 55959) (symbol 55953 . 55958) (punctuation 55951 . 55952) (punctuation 55950 . 55951) (punctuation 55949 . 55950) (TYPENAME 55941 . 55949) (punctuation 55939 . 55940) (symbol 55938 . 55939) (TYPENAME 55929 . 55937) (punctuation 55928 . 55929) (TEMPLATE 55919 . 55927) (punctuation 55565 . 55566) (punctuation 55564 . 55565) (punctuation 55563 . 55564) (punctuation 55545 . 55546) (punctuation 55544 . 55545) (punctuation 55543 . 55544) (punctuation 55489 . 55490) (symbol 55484 . 55489) (punctuation 55482 . 55483) (punctuation 55481 . 55482) (punctuation 55480 . 55481) (TYPENAME 55472 . 55480) (punctuation 55470 . 55471) (symbol 55469 . 55470) (TYPENAME 55460 . 55468) (punctuation 55458 . 55459) (symbol 55457 . 55458) (TYPENAME 55448 . 55456) (punctuation 55447 . 55448) (TEMPLATE 55438 . 55446) (punctuation 54990 . 54991) (punctuation 54989 . 54990) (punctuation 54988 . 54989) (punctuation 54971 . 54972) (punctuation 54970 . 54971) (punctuation 54969 . 54970) (punctuation 54920 . 54921) (symbol 54915 . 54920) (punctuation 54913 . 54914) (punctuation 54912 . 54913) (punctuation 54911 . 54912) (TYPENAME 54903 . 54911) (punctuation 54901 . 54902) (symbol 54900 . 54901) (TYPENAME 54891 . 54899) (punctuation 54889 . 54890) (symbol 54888 . 54889) (TYPENAME 54879 . 54887) (punctuation 54878 . 54879) (TEMPLATE 54869 . 54877) (CONST 54770 . 54775) (punctuation 54714 . 54715) (symbol 54710 . 54714) (punctuation 54708 . 54709) (punctuation 54707 . 54708) (punctuation 54706 . 54707) (TYPENAME 54698 . 54706) (punctuation 54696 . 54697) (symbol 54691 . 54696) (TYPENAME 54682 . 54690) (punctuation 54680 . 54681) (symbol 54674 . 54680) (TYPENAME 54665 . 54673) (punctuation 54664 . 54665) (TEMPLATE 54655 . 54663) (punctuation 54512 . 54513) (symbol 54508 . 54512) (punctuation 54506 . 54507) (punctuation 54505 . 54506) (punctuation 54504 . 54505) (TYPENAME 54496 . 54504) (punctuation 54494 . 54495) (symbol 54489 . 54494) (TYPENAME 54480 . 54488) (punctuation 54478 . 54479) (symbol 54472 . 54478) (TYPENAME 54463 . 54471) (punctuation 54462 . 54463) (TEMPLATE 54453 . 54461) (punctuation 54025 . 54026) (punctuation 53884 . 53885) (punctuation 53883 . 53884) (punctuation 53882 . 53883) (punctuation 53864 . 53865) (punctuation 53863 . 53864) (punctuation 53861 . 53862) (punctuation 53860 . 53861) (punctuation 53859 . 53860) (punctuation 53858 . 53859) (punctuation 53853 . 53854) (punctuation 53803 . 53804) (symbol 53798 . 53803) (punctuation 53796 . 53797) (punctuation 53795 . 53796) (punctuation 53794 . 53795) (TYPENAME 53786 . 53794) (punctuation 53784 . 53785) (symbol 53780 . 53784) (punctuation 53778 . 53779) (punctuation 53777 . 53778) (punctuation 53776 . 53777) (TYPENAME 53768 . 53776) (punctuation 53767 . 53768) (TEMPLATE 53758 . 53766) (punctuation 53664 . 53665) (punctuation 53663 . 53664) (punctuation 53662 . 53663) (punctuation 53643 . 53644) (punctuation 53642 . 53643) (punctuation 53640 . 53641) (punctuation 53639 . 53640) (punctuation 53638 . 53639) (punctuation 53637 . 53638) (punctuation 53632 . 53633) (punctuation 53589 . 53590) (symbol 53584 . 53589) (punctuation 53582 . 53583) (punctuation 53581 . 53582) (punctuation 53580 . 53581) (TYPENAME 53572 . 53580) (punctuation 53570 . 53571) (symbol 53566 . 53570) (punctuation 53564 . 53565) (punctuation 53563 . 53564) (punctuation 53562 . 53563) (TYPENAME 53554 . 53562) (punctuation 53553 . 53554) (TEMPLATE 53544 . 53552) (punctuation 53461 . 53462) (punctuation 53460 . 53461) (punctuation 53459 . 53460) (punctuation 53440 . 53441) (punctuation 53438 . 53439) (punctuation 53437 . 53438) (punctuation 53436 . 53437) (punctuation 53435 . 53436) (punctuation 53430 . 53431) (punctuation 53371 . 53372) (symbol 53366 . 53371) (punctuation 53364 . 53365) (punctuation 53363 . 53364) (punctuation 53362 . 53363) (TYPENAME 53354 . 53362) (punctuation 53352 . 53353) (symbol 53348 . 53352) (punctuation 53346 . 53347) (punctuation 53345 . 53346) (punctuation 53344 . 53345) (TYPENAME 53336 . 53344) (punctuation 53335 . 53336) (TEMPLATE 53326 . 53334) (punctuation 53243 . 53244) (punctuation 53242 . 53243) (punctuation 53241 . 53242) (punctuation 53222 . 53223) (punctuation 53220 . 53221) (punctuation 53219 . 53220) (punctuation 53218 . 53219) (punctuation 53217 . 53218) (punctuation 53212 . 53213) (punctuation 53159 . 53160) (symbol 53154 . 53159) (punctuation 53152 . 53153) (punctuation 53151 . 53152) (punctuation 53150 . 53151) (TYPENAME 53142 . 53150) (punctuation 53140 . 53141) (symbol 53136 . 53140) (punctuation 53134 . 53135) (punctuation 53133 . 53134) (punctuation 53132 . 53133) (TYPENAME 53124 . 53132) (punctuation 53123 . 53124) (TEMPLATE 53114 . 53122) (punctuation 53028 . 53029) (punctuation 53027 . 53028) (punctuation 53026 . 53027) (punctuation 52953 . 52954) (symbol 52948 . 52953) (punctuation 52946 . 52947) (punctuation 52945 . 52946) (punctuation 52944 . 52945) (TYPENAME 52936 . 52944) (punctuation 52934 . 52935) (symbol 52933 . 52934) (TYPENAME 52924 . 52932) (punctuation 52922 . 52923) (symbol 52921 . 52922) (TYPENAME 52912 . 52920) (punctuation 52910 . 52911) (symbol 52908 . 52910) (symbol 52900 . 52907) (punctuation 52899 . 52900) (punctuation 52898 . 52899) (symbol 52892 . 52898) (punctuation 52890 . 52891) (symbol 52888 . 52890) (symbol 52882 . 52887) (punctuation 52881 . 52882) (punctuation 52880 . 52881) (symbol 52874 . 52880) (punctuation 52873 . 52874) (TEMPLATE 52864 . 52872) (punctuation 52783 . 52784) (punctuation 52782 . 52783) (punctuation 52781 . 52782) (punctuation 52714 . 52715) (symbol 52709 . 52714) (punctuation 52707 . 52708) (punctuation 52706 . 52707) (punctuation 52705 . 52706) (TYPENAME 52697 . 52705) (punctuation 52695 . 52696) (symbol 52694 . 52695) (TYPENAME 52685 . 52693) (punctuation 52683 . 52684) (symbol 52682 . 52683) (TYPENAME 52673 . 52681) (punctuation 52671 . 52672) (symbol 52669 . 52671) (symbol 52661 . 52668) (punctuation 52660 . 52661) (punctuation 52659 . 52660) (symbol 52653 . 52659) (punctuation 52651 . 52652) (symbol 52649 . 52651) (symbol 52643 . 52648) (punctuation 52642 . 52643) (punctuation 52641 . 52642) (symbol 52635 . 52641) (punctuation 52634 . 52635) (TEMPLATE 52625 . 52633) (punctuation 52248 . 52249) (punctuation 52247 . 52248) (punctuation 52246 . 52247) (punctuation 52230 . 52231) (punctuation 52179 . 52180) (symbol 52174 . 52179) (punctuation 52172 . 52173) (punctuation 52171 . 52172) (punctuation 52170 . 52171) (TYPENAME 52162 . 52170) (punctuation 52160 . 52161) (symbol 52156 . 52160) (TYPENAME 52147 . 52155) (punctuation 52146 . 52147) (TEMPLATE 52137 . 52145) (punctuation 51888 . 51889) (punctuation 51887 . 51888) (punctuation 51886 . 51887) (punctuation 51869 . 51870) (punctuation 51827 . 51828) (symbol 51822 . 51827) (punctuation 51820 . 51821) (punctuation 51819 . 51820) (punctuation 51818 . 51819) (TYPENAME 51810 . 51818) (punctuation 51808 . 51809) (symbol 51804 . 51808) (TYPENAME 51795 . 51803) (punctuation 51794 . 51795) (TEMPLATE 51785 . 51793) (punctuation 51726 . 51727) (number 51725 . 51726) (punctuation 51723 . 51724) (punctuation 51721 . 51722) (INT 51718 . 51721) (punctuation 51716 . 51717) (symbol 51711 . 51716) (punctuation 51710 . 51711) (punctuation 51709 . 51710) (punctuation 51708 . 51709) (symbol 51704 . 51708) (punctuation 51703 . 51704) (symbol 51696 . 51703) (punctuation 51695 . 51696) (punctuation 51694 . 51695) (symbol 51683 . 51694) (punctuation 51682 . 51683) (punctuation 51681 . 51682) (symbol 51675 . 51681) (punctuation 51673 . 51674) (symbol 51669 . 51673) (TYPENAME 51660 . 51668) (punctuation 51659 . 51660) (TEMPLATE 51650 . 51658) (punctuation 51440 . 51441) (number 51439 . 51440) (punctuation 51437 . 51438) (punctuation 51435 . 51436) (INT 51432 . 51435) (punctuation 51430 . 51431) (symbol 51425 . 51430) (punctuation 51424 . 51425) (punctuation 51423 . 51424) (punctuation 51422 . 51423) (symbol 51418 . 51422) (punctuation 51417 . 51418) (symbol 51410 . 51417) (punctuation 51409 . 51410) (symbol 51398 . 51409) (punctuation 51397 . 51398) (punctuation 51396 . 51397) (symbol 51390 . 51396) (punctuation 51388 . 51389) (symbol 51384 . 51388) (TYPENAME 51375 . 51383) (punctuation 51374 . 51375) (TEMPLATE 51365 . 51373) (punctuation 49598 . 49599) (punctuation 49597 . 49598) (punctuation 49596 . 49597) (punctuation 49538 . 49539) (symbol 49533 . 49538) (punctuation 49531 . 49532) (punctuation 49530 . 49531) (punctuation 49529 . 49530) (TYPENAME 49521 . 49529) (punctuation 49520 . 49521) (TEMPLATE 49511 . 49519) (semantic-list 49469 . 49505) (symbol 49454 . 49469) (string 49391 . 49446) (punctuation 49343 . 49344) (punctuation 49342 . 49343) (punctuation 49331 . 49332) (string 49256 . 49309) (punctuation 49236 . 49237) (punctuation 49235 . 49236) (punctuation 49234 . 49235) (punctuation 49233 . 49234) (punctuation 49232 . 49233) (punctuation 49231 . 49232) (punctuation 49200 . 49201) (punctuation 49165 . 49166) (punctuation 49164 . 49165) (punctuation 49163 . 49164) (punctuation 49162 . 49163) (punctuation 49161 . 49162) (symbol 49154 . 49161) (punctuation 49152 . 49153) (punctuation 49151 . 49152) (symbol 49147 . 49151) (punctuation 49146 . 49147) (symbol 49136 . 49146) (punctuation 49135 . 49136) (punctuation 49134 . 49135) (symbol 49131 . 49134) (punctuation 49129 . 49130) (symbol 49120 . 49129) (punctuation 49119 . 49120) (symbol 49106 . 49119) (punctuation 49105 . 49106) (punctuation 49104 . 49105) (symbol 49098 . 49104) (punctuation 49096 . 49097) (symbol 49084 . 49095) (USING 49078 . 49083) (punctuation 49040 . 49041) (punctuation 49038 . 49039) (symbol 49028 . 49037) (BOOL 49023 . 49027) (STATIC 49016 . 49022) (symbol 49006 . 49015) (punctuation 49000 . 49001) (punctuation 48999 . 49000) (punctuation 48998 . 48999) (punctuation 48997 . 48998) (punctuation 48996 . 48997) (symbol 48989 . 48996) (punctuation 48987 . 48988) (VOID 48983 . 48987) (punctuation 48981 . 48982) (symbol 48971 . 48981) (punctuation 48970 . 48971) (symbol 48957 . 48970) (punctuation 48956 . 48957) (punctuation 48955 . 48956) (symbol 48949 . 48955) (punctuation 48947 . 48948) (symbol 48936 . 48946) (USING 48930 . 48935) (USING 48906 . 48911) (punctuation 48679 . 48680) (symbol 48671 . 48678) (USING 48665 . 48670) (punctuation 48663 . 48664) (symbol 48662 . 48663) (TYPENAME 48653 . 48661) (punctuation 48652 . 48653) (TEMPLATE 48643 . 48651) (punctuation 48600 . 48601) (symbol 48589 . 48599) (USING 48583 . 48588) (punctuation 48581 . 48582) (symbol 48580 . 48581) (TYPENAME 48571 . 48579) (punctuation 48570 . 48571) (TEMPLATE 48561 . 48569) (punctuation 48521 . 48522) (symbol 48511 . 48520) (USING 48505 . 48510) (punctuation 48503 . 48504) (symbol 48502 . 48503) (TYPENAME 48493 . 48501) (punctuation 48492 . 48493) (TEMPLATE 48483 . 48491) (punctuation 48432 . 48433) (symbol 48425 . 48432) (punctuation 48423 . 48424) (punctuation 48422 . 48423) (punctuation 48421 . 48422) (TYPENAME 48413 . 48421) (punctuation 48411 . 48412) (symbol 48406 . 48411) (TYPENAME 48397 . 48405) (punctuation 48396 . 48397) (TEMPLATE 48387 . 48395) (semantic-list 48203 . 48385) (CONST 48197 . 48202) (punctuation 48185 . 48186) (punctuation 48184 . 48185) (punctuation 48183 . 48184) (punctuation 48166 . 48167) (punctuation 48165 . 48166) (semantic-list 48127 . 48164) (symbol 48113 . 48127) (CONST 48158 . 48163) (symbol 48108 . 48112) (CONST 48158 . 48163) (punctuation 48106 . 48107) (symbol 48102 . 48106) (punctuation 48100 . 48101) (punctuation 48099 . 48100) (punctuation 48098 . 48099) (TYPENAME 48090 . 48098) (punctuation 48088 . 48089) (symbol 48083 . 48088) (TYPENAME 48074 . 48082) (punctuation 48072 . 48073) (symbol 48066 . 48072) (TYPENAME 48057 . 48065) (punctuation 48055 . 48056) (symbol 48048 . 48055) (TYPENAME 48039 . 48047) (punctuation 48038 . 48039) (TEMPLATE 48029 . 48037) (semantic-list 47845 . 48027) (punctuation 47833 . 47834) (punctuation 47832 . 47833) (punctuation 47831 . 47832) (punctuation 47814 . 47815) (punctuation 47813 . 47814) (semantic-list 47781 . 47812) (symbol 47767 . 47781) (symbol 47762 . 47766) (punctuation 47760 . 47761) (symbol 47756 . 47760) (punctuation 47754 . 47755) (punctuation 47753 . 47754) (punctuation 47752 . 47753) (TYPENAME 47744 . 47752) (punctuation 47742 . 47743) (symbol 47737 . 47742) (TYPENAME 47728 . 47736) (punctuation 47726 . 47727) (symbol 47720 . 47726) (TYPENAME 47711 . 47719) (punctuation 47709 . 47710) (symbol 47702 . 47709) (TYPENAME 47693 . 47701) (punctuation 47692 . 47693) (TEMPLATE 47683 . 47691) (semantic-list 47646 . 47649) (punctuation 47620 . 47621) (punctuation 47619 . 47620) (semantic-list 47611 . 47618) (symbol 47597 . 47611) (punctuation 47615 . 47616) (symbol 47592 . 47596) (punctuation 47615 . 47616) (punctuation 47590 . 47591) (symbol 47589 . 47590) (TYPENAME 47580 . 47588) (punctuation 47578 . 47579) (TYPENAME 47558 . 47566) (punctuation 47557 . 47558) (TEMPLATE 47548 . 47556) (semantic-list 47423 . 47431) (symbol 47410 . 47423) (punctuation 47029 . 47030) (number 47028 . 47029) (punctuation 47026 . 47027) (punctuation 47024 . 47025) (INT 47021 . 47024) (punctuation 47019 . 47020) (symbol 47014 . 47019) (punctuation 47013 . 47014) (punctuation 47012 . 47013) (punctuation 47011 . 47012) (symbol 47010 . 47011) (punctuation 47009 . 47010) (symbol 46985 . 47009) (punctuation 46983 . 46984) (punctuation 46982 . 46983) (symbol 46976 . 46981) (punctuation 46975 . 46976) (punctuation 46974 . 46975) (punctuation 46973 . 46974) (symbol 46972 . 46973) (punctuation 46971 . 46972) (symbol 46952 . 46971) (punctuation 46951 . 46952) (punctuation 46950 . 46951) (symbol 46939 . 46950) (punctuation 46937 . 46938) (symbol 46936 . 46937) (TYPENAME 46927 . 46935) (punctuation 46926 . 46927) (TEMPLATE 46917 . 46925) (punctuation 46840 . 46841) (number 46839 . 46840) (punctuation 46837 . 46838) (punctuation 46835 . 46836) (INT 46832 . 46835) (punctuation 46830 . 46831) (symbol 46825 . 46830) (punctuation 46824 . 46825) (punctuation 46823 . 46824) (punctuation 46822 . 46823) (symbol 46821 . 46822) (punctuation 46820 . 46821) (symbol 46801 . 46820) (punctuation 46800 . 46801) (symbol 46789 . 46800) (punctuation 46787 . 46788) (symbol 46786 . 46787) (TYPENAME 46777 . 46785) (punctuation 46776 . 46777) (TEMPLATE 46767 . 46775) (punctuation 46651 . 46652) (punctuation 46645 . 46646) (punctuation 46644 . 46645) (semantic-list 46585 . 46644) (symbol 46577 . 46585) (semantic-list 46623 . 46643) (punctuation 46576 . 46577) (symbol 46570 . 46576) (punctuation 46568 . 46569) (symbol 46567 . 46568) (punctuation 46566 . 46567) (symbol 46542 . 46566) (STRUCT 46535 . 46541) (punctuation 46533 . 46534) (symbol 46532 . 46533) (TYPENAME 46523 . 46531) (punctuation 46522 . 46523) (TEMPLATE 46513 . 46521) (punctuation 46456 . 46457) (VOID 46452 . 46456) (punctuation 46450 . 46451) (symbol 46443 . 46449) (TYPENAME 46434 . 46442) (punctuation 46432 . 46433) (symbol 46431 . 46432) (TYPENAME 46422 . 46430) (punctuation 46421 . 46422) (TEMPLATE 46412 . 46420) (punctuation 46390 . 46391) (punctuation 46384 . 46385) (punctuation 46383 . 46384) (semantic-list 46332 . 46383) (symbol 46324 . 46332) (semantic-list 46362 . 46382) (punctuation 46323 . 46324) (symbol 46317 . 46323) (punctuation 46315 . 46316) (symbol 46314 . 46315) (punctuation 46313 . 46314) (symbol 46294 . 46313) (STRUCT 46287 . 46293) (punctuation 46285 . 46286) (symbol 46284 . 46285) (TYPENAME 46275 . 46283) (punctuation 46274 . 46275) (TEMPLATE 46265 . 46273) (punctuation 46213 . 46214) (VOID 46209 . 46213) (punctuation 46207 . 46208) (symbol 46200 . 46206) (TYPENAME 46191 . 46199) (punctuation 46189 . 46190) (symbol 46188 . 46189) (TYPENAME 46179 . 46187) (punctuation 46178 . 46179) (TEMPLATE 46169 . 46177) (punctuation 46135 . 46136) (TYPENAME 46127 . 46135) (punctuation 46126 . 46127) (TEMPLATE 46117 . 46125) (punctuation 46036 . 46037) (punctuation 46035 . 46036) (semantic-list 45986 . 46035) (symbol 45978 . 45986) (semantic-list 46017 . 46034) (punctuation 45977 . 45978) (symbol 45971 . 45977) (punctuation 45969 . 45970) (TYPENAME 45960 . 45968) (punctuation 45958 . 45959) (symbol 45957 . 45958) (TYPENAME 45948 . 45956) (punctuation 45947 . 45948) (TEMPLATE 45938 . 45946) (semantic-list 44370 . 44390) (semantic-list 44357 . 44370) (semantic-list 41542 . 41578) (symbol 41519 . 41542) (punctuation 41505 . 41506) (punctuation 41484 . 41485) (punctuation 41483 . 41484) (punctuation 41482 . 41483) (punctuation 41481 . 41482) (TYPENAME 41473 . 41481) (punctuation 41472 . 41473) (TEMPLATE 41463 . 41471) (semantic-list 41358 . 41366) (symbol 41343 . 41358) (semantic-list 44370 . 44390) (semantic-list 44357 . 44370) (semantic-list 41542 . 41578) (symbol 41519 . 41542) (punctuation 41505 . 41506) (punctuation 41484 . 41485) (punctuation 41483 . 41484) (punctuation 41482 . 41483) (punctuation 41481 . 41482) (TYPENAME 41473 . 41481) (punctuation 41472 . 41473) (TEMPLATE 41463 . 41471) (semantic-list 44370 . 44390) (semantic-list 44357 . 44370) (semantic-list 41542 . 41578) (symbol 41519 . 41542) (punctuation 41505 . 41506) (punctuation 41484 . 41485) (punctuation 41483 . 41484) (punctuation 41482 . 41483) (punctuation 41481 . 41482) (TYPENAME 41473 . 41481) (punctuation 41472 . 41473) (TEMPLATE 41463 . 41471) (symbol 40579 . 40596) (punctuation 38456 . 38457) (punctuation 38455 . 38456) (punctuation 38454 . 38455) (punctuation 38437 . 38438) (punctuation 38394 . 38395) (symbol 38389 . 38394) (punctuation 38387 . 38388) (punctuation 38386 . 38387) (punctuation 38385 . 38386) (TYPENAME 38377 . 38385) (punctuation 38375 . 38376) (symbol 38371 . 38375) (TYPENAME 38362 . 38370) (punctuation 38361 . 38362) (TEMPLATE 38352 . 38360) (EXPLICIT 37490 . 37498) (semantic-list 37373 . 37405) (symbol 37350 . 37373) (punctuation 4588 . 4589) (punctuation 4587 . 4588) (punctuation 4586 . 4587) (punctuation 4549 . 4550) (punctuation 4521 . 4522) (symbol 4516 . 4521) (punctuation 4514 . 4515) (punctuation 4513 . 4514) (punctuation 4512 . 4513) (TYPENAME 4504 . 4512) (punctuation 4502 . 4503) (symbol 4498 . 4502) (punctuation 4496 . 4497) (punctuation 4495 . 4496) (punctuation 4494 . 4495) (TYPENAME 4486 . 4494) (punctuation 4484 . 4485) (symbol 4478 . 4484) (TYPENAME 4469 . 4477) (punctuation 4467 . 4468) (symbol 4463 . 4467) (TYPENAME 4454 . 4462) (punctuation 4453 . 4454) (TEMPLATE 4444 . 4452) (symbol 4245 . 4262) (punctuation 3878 . 3879) (punctuation 3877 . 3878) (punctuation 3876 . 3877) (CONST 3857 . 3862) (punctuation 3811 . 3812) (symbol 3806 . 3811) (punctuation 3804 . 3805) (punctuation 3803 . 3804) (punctuation 3802 . 3803) (TYPENAME 3794 . 3802) (punctuation 3792 . 3793) (symbol 3789 . 3792) (punctuation 3787 . 3788) (punctuation 3786 . 3787) (punctuation 3785 . 3786) (TYPENAME 3777 . 3785) (punctuation 3775 . 3776) (symbol 3770 . 3775) (TYPENAME 3761 . 3769) (punctuation 3759 . 3760) (symbol 3753 . 3759) (TYPENAME 3744 . 3752) (punctuation 3743 . 3744) (TEMPLATE 3734 . 3742) (punctuation 3495 . 3496) (punctuation 3494 . 3495) (punctuation 3493 . 3494) (punctuation 3434 . 3435) (symbol 3429 . 3434) (punctuation 3427 . 3428) (punctuation 3426 . 3427) (punctuation 3425 . 3426) (TYPENAME 3417 . 3425) (punctuation 3415 . 3416) (symbol 3412 . 3415) (punctuation 3410 . 3411) (punctuation 3409 . 3410) (punctuation 3408 . 3409) (TYPENAME 3400 . 3408) (punctuation 3398 . 3399) (symbol 3393 . 3398) (TYPENAME 3384 . 3392) (punctuation 3382 . 3383) (symbol 3376 . 3382) (TYPENAME 3367 . 3375) (punctuation 3366 . 3367) (TEMPLATE 3357 . 3365) (punctuation 3150 . 3151) (punctuation 3149 . 3150) (punctuation 3148 . 3149) (punctuation 3132 . 3133) (punctuation 3107 . 3108) (punctuation 3106 . 3107) (symbol 3101 . 3106) (punctuation 3100 . 3101) (punctuation 3099 . 3100) (punctuation 3098 . 3099) (symbol 3094 . 3098) (punctuation 3093 . 3094) (symbol 3084 . 3093) (punctuation 3083 . 3084) (punctuation 3082 . 3083) (symbol 3076 . 3082) (punctuation 3075 . 3076) (symbol 3064 . 3075) (punctuation 3063 . 3064) (punctuation 3062 . 3063) (symbol 3056 . 3062) (punctuation 3054 . 3055) (TYPENAME 3045 . 3053) (punctuation 3029 . 3030) (symbol 3024 . 3029) (punctuation 3022 . 3023) (punctuation 3021 . 3022) (punctuation 3020 . 3021) (TYPENAME 3012 . 3020) (punctuation 3010 . 3011) (symbol 3006 . 3010) (TYPENAME 2997 . 3005) (punctuation 2996 . 2997) (TEMPLATE 2987 . 2995) (punctuation 2842 . 2843) (punctuation 2841 . 2842) (punctuation 2840 . 2841) (punctuation 2787 . 2788) (symbol 2782 . 2787) (punctuation 2780 . 2781) (punctuation 2779 . 2780) (punctuation 2778 . 2779) (TYPENAME 2770 . 2778) (punctuation 2768 . 2769) (symbol 2764 . 2768) (punctuation 2762 . 2763) (punctuation 2761 . 2762) (punctuation 2760 . 2761) (TYPENAME 2752 . 2760) (punctuation 2750 . 2751) (symbol 2744 . 2750) (TYPENAME 2735 . 2743) (punctuation 2734 . 2735) (TEMPLATE 2725 . 2733) (semantic-list 2434 . 2454) (symbol 2419 . 2434) (punctuation 4588 . 4589) (punctuation 4587 . 4588) (punctuation 4586 . 4587) (punctuation 4549 . 4550) (punctuation 4521 . 4522) (symbol 4516 . 4521) (punctuation 4514 . 4515) (punctuation 4513 . 4514) (punctuation 4512 . 4513) (TYPENAME 4504 . 4512) (punctuation 4502 . 4503) (symbol 4498 . 4502) (punctuation 4496 . 4497) (punctuation 4495 . 4496) (punctuation 4494 . 4495) (TYPENAME 4486 . 4494) (punctuation 4484 . 4485) (symbol 4478 . 4484) (TYPENAME 4469 . 4477) (punctuation 4467 . 4468) (symbol 4463 . 4467) (TYPENAME 4454 . 4462) (punctuation 4453 . 4454) (TEMPLATE 4444 . 4452) (symbol 4245 . 4262) (punctuation 3878 . 3879) (punctuation 3877 . 3878) (punctuation 3876 . 3877) (CONST 3857 . 3862) (punctuation 3811 . 3812) (symbol 3806 . 3811) (punctuation 3804 . 3805) (punctuation 3803 . 3804) (punctuation 3802 . 3803) (TYPENAME 3794 . 3802) (punctuation 3792 . 3793) (symbol 3789 . 3792) (punctuation 3787 . 3788) (punctuation 3786 . 3787) (punctuation 3785 . 3786) (TYPENAME 3777 . 3785) (punctuation 3775 . 3776) (symbol 3770 . 3775) (TYPENAME 3761 . 3769) (punctuation 3759 . 3760) (symbol 3753 . 3759) (TYPENAME 3744 . 3752) (punctuation 3743 . 3744) (TEMPLATE 3734 . 3742) (punctuation 3495 . 3496) (punctuation 3494 . 3495) (punctuation 3493 . 3494) (punctuation 3434 . 3435) (symbol 3429 . 3434) (punctuation 3427 . 3428) (punctuation 3426 . 3427) (punctuation 3425 . 3426) (TYPENAME 3417 . 3425) (punctuation 3415 . 3416) (symbol 3412 . 3415) (punctuation 3410 . 3411) (punctuation 3409 . 3410) (punctuation 3408 . 3409) (TYPENAME 3400 . 3408) (punctuation 3398 . 3399) (symbol 3393 . 3398) (TYPENAME 3384 . 3392) (punctuation 3382 . 3383) (symbol 3376 . 3382) (TYPENAME 3367 . 3375) (punctuation 3366 . 3367) (TEMPLATE 3357 . 3365) (punctuation 3150 . 3151) (punctuation 3149 . 3150) (punctuation 3148 . 3149) (punctuation 3132 . 3133) (punctuation 3107 . 3108) (punctuation 3106 . 3107) (symbol 3101 . 3106) (punctuation 3100 . 3101) (punctuation 3099 . 3100) (punctuation 3098 . 3099) (symbol 3094 . 3098) (punctuation 3093 . 3094) (symbol 3084 . 3093) (punctuation 3083 . 3084) (punctuation 3082 . 3083) (symbol 3076 . 3082) (punctuation 3075 . 3076) (symbol 3064 . 3075) (punctuation 3063 . 3064) (punctuation 3062 . 3063) (symbol 3056 . 3062) (punctuation 3054 . 3055) (TYPENAME 3045 . 3053) (punctuation 3029 . 3030) (symbol 3024 . 3029) (punctuation 3022 . 3023) (punctuation 3021 . 3022) (punctuation 3020 . 3021) (TYPENAME 3012 . 3020) (punctuation 3010 . 3011) (symbol 3006 . 3010) (TYPENAME 2997 . 3005) (punctuation 2996 . 2997) (TEMPLATE 2987 . 2995) (punctuation 2842 . 2843) (punctuation 2841 . 2842) (punctuation 2840 . 2841) (punctuation 2787 . 2788) (symbol 2782 . 2787) (punctuation 2780 . 2781) (punctuation 2779 . 2780) (punctuation 2778 . 2779) (TYPENAME 2770 . 2778) (punctuation 2768 . 2769) (symbol 2764 . 2768) (punctuation 2762 . 2763) (punctuation 2761 . 2762) (punctuation 2760 . 2761) (TYPENAME 2752 . 2760) (punctuation 2750 . 2751) (symbol 2744 . 2750) (TYPENAME 2735 . 2743) (punctuation 2734 . 2735) (TEMPLATE 2725 . 2733) (punctuation 4588 . 4589) (punctuation 4587 . 4588) (punctuation 4586 . 4587) (punctuation 4549 . 4550) (punctuation 4521 . 4522) (symbol 4516 . 4521) (punctuation 4514 . 4515) (punctuation 4513 . 4514) (punctuation 4512 . 4513) (TYPENAME 4504 . 4512) (punctuation 4502 . 4503) (symbol 4498 . 4502) (punctuation 4496 . 4497) (punctuation 4495 . 4496) (punctuation 4494 . 4495) (TYPENAME 4486 . 4494) (punctuation 4484 . 4485) (symbol 4478 . 4484) (TYPENAME 4469 . 4477) (punctuation 4467 . 4468) (symbol 4463 . 4467) (TYPENAME 4454 . 4462) (punctuation 4453 . 4454) (TEMPLATE 4444 . 4452) (symbol 4245 . 4262) (punctuation 3878 . 3879) (punctuation 3877 . 3878) (punctuation 3876 . 3877) (CONST 3857 . 3862) (punctuation 3811 . 3812) (symbol 3806 . 3811) (punctuation 3804 . 3805) (punctuation 3803 . 3804) (punctuation 3802 . 3803) (TYPENAME 3794 . 3802) (punctuation 3792 . 3793) (symbol 3789 . 3792) (punctuation 3787 . 3788) (punctuation 3786 . 3787) (punctuation 3785 . 3786) (TYPENAME 3777 . 3785) (punctuation 3775 . 3776) (symbol 3770 . 3775) (TYPENAME 3761 . 3769) (punctuation 3759 . 3760) (symbol 3753 . 3759) (TYPENAME 3744 . 3752) (punctuation 3743 . 3744) (TEMPLATE 3734 . 3742) (punctuation 3495 . 3496) (punctuation 3494 . 3495) (punctuation 3493 . 3494) (punctuation 3434 . 3435) (symbol 3429 . 3434) (punctuation 3427 . 3428) (punctuation 3426 . 3427) (punctuation 3425 . 3426) (TYPENAME 3417 . 3425) (punctuation 3415 . 3416) (symbol 3412 . 3415) (punctuation 3410 . 3411) (punctuation 3409 . 3410) (punctuation 3408 . 3409) (TYPENAME 3400 . 3408) (punctuation 3398 . 3399) (symbol 3393 . 3398) (TYPENAME 3384 . 3392) (punctuation 3382 . 3383) (symbol 3376 . 3382) (TYPENAME 3367 . 3375) (punctuation 3366 . 3367) (TEMPLATE 3357 . 3365) (punctuation 3150 . 3151) (punctuation 3149 . 3150) (punctuation 3148 . 3149) (punctuation 3132 . 3133) (punctuation 3107 . 3108) (punctuation 3106 . 3107) (symbol 3101 . 3106) (punctuation 3100 . 3101) (punctuation 3099 . 3100) (punctuation 3098 . 3099) (symbol 3094 . 3098) (punctuation 3093 . 3094) (symbol 3084 . 3093) (punctuation 3083 . 3084) (punctuation 3082 . 3083) (symbol 3076 . 3082) (punctuation 3075 . 3076) (symbol 3064 . 3075) (punctuation 3063 . 3064) (punctuation 3062 . 3063) (symbol 3056 . 3062) (punctuation 3054 . 3055) (TYPENAME 3045 . 3053) (punctuation 3029 . 3030) (symbol 3024 . 3029) (punctuation 3022 . 3023) (punctuation 3021 . 3022) (punctuation 3020 . 3021) (TYPENAME 3012 . 3020) (punctuation 3010 . 3011) (symbol 3006 . 3010) (TYPENAME 2997 . 3005) (punctuation 2996 . 2997) (TEMPLATE 2987 . 2995) (punctuation 2842 . 2843) (punctuation 2841 . 2842) (punctuation 2840 . 2841) (punctuation 2787 . 2788) (symbol 2782 . 2787) (punctuation 2780 . 2781) (punctuation 2779 . 2780) (punctuation 2778 . 2779) (TYPENAME 2770 . 2778) (punctuation 2768 . 2769) (symbol 2764 . 2768) (punctuation 2762 . 2763) (punctuation 2761 . 2762) (punctuation 2760 . 2761) (TYPENAME 2752 . 2760) (punctuation 2750 . 2751) (symbol 2744 . 2750) (TYPENAME 2735 . 2743) (punctuation 2734 . 2735) (TEMPLATE 2725 . 2733) (string 2223 . 2237) (symbol 2215 . 2222) (symbol 2204 . 2214) (symbol 2200 . 2203) (symbol 2193 . 2199) (punctuation 2190 . 2191) (string 2170 . 2189) (symbol 2162 . 2169) (symbol 2151 . 2161) (symbol 2147 . 2150) (symbol 2140 . 2146) (punctuation 2137 . 2138) (string 2106 . 2136) (symbol 2098 . 2105) (symbol 2087 . 2097) (symbol 2083 . 2086) (symbol 2076 . 2082) (punctuation 2073 . 2074) (string 2045 . 2072) (symbol 2037 . 2044) (symbol 2026 . 2036) (symbol 2022 . 2025) (symbol 2015 . 2021) (punctuation 2012 . 2013) (string 1983 . 2011) (symbol 1975 . 1982) (symbol 1964 . 1974) (symbol 1960 . 1963) (symbol 1953 . 1959) (punctuation 1950 . 1951) (symbol 1945 . 1949) (symbol 1934 . 1944) (symbol 1930 . 1933) (symbol 1923 . 1929) (punctuation 1920 . 1921) (symbol 296 . 300) (symbol 289 . 295) (punctuation 288 . 289))
      :lexical-table 
        '(("PYBIND11_OVERLOAD" (spp-arg-list ("ret_type" "cname" "fn" "...") 93088 . 93114) . ((symbol "PYBIND11_OVERLOAD_NAME" 93121 . 93143) (semantic-list "(PYBIND11_TYPE(ret_type), PYBIND11_TYPE(cname), #fn, fn, __VA_ARGS__)" 93143 . 93212)))
          ("PYBIND11_OVERLOAD_INT" (spp-arg-list ("ret_type" "cname" "name" "...") 91971 . 91999) . ((semantic-list "{ \\
        pybind11::gil_scoped_acquire gil; \\
        pybind11::function overload = pybind11::get_overload(static_cast<const cname *>(this), name); \\
        if (overload) { \\
            auto o = overload(__VA_ARGS__); \\
            if (pybind11::detail::cast_is_temporary_value_reference<ret_type>::value) { \\
                static pybind11::detail::overload_caster_t<ret_type> caster; \\
                return pybind11::detail::cast_ref<ret_type>(std::move(o), caster); \\
            } \\
            else return pybind11::detail::cast_safe<ret_type>(std::move(o)); \\
        } \\
    }" 92000 . 92590)))
          ("PYBIND11_OVERLOAD_NAME" (spp-arg-list ("ret_type" "cname" "name" "fn" "...") 92622 . 92654) . 
              ((symbol "PYBIND11_OVERLOAD_INT" 92661 . 92682) (semantic-list "(PYBIND11_TYPE(ret_type), PYBIND11_TYPE(cname), name, __VA_ARGS__)" 92682 . 92748) (RETURN "return" 92755 . 92761) (symbol "cname" 92762 . 92767) (punctuation ":" 92767 . 92768) (punctuation ":" 92768 . 92769) (symbol "fn" 92769 . 92771) (semantic-list "(__VA_ARGS__)" 92771 . 92784)))
          ("PYBIND11_OVERLOAD_PURE_NAME" (spp-arg-list ("ret_type" "cname" "name" "fn" "...") 92821 . 92853) . 
              ((symbol "PYBIND11_OVERLOAD_INT" 92860 . 92881) (semantic-list "(PYBIND11_TYPE(ret_type), PYBIND11_TYPE(cname), name, __VA_ARGS__)" 92881 . 92947) (symbol "pybind11" 92954 . 92962) (punctuation ":" 92962 . 92963) (punctuation ":" 92963 . 92964) (symbol "pybind11_fail" 92964 . 92977) (semantic-list "(\"Tried to call pure virtual function \\\"\" PYBIND11_STRINGIFY(cname) \"::\" name \"\\\"\")" 92977 . 93060) (punctuation ";" 93060 . 93061)))
          ("PYBIND11_OVERLOAD_PURE" (spp-arg-list ("ret_type" "cname" "fn" "...") 93244 . 93270) . ((symbol "PYBIND11_OVERLOAD_PURE_NAME" 93277 . 93304) (semantic-list "(PYBIND11_TYPE(ret_type), PYBIND11_TYPE(cname), #fn, fn, __VA_ARGS__)" 93304 . 93373)))
          )
)
    (semanticdb-table "attr.h"
      :file "attr.h"
      :fsize 19031
      :lastmodtime '(23752 6143 861744 335000))
    (semanticdb-table "options.h"
      :file "options.h"
      :fsize 2031
      :lastmodtime '(23303 46019 0 0)))
  :file "!home!rvbust!Rvbust!Sources!RVS!Externals!Pybind11!include!pybind11!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
