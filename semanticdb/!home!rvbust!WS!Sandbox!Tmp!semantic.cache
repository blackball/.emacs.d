;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("PYBIND11_MODULE" function
               (:arguments 
                  ( ("" variable (:type ("m" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19 21]))                  
                :type "int")
                nil [1 59]))          
      :file "Py.cpp"
      :pointmax 60
      :fsize 59
      :lastmodtime '(24230 45018 594678 296000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags nil
      :file "tmp.cpp"
      :pointmax 714
      :fsize 1881
      :lastmodtime '(24304 46993 20435 885000)
      :unmatched-syntax '((symbol 678 . 708) (number 674 . 677) (symbol 656 . 672) (semantic-list 650 . 656) (symbol 617 . 650) (number 614 . 616) (symbol 589 . 612) (punctuation 588 . 589) (symbol 585 . 588) (symbol 563 . 584) (punctuation 562 . 563) (symbol 558 . 562) (symbol 543 . 557) (punctuation 542 . 543) (symbol 531 . 542) (symbol 494 . 530) (number 491 . 493) (symbol 459 . 489) (number 456 . 458) (symbol 447 . 454) (symbol 440 . 446) (symbol 422 . 439) (symbol 380 . 421) (number 377 . 379) (symbol 352 . 375) (punctuation 351 . 352) (symbol 348 . 351) (symbol 326 . 347) (punctuation 325 . 326) (symbol 321 . 325) (symbol 306 . 320) (punctuation 305 . 306) (symbol 294 . 305) (symbol 264 . 293) (number 261 . 263) (symbol 234 . 259) (semantic-list 224 . 234) (symbol 171 . 224) (number 168 . 170) (semantic-list 142 . 166) (symbol 108 . 142) (number 105 . 107) (symbol 81 . 103) (symbol 50 . 79) (symbol 38 . 49) (symbol 30 . 37) (number 27 . 29) (symbol 4 . 23) (number 1 . 3) (symbol 679 . 709) (number 675 . 678) (symbol 657 . 673) (semantic-list 651 . 657) (symbol 618 . 651) (number 615 . 617) (symbol 590 . 613) (punctuation 589 . 590) (symbol 586 . 589) (symbol 564 . 585) (punctuation 563 . 564) (symbol 559 . 563) (symbol 544 . 558) (punctuation 543 . 544) (symbol 532 . 543) (symbol 495 . 531) (number 492 . 494) (symbol 460 . 490) (number 457 . 459) (symbol 448 . 455) (symbol 441 . 447) (symbol 423 . 440) (symbol 381 . 422) (number 378 . 380) (symbol 353 . 376) (punctuation 352 . 353) (symbol 349 . 352) (symbol 327 . 348) (punctuation 326 . 327) (symbol 322 . 326) (symbol 307 . 321) (punctuation 306 . 307) (symbol 295 . 306) (symbol 265 . 294) (number 262 . 264) (symbol 235 . 260) (semantic-list 225 . 235) (symbol 172 . 225) (number 169 . 171) (semantic-list 143 . 167) (symbol 109 . 143) (number 106 . 108) (symbol 82 . 104) (symbol 51 . 80) (symbol 39 . 50) (symbol 31 . 38) (number 28 . 30) (symbol 25 . 26) (symbol 4 . 23) (number 1 . 3) (symbol 680 . 710) (number 676 . 679) (symbol 658 . 674) (semantic-list 652 . 658) (symbol 619 . 652) (number 616 . 618) (symbol 591 . 614) (punctuation 590 . 591) (symbol 587 . 590) (symbol 565 . 586) (punctuation 564 . 565) (symbol 560 . 564) (symbol 545 . 559) (punctuation 544 . 545) (symbol 533 . 544) (symbol 496 . 532) (number 493 . 495) (symbol 461 . 491) (number 458 . 460) (symbol 449 . 456) (symbol 442 . 448) (symbol 424 . 441) (symbol 382 . 423) (number 379 . 381) (symbol 354 . 377) (punctuation 353 . 354) (symbol 350 . 353) (symbol 328 . 349) (punctuation 327 . 328) (symbol 323 . 327) (symbol 308 . 322) (punctuation 307 . 308) (symbol 296 . 307) (symbol 266 . 295) (number 263 . 265) (symbol 236 . 261) (semantic-list 226 . 236) (symbol 173 . 226) (number 170 . 172) (semantic-list 144 . 168) (symbol 110 . 144) (number 107 . 109) (symbol 83 . 105) (symbol 52 . 81) (symbol 40 . 51) (symbol 32 . 39) (number 29 . 31) (number 25 . 27) (symbol 4 . 23) (number 1 . 3) (symbol 680 . 710) (number 676 . 679) (symbol 658 . 674) (semantic-list 652 . 658) (symbol 619 . 652) (number 616 . 618) (symbol 591 . 614) (punctuation 590 . 591) (symbol 587 . 590) (symbol 565 . 586) (punctuation 564 . 565) (symbol 560 . 564) (symbol 545 . 559) (punctuation 544 . 545) (symbol 533 . 544) (symbol 496 . 532) (number 493 . 495) (symbol 461 . 491) (number 458 . 460) (symbol 449 . 456) (symbol 442 . 448) (symbol 424 . 441) (symbol 382 . 423) (number 379 . 381) (symbol 354 . 377) (punctuation 353 . 354) (symbol 350 . 353) (symbol 328 . 349) (punctuation 327 . 328) (symbol 323 . 327) (symbol 308 . 322) (punctuation 307 . 308) (symbol 296 . 307) (symbol 266 . 295) (number 263 . 265) (symbol 236 . 261) (semantic-list 226 . 236) (symbol 173 . 226) (number 170 . 172) (semantic-list 144 . 168) (symbol 110 . 144) (number 107 . 109) (symbol 83 . 105) (symbol 52 . 81) (symbol 40 . 51) (symbol 32 . 39) (number 29 . 31) (number 25 . 27) (symbol 4 . 23) (number 1 . 3) (symbol 679 . 709) (number 675 . 678) (symbol 657 . 673) (semantic-list 651 . 657) (symbol 618 . 651) (number 615 . 617) (symbol 590 . 613) (punctuation 589 . 590) (symbol 586 . 589) (symbol 564 . 585) (punctuation 563 . 564) (symbol 559 . 563) (symbol 544 . 558) (punctuation 543 . 544) (symbol 532 . 543) (symbol 495 . 531) (number 492 . 494) (symbol 460 . 490) (number 457 . 459) (symbol 448 . 455) (symbol 441 . 447) (symbol 423 . 440) (symbol 381 . 422) (number 378 . 380) (symbol 353 . 376) (punctuation 352 . 353) (symbol 349 . 352) (symbol 327 . 348) (punctuation 326 . 327) (symbol 322 . 326) (symbol 307 . 321) (punctuation 306 . 307) (symbol 295 . 306) (symbol 265 . 294) (number 262 . 264) (symbol 235 . 260) (semantic-list 225 . 235) (symbol 172 . 225) (number 169 . 171) (semantic-list 143 . 167) (symbol 109 . 143) (number 106 . 108) (symbol 82 . 104) (symbol 51 . 80) (symbol 39 . 50) (symbol 31 . 38) (number 28 . 30) (number 25 . 26) (symbol 4 . 23) (number 1 . 3) (symbol 680 . 710) (number 676 . 679) (symbol 658 . 674) (semantic-list 652 . 658) (symbol 619 . 652) (number 616 . 618) (symbol 591 . 614) (punctuation 590 . 591) (symbol 587 . 590) (symbol 565 . 586) (punctuation 564 . 565) (symbol 560 . 564) (symbol 545 . 559) (punctuation 544 . 545) (symbol 533 . 544) (symbol 496 . 532) (number 493 . 495) (symbol 461 . 491) (number 458 . 460) (symbol 449 . 456) (symbol 442 . 448) (symbol 424 . 441) (symbol 382 . 423) (number 379 . 381) (symbol 354 . 377) (punctuation 353 . 354) (symbol 350 . 353) (symbol 328 . 349) (punctuation 327 . 328) (symbol 323 . 327) (symbol 308 . 322) (punctuation 307 . 308) (symbol 296 . 307) (symbol 266 . 295) (number 263 . 265) (symbol 236 . 261) (semantic-list 226 . 236) (symbol 173 . 226) (number 170 . 172) (semantic-list 144 . 168) (symbol 110 . 144) (number 107 . 109) (symbol 83 . 105) (symbol 52 . 81) (symbol 40 . 51) (symbol 32 . 39) (number 29 . 31) (number 25 . 27) (symbol 4 . 23) (number 1 . 3) (symbol 678 . 708) (number 674 . 677) (symbol 656 . 672) (semantic-list 650 . 656) (symbol 617 . 650) (number 614 . 616) (symbol 589 . 612) (punctuation 588 . 589) (symbol 585 . 588) (symbol 563 . 584) (punctuation 562 . 563) (symbol 558 . 562) (symbol 543 . 557) (punctuation 542 . 543) (symbol 531 . 542) (symbol 494 . 530) (number 491 . 493) (symbol 459 . 489) (number 456 . 458) (symbol 447 . 454) (symbol 440 . 446) (symbol 422 . 439) (symbol 380 . 421) (number 377 . 379) (symbol 352 . 375) (punctuation 351 . 352) (symbol 348 . 351) (symbol 326 . 347) (punctuation 325 . 326) (symbol 321 . 325) (symbol 306 . 320) (punctuation 305 . 306) (symbol 294 . 305) (symbol 264 . 293) (number 261 . 263) (symbol 234 . 259) (semantic-list 224 . 234) (symbol 171 . 224) (number 168 . 170) (semantic-list 142 . 166) (symbol 108 . 142) (number 105 . 107) (symbol 81 . 103) (symbol 50 . 79) (symbol 38 . 49) (symbol 30 . 37) (number 27 . 29) (symbol 4 . 23) (number 1 . 3) (symbol 678 . 708) (number 674 . 677) (symbol 656 . 672) (semantic-list 650 . 656) (symbol 617 . 650) (number 614 . 616) (symbol 589 . 612) (punctuation 588 . 589) (symbol 585 . 588) (symbol 563 . 584) (punctuation 562 . 563) (symbol 558 . 562) (symbol 543 . 557) (punctuation 542 . 543) (symbol 531 . 542) (symbol 494 . 530) (number 491 . 493) (symbol 459 . 489) (number 456 . 458) (symbol 447 . 454) (symbol 440 . 446) (symbol 422 . 439) (symbol 380 . 421) (number 377 . 379) (symbol 352 . 375) (punctuation 351 . 352) (symbol 348 . 351) (symbol 326 . 347) (punctuation 325 . 326) (symbol 321 . 325) (symbol 306 . 320) (punctuation 305 . 306) (symbol 294 . 305) (symbol 264 . 293) (number 261 . 263) (symbol 234 . 259) (semantic-list 224 . 234) (symbol 171 . 224) (number 168 . 170) (semantic-list 142 . 166) (symbol 108 . 142) (number 105 . 107) (symbol 81 . 103) (symbol 50 . 79) (symbol 38 . 49) (symbol 30 . 37) (number 27 . 29) (symbol 4 . 23) (number 1 . 3)))
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("Service_A" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("a" variable (:type "int") (reparse-symbol arg-sub-list) [330 336]))                  
                :type "int")
                nil [309 337])
            ("RPC_Server" function
               (:prototype-flag t
                :type "void")
                nil [338 356])
            ("RPC" function
               (:arguments 
                  ( ("pname" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [383 408])
                    ("a" variable (:type "int") (reparse-symbol arg-sub-list) [409 415]))                  
                :type "int")
                nil [375 525])
            ("RPC" function
               (:prototype-flag t
                :arguments 
                  ( ("pname" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [563 563])
                    ("b" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [563 563]))                  
                :type "int")
                nil [563 563])
            ("RPC" function
               (:prototype-flag t
                :arguments 
                  ( ("pname" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [563 563])
                    ("c" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("int" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [563 563]))                  
                :type "int")
                nil [563 563])
            ("Hello" function
               (:prototype-flag t
                :typemodifiers ("static")
                :type "void")
                nil [563 563])
            ("Client" function
               (:prototype-flag t
                :type "void")
                nil [563 563]))          
      :file "Comm.cpp"
      :pointmax 526
      :fsize 525
      :lastmodtime '(24586 9903 113801 833000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("Detector" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [176 197])
                            ("self" variable nil (reparse-symbol indented_block_body) [206 225])
                            ("self" variable nil (reparse-symbol indented_block_body) [234 253]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [161 165]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [148 254])
                    ("Detect" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [278 282])
                            ("image" variable nil (reparse-symbol function_parameters) [284 289])
                            ("pointmap" variable nil (reparse-symbol function_parameters) [291 299]))                          )
                        (reparse-symbol indented_block_body) [267 360]))                  
                :type "class")
                nil [120 360])
            ("Detect" function (:arguments 
              ( ("config" variable nil (reparse-symbol function_parameters) [386 392])
                ("image" variable nil (reparse-symbol function_parameters) [394 399])
                ("pointmap" variable nil (reparse-symbol function_parameters) [401 409]))              ) nil [375 504])
            ("Debug" function nil nil [505 591])
            ("if" code nil nil [597 634]))          
      :file "RestoreData.py"
      :pointmax 634
      :fsize 624
      :lastmodtime '(24702 37724 973173 783000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("rand" function (:type "int") nil [1 79])
            ("functional_rand" function
               (:arguments 
                  ( ("stats" variable
                       (:dereference 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [101 116]))                  
                :type "int")
                nil [81 157]))          
      :file "Rand.c"
      :pointmax 244
      :fsize 243
      :lastmodtime '(24702 37486 987259 408000)
      :unmatched-syntax '((semantic-list 159 . 243) (semantic-list 159 . 243) (semantic-list 159 . 224) (semantic-list 159 . 216) (semantic-list 159 . 170))))
  :file "!home!rvbust!WS!Sandbox!Tmp!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
