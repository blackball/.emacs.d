;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("detail/common.h" include nil nil [285 311])
            ("buffer_info.h" include nil nil [312 336])
            ("utility" include (:system-flag t) nil [337 355])
            ("type_traits" include (:system-flag t) nil [356 378])
            ("handle" type
               (:prototype t
                :type "class")
                nil [450 463])
            ("object" type
               (:prototype t
                :type "class")
                nil [464 477])
            ("str" type
               (:prototype t
                :type "class")
                nil [478 488])
            ("iterator" type
               (:prototype t
                :type "class")
                nil [489 504])
            ("arg" type
               (:prototype t
                :type "struct")
                nil [505 516])
            ("arg_v" type
               (:prototype t
                :type "struct")
                nil [517 530])
            ("args_proxy" type
               (:prototype t
                :type "class")
                nil [556 573])
            ("isinstance_generic" function
               (:prototype-flag t
                :typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [605 616])
                    ("tp" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::type_info" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [617 642]))                  
                :type "bool")
                nil [574 643])
            ("accessor" type
               (:template 
                  ( ("Policy" type (:type "class") nil nil))                  
                :type "class"
                :prototype t)
                nil [678 720])
            ("accessor_policies" type
               (:members 
                  ( ("obj_attr" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [755 771])
                    ("str_attr" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [776 792])
                    ("generic_item" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [797 817])
                    ("sequence_item" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [822 843])
                    ("list_item" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [848 865])
                    ("tuple_item" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [870 888]))                  
                :type "namespace")
                nil [721 890])
            ("accessor" variable (:type "int") nil [917 955])
            ("accessor" variable (:type "int") nil [982 1020])
            ("accessor" variable (:type "int") nil [1043 1085])
            ("accessor" variable (:type "int") nil [1112 1155])
            ("accessor" variable (:type "int") nil [1178 1217])
            ("accessor" variable (:type "int") nil [1241 1281])
            ("pyobject_tag" type (:type "class") nil [1360 1383])
            ("std::is_base_of" variable (:type "int") nil [1426 1479])
            ("object_api" type
               (:template 
                  ( ("Derived" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("derived" function
                       (:constant-flag t
                        :type ("Derived" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1756 1834])
                    ("public" label nil (reparse-symbol classsubparts) [1836 1843])
                    ("begin" function
                       (:prototype-flag t
                        :type ("iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2026 2049])
                    ("end" function
                       (:prototype-flag t
                        :type ("iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2102 2123])
                    ("[]" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("key" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2498 2509]))                          
                        :type ("item_accessor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2473 2516])
                    ("[]" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("key" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [2635 2651]))                          
                        :type ("item_accessor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2610 2658])
                    ("attr" function
                       (:prototype-flag t
                        :arguments 
                          ( ("key" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3020 3031]))                          
                        :type ("obj_attr_accessor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2997 3038])
                    ("attr" function
                       (:prototype-flag t
                        :arguments 
                          ( ("key" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [3155 3171]))                          
                        :type ("str_attr_accessor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3132 3178])
                    ("" function
                       (:prototype-flag t
                        :operator-flag t
                        :function-pointer t
                        :type ("args_proxy" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3496 3525])
                    ("contains" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3654 3658])
                            ("" variable (:type ("item" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3658 3663]))                          
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [3618 3670])
                    ("()" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Args" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4364 4371])
                            ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4374 4379]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4346 4386])
                    ("call" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Args" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4590 4596])
                            ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4600 4605]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4578 4612])
                    ("is" function
                       (:arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4676 4700]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [4668 4759])
                    ("is_none" function (:type "bool") (reparse-symbol classsubparts) [4813 4872])
                    ("equal" function
                       (:arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4933 4957]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [4922 5007])
                    ("not_equal" function
                       (:arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5027 5051]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [5012 5097])
                    ("<" function
                       (:operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5117 5141]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [5102 5187])
                    ("<=" function
                       (:operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5208 5232]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [5192 5277])
                    (">" function
                       (:operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5297 5321]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [5282 5367])
                    (">=" function
                       (:operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5388 5412]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [5372 5457])
                    ("-" function
                       (:prototype-flag t
                        :operator-flag t
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5463 5488])
                    ("~" function
                       (:prototype-flag t
                        :operator-flag t
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5493 5518])
                    ("+" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5540 5564]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5523 5571])
                    ("+=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5594 5618]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5576 5625])
                    ("-" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5647 5671]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5630 5678])
                    ("-=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5701 5725]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5683 5732])
                    ("" function
                       (:prototype-flag t
                        :operator-flag t
                        :function-pointer t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5754 5778]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5737 5785])
                    ("=" function
                       (:prototype-flag t
                        :operator-flag t
                        :function-pointer t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5808 5832]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5790 5839])
                    ("/" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5861 5885]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5844 5892])
                    ("/=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5915 5939]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5897 5946])
                    ("|" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5968 5992]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5951 5999])
                    ("|=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6022 6046]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6004 6053])
                    ("&" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6075 6099]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6058 6106])
                    ("&=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6129 6153]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6111 6160])
                    ("^" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6182 6206]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6165 6213])
                    ("^=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6236 6260]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6218 6267])
                    ("<<" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6290 6314]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6272 6321])
                    ("<<=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6345 6369]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6326 6376])
                    (">>" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6399 6423]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6381 6430])
                    (">>=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6454 6478]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6435 6485])
                    ("str" function
                       (:prototype-flag t
                        :type ("pybind11::str" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6543 6569])
                    ("doc" function
                       (:prototype-flag t
                        :type ("str_attr_accessor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6640 6670])
                    ("ref_count" function (:type "int") (reparse-symbol classsubparts) [6728 6806])
                    ("get_type" function
                       (:prototype-flag t
                        :type ("handle" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6885 6909])
                    ("private" label nil (reparse-symbol classsubparts) [6911 6919])
                    ("rich_compare" function
                       (:prototype-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6942 6966])
                            ("value" variable (:type "int") (reparse-symbol arg-sub-list) [6967 6977]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [6924 6984]))                  
                :superclasses 
                  ( ("pyobject_tag" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [1683 6987])
            ("handle" type
               (:superclasses 
                  ( ("detail::object_api" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [7527 7534])
                    ("handle" function
                       (:constructor-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7723 7737]))                          
                        :type ("handle" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7716 7754])
                    ("ptr" function
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7857 7896])
                    ("ptr" function (:type "int") (reparse-symbol classsubparts) [7912 7935])
                    ("cast" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("T" type (:type "class") nil nil)
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [8759 8796])
                    ("==" function
                       (:operator-flag t
                        :arguments 
                          ( ("h" variable
                               (:reference 1
                                :constant-flag t
                                :type ("handle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9151 9167]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [9135 9202])
                    ("!=" function
                       (:operator-flag t
                        :arguments 
                          ( ("h" variable
                               (:reference 1
                                :constant-flag t
                                :type ("handle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9277 9293]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [9261 9328])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [9396 9443])
                    ("protected" label nil (reparse-symbol classsubparts) [9444 9454])
                    ("m_ptr" variable
                       (:pointer 1
                        :default-value "nullptr"
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [9459 9485]))                  
                :type "class")
                nil [7476 9488])
            ("object" type
               (:superclasses 
                  ( ("handle" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [10085 10092])
                    ("object" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10219 10228])
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) [10229 10246]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [10212 10290])
                    ("object" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10365 10381]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [10358 10408])
                    ("object" function
                       (:destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [10650 10674])
                    ("release" function (:type ("handle" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10897 10999])
                    ("=" function
                       (:operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11023 11043]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [11005 11146])
                    ("protected" label nil (reparse-symbol classsubparts) [11625 11635])
                    ("borrowed_t" type (:type "struct") (reparse-symbol classsubparts) [11698 11720])
                    ("stolen_t" type (:type "struct") (reparse-symbol classsubparts) [11725 11745])
                    ("reinterpret_borrow" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("T" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11801 11808]))                          
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [11751 11809])
                    ("reinterpret_steal" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("T" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11863 11870]))                          
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [11814 11871])
                    ("public" label nil (reparse-symbol classsubparts) [11873 11880])
                    ("object" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11968 11977])
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11978 11989]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [11961 12016])
                    ("object" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12028 12037])
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12038 12047]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [12021 12063]))                  
                :type "class")
                nil [10054 12066])
            ("reinterpret_borrow" function
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type ("T" type (:type "class") nil nil)
                :arguments 
                  ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12664 12673]))                  )
                nil [12621 12711])
            ("reinterpret_steal" function
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type ("T" type (:type "class") nil nil)
                :arguments 
                  ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12989 12998]))                  )
                nil [12947 13034])
            ("error_string" function
               (:prototype-flag t
                :typemodifiers ("inline")
                :type ("std::string" type (:type "class") nil nil))
                nil [13060 13094])
            ("error_already_set" type
               (:superclasses 
                  ( ("std::runtime_error" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [13472 13479])
                    ("error_already_set" function
                       (:constructor-flag t
                        :type ("error_already_set" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [13629 13763])
                    ("error_already_set" function
                       (:prototype-flag t
                        :destructor-flag t
                        :typemodifiers ("inline")
                        :type "void")
                        (reparse-symbol classsubparts) [13885 13913])
                    ("restore" function (:type "void") (reparse-symbol classsubparts) [14189 14290])
                    ("clear" function (:type "void") (reparse-symbol classsubparts) [14429 14444])
                    ("matches" function
                       (:arguments 
                          ( ("ex" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14685 14695]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [14672 14763])
                    ("private" label nil (reparse-symbol classsubparts) [14765 14773])
                    ("type" variable (:type ("object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14778 14804])
                    ("value" variable (:type ("object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14778 14804])
                    ("trace" variable (:type ("object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14778 14804]))                  
                :type "class")
                nil [13418 14807])
            ("isinstance" function
               (:arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15264 15275]))                  
                :type "bool")
                nil [15248 15302])
            ("isinstance" function
               (:arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15408 15419]))                  
                :type "bool")
                nil [15392 15474])
            ("isinstance" function
               (:type "bool"
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15584 15595]))                  
                :typemodifiers ("inline")
                :template-specifier 
                  ( ("object" type nil nil nil))                  )
                nil [15541 15628])
            ("isinstance" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15741 15752])
                    ("type" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15753 15765]))                  
                :type "bool")
                nil [15718 15918])
            ("hasattr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15979 15990])
                    ("name" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15991 16003]))                  
                :type "bool")
                nil [15959 16064])
            ("hasattr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16086 16097])
                    ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16098 16115]))                  
                :type "bool")
                nil [16066 16176])
            ("delattr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16198 16209])
                    ("name" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16210 16222]))                  
                :type "void")
                nil [16178 16311])
            ("delattr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16333 16344])
                    ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16345 16362]))                  
                :type "void")
                nil [16313 16451])
            ("getattr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16475 16486])
                    ("name" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16487 16499]))                  
                :type ("object" type (:type "class") nil nil))
                nil [16453 16661])
            ("getattr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16685 16696])
                    ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16697 16714]))                  
                :type ("object" type (:type "class") nil nil))
                nil [16663 16876])
            ("getattr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16900 16911])
                    ("name" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16912 16924])
                    ("default_" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16925 16941]))                  
                :type ("object" type (:type "class") nil nil))
                nil [16878 17160])
            ("getattr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17184 17195])
                    ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17196 17213])
                    ("default_" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17214 17230]))                  
                :type ("object" type (:type "class") nil nil))
                nil [17162 17449])
            ("setattr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17471 17482])
                    ("name" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17483 17495])
                    ("value" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17496 17509]))                  
                :type "void")
                nil [17451 17611])
            ("setattr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17633 17644])
                    ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17645 17662])
                    ("value" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17663 17676]))                  
                :type "void")
                nil [17613 17778])
            ("hash" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17800 17811]))                  
                :type ("ssize_t" type (:type "class") nil nil))
                nil [17780 17916])
            ("get_function" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("value" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17993 18006]))                  
                :type ("handle" type (:type "class") nil nil))
                nil [17966 18307])
            ("decltype" function
               (:arguments 
                  ( ("" variable (:type ("std::forward" type
                         (:template-specifier 
                            ( ("T" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [18678 18696]))                  
                :type "int")
                nil [18669 18728])
            ("object_or_cast" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:reference 1
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18878 18882])
                    ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18882 18884]))                  
                :type ("object" type (:type "class") nil nil))
                nil [18856 18885])
            ("object_or_cast" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19012 19026]))                  
                :type ("handle" type (:type "class") nil nil))
                nil [18983 19042])
            ("accessor" type
               (:template 
                  ( ("Policy" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("Policy::key_type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [19147 19173])
                    ("public" label nil (reparse-symbol classsubparts) [19175 19182])
                    ("accessor" function
                       (:constructor-flag t
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19196 19207])
                            ("key" variable (:type ("key_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19208 19221]))                          
                        :type ("accessor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [19187 19257])
                    ("enable_if_t" function
                       (:template-specifier 
                          ( ("std::is_same::value" type nil nil nil)
                            ("bool" type nil nil nil))                          
                        :type "int")
                        (reparse-symbol classsubparts) [20443 20567])
                    ("object" function (:type "int") (reparse-symbol classsubparts) [20582 20620])
                    ("ptr" function
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [20625 20676])
                    ("cast" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [20681 20760])
                    ("private" label nil (reparse-symbol classsubparts) [20762 20770])
                    ("get_cache" function (:type ("object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20775 20885])
                    ("private" label nil (reparse-symbol classsubparts) [20887 20895])
                    ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20900 20911])
                    ("key" variable (:type ("key_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20916 20929])
                    ("cache" variable
                       (:typemodifiers ("mutable")
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [20934 20955]))                  
                :superclasses 
                  ( ("object_api" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [19044 20958])
            ("obj_attr" type
               (:members 
                  ( ("key_type" variable
                       (:default-value "object"
                        :type "int")
                        (reparse-symbol classsubparts) [21023 21041])
                    ("get" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21064 21075])
                            ("key" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21076 21087]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [21046 21117])
                    ("set" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21138 21149])
                            ("key" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21150 21161])
                            ("val" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21162 21173]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [21122 21201]))                  
                :type "struct")
                nil [20995 21204])
            ("str_attr" type
               (:members 
                  ( ("get" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21281 21292])
                            ("key" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [21293 21309]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [21263 21339])
                    ("set" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21360 21371])
                            ("key" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [21372 21388])
                            ("val" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21389 21400]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [21344 21428]))                  
                :type "struct")
                nil [21206 21431])
            ("generic_item" type
               (:members 
                  ( ("key_type" variable
                       (:default-value "object"
                        :type "int")
                        (reparse-symbol classsubparts) [21465 21483])
                    ("get" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21507 21518])
                            ("key" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21519 21530]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [21489 21707])
                    ("set" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21729 21740])
                            ("key" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21741 21752])
                            ("val" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21753 21764]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [21713 21871]))                  
                :type "struct")
                nil [21433 21874])
            ("sequence_item" type
               (:members 
                  ( ("key_type" variable
                       (:default-value "size_t"
                        :type "int")
                        (reparse-symbol classsubparts) [21909 21927])
                    ("get" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21951 21962])
                            ("index" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21963 21976]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [21933 22173])
                    ("set" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22195 22206])
                            ("index" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22207 22220])
                            ("val" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22221 22232]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [22179 22445]))                  
                :type "struct")
                nil [21876 22448])
            ("list_item" type
               (:members 
                  ( ("key_type" variable
                       (:default-value "size_t"
                        :type "int")
                        (reparse-symbol classsubparts) [22479 22497])
                    ("get" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22521 22532])
                            ("index" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22533 22546]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [22503 22740])
                    ("set" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22762 22773])
                            ("index" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22774 22787])
                            ("val" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22788 22799]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [22746 23006]))                  
                :type "struct")
                nil [22450 23009])
            ("tuple_item" type
               (:members 
                  ( ("key_type" variable
                       (:default-value "size_t"
                        :type "int")
                        (reparse-symbol classsubparts) [23041 23059])
                    ("get" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23083 23094])
                            ("index" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23095 23108]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [23065 23303])
                    ("set" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23325 23336])
                            ("index" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23337 23350])
                            ("val" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23351 23362]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [23309 23571]))                  
                :type "struct")
                nil [23011 23574])
            ("generic_iterator" type
               (:template 
                  ( ("Policy" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("It" variable
                       (:default-value "generic_iterator"
                        :type "int")
                        (reparse-symbol classsubparts) [23753 23775])
                    ("public" label nil (reparse-symbol classsubparts) [23777 23784])
                    ("difference_type" variable
                       (:default-value "ssize_t"
                        :type "int")
                        (reparse-symbol classsubparts) [23795 23821])
                    ("Policy::iterator_category" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [23852 23887])
                    ("Policy::value_type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [23911 23939])
                    ("Policy::reference" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [23962 23989])
                    ("Policy::pointer" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [24010 24035])
                    ("generic_iterator" function
                       (:constructor-flag t
                        :arguments 
                          ( ("seq" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24092 24103])
                            ("index" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24104 24118]))                          
                        :type ("generic_iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24075 24143])
                    ("" function
                       (:operator-flag t
                        :function-pointer t
                        :type ("reference" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24149 24210])
                    ("[]" function
                       (:operator-flag t
                        :arguments 
                          ( ("n" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24236 24254]))                          
                        :type ("reference" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24215 24285])
                    ("->" function
                       (:operator-flag t
                        :type ("pointer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24290 24335])
                    ("++" function
                       (:operator-flag t
                        :type ("It" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24341 24396])
                    ("++" function
                       (:operator-flag t
                        :arguments 
                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [24415 24419]))                          
                        :type ("It" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24401 24476])
                    ("--" function
                       (:operator-flag t
                        :type ("It" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24481 24536])
                    ("--" function
                       (:operator-flag t
                        :arguments 
                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [24555 24559]))                          
                        :type ("It" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24541 24616])
                    ("+=" function
                       (:operator-flag t
                        :arguments 
                          ( ("n" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24636 24654]))                          
                        :type ("It" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24621 24692])
                    ("-=" function
                       (:operator-flag t
                        :arguments 
                          ( ("n" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24712 24730]))                          
                        :type ("It" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24697 24769])
                    ("+" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [24795 24807])
                            ("n" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24808 24826]))                          
                        :type ("It" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24775 24863])
                    ("+" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("n" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24888 24906])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [24907 24919]))                          
                        :type ("It" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24868 24937])
                    ("-" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [24962 24974])
                            ("n" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24975 24993]))                          
                        :type ("It" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24942 25030])
                    ("-" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25068 25080])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25081 25093]))                          
                        :type ("difference_type" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [25035 25122])
                    ("==" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25151 25163])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25164 25176]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [25128 25199])
                    ("!=" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25227 25239])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25240 25252]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [25204 25274])
                    ("<" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25302 25314])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25315 25327]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [25279 25349])
                    (">" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25377 25389])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25390 25402]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [25354 25420])
                    (">=" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25448 25460])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25461 25473]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [25425 25494])
                    ("<=" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25522 25534])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25535 25547]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [25499 25568]))                  
                :superclasses 
                  ( ("Policy" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [23675 25571])
            ("arrow_proxy" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [25754 25762])
                    ("arrow_proxy" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25780 25784])
                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25784 25790]))                          
                        :type ("arrow_proxy" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [25768 25820])
                    ("->" function
                       (:operator-flag t
                        :pointer 1
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [25825 25865]))                  )
                nil [25707 25868])
            ("sequence_fast_readonly" type
               (:members 
                  ( ("protected" label nil (reparse-symbol classsubparts) [25992 26002])
                    ("std::random_access_iterator_tag" variable (:type "int") (reparse-symbol classsubparts) [26033 26065])
                    ("value_type" variable
                       (:default-value "handle"
                        :type "int")
                        (reparse-symbol classsubparts) [26076 26096])
                    ("handle" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [26119 26132])
                    ("arrow_proxy" variable (:type "int") (reparse-symbol classsubparts) [26153 26179])
                    ("sequence_fast_readonly" function
                       (:constructor-flag t
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26208 26219])
                            ("n" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26220 26230]))                          
                        :type ("sequence_fast_readonly" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [26185 26278])
                    ("dereference" function (:type ("reference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [26284 26330])
                    ("increment" function (:type "void") (reparse-symbol classsubparts) [26335 26362])
                    ("decrement" function (:type "void") (reparse-symbol classsubparts) [26367 26394])
                    ("advance" function
                       (:arguments 
                          ( ("n" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26412 26422]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [26399 26436])
                    ("equal" function
                       (:arguments 
                          ( ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("sequence_fast_readonly" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [26452 26484]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [26441 26515])
                    ("distance_to" function
                       (:arguments 
                          ( ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("sequence_fast_readonly" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [26540 26572]))                          
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [26520 26602])
                    ("private" label nil (reparse-symbol classsubparts) [26604 26612])
                    ("ptr" variable
                       (:pointer 2
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [26617 26632]))                  
                :type "class")
                nil [25961 26635])
            ("sequence_slow_readwrite" type
               (:members 
                  ( ("protected" label nil (reparse-symbol classsubparts) [26763 26773])
                    ("std::random_access_iterator_tag" variable (:type "int") (reparse-symbol classsubparts) [26804 26836])
                    ("value_type" variable
                       (:default-value "object"
                        :type "int")
                        (reparse-symbol classsubparts) [26847 26867])
                    ("reference" variable
                       (:default-value "sequence_accessor"
                        :type "int")
                        (reparse-symbol classsubparts) [26878 26908])
                    ("arrow_proxy" variable (:type "int") (reparse-symbol classsubparts) [26929 26966])
                    ("sequence_slow_readwrite" function
                       (:constructor-flag t
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26996 27007])
                            ("index" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27008 27022]))                          
                        :type ("sequence_slow_readwrite" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [26972 27051])
                    ("dereference" function (:type ("reference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27057 27132])
                    ("increment" function (:type "void") (reparse-symbol classsubparts) [27137 27166])
                    ("decrement" function (:type "void") (reparse-symbol classsubparts) [27171 27200])
                    ("advance" function
                       (:arguments 
                          ( ("n" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27218 27228]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [27205 27244])
                    ("equal" function
                       (:arguments 
                          ( ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("sequence_slow_readwrite" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [27260 27293]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [27249 27328])
                    ("distance_to" function
                       (:arguments 
                          ( ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("sequence_slow_readwrite" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [27353 27386]))                          
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [27333 27420])
                    ("private" label nil (reparse-symbol classsubparts) [27422 27430])
                    ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27435 27446])
                    ("index" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27451 27465]))                  
                :type "class")
                nil [26731 27468])
            ("dict_readonly" type
               (:members 
                  ( ("protected" label nil (reparse-symbol classsubparts) [27563 27573])
                    ("std::forward_iterator_tag" variable (:type "int") (reparse-symbol classsubparts) [27604 27630])
                    ("std::pair" variable (:type "int") (reparse-symbol classsubparts) [27654 27680])
                    ("value_type" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [27703 27720])
                    ("arrow_proxy" variable (:type "int") (reparse-symbol classsubparts) [27741 27771])
                    ("dict_readonly" function
                       (:constructor-flag t
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27822 27833])
                            ("pos" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27834 27846]))                          
                        :type ("dict_readonly" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [27808 27884])
                    ("dereference" function (:type ("reference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27890 27944])
                    ("increment" function (:type "void") (reparse-symbol classsubparts) [27949 28032])
                    ("equal" function
                       (:arguments 
                          ( ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("dict_readonly" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [28048 28071]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [28037 28102])
                    ("private" label nil (reparse-symbol classsubparts) [28104 28112])
                    ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol classsubparts) [28117 28128])
                    ("key" variable
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [28133 28155])
                    ("value" variable
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [28133 28155])
                    ("pos" variable
                       (:default-value "-1"
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [28160 28177]))                  
                :type "class")
                nil [27541 28180])
            ("generic_iterator" variable (:type "int") nil [28265 28325])
            ("generic_iterator" variable (:type "int") nil [28348 28408])
            ("generic_iterator" variable (:type "int") nil [28618 28679])
            ("generic_iterator" variable (:type "int") nil [28702 28753])
            ("PyIterable_Check" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28784 28798]))                  
                :type "bool")
                nil [28755 28972])
            ("PyNone_Check" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("o" variable
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28999 29011]))                  
                :type "bool")
                nil [28974 29036])
            ("PyUnicode_Check_Permissive" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("o" variable
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29181 29193]))                  
                :type "bool")
                nil [29142 29251])
            ("kwargs_proxy" type
               (:superclasses 
                  ( ("handle" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [29290 29297])
                    ("kwargs_proxy" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29324 29333]))                          
                        :type ("kwargs_proxy" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [29311 29349]))                  
                :type "class")
                nil [29253 29352])
            ("args_proxy" type
               (:superclasses 
                  ( ("handle" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [29389 29396])
                    ("args_proxy" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29421 29430]))                          
                        :type ("args_proxy" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [29410 29446])
                    ("" function
                       (:operator-flag t
                        :function-pointer t
                        :type ("kwargs_proxy" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [29451 29513]))                  
                :type "class")
                nil [29354 29516])
            ("std::is_base_of" variable (:type "int") nil [29612 29636])
            ("std::is_same" variable (:type "int") nil [29682 29710])
            ("std::is_same" variable (:type "int") nil [29772 29802])
            ("satisfies_none_of" variable (:type "int") nil [29863 29934])
            ("satisfies_any_of" variable (:type "int") nil [29982 30031])
            ("simple_collector" type
               (:prototype t
                :type "class")
                nil [30162 30185])
            ("unpacking_collector" type
               (:prototype t
                :type "class")
                nil [30267 30293])
            ("PYBIND11_OBJECT_COMMON" variable (:constant-flag t) nil [30616 30638])
            ("PYBIND11_OBJECT_CVT" variable (:constant-flag t) nil [31291 31310])
            ("PYBIND11_OBJECT" variable (:constant-flag t) nil [31923 31938])
            ("PYBIND11_OBJECT_DEFAULT" variable (:constant-flag t) nil [32209 32232])
            ("iterator" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [32750 32757])
                    ("std::input_iterator_tag" variable (:type "int") (reparse-symbol classsubparts) [32788 32812])
                    ("difference_type" variable
                       (:default-value "ssize_t"
                        :type "int")
                        (reparse-symbol classsubparts) [32823 32849])
                    ("value_type" variable
                       (:default-value "handle"
                        :type "int")
                        (reparse-symbol classsubparts) [32860 32880])
                    ("handle" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [32903 32916])
                    ("public" label nil (reparse-symbol classsubparts) [32958 33013])
                    ("iterator" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [32958 33013])
                    ("iterator" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [32958 33013])
                    ("iterator" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [32958 33013])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [32958 33013])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [32958 33013])
                    ("iterator" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [32958 33013])
                    ("iterator" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [32958 33013])
                    ("iterator" function
                       (:constructor-flag t
                        :type ("iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [32958 33013])
                    ("++" function
                       (:operator-flag t
                        :type ("iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [33019 33090])
                    ("++" function
                       (:operator-flag t
                        :arguments 
                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [33116 33120]))                          
                        :type ("iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [33096 33191])
                    ("" function
                       (:operator-flag t
                        :function-pointer t
                        :type ("reference" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [33197 33385])
                    ("->" function
                       (:operator-flag t
                        :type ("pointer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [33391 33449])
                    ("sentinel" function
                       (:typemodifiers ("static")
                        :type ("iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [33858 33899])
                    ("==" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [33928 33946])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [33947 33965]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [33905 33998])
                    ("!=" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [34026 34044])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [34045 34063]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [34003 34096])
                    ("private" label nil (reparse-symbol classsubparts) [34098 34106])
                    ("advance" function (:type "void") (reparse-symbol classsubparts) [34111 34257])
                    ("private" label nil (reparse-symbol classsubparts) [34259 34267])
                    ("value" variable
                       (:default-value "{}"
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34272 34290]))                  
                :type "class")
                nil [32717 34293])
            ("iterable" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [34328 34335])
                    ("public" label nil (reparse-symbol classsubparts) [34340 34407])
                    ("iterable" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("iterable" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34340 34407])
                    ("iterable" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("iterable" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34340 34407])
                    ("iterable" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("iterable" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34340 34407])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [34340 34407])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [34340 34407])
                    ("iterable" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("iterable" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34340 34407])
                    ("iterable" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("iterable" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34340 34407])
                    ("iterable" function
                       (:constructor-flag t
                        :type ("iterable" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34340 34407]))                  
                :type "class")
                nil [34295 34410])
            ("bytes" type
               (:prototype t
                :type "class")
                nil [34412 34424])
            ("str" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [34454 34461])
                    ("public" label nil (reparse-symbol classsubparts) [34466 34543])
                    ("str" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("str" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34466 34543])
                    ("str" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("str" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34466 34543])
                    ("str" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("str" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34466 34543])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [34466 34543])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [34466 34543])
                    ("str" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("str" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34466 34543])
                    ("str" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("str" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34466 34543])
                    ("str" function
                       (:template 
                          ( ("Policy_" type (:type "class") nil nil))                          
                        :type ("str" type (:type "class") nil nil)
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :type ("pybind11::detail::accessor" type
                                     (:template-specifier 
                                        ( ("Policy_" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [34466 34543])
                    ("str" function
                       (:constructor-flag t
                        :arguments 
                          ( ("c" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [34553 34567])
                            ("n" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34568 34577]))                          
                        :type ("str" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34549 34731])
                    ("str" function
                       (:constructor-flag t
                        :arguments 
                          ( ("c" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "\"\""
                                :type "char")
                                (reparse-symbol arg-sub-list) [34882 34900]))                          
                        :type ("str" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34878 35035])
                    ("str" function
                       (:constructor-flag t
                        :arguments 
                          ( ("s" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [35045 35066]))                          
                        :type ("str" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [35041 35096])
                    ("str" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("bytes" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [35115 35130]))                          
                        :type ("str" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [35111 35131])
                    ("str" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35295 35304]))                          
                        :type ("str" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [35291 35347])
                    ("string" function
                       (:parent "std"
                        :type "int")
                        (reparse-symbol classsubparts) [35362 35908])
                    ("format" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Args" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [35957 35964])
                            ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35967 35972]))                          
                        :type ("str" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [35946 36046])
                    ("private" label nil (reparse-symbol classsubparts) [36048 36056])
                    ("raw_str" function
                       (:pointer 1
                        :typemodifiers ("static")
                        :arguments 
                          ( ("op" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [36180 36193]))                          
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [36155 36496]))                  
                :type "class")
                nil [34426 36499])
            ("literals" type
               (:members 
                  ( ("_s" function
                       (:arguments 
                          ( ("s" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [36626 36640])
                            ("size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36641 36653]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [36623 36675]))                  
                :type "namespace")
                nil [36523 36677])
            ("bytes" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [36740 36747])
                    ("public" label nil (reparse-symbol classsubparts) [36752 36804])
                    ("bytes" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("bytes" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [36752 36804])
                    ("bytes" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("bytes" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [36752 36804])
                    ("bytes" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("bytes" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [36752 36804])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [36752 36804])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [36752 36804])
                    ("bytes" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("bytes" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [36752 36804])
                    ("bytes" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("bytes" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [36752 36804])
                    ("bytes" function
                       (:constructor-flag t
                        :arguments 
                          ( ("c" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "\"\""
                                :type "char")
                                (reparse-symbol arg-sub-list) [36850 36868]))                          
                        :type ("bytes" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [36844 37008])
                    ("bytes" function
                       (:constructor-flag t
                        :arguments 
                          ( ("c" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [37020 37034])
                            ("n" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37035 37044]))                          
                        :type ("bytes" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [37014 37205])
                    ("bytes" function
                       (:constructor-flag t
                        :arguments 
                          ( ("s" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [37251 37272]))                          
                        :type ("bytes" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [37245 37304])
                    ("bytes" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("s" variable
                               (:reference 1
                                :constant-flag t
                                :type ("pybind11::str" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [37325 37348]))                          
                        :type ("bytes" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [37319 37349])
                    ("string" function
                       (:parent "std"
                        :type "int")
                        (reparse-symbol classsubparts) [37364 37626]))                  
                :type "class")
                nil [36710 37629])
            ("bytes" function
               (:constructor-flag t
                :parent "bytes"
                :typemodifiers ("inline")
                :arguments 
                  ( ("s" variable
                       (:reference 1
                        :constant-flag t
                        :type ("pybind11::str" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [37651 37674]))                  
                :type ("bytes" type (:type "class") nil nil))
                nil [37631 38305])
            ("str" function
               (:constructor-flag t
                :parent "str"
                :typemodifiers ("inline")
                :arguments 
                  ( ("b" variable
                       (:reference 1
                        :constant-flag t
                        :type ("bytes" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [38323 38338]))                  
                :type ("str" type (:type "class") nil nil))
                nil [38307 38714])
            ("none" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [38745 38752])
                    ("public" label nil (reparse-symbol classsubparts) [38757 38808])
                    ("none" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("none" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [38757 38808])
                    ("none" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("none" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [38757 38808])
                    ("none" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("none" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [38757 38808])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [38757 38808])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [38757 38808])
                    ("none" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("none" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [38757 38808])
                    ("none" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("none" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [38757 38808])
                    ("none" function
                       (:constructor-flag t
                        :type ("none" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [38813 38855]))                  
                :type "class")
                nil [38716 38858])
            ("bool_" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [39087 39094])
                    ("public" label nil (reparse-symbol classsubparts) [39099 39157])
                    ("bool_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("bool_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [39099 39157])
                    ("bool_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("bool_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [39099 39157])
                    ("bool_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("bool_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [39099 39157])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [39099 39157])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [39099 39157])
                    ("bool_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("bool_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [39099 39157])
                    ("bool_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("bool_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [39099 39157])
                    ("bool_" function
                       (:template 
                          ( ("Policy_" type (:type "class") nil nil))                          
                        :type ("bool_" type (:type "class") nil nil)
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :type ("pybind11::detail::accessor" type
                                     (:template-specifier 
                                        ( ("Policy_" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [39099 39157])
                    ("bool_" function
                       (:constructor-flag t
                        :type ("bool_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [39162 39206])
                    ("bool_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("value" variable (:type "bool") (reparse-symbol arg-sub-list) [39270 39281]))                          
                        :type ("bool_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [39264 39336])
                    ("private" label nil (reparse-symbol classsubparts) [39411 39419])
                    ("raw_bool" function
                       (:pointer 1
                        :typemodifiers ("static")
                        :arguments 
                          ( ("op" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [39528 39541]))                          
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [39502 39705]))                  
                :type "class")
                nil [39057 39708])
            ("as_unsigned" function
               (:template 
                  ( ("Unsigned" type (:type "class") nil nil))                  
                :type ("Unsigned" type (:type "class") nil nil)
                :arguments 
                  ( ("o" variable
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [40156 40168]))                  )
                nil [40106 40622])
            ("int_" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [40675 40682])
                    ("public" label nil (reparse-symbol classsubparts) [40687 40756])
                    ("int_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("int_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [40687 40756])
                    ("int_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("int_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [40687 40756])
                    ("int_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("int_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [40687 40756])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [40687 40756])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [40687 40756])
                    ("int_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("int_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [40687 40756])
                    ("int_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("int_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [40687 40756])
                    ("int_" function
                       (:template 
                          ( ("Policy_" type (:type "class") nil nil))                          
                        :type ("int_" type (:type "class") nil nil)
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :type ("pybind11::detail::accessor" type
                                     (:template-specifier 
                                        ( ("Policy_" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [40687 40756])
                    ("int_" function
                       (:constructor-flag t
                        :type ("int_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [40761 40812])
                    ("int_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40978 40986]))                          
                        :type ("int_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [40973 41521])
                    ("T" function (:type "int") (reparse-symbol classsubparts) [41634 41872]))                  
                :type "class")
                nil [40646 41875])
            ("float_" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [41908 41915])
                    ("public" label nil (reparse-symbol classsubparts) [41920 41986])
                    ("float_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("float_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [41920 41986])
                    ("float_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("float_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [41920 41986])
                    ("float_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("float_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [41920 41986])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [41920 41986])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [41920 41986])
                    ("float_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("float_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [41920 41986])
                    ("float_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("float_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [41920 41986])
                    ("float_" function
                       (:template 
                          ( ("Policy_" type (:type "class") nil nil))                          
                        :type ("float_" type (:type "class") nil nil)
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :type ("pybind11::detail::accessor" type
                                     (:template-specifier 
                                        ( ("Policy_" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [41920 41986])
                    ("float_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("value" variable (:type "float") (reparse-symbol arg-sub-list) [42050 42062]))                          
                        :type ("float_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42043 42198])
                    ("float_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("value" variable
                               (:default-value ".0"
                                :type "double")
                                (reparse-symbol arg-sub-list) [42210 42227]))                          
                        :type ("float_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42203 42364]))                  
                :type "class")
                nil [41877 42511])
            ("weakref" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [42545 42552])
                    ("public" label nil (reparse-symbol classsubparts) [42557 42614])
                    ("weakref" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("weakref" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42557 42614])
                    ("weakref" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("weakref" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42557 42614])
                    ("weakref" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("weakref" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42557 42614])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [42557 42614])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [42557 42614])
                    ("weakref" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("weakref" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42557 42614])
                    ("weakref" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("weakref" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42557 42614])
                    ("weakref" function
                       (:constructor-flag t
                        :type ("weakref" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42557 42614])
                    ("weakref" function
                       (:constructor-flag t
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42636 42647])
                            ("callback" variable
                               (:default-value "{}"
                                :type ("handle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [42648 42668]))                          
                        :type ("weakref" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42628 42824]))                  
                :type "class")
                nil [42513 42827])
            ("slice" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [42859 42866])
                    ("public" label nil (reparse-symbol classsubparts) [42871 42924])
                    ("slice" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("slice" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42871 42924])
                    ("slice" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("slice" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42871 42924])
                    ("slice" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("slice" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42871 42924])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [42871 42924])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [42871 42924])
                    ("slice" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("slice" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42871 42924])
                    ("slice" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("slice" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42871 42924])
                    ("slice" function
                       (:constructor-flag t
                        :type ("slice" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42871 42924])
                    ("slice" function
                       (:constructor-flag t
                        :arguments 
                          ( ("start_" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42935 42950])
                            ("stop_" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42951 42965])
                            ("step_" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42966 42980]))                          
                        :type ("slice" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42929 43179])
                    ("compute" function
                       (:arguments 
                          ( ("length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43197 43211])
                            ("start" variable
                               (:pointer 1
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [43212 43226])
                            ("stop" variable
                               (:pointer 1
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [43227 43240])
                            ("step" variable
                               (:pointer 1
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [43241 43254])
                            ("slicelength" variable
                               (:pointer 1
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [43272 43292]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [43184 43587]))                  
                :type "class")
                nil [42829 43590])
            ("capsule" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [43624 43631])
                    ("public" label nil (reparse-symbol classsubparts) [43636 43698])
                    ("capsule" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("capsule" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [43636 43698])
                    ("capsule" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("capsule" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [43636 43698])
                    ("capsule" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("capsule" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [43636 43698])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [43636 43698])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [43636 43698])
                    ("capsule" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("capsule" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [43636 43698])
                    ("capsule" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("capsule" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [43636 43698])
                    ("capsule" function
                       (:constructor-flag t
                        :type ("capsule" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [43636 43698])
                    ("capsule" function
                       (:constructor-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [43804 43818])
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) [43819 43836]))                          
                        :type ("capsule" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [43796 43916])
                    ("capsule" function
                       (:constructor-flag t
                        :arguments 
                          ( ("value" variable
                               (:pointer 1
                                :constant-flag t
                                :type "void")
                                (reparse-symbol arg-sub-list) [43939 43957])
                            ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "nullptr"
                                :type "char")
                                (reparse-symbol arg-sub-list) [43958 43984])
                            ("destructor" function
                               (:function-pointer t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("PyObject" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44005 44016]))                                  
                                :type "void")
                                nil nil))                          
                        :type ("capsule" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [43931 44209])
                    ("capsule" function
                       (:constructor-flag t
                        :arguments 
                          ( ("value" variable
                               (:pointer 1
                                :constant-flag t
                                :type "void")
                                (reparse-symbol arg-sub-list) [44310 44328])
                            ("destruct" function
                               (:function-pointer t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("PyObject" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44346 44357]))                                  
                                :type "void")
                                nil nil))                          
                        :type ("capsule" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [44302 44540])
                    ("capsule" function
                       (:constructor-flag t
                        :arguments 
                          ( ("value" variable
                               (:pointer 1
                                :constant-flag t
                                :type "void")
                                (reparse-symbol arg-sub-list) [44554 44572])
                            ("destructor" function
                               (:function-pointer t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [44592 44599]))                                  
                                :type "void")
                                nil nil))                          
                        :type ("capsule" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [44546 45097])
                    ("capsule" function
                       (:constructor-flag t
                        :arguments 
                          ( ("destructor" function
                               (:function-pointer t
                                :arguments "void"
                                :type "void")
                                nil nil))                          
                        :type ("capsule" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [45103 45453])
                    ("name" function
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol classsubparts) [45721 45782]))                  
                :type "class")
                nil [43592 45785])
            ("tuple" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [45817 45824])
                    ("public" label nil (reparse-symbol classsubparts) [45829 45896])
                    ("tuple" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("tuple" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [45829 45896])
                    ("tuple" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("tuple" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [45829 45896])
                    ("tuple" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("tuple" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [45829 45896])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [45829 45896])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [45829 45896])
                    ("tuple" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("tuple" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [45829 45896])
                    ("tuple" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("tuple" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [45829 45896])
                    ("tuple" function
                       (:template 
                          ( ("Policy_" type (:type "class") nil nil))                          
                        :type ("tuple" type (:type "class") nil nil)
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :type ("pybind11::detail::accessor" type
                                     (:template-specifier 
                                        ( ("Policy_" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [45829 45896])
                    ("tuple" function
                       (:constructor-flag t
                        :arguments 
                          ( ("size" variable
                               (:default-value "0"
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [45916 45931]))                          
                        :type ("tuple" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [45910 46061])
                    ("size" function (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [46066 46126])
                    ("[]" function
                       (:operator-flag t
                        :arguments 
                          ( ("index" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46165 46178]))                          
                        :type ("detail::tuple_accessor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [46131 46211])
                    ("[]" function
                       (:operator-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46249 46258]))                          
                        :type ("detail::item_accessor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [46216 46298])
                    ("begin" function (:type ("detail::tuple_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [46303 46362])
                    ("end" function (:type ("detail::tuple_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [46367 46446]))                  
                :type "class")
                nil [45787 46449])
            ("dict" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [46480 46487])
                    ("public" label nil (reparse-symbol classsubparts) [46492 46549])
                    ("dict" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("dict" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [46492 46549])
                    ("dict" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("dict" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [46492 46549])
                    ("dict" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("dict" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [46492 46549])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [46492 46549])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [46492 46549])
                    ("dict" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("dict" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [46492 46549])
                    ("dict" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("dict" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [46492 46549])
                    ("dict" function
                       (:template 
                          ( ("Policy_" type (:type "class") nil nil))                          
                        :type ("dict" type (:type "class") nil nil)
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :type ("pybind11::detail::accessor" type
                                     (:template-specifier 
                                        ( ("Policy_" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [46492 46549])
                    ("dict" function
                       (:constructor-flag t
                        :type ("dict" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [46554 46673])
                    ("dict" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Args" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [47024 47031])
                            ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47034 47039]))                          
                        :type ("dict" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [47019 47099])
                    ("size" function (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [47105 47164])
                    ("begin" function (:type ("detail::dict_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [47169 47227])
                    ("end" function (:type ("detail::dict_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [47232 47280])
                    ("clear" function (:type "void") (reparse-symbol classsubparts) [47285 47328])
                    ("contains" function
                       (:arguments 
                          ( ("key" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47347 47358]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [47333 47415])
                    ("contains" function
                       (:arguments 
                          ( ("key" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [47434 47450]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [47420 47522])
                    ("private" label nil (reparse-symbol classsubparts) [47524 47532])
                    ("raw_dict" function
                       (:pointer 1
                        :typemodifiers ("static")
                        :arguments 
                          ( ("op" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [47633 47646]))                          
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [47607 47816]))                  
                :type "class")
                nil [46451 47819])
            ("sequence" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [47854 47861])
                    ("public" label nil (reparse-symbol classsubparts) [47866 47925])
                    ("sequence" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("sequence" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [47866 47925])
                    ("sequence" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("sequence" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [47866 47925])
                    ("sequence" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("sequence" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [47866 47925])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [47866 47925])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [47866 47925])
                    ("sequence" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("sequence" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [47866 47925])
                    ("sequence" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("sequence" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [47866 47925])
                    ("sequence" function
                       (:constructor-flag t
                        :type ("sequence" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [47866 47925])
                    ("size" function (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [47930 47993])
                    ("[]" function
                       (:operator-flag t
                        :arguments 
                          ( ("index" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48035 48048]))                          
                        :type ("detail::sequence_accessor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [47998 48081])
                    ("[]" function
                       (:operator-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48119 48128]))                          
                        :type ("detail::item_accessor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [48086 48168])
                    ("begin" function (:type ("detail::sequence_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [48173 48235])
                    ("end" function (:type ("detail::sequence_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [48240 48321]))                  
                :type "class")
                nil [47821 48324])
            ("list" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [48355 48362])
                    ("public" label nil (reparse-symbol classsubparts) [48367 48431])
                    ("list" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("list" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [48367 48431])
                    ("list" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("list" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [48367 48431])
                    ("list" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("list" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [48367 48431])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [48367 48431])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [48367 48431])
                    ("list" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("list" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [48367 48431])
                    ("list" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("list" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [48367 48431])
                    ("list" function
                       (:template 
                          ( ("Policy_" type (:type "class") nil nil))                          
                        :type ("list" type (:type "class") nil nil)
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :type ("pybind11::detail::accessor" type
                                     (:template-specifier 
                                        ( ("Policy_" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [48367 48431])
                    ("list" function
                       (:constructor-flag t
                        :arguments 
                          ( ("size" variable
                               (:default-value "0"
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [48450 48465]))                          
                        :type ("list" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [48445 48593])
                    ("size" function (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [48598 48657])
                    ("[]" function
                       (:operator-flag t
                        :arguments 
                          ( ("index" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48695 48708]))                          
                        :type ("detail::list_accessor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [48662 48741])
                    ("[]" function
                       (:operator-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48779 48788]))                          
                        :type ("detail::item_accessor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [48746 48828])
                    ("begin" function (:type ("detail::list_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [48833 48891])
                    ("end" function (:type ("detail::list_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [48896 48973])
                    ("append" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [49012 49016])
                            ("" variable (:type ("val" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49016 49020]))                          )
                        (reparse-symbol classsubparts) [48978 49116]))                  
                :type "class")
                nil [48326 49119])
            ("args" type
               (:superclasses 
                  ( ("tuple" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [49149 49200])
                    ("args" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("args" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49149 49200])
                    ("args" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("args" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49149 49200])
                    ("args" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("args" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49149 49200])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [49149 49200])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [49149 49200])
                    ("args" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("args" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49149 49200])
                    ("args" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("args" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49149 49200])
                    ("args" function
                       (:constructor-flag t
                        :type ("args" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49149 49200]))                  
                :type "class")
                nil [49121 49203])
            ("kwargs" type
               (:superclasses 
                  ( ("dict" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [49233 49284])
                    ("kwargs" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("kwargs" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49233 49284])
                    ("kwargs" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("kwargs" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49233 49284])
                    ("kwargs" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("kwargs" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49233 49284])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [49233 49284])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [49233 49284])
                    ("kwargs" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("kwargs" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49233 49284])
                    ("kwargs" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("kwargs" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49233 49284])
                    ("kwargs" function
                       (:constructor-flag t
                        :type ("kwargs" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49233 49284]))                  
                :type "class")
                nil [49204 49288])
            ("set" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [49318 49325])
                    ("public" label nil (reparse-symbol classsubparts) [49330 49386])
                    ("set" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("set" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49330 49386])
                    ("set" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("set" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49330 49386])
                    ("set" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("set" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49330 49386])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [49330 49386])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [49330 49386])
                    ("set" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("set" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49330 49386])
                    ("set" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("set" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49330 49386])
                    ("set" function
                       (:template 
                          ( ("Policy_" type (:type "class") nil nil))                          
                        :type ("set" type (:type "class") nil nil)
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :type ("pybind11::detail::accessor" type
                                     (:template-specifier 
                                        ( ("Policy_" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [49330 49386])
                    ("set" function
                       (:constructor-flag t
                        :type ("set" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49391 49514])
                    ("size" function (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [49519 49577])
                    ("add" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [49613 49617])
                            ("" variable (:type ("val" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49617 49621]))                          )
                        (reparse-symbol classsubparts) [49582 49725])
                    ("clear" function (:type "void") (reparse-symbol classsubparts) [49730 49772]))                  
                :type "class")
                nil [49290 49775])
            ("function" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [49810 49817])
                    ("public" label nil (reparse-symbol classsubparts) [49822 49881])
                    ("function" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("function" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49822 49881])
                    ("function" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("function" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49822 49881])
                    ("function" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("function" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49822 49881])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [49822 49881])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [49822 49881])
                    ("function" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("function" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49822 49881])
                    ("function" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("function" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49822 49881])
                    ("function" function
                       (:constructor-flag t
                        :type ("function" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49822 49881])
                    ("cpp_function" function (:type ("handle" type (:type "class") nil nil)) (reparse-symbol classsubparts) [49886 50069])
                    ("is_cpp_function" function (:type "bool") (reparse-symbol classsubparts) [50074 50136]))                  
                :type "class")
                nil [49777 50139])
            ("buffer" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [50172 50179])
                    ("public" label nil (reparse-symbol classsubparts) [50184 50245])
                    ("buffer" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("buffer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [50184 50245])
                    ("buffer" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("buffer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [50184 50245])
                    ("buffer" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("buffer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [50184 50245])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [50184 50245])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [50184 50245])
                    ("buffer" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("buffer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [50184 50245])
                    ("buffer" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("buffer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [50184 50245])
                    ("buffer" function
                       (:constructor-flag t
                        :type ("buffer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [50184 50245])
                    ("request" function
                       (:arguments 
                          ( ("writable" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [50271 50292]))                          
                        :type ("buffer_info" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [50251 50608]))                  
                :type "class")
                nil [50141 50611])
            ("memoryview" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [50648 50655])
                    ("memoryview" function
                       (:constructor-flag t
                        :arguments 
                          ( ("info" variable
                               (:reference 1
                                :constant-flag t
                                :type ("buffer_info" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [50680 50704]))                          
                        :type ("memoryview" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [50669 51651])
                    ("public" label nil (reparse-symbol classsubparts) [51657 51741])
                    ("memoryview" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("memoryview" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [51657 51741])
                    ("memoryview" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("memoryview" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [51657 51741])
                    ("memoryview" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("memoryview" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [51657 51741])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [51657 51741])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [51657 51741])
                    ("memoryview" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("memoryview" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [51657 51741])
                    ("memoryview" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("memoryview" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [51657 51741])
                    ("memoryview" function
                       (:template 
                          ( ("Policy_" type (:type "class") nil nil))                          
                        :type ("memoryview" type (:type "class") nil nil)
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :type ("pybind11::detail::accessor" type
                                     (:template-specifier 
                                        ( ("Policy_" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [51657 51741]))                  
                :type "class")
                nil [50613 51744])
            ("len" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51818 51827]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [51800 51987])
            ("repr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52005 52014]))                  
                :type ("str" type (:type "class") nil nil))
                nil [51989 52370])
            ("iter" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52393 52404]))                  
                :type ("iterator" type (:type "class") nil nil))
                nil [52372 52556])
            ("begin" function
               (:template 
                  ( ("D" type (:type "class") nil nil))                  
                :type ("iterator" type (:type "class") nil nil)
                :parent "object_api")
                nil [52605 52692])
            ("end" function
               (:template 
                  ( ("D" type (:type "class") nil nil))                  
                :type ("iterator" type (:type "class") nil nil)
                :parent "object_api")
                nil [52693 52783])
            ("[]" function
               (:template 
                  ( ("D" type (:type "class") nil nil))                  
                :type ("item_accessor" type (:type "class") nil nil)
                :arguments 
                  ( ("key" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52846 52857]))                  
                :parent "object_api"
                :operator-flag t)
                nil [52784 52924])
            ("[]" function
               (:template 
                  ( ("D" type (:type "class") nil nil))                  
                :type ("item_accessor" type (:type "class") nil nil)
                :arguments 
                  ( ("key" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [52987 53003]))                  
                :parent "object_api"
                :operator-flag t)
                nil [52925 53057])
            ("attr" function
               (:template 
                  ( ("D" type (:type "class") nil nil))                  
                :type ("obj_attr_accessor" type (:type "class") nil nil)
                :arguments 
                  ( ("key" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53118 53129]))                  
                :parent "object_api")
                nil [53058 53196])
            ("attr" function
               (:template 
                  ( ("D" type (:type "class") nil nil))                  
                :type ("str_attr_accessor" type (:type "class") nil nil)
                :arguments 
                  ( ("key" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [53257 53273]))                  
                :parent "object_api")
                nil [53197 53312])
            ("" function
               (:template 
                  ( ("D" type (:type "class") nil nil))                  
                :type ("args_proxy" type (:type "class") nil nil)
                :parent "object_api"
                :function-pointer t
                :operator-flag t)
                nil [53313 53422])
            ("contains" function
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "bool"
                :arguments 
                  ( ("" variable
                       (:reference 1
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [53496 53500])
                    ("" variable (:type ("item" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53500 53505]))                  
                :parent "object_api")
                nil [53445 53593])
            ("str" function
               (:template 
                  ( ("D" type (:type "class") nil nil))                  
                :type ("pybind11::str" type (:type "class") nil nil)
                :parent "object_api")
                nil [53595 53694])
            ("doc" function
               (:template 
                  ( ("D" type (:type "class") nil nil))                  
                :type ("str_attr_accessor" type (:type "class") nil nil)
                :parent "object_api")
                nil [53696 53790])
            ("get_type" function
               (:template 
                  ( ("D" type (:type "class") nil nil))                  
                :type ("handle" type (:type "class") nil nil)
                :parent "object_api")
                nil [53792 53902])
            ("rich_compare" function
               (:template 
                  ( ("D" type (:type "class") nil nil))                  
                :type "bool"
                :arguments 
                  ( ("other" variable
                       (:reference 1
                        :constant-flag t
                        :type ("object_api" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [53959 53983])
                    ("value" variable (:type "int") (reparse-symbol arg-sub-list) [53984 53994]))                  
                :parent "object_api")
                nil [53904 54163])
            ("PYBIND11_MATH_OPERATOR_UNARY" variable (:constant-flag t) nil [54173 54201])
            ("PYBIND11_MATH_OPERATOR_BINARY" variable (:constant-flag t) nil [54666 54695]))          
      :file "pytypes.h"
      :pointmax 56699
      :fsize 58364
      :lastmodtime '(24269 8311 822259 25000)
      :unmatched-syntax '((semantic-list 56678 . 56698) (symbol 56665 . 56678) (semantic-list 56656 . 56664) (symbol 56643 . 56656) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_InPlaceRshift" 56544 . 56566) ("op" OPERATOR "operator" 56531 . 56539)))) 56501 . 56567) (CONST "const" 56501 . 56567) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_InPlaceRshift" 56544 . 56566) ("op" OPERATOR "operator" 56531 . 56539)))) 56501 . 56567) (OPERATOR "operator" 56501 . 56567) (punctuation ":" 56501 . 56567) (punctuation ":" 56501 . 56567) (punctuation ">" 56501 . 56567) (symbol "D" 56501 . 56567) (punctuation "<" 56501 . 56567) (symbol "object_api" 56501 . 56567) (symbol "object" 56501 . 56567) (punctuation ">" 56501 . 56567) (symbol "D" 56501 . 56567) (TYPENAME "typename" 56501 . 56567) (punctuation "<" 56501 . 56567) (TEMPLATE "template" 56501 . 56567) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_Rshift" 56484 . 56499) ("op" OPERATOR "operator" 56471 . 56479)))) 56441 . 56500) (CONST "const" 56441 . 56500) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_Rshift" 56484 . 56499) ("op" OPERATOR "operator" 56471 . 56479)))) 56441 . 56500) (OPERATOR "operator" 56441 . 56500) (punctuation ":" 56441 . 56500) (punctuation ":" 56441 . 56500) (punctuation ">" 56441 . 56500) (symbol "D" 56441 . 56500) (punctuation "<" 56441 . 56500) (symbol "object_api" 56441 . 56500) (symbol "object" 56441 . 56500) (punctuation ">" 56441 . 56500) (symbol "D" 56441 . 56500) (TYPENAME "typename" 56441 . 56500) (punctuation "<" 56441 . 56500) (TEMPLATE "template" 56441 . 56500) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_InPlaceLshift" 56417 . 56439) ("op" OPERATOR "operator" 56404 . 56412)))) 56374 . 56440) (CONST "const" 56374 . 56440) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_InPlaceLshift" 56417 . 56439) ("op" OPERATOR "operator" 56404 . 56412)))) 56374 . 56440) (OPERATOR "operator" 56374 . 56440) (punctuation ":" 56374 . 56440) (punctuation ":" 56374 . 56440) (punctuation ">" 56374 . 56440) (symbol "D" 56374 . 56440) (punctuation "<" 56374 . 56440) (symbol "object_api" 56374 . 56440) (symbol "object" 56374 . 56440) (punctuation ">" 56374 . 56440) (symbol "D" 56374 . 56440) (TYPENAME "typename" 56374 . 56440) (punctuation "<" 56374 . 56440) (TEMPLATE "template" 56374 . 56440) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_Lshift" 56357 . 56372) ("op" OPERATOR "operator" 56344 . 56352)))) 56314 . 56373) (CONST "const" 56314 . 56373) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_Lshift" 56357 . 56372) ("op" OPERATOR "operator" 56344 . 56352)))) 56314 . 56373) (OPERATOR "operator" 56314 . 56373) (punctuation ":" 56314 . 56373) (punctuation ":" 56314 . 56373) (punctuation ">" 56314 . 56373) (symbol "D" 56314 . 56373) (punctuation "<" 56314 . 56373) (symbol "object_api" 56314 . 56373) (symbol "object" 56314 . 56373) (punctuation ">" 56314 . 56373) (symbol "D" 56314 . 56373) (TYPENAME "typename" 56314 . 56373) (punctuation "<" 56314 . 56373) (TEMPLATE "template" 56314 . 56373) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_InPlaceXor" 56293 . 56312) ("op" OPERATOR "operator" 56280 . 56288)))) 56250 . 56313) (CONST "const" 56250 . 56313) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_InPlaceXor" 56293 . 56312) ("op" OPERATOR "operator" 56280 . 56288)))) 56250 . 56313) (OPERATOR "operator" 56250 . 56313) (punctuation ":" 56250 . 56313) (punctuation ":" 56250 . 56313) (punctuation ">" 56250 . 56313) (symbol "D" 56250 . 56313) (punctuation "<" 56250 . 56313) (symbol "object_api" 56250 . 56313) (symbol "object" 56250 . 56313) (punctuation ">" 56250 . 56313) (symbol "D" 56250 . 56313) (TYPENAME "typename" 56250 . 56313) (punctuation "<" 56250 . 56313) (TEMPLATE "template" 56250 . 56313) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_Xor" 56236 . 56248) ("op" OPERATOR "operator" 56223 . 56231)))) 56193 . 56249) (CONST "const" 56193 . 56249) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_Xor" 56236 . 56248) ("op" OPERATOR "operator" 56223 . 56231)))) 56193 . 56249) (OPERATOR "operator" 56193 . 56249) (punctuation ":" 56193 . 56249) (punctuation ":" 56193 . 56249) (punctuation ">" 56193 . 56249) (symbol "D" 56193 . 56249) (punctuation "<" 56193 . 56249) (symbol "object_api" 56193 . 56249) (symbol "object" 56193 . 56249) (punctuation ">" 56193 . 56249) (symbol "D" 56193 . 56249) (TYPENAME "typename" 56193 . 56249) (punctuation "<" 56193 . 56249) (TEMPLATE "template" 56193 . 56249) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_InPlaceAnd" 56172 . 56191) ("op" OPERATOR "operator" 56159 . 56167)))) 56129 . 56192) (CONST "const" 56129 . 56192) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_InPlaceAnd" 56172 . 56191) ("op" OPERATOR "operator" 56159 . 56167)))) 56129 . 56192) (OPERATOR "operator" 56129 . 56192) (punctuation ":" 56129 . 56192) (punctuation ":" 56129 . 56192) (punctuation ">" 56129 . 56192) (symbol "D" 56129 . 56192) (punctuation "<" 56129 . 56192) (symbol "object_api" 56129 . 56192) (symbol "object" 56129 . 56192) (punctuation ">" 56129 . 56192) (symbol "D" 56129 . 56192) (TYPENAME "typename" 56129 . 56192) (punctuation "<" 56129 . 56192) (TEMPLATE "template" 56129 . 56192) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_And" 56115 . 56127) ("op" OPERATOR "operator" 56102 . 56110)))) 56072 . 56128) (CONST "const" 56072 . 56128) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_And" 56115 . 56127) ("op" OPERATOR "operator" 56102 . 56110)))) 56072 . 56128) (OPERATOR "operator" 56072 . 56128) (punctuation ":" 56072 . 56128) (punctuation ":" 56072 . 56128) (punctuation ">" 56072 . 56128) (symbol "D" 56072 . 56128) (punctuation "<" 56072 . 56128) (symbol "object_api" 56072 . 56128) (symbol "object" 56072 . 56128) (punctuation ">" 56072 . 56128) (symbol "D" 56072 . 56128) (TYPENAME "typename" 56072 . 56128) (punctuation "<" 56072 . 56128) (TEMPLATE "template" 56072 . 56128) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_InPlaceOr" 56052 . 56070) ("op" OPERATOR "operator" 56039 . 56047)))) 56009 . 56071) (CONST "const" 56009 . 56071) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_InPlaceOr" 56052 . 56070) ("op" OPERATOR "operator" 56039 . 56047)))) 56009 . 56071) (OPERATOR "operator" 56009 . 56071) (punctuation ":" 56009 . 56071) (punctuation ":" 56009 . 56071) (punctuation ">" 56009 . 56071) (symbol "D" 56009 . 56071) (punctuation "<" 56009 . 56071) (symbol "object_api" 56009 . 56071) (symbol "object" 56009 . 56071) (punctuation ">" 56009 . 56071) (symbol "D" 56009 . 56071) (TYPENAME "typename" 56009 . 56071) (punctuation "<" 56009 . 56071) (TEMPLATE "template" 56009 . 56071) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_Or" 55996 . 56007) ("op" OPERATOR "operator" 55983 . 55991)))) 55953 . 56008) (CONST "const" 55953 . 56008) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_Or" 55996 . 56007) ("op" OPERATOR "operator" 55983 . 55991)))) 55953 . 56008) (OPERATOR "operator" 55953 . 56008) (punctuation ":" 55953 . 56008) (punctuation ":" 55953 . 56008) (punctuation ">" 55953 . 56008) (symbol "D" 55953 . 56008) (punctuation "<" 55953 . 56008) (symbol "object_api" 55953 . 56008) (symbol "object" 55953 . 56008) (punctuation ">" 55953 . 56008) (symbol "D" 55953 . 56008) (TYPENAME "typename" 55953 . 56008) (punctuation "<" 55953 . 56008) (TEMPLATE "template" 55953 . 56008) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_InPlaceTrueDivide" 55925 . 55951) ("op" OPERATOR "operator" 55912 . 55920)))) 55882 . 55952) (CONST "const" 55882 . 55952) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_InPlaceTrueDivide" 55925 . 55951) ("op" OPERATOR "operator" 55912 . 55920)))) 55882 . 55952) (OPERATOR "operator" 55882 . 55952) (punctuation ":" 55882 . 55952) (punctuation ":" 55882 . 55952) (punctuation ">" 55882 . 55952) (symbol "D" 55882 . 55952) (punctuation "<" 55882 . 55952) (symbol "object_api" 55882 . 55952) (symbol "object" 55882 . 55952) (punctuation ">" 55882 . 55952) (symbol "D" 55882 . 55952) (TYPENAME "typename" 55882 . 55952) (punctuation "<" 55882 . 55952) (TEMPLATE "template" 55882 . 55952) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_TrueDivide" 55861 . 55880) ("op" OPERATOR "operator" 55848 . 55856)))) 55818 . 55881) (CONST "const" 55818 . 55881) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_TrueDivide" 55861 . 55880) ("op" OPERATOR "operator" 55848 . 55856)))) 55818 . 55881) (OPERATOR "operator" 55818 . 55881) (punctuation ":" 55818 . 55881) (punctuation ":" 55818 . 55881) (punctuation ">" 55818 . 55881) (symbol "D" 55818 . 55881) (punctuation "<" 55818 . 55881) (symbol "object_api" 55818 . 55881) (symbol "object" 55818 . 55881) (punctuation ">" 55818 . 55881) (symbol "D" 55818 . 55881) (TYPENAME "typename" 55818 . 55881) (punctuation "<" 55818 . 55881) (TEMPLATE "template" 55818 . 55881) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_InPlaceMultiply" 55792 . 55816) ("op" OPERATOR "operator" 55779 . 55787)))) 55749 . 55817) (CONST "const" 55749 . 55817) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_InPlaceMultiply" 55792 . 55816) ("op" OPERATOR "operator" 55779 . 55787)))) 55749 . 55817) (OPERATOR "operator" 55749 . 55817) (punctuation ":" 55749 . 55817) (punctuation ":" 55749 . 55817) (punctuation ">" 55749 . 55817) (symbol "D" 55749 . 55817) (punctuation "<" 55749 . 55817) (symbol "object_api" 55749 . 55817) (symbol "object" 55749 . 55817) (punctuation ">" 55749 . 55817) (symbol "D" 55749 . 55817) (TYPENAME "typename" 55749 . 55817) (punctuation "<" 55749 . 55817) (TEMPLATE "template" 55749 . 55817) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_Multiply" 55730 . 55747) ("op" OPERATOR "operator" 55717 . 55725)))) 55687 . 55748) (CONST "const" 55687 . 55748) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_Multiply" 55730 . 55747) ("op" OPERATOR "operator" 55717 . 55725)))) 55687 . 55748) (OPERATOR "operator" 55687 . 55748) (punctuation ":" 55687 . 55748) (punctuation ":" 55687 . 55748) (punctuation ">" 55687 . 55748) (symbol "D" 55687 . 55748) (punctuation "<" 55687 . 55748) (symbol "object_api" 55687 . 55748) (symbol "object" 55687 . 55748) (punctuation ">" 55687 . 55748) (symbol "D" 55687 . 55748) (TYPENAME "typename" 55687 . 55748) (punctuation "<" 55687 . 55748) (TEMPLATE "template" 55687 . 55748) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_InPlaceSubtract" 55661 . 55685) ("op" OPERATOR "operator" 55648 . 55656)))) 55618 . 55686) (CONST "const" 55618 . 55686) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_InPlaceSubtract" 55661 . 55685) ("op" OPERATOR "operator" 55648 . 55656)))) 55618 . 55686) (OPERATOR "operator" 55618 . 55686) (punctuation ":" 55618 . 55686) (punctuation ":" 55618 . 55686) (punctuation ">" 55618 . 55686) (symbol "D" 55618 . 55686) (punctuation "<" 55618 . 55686) (symbol "object_api" 55618 . 55686) (symbol "object" 55618 . 55686) (punctuation ">" 55618 . 55686) (symbol "D" 55618 . 55686) (TYPENAME "typename" 55618 . 55686) (punctuation "<" 55618 . 55686) (TEMPLATE "template" 55618 . 55686) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_Subtract" 55599 . 55616) ("op" OPERATOR "operator" 55586 . 55594)))) 55556 . 55617) (CONST "const" 55556 . 55617) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_Subtract" 55599 . 55616) ("op" OPERATOR "operator" 55586 . 55594)))) 55556 . 55617) (OPERATOR "operator" 55556 . 55617) (punctuation ":" 55556 . 55617) (punctuation ":" 55556 . 55617) (punctuation ">" 55556 . 55617) (symbol "D" 55556 . 55617) (punctuation "<" 55556 . 55617) (symbol "object_api" 55556 . 55617) (symbol "object" 55556 . 55617) (punctuation ">" 55556 . 55617) (symbol "D" 55556 . 55617) (TYPENAME "typename" 55556 . 55617) (punctuation "<" 55556 . 55617) (TEMPLATE "template" 55556 . 55617) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_InPlaceAdd" 55535 . 55554) ("op" OPERATOR "operator" 55522 . 55530)))) 55492 . 55555) (CONST "const" 55492 . 55555) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_InPlaceAdd" 55535 . 55554) ("op" OPERATOR "operator" 55522 . 55530)))) 55492 . 55555) (OPERATOR "operator" 55492 . 55555) (punctuation ":" 55492 . 55555) (punctuation ":" 55492 . 55555) (punctuation ">" 55492 . 55555) (symbol "D" 55492 . 55555) (punctuation "<" 55492 . 55555) (symbol "object_api" 55492 . 55555) (symbol "object" 55492 . 55555) (punctuation ">" 55492 . 55555) (symbol "D" 55492 . 55555) (TYPENAME "typename" 55492 . 55555) (punctuation "<" 55492 . 55555) (TEMPLATE "template" 55492 . 55555) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_Add" 55478 . 55490) ("op" OPERATOR "operator" 55465 . 55473)))) 55435 . 55491) (CONST "const" 55435 . 55491) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_Add" 55478 . 55490) ("op" OPERATOR "operator" 55465 . 55473)))) 55435 . 55491) (OPERATOR "operator" 55435 . 55491) (punctuation ":" 55435 . 55491) (punctuation ":" 55435 . 55491) (punctuation ">" 55435 . 55491) (symbol "D" 55435 . 55491) (punctuation "<" 55435 . 55491) (symbol "object_api" 55435 . 55491) (symbol "object" 55435 . 55491) (punctuation ">" 55435 . 55491) (symbol "D" 55435 . 55491) (TYPENAME "typename" 55435 . 55491) (punctuation "<" 55435 . 55491) (TEMPLATE "template" 55435 . 55491) (semantic-list #("{                   \\
        object result = reinterpret_steal<object>(fn(derived().ptr()));        \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_Negative" 55416 . 55433) ("op" OPERATOR "operator" 55403 . 55411)))) 55373 . 55434) (CONST "const" 55373 . 55434) (semantic-list #("()" 0 1 (macros (("fn" symbol "PyNumber_Negative" 55416 . 55433) ("op" OPERATOR "operator" 55403 . 55411)))) 55373 . 55434) (OPERATOR "operator" 55373 . 55434) (punctuation ":" 55373 . 55434) (punctuation ":" 55373 . 55434) (punctuation ">" 55373 . 55434) (symbol "D" 55373 . 55434) (punctuation "<" 55373 . 55434) (symbol "object_api" 55373 . 55434) (symbol "object" 55373 . 55434) (punctuation ">" 55373 . 55434) (symbol "D" 55373 . 55434) (TYPENAME "typename" 55373 . 55434) (punctuation "<" 55373 . 55434) (TEMPLATE "template" 55373 . 55434) (semantic-list #("{                   \\
        object result = reinterpret_steal<object>(fn(derived().ptr()));        \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_Invert" 55356 . 55371) ("op" OPERATOR "operator" 55343 . 55351)))) 55313 . 55372) (CONST "const" 55313 . 55372) (semantic-list #("()" 0 1 (macros (("fn" symbol "PyNumber_Invert" 55356 . 55371) ("op" OPERATOR "operator" 55343 . 55351)))) 55313 . 55372) (OPERATOR "operator" 55313 . 55372) (punctuation ":" 55313 . 55372) (punctuation ":" 55313 . 55372) (punctuation ">" 55313 . 55372) (symbol "D" 55313 . 55372) (punctuation "<" 55313 . 55372) (symbol "object_api" 55313 . 55372) (symbol "object" 55313 . 55372) (punctuation ">" 55313 . 55372) (symbol "D" 55313 . 55372) (TYPENAME "typename" 55313 . 55372) (punctuation "<" 55313 . 55372) (TEMPLATE "template" 55313 . 55372) (punctuation 53499 . 53500) (punctuation 53443 . 53444) (symbol 53442 . 53443) (TYPENAME 53433 . 53441) (punctuation 53432 . 53433) (TEMPLATE 53423 . 53431) (semantic-list 52596 . 52604) (symbol 52581 . 52596) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyMemoryView_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "memoryview" 1 . 5)))) 51657 . 51741) (symbol "PYBIND11_DEPRECATED" 51657 . 51741) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyMemoryView_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "memoryview" 1 . 5)))) 51657 . 51741) (symbol "PYBIND11_DEPRECATED" 51657 . 51741) (EXPLICIT 50660 . 50668) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyObject_CheckBuffer" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "buffer" 1 . 5)))) 50184 . 50245) (symbol "PYBIND11_DEPRECATED" 50184 . 50245) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyObject_CheckBuffer" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "buffer" 1 . 5)))) 50184 . 50245) (symbol "PYBIND11_DEPRECATED" 50184 . 50245) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyCallable_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "function" 1 . 5)))) 49822 . 49881) (symbol "PYBIND11_DEPRECATED" 49822 . 49881) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyCallable_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "function" 1 . 5)))) 49822 . 49881) (symbol "PYBIND11_DEPRECATED" 49822 . 49881) (punctuation 49616 . 49617) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PySet_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "set" 1 . 5)))) 49330 . 49386) (symbol "PYBIND11_DEPRECATED" 49330 . 49386) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PySet_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "set" 1 . 5)))) 49330 . 49386) (symbol "PYBIND11_DEPRECATED" 49330 . 49386) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyDict_Check" 15 . 23) ("Parent" symbol "dict" 7 . 13) ("Name" symbol "kwargs" 1 . 5)))) 49233 . 49284) (symbol "PYBIND11_DEPRECATED" 49233 . 49284) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyDict_Check" 15 . 23) ("Parent" symbol "dict" 7 . 13) ("Name" symbol "kwargs" 1 . 5)))) 49233 . 49284) (symbol "PYBIND11_DEPRECATED" 49233 . 49284) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyTuple_Check" 15 . 23) ("Parent" symbol "tuple" 7 . 13) ("Name" symbol "args" 1 . 5)))) 49149 . 49200) (symbol "PYBIND11_DEPRECATED" 49149 . 49200) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyTuple_Check" 15 . 23) ("Parent" symbol "tuple" 7 . 13) ("Name" symbol "args" 1 . 5)))) 49149 . 49200) (symbol "PYBIND11_DEPRECATED" 49149 . 49200) (punctuation 49015 . 49016) (EXPLICIT 48436 . 48444) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyList_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "list" 1 . 5)))) 48367 . 48431) (symbol "PYBIND11_DEPRECATED" 48367 . 48431) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyList_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "list" 1 . 5)))) 48367 . 48431) (symbol "PYBIND11_DEPRECATED" 48367 . 48431) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PySequence_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "sequence" 1 . 5)))) 47866 . 47925) (symbol "PYBIND11_DEPRECATED" 47866 . 47925) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PySequence_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "sequence" 1 . 5)))) 47866 . 47925) (symbol "PYBIND11_DEPRECATED" 47866 . 47925) (punctuation 47033 . 47034) (punctuation 47032 . 47033) (punctuation 47031 . 47032) (punctuation 47030 . 47031) (EXPLICIT 47010 . 47018) (punctuation 47004 . 47005) (punctuation 47003 . 47004) (punctuation 47002 . 47003) (punctuation 47001 . 47002) (punctuation 47000 . 47001) (symbol 46996 . 47000) (punctuation 46994 . 46995) (punctuation 46993 . 46994) (punctuation 46992 . 46993) (symbol 46973 . 46992) (punctuation 46972 . 46973) (punctuation 46971 . 46972) (symbol 46965 . 46971) (punctuation 46964 . 46965) (symbol 46954 . 46964) (punctuation 46953 . 46954) (punctuation 46952 . 46953) (symbol 46946 . 46952) (punctuation 46944 . 46945) (symbol 46934 . 46943) (TYPENAME 46925 . 46933) (punctuation 46808 . 46809) (punctuation 46807 . 46808) (symbol 46802 . 46807) (punctuation 46801 . 46802) (punctuation 46800 . 46801) (punctuation 46799 . 46800) (punctuation 46798 . 46799) (punctuation 46797 . 46798) (punctuation 46796 . 46797) (punctuation 46795 . 46796) (symbol 46791 . 46795) (punctuation 46790 . 46791) (symbol 46774 . 46790) (punctuation 46773 . 46774) (punctuation 46772 . 46773) (symbol 46766 . 46772) (punctuation 46765 . 46766) (symbol 46759 . 46765) (punctuation 46758 . 46759) (punctuation 46757 . 46758) (symbol 46751 . 46757) (punctuation 46750 . 46751) (symbol 46739 . 46750) (punctuation 46738 . 46739) (punctuation 46737 . 46738) (symbol 46731 . 46737) (punctuation 46729 . 46730) (TYPENAME 46720 . 46728) (punctuation 46704 . 46705) (symbol 46700 . 46704) (punctuation 46698 . 46699) (punctuation 46697 . 46698) (punctuation 46696 . 46697) (TYPENAME 46688 . 46696) (punctuation 46687 . 46688) (TEMPLATE 46678 . 46686) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyDict_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "dict" 1 . 5)))) 46492 . 46549) (symbol "PYBIND11_DEPRECATED" 46492 . 46549) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyDict_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "dict" 1 . 5)))) 46492 . 46549) (symbol "PYBIND11_DEPRECATED" 46492 . 46549) (EXPLICIT 45901 . 45909) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyTuple_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "tuple" 1 . 5)))) 45829 . 45896) (symbol "PYBIND11_DEPRECATED" 45829 . 45896) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyTuple_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "tuple" 1 . 5)))) 45829 . 45896) (symbol "PYBIND11_DEPRECATED" 45829 . 45896) (semantic-list 45502 . 45715) (CONST 45496 . 45501) (semantic-list 45493 . 45495) (punctuation 45492 . 45493) (symbol 45490 . 45491) (OPERATOR 45481 . 45489) (punctuation 45479 . 45480) (symbol 45478 . 45479) (TYPENAME 45469 . 45477) (punctuation 45468 . 45469) (TEMPLATE 45459 . 45467) (semantic-list 44234 . 44297) (symbol 44215 . 44234) (string 44235 . 44296) (EXPLICIT 43922 . 43930) (semantic-list 43722 . 43791) (symbol 43703 . 43722) (string 43723 . 43790) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyCapsule_CheckExact" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "capsule" 1 . 5)))) 43636 . 43698) (symbol "PYBIND11_DEPRECATED" 43636 . 43698) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyCapsule_CheckExact" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "capsule" 1 . 5)))) 43636 . 43698) (symbol "PYBIND11_DEPRECATED" 43636 . 43698) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PySlice_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "slice" 1 . 5)))) 42871 . 42924) (symbol "PYBIND11_DEPRECATED" 42871 . 42924) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PySlice_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "slice" 1 . 5)))) 42871 . 42924) (symbol "PYBIND11_DEPRECATED" 42871 . 42924) (EXPLICIT 42619 . 42627) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyWeakref_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "weakref" 1 . 5)))) 42557 . 42614) (symbol "PYBIND11_DEPRECATED" 42557 . 42614) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyWeakref_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "weakref" 1 . 5)))) 42557 . 42614) (symbol "PYBIND11_DEPRECATED" 42557 . 42614) (semantic-list 42464 . 42508) (CONST 42458 . 42463) (semantic-list 42455 . 42457) (DOUBLE 42449 . 42455) (OPERATOR 42440 . 42448) (semantic-list 42392 . 42435) (CONST 42386 . 42391) (semantic-list 42383 . 42385) (FLOAT 42378 . 42383) (OPERATOR 42369 . 42377) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyFloat_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "float_" 1 . 5)))) 41920 . 41986) (symbol "PYBIND11_DEPRECATED" 41920 . 41986) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyFloat_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "float_" 1 . 5)))) 41920 . 41986) (symbol "PYBIND11_DEPRECATED" 41920 . 41986) (OPERATOR 41625 . 41633) (punctuation 41619 . 41620) (number 41618 . 41619) (punctuation 41616 . 41617) (punctuation 41614 . 41615) (INT 41611 . 41614) (punctuation 41609 . 41610) (symbol 41604 . 41609) (punctuation 41603 . 41604) (punctuation 41602 . 41603) (punctuation 41601 . 41602) (symbol 41600 . 41601) (punctuation 41599 . 41600) (symbol 41588 . 41599) (punctuation 41587 . 41588) (punctuation 41586 . 41587) (symbol 41583 . 41586) (punctuation 41582 . 41583) (symbol 41571 . 41582) (punctuation 41570 . 41571) (punctuation 41569 . 41570) (symbol 41563 . 41569) (punctuation 41547 . 41548) (symbol 41546 . 41547) (TYPENAME 41537 . 41545) (punctuation 41536 . 41537) (TEMPLATE 41527 . 41535) (punctuation 40967 . 40968) (number 40966 . 40967) (punctuation 40964 . 40965) (punctuation 40962 . 40963) (INT 40959 . 40962) (punctuation 40957 . 40958) (symbol 40952 . 40957) (punctuation 40951 . 40952) (punctuation 40950 . 40951) (punctuation 40949 . 40950) (symbol 40948 . 40949) (punctuation 40947 . 40948) (symbol 40936 . 40947) (punctuation 40935 . 40936) (punctuation 40934 . 40935) (symbol 40931 . 40934) (punctuation 40930 . 40931) (symbol 40919 . 40930) (punctuation 40918 . 40919) (punctuation 40917 . 40918) (symbol 40911 . 40917) (punctuation 40895 . 40896) (symbol 40894 . 40895) (TYPENAME 40885 . 40893) (punctuation 40884 . 40885) (TEMPLATE 40875 . 40883) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list 40636 . 40644) (symbol 40623 . 40636) (OPERATOR 41625 . 41633) (punctuation 41619 . 41620) (number 41618 . 41619) (punctuation 41616 . 41617) (punctuation 41614 . 41615) (INT 41611 . 41614) (punctuation 41609 . 41610) (symbol 41604 . 41609) (punctuation 41603 . 41604) (punctuation 41602 . 41603) (punctuation 41601 . 41602) (symbol 41600 . 41601) (punctuation 41599 . 41600) (symbol 41588 . 41599) (punctuation 41587 . 41588) (punctuation 41586 . 41587) (symbol 41583 . 41586) (punctuation 41582 . 41583) (symbol 41571 . 41582) (punctuation 41570 . 41571) (punctuation 41569 . 41570) (symbol 41563 . 41569) (punctuation 41547 . 41548) (symbol 41546 . 41547) (TYPENAME 41537 . 41545) (punctuation 41536 . 41537) (TEMPLATE 41527 . 41535) (punctuation 40967 . 40968) (number 40966 . 40967) (punctuation 40964 . 40965) (punctuation 40962 . 40963) (INT 40959 . 40962) (punctuation 40957 . 40958) (symbol 40952 . 40957) (punctuation 40951 . 40952) (punctuation 40950 . 40951) (punctuation 40949 . 40950) (symbol 40948 . 40949) (punctuation 40947 . 40948) (symbol 40936 . 40947) (punctuation 40935 . 40936) (punctuation 40934 . 40935) (symbol 40931 . 40934) (punctuation 40930 . 40931) (symbol 40919 . 40930) (punctuation 40918 . 40919) (punctuation 40917 . 40918) (symbol 40911 . 40917) (punctuation 40895 . 40896) (symbol 40894 . 40895) (TYPENAME 40885 . 40893) (punctuation 40884 . 40885) (TEMPLATE 40875 . 40883) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (OPERATOR 41625 . 41633) (punctuation 41619 . 41620) (number 41618 . 41619) (punctuation 41616 . 41617) (punctuation 41614 . 41615) (INT 41611 . 41614) (punctuation 41609 . 41610) (symbol 41604 . 41609) (punctuation 41603 . 41604) (punctuation 41602 . 41603) (punctuation 41601 . 41602) (symbol 41600 . 41601) (punctuation 41599 . 41600) (symbol 41588 . 41599) (punctuation 41587 . 41588) (punctuation 41586 . 41587) (symbol 41583 . 41586) (punctuation 41582 . 41583) (symbol 41571 . 41582) (punctuation 41570 . 41571) (punctuation 41569 . 41570) (symbol 41563 . 41569) (punctuation 41547 . 41548) (symbol 41546 . 41547) (TYPENAME 41537 . 41545) (punctuation 41536 . 41537) (TEMPLATE 41527 . 41535) (punctuation 40967 . 40968) (number 40966 . 40967) (punctuation 40964 . 40965) (punctuation 40962 . 40963) (INT 40959 . 40962) (punctuation 40957 . 40958) (symbol 40952 . 40957) (punctuation 40951 . 40952) (punctuation 40950 . 40951) (punctuation 40949 . 40950) (symbol 40948 . 40949) (punctuation 40947 . 40948) (symbol 40936 . 40947) (punctuation 40935 . 40936) (punctuation 40934 . 40935) (symbol 40931 . 40934) (punctuation 40930 . 40931) (symbol 40919 . 40930) (punctuation 40918 . 40919) (punctuation 40917 . 40918) (symbol 40911 . 40917) (punctuation 40895 . 40896) (symbol 40894 . 40895) (TYPENAME 40885 . 40893) (punctuation 40884 . 40885) (TEMPLATE 40875 . 40883) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list 39725 . 39733) (symbol 39710 . 39725) (semantic-list 39363 . 39409) (CONST 39357 . 39362) (semantic-list 39354 . 39356) (BOOL 39350 . 39354) (OPERATOR 39341 . 39349) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyBool_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bool_" 1 . 5)))) 39099 . 39157) (symbol "PYBIND11_DEPRECATED" 39099 . 39157) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyBool_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bool_" 1 . 5)))) 39099 . 39157) (symbol "PYBIND11_DEPRECATED" 39099 . 39157) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "none" 1 . 5)))) 38757 . 38808) (symbol "PYBIND11_DEPRECATED" 38757 . 38808) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "none" 1 . 5)))) 38757 . 38808) (symbol "PYBIND11_DEPRECATED" 38757 . 38808) (OPERATOR 37355 . 37363) (EXPLICIT 37310 . 37318) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_BYTES_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bytes" 1 . 5)))) 36752 . 36804) (symbol "PYBIND11_DEPRECATED" 36752 . 36804) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_BYTES_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bytes" 1 . 5)))) 36752 . 36804) (symbol "PYBIND11_DEPRECATED" 36752 . 36804) (string 36620 . 36622) (OPERATOR 36612 . 36620) (symbol 36608 . 36611) (INLINE 36601 . 36607) (INLINE 36516 . 36522) (punctuation 35966 . 35967) (punctuation 35965 . 35966) (punctuation 35964 . 35965) (punctuation 35963 . 35964) (punctuation 35940 . 35941) (symbol 35936 . 35940) (punctuation 35934 . 35935) (punctuation 35933 . 35934) (punctuation 35932 . 35933) (TYPENAME 35924 . 35932) (punctuation 35923 . 35924) (TEMPLATE 35914 . 35922) (OPERATOR 35353 . 35361) (EXPLICIT 35282 . 35290) (EXPLICIT 35102 . 35110) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "str" 1 . 5)))) 34466 . 34543) (symbol "PYBIND11_DEPRECATED" 34466 . 34543) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "str" 1 . 5)))) 34466 . 34543) (symbol "PYBIND11_DEPRECATED" 34466 . 34543) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterable" 1 . 5)))) 34340 . 34407) (symbol "PYBIND11_DEPRECATED" 34340 . 34407) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterable" 1 . 5)))) 34340 . 34407) (symbol "PYBIND11_DEPRECATED" 34340 . 34407) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyIter_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterator" 1 . 5)))) 32958 . 33013) (symbol "PYBIND11_DEPRECATED" 32958 . 33013) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyIter_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterator" 1 . 5)))) 32958 . 33013) (symbol "PYBIND11_DEPRECATED" 32958 . 33013) (punctuation 32951 . 32952) (punctuation 32950 . 32951) (symbol 32943 . 32949) (CONST 32937 . 32942) (punctuation 32935 . 32936) (symbol 32927 . 32934) (USING 32921 . 32926) (punctuation 32901 . 32902) (symbol 32891 . 32900) (USING 32885 . 32890) (USING 32854 . 32859) (USING 32817 . 32822) (punctuation 32786 . 32787) (symbol 32768 . 32785) (USING 32762 . 32767) (semantic-list 30308 . 30316) (symbol 30295 . 30308) (punctuation 30265 . 30266) (symbol 30246 . 30265) (punctuation 30245 . 30246) (punctuation 30244 . 30245) (symbol 30225 . 30244) (punctuation 30223 . 30224) (symbol 30216 . 30222) (symbol 30196 . 30215) (punctuation 30195 . 30196) (TEMPLATE 30186 . 30194) (punctuation 30160 . 30161) (symbol 30141 . 30160) (punctuation 30140 . 30141) (punctuation 30139 . 30140) (symbol 30120 . 30139) (punctuation 30118 . 30119) (symbol 30111 . 30117) (symbol 30091 . 30110) (punctuation 30090 . 30091) (TEMPLATE 30081 . 30089) (USING 29957 . 29962) (punctuation 29955 . 29956) (symbol 29954 . 29955) (TYPENAME 29945 . 29953) (punctuation 29944 . 29945) (TEMPLATE 29935 . 29943) (USING 29841 . 29846) (punctuation 29839 . 29840) (symbol 29838 . 29839) (TYPENAME 29829 . 29837) (punctuation 29828 . 29829) (TEMPLATE 29819 . 29827) (USING 29748 . 29753) (punctuation 29746 . 29747) (symbol 29745 . 29746) (TYPENAME 29736 . 29744) (punctuation 29735 . 29736) (TEMPLATE 29726 . 29734) (USING 29659 . 29664) (punctuation 29657 . 29658) (symbol 29656 . 29657) (TYPENAME 29647 . 29655) (punctuation 29646 . 29647) (TEMPLATE 29637 . 29645) (USING 29593 . 29598) (punctuation 29591 . 29592) (symbol 29590 . 29591) (TYPENAME 29581 . 29589) (punctuation 29580 . 29581) (TEMPLATE 29571 . 29579) (EXPLICIT 29401 . 29409) (EXPLICIT 29302 . 29310) (USING 28680 . 28685) (USING 28592 . 28597) (USING 28326 . 28331) (USING 28242 . 28247) (semantic-list 28194 . 28213) (symbol 28181 . 28194) (punctuation 27802 . 27803) (DEFAULT 27795 . 27802) (punctuation 27793 . 27794) (semantic-list 27790 . 27792) (symbol 27777 . 27790) (punctuation 27739 . 27740) (symbol 27731 . 27738) (USING 27725 . 27730) (punctuation 27701 . 27702) (symbol 27691 . 27700) (USING 27685 . 27690) (punctuation 27652 . 27653) (symbol 27641 . 27651) (USING 27635 . 27640) (punctuation 27602 . 27603) (symbol 27584 . 27601) (USING 27578 . 27583) (punctuation 26927 . 26928) (symbol 26919 . 26926) (USING 26913 . 26918) (USING 26872 . 26877) (USING 26841 . 26846) (punctuation 26802 . 26803) (symbol 26784 . 26801) (USING 26778 . 26783) (punctuation 26151 . 26152) (symbol 26143 . 26150) (USING 26137 . 26142) (punctuation 26117 . 26118) (symbol 26107 . 26116) (USING 26101 . 26106) (USING 26070 . 26075) (punctuation 26031 . 26032) (symbol 26013 . 26030) (USING 26007 . 26012) (punctuation 25783 . 25784) (semantic-list 25588 . 25607) (symbol 25573 . 25588) (punctuation 24069 . 24070) (DEFAULT 24062 . 24069) (punctuation 24060 . 24061) (semantic-list 24057 . 24059) (symbol 24041 . 24057) (punctuation 24008 . 24009) (symbol 24000 . 24007) (USING 23994 . 23999) (punctuation 23960 . 23961) (symbol 23950 . 23959) (USING 23944 . 23949) (punctuation 23909 . 23910) (symbol 23898 . 23908) (USING 23892 . 23897) (punctuation 23850 . 23851) (symbol 23832 . 23849) (USING 23826 . 23831) (USING 23789 . 23794) (USING 23747 . 23752) (semantic-list 23588 . 23607) (symbol 23575 . 23588) (USING 23035 . 23040) (USING 22473 . 22478) (USING 21903 . 21908) (USING 21459 . 21464) (punctuation 21257 . 21258) (punctuation 21256 . 21257) (CHAR 21251 . 21255) (CONST 21245 . 21250) (punctuation 21243 . 21244) (symbol 21234 . 21242) (USING 21228 . 21233) (USING 21017 . 21022) (semantic-list 20975 . 20994) (symbol 20960 . 20975) (USING 21017 . 21022) (USING 21017 . 21022) (OPERATOR 20573 . 20581) (OPERATOR 20434 . 20442) (EXPLICIT 20425 . 20433) (semantic-list 20349 . 20420) (symbol 20330 . 20349) (string 20350 . 20419) (punctuation 20324 . 20325) (symbol 20318 . 20324) (punctuation 20316 . 20317) (symbol 20314 . 20315) (TYPENAME 20305 . 20313) (punctuation 20304 . 20305) (TEMPLATE 20295 . 20303) (string 20350 . 20419) (semantic-list 20249 . 20290) (CONST 20243 . 20248) (semantic-list 20240 . 20242) (punctuation 20239 . 20240) (BOOL 20235 . 20239) (punctuation 20233 . 20234) (symbol 20228 . 20233) (punctuation 20227 . 20228) (punctuation 20226 . 20227) (punctuation 20225 . 20226) (symbol 20217 . 20225) (punctuation 20216 . 20217) (punctuation 20215 . 20216) (symbol 20198 . 20215) (punctuation 20196 . 20197) (symbol 20195 . 20196) (punctuation 20194 . 20195) (symbol 20187 . 20194) (punctuation 20186 . 20187) (punctuation 20185 . 20186) (symbol 20182 . 20185) (punctuation 20168 . 20169) (punctuation 20167 . 20168) (symbol 20161 . 20166) (punctuation 20160 . 20161) (punctuation 20159 . 20160) (punctuation 20158 . 20159) (symbol 20150 . 20158) (punctuation 20149 . 20150) (punctuation 20148 . 20149) (symbol 20131 . 20148) (punctuation 20129 . 20130) (symbol 20128 . 20129) (punctuation 20127 . 20128) (symbol 20120 . 20127) (punctuation 20119 . 20120) (punctuation 20118 . 20119) (symbol 20115 . 20118) (punctuation 20114 . 20115) (symbol 20103 . 20114) (OPERATOR 20094 . 20102) (EXPLICIT 20085 . 20093) (semantic-list 19994 . 20080) (symbol 19975 . 19994) (string 19995 . 20079) (punctuation 19969 . 19970) (symbol 19963 . 19969) (punctuation 19961 . 19962) (symbol 19959 . 19960) (TYPENAME 19950 . 19958) (punctuation 19949 . 19950) (TEMPLATE 19940 . 19948) (string 19995 . 20079) (semantic-list 19837 . 19934) (punctuation 19835 . 19836) (semantic-list 19823 . 19834) (punctuation 19822 . 19823) (OPERATOR 19814 . 19822) (punctuation 19827 . 19828) (VOID 19809 . 19813) (punctuation 19827 . 19828) (punctuation 19807 . 19808) (symbol 19806 . 19807) (TYPENAME 19797 . 19805) (punctuation 19796 . 19797) (TEMPLATE 19787 . 19795) (punctuation 19827 . 19828) (semantic-list 19704 . 19782) (punctuation 19702 . 19703) (punctuation 19701 . 19702) (semantic-list 19689 . 19700) (punctuation 19688 . 19689) (OPERATOR 19680 . 19688) (punctuation 19693 . 19694) (VOID 19675 . 19679) (punctuation 19693 . 19694) (punctuation 19673 . 19674) (symbol 19672 . 19673) (TYPENAME 19663 . 19671) (punctuation 19662 . 19663) (TEMPLATE 19653 . 19661) (punctuation 19693 . 19694) (semantic-list 19622 . 19647) (punctuation 19620 . 19621) (semantic-list 19600 . 19619) (punctuation 19599 . 19600) (OPERATOR 19591 . 19599) (VOID 19586 . 19590) (semantic-list 19539 . 19581) (punctuation 19537 . 19538) (punctuation 19536 . 19537) (semantic-list 19516 . 19535) (punctuation 19515 . 19516) (OPERATOR 19507 . 19515) (VOID 19502 . 19506) (punctuation 19335 . 19336) (DEFAULT 19328 . 19335) (punctuation 19326 . 19327) (semantic-list 19312 . 19325) (symbol 19304 . 19312) (punctuation 19323 . 19324) (punctuation 19298 . 19299) (DEFAULT 19291 . 19298) (punctuation 19289 . 19290) (semantic-list 19270 . 19288) (symbol 19262 . 19270) (punctuation 19145 . 19146) (symbol 19136 . 19144) (USING 19130 . 19135) (punctuation 18881 . 18882) (punctuation 18854 . 18855) (number 18853 . 18854) (punctuation 18851 . 18852) (punctuation 18849 . 18850) (INT 18846 . 18849) (punctuation 18844 . 18845) (symbol 18839 . 18844) (punctuation 18838 . 18839) (punctuation 18837 . 18838) (punctuation 18836 . 18837) (symbol 18835 . 18836) (punctuation 18834 . 18835) (symbol 18823 . 18834) (punctuation 18822 . 18823) (punctuation 18821 . 18822) (symbol 18810 . 18821) (punctuation 18808 . 18809) (symbol 18807 . 18808) (TYPENAME 18798 . 18806) (punctuation 18797 . 18798) (TEMPLATE 18788 . 18796) (semantic-list 18693 . 18696) (punctuation 18667 . 18668) (punctuation 18666 . 18667) (semantic-list 18658 . 18665) (symbol 18644 . 18658) (punctuation 18662 . 18663) (symbol 18639 . 18643) (punctuation 18662 . 18663) (punctuation 18637 . 18638) (number 18636 . 18637) (punctuation 18634 . 18635) (punctuation 18632 . 18633) (INT 18629 . 18632) (punctuation 18627 . 18628) (symbol 18622 . 18627) (punctuation 18621 . 18622) (punctuation 18620 . 18621) (punctuation 18619 . 18620) (symbol 18618 . 18619) (punctuation 18617 . 18618) (symbol 18606 . 18617) (punctuation 18605 . 18606) (symbol 18594 . 18605) (punctuation 18592 . 18593) (symbol 18591 . 18592) (TYPENAME 18582 . 18590) (punctuation 18581 . 18582) (TEMPLATE 18572 . 18580) (semantic-list 17957 . 17965) (symbol 17942 . 17957) (punctuation 15539 . 15540) (DELETE 15533 . 15539) (punctuation 15531 . 15532) (semantic-list 15518 . 15530) (punctuation 15517 . 15518) (symbol 15511 . 15517) (punctuation 15510 . 15511) (symbol 15500 . 15510) (BOOL 15495 . 15499) (INLINE 15488 . 15494) (punctuation 15486 . 15487) (punctuation 15485 . 15486) (TEMPLATE 15476 . 15484) (punctuation 15390 . 15391) (number 15389 . 15390) (punctuation 15387 . 15388) (punctuation 15385 . 15386) (INT 15382 . 15385) (punctuation 15380 . 15381) (symbol 15375 . 15380) (punctuation 15374 . 15375) (punctuation 15373 . 15374) (punctuation 15372 . 15373) (symbol 15371 . 15372) (punctuation 15369 . 15370) (symbol 15363 . 15369) (punctuation 15362 . 15363) (symbol 15352 . 15362) (punctuation 15351 . 15352) (punctuation 15350 . 15351) (symbol 15347 . 15350) (punctuation 15346 . 15347) (punctuation 15345 . 15346) (symbol 15334 . 15345) (punctuation 15333 . 15334) (punctuation 15332 . 15333) (symbol 15326 . 15332) (punctuation 15324 . 15325) (symbol 15323 . 15324) (TYPENAME 15314 . 15322) (punctuation 15313 . 15314) (TEMPLATE 15304 . 15312) (punctuation 15246 . 15247) (number 15245 . 15246) (punctuation 15243 . 15244) (punctuation 15241 . 15242) (INT 15238 . 15241) (punctuation 15236 . 15237) (symbol 15231 . 15236) (punctuation 15230 . 15231) (punctuation 15229 . 15230) (punctuation 15228 . 15229) (symbol 15227 . 15228) (punctuation 15225 . 15226) (symbol 15219 . 15225) (punctuation 15218 . 15219) (symbol 15208 . 15218) (punctuation 15207 . 15208) (punctuation 15206 . 15207) (symbol 15203 . 15206) (punctuation 15202 . 15203) (symbol 15191 . 15202) (punctuation 15190 . 15191) (punctuation 15189 . 15190) (symbol 15183 . 15189) (punctuation 15181 . 15182) (symbol 15180 . 15181) (TYPENAME 15171 . 15179) (punctuation 15170 . 15171) (TEMPLATE 15161 . 15169) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 13108 . 13116) (symbol 13095 . 13108) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 13051 . 13059) (symbol 13036 . 13051) (punctuation 11622 . 11623) (punctuation 11621 . 11622) (punctuation 11620 . 11621) (semantic-list 11617 . 11619) (symbol 11613 . 11617) (symbol 11611 . 11612) (punctuation 11609 . 11610) (symbol 11608 . 11609) (TYPENAME 11599 . 11607) (punctuation 11598 . 11599) (TEMPLATE 11589 . 11597) (punctuation 11509 . 11510) (punctuation 11508 . 11509) (CONST 11502 . 11507) (semantic-list 11499 . 11501) (symbol 11495 . 11499) (symbol 11493 . 11494) (punctuation 11491 . 11492) (symbol 11490 . 11491) (TYPENAME 11481 . 11489) (punctuation 11480 . 11481) (TEMPLATE 11471 . 11479) (semantic-list 11195 . 11392) (symbol 11186 . 11194) (semantic-list 11169 . 11185) (punctuation 11168 . 11169) (OPERATOR 11160 . 11168) (punctuation 11178 . 11179) (punctuation 11158 . 11159) (symbol 11152 . 11158) (punctuation 11178 . 11179) (semantic-list 10538 . 10585) (symbol 10529 . 10537) (semantic-list 10512 . 10528) (symbol 10506 . 10512) (punctuation 10521 . 10522) (semantic-list 10140 . 10207) (symbol 10121 . 10140) (string 10141 . 10206) (punctuation 10115 . 10116) (DEFAULT 10108 . 10115) (punctuation 10106 . 10107) (semantic-list 10103 . 10105) (symbol 10097 . 10103) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 7002 . 7010) (symbol 6989 . 7002) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 6510 . 6538) (symbol 6491 . 6510) (string 6511 . 6537) (punctuation 4598 . 4599) (punctuation 4597 . 4598) (punctuation 4596 . 4597) (punctuation 4595 . 4596) (semantic-list 4513 . 4569) (symbol 4494 . 4513) (string 4514 . 4568) (punctuation 4488 . 4489) (symbol 4484 . 4488) (punctuation 4482 . 4483) (punctuation 4481 . 4482) (punctuation 4480 . 4481) (TYPENAME 4472 . 4480) (punctuation 4470 . 4471) (symbol 4451 . 4470) (punctuation 4450 . 4451) (punctuation 4449 . 4450) (symbol 4430 . 4449) (punctuation 4428 . 4429) (symbol 4421 . 4427) (symbol 4401 . 4420) (punctuation 4400 . 4401) (TEMPLATE 4391 . 4399) (punctuation 4373 . 4374) (punctuation 4372 . 4373) (punctuation 4371 . 4372) (punctuation 4370 . 4371) (punctuation 4340 . 4341) (symbol 4336 . 4340) (punctuation 4334 . 4335) (punctuation 4333 . 4334) (punctuation 4332 . 4333) (TYPENAME 4324 . 4332) (punctuation 4322 . 4323) (symbol 4303 . 4322) (punctuation 4302 . 4303) (punctuation 4301 . 4302) (symbol 4282 . 4301) (punctuation 4280 . 4281) (symbol 4273 . 4279) (symbol 4253 . 4272) (punctuation 4252 . 4253) (TEMPLATE 4243 . 4251) (punctuation 3657 . 3658) (USING 1406 . 1411) (punctuation 1404 . 1405) (symbol 1403 . 1404) (TYPENAME 1394 . 1402) (punctuation 1393 . 1394) (TEMPLATE 1384 . 1392) (USING 1218 . 1223) (USING 1156 . 1161) (USING 1086 . 1091) (USING 1021 . 1026) (USING 956 . 961) (USING 891 . 896) (semantic-list 547 . 555) (symbol 532 . 547) (semantic-list 395 . 415) (symbol 380 . 395) (symbol 279 . 283) (symbol 272 . 278) (punctuation 271 . 272) (punctuation 49616 . 49617) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PySet_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "set" 1 . 5)))) 49330 . 49386) (symbol "PYBIND11_DEPRECATED" 49330 . 49386) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PySet_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "set" 1 . 5)))) 49330 . 49386) (symbol "PYBIND11_DEPRECATED" 49330 . 49386) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyDict_Check" 15 . 23) ("Parent" symbol "dict" 7 . 13) ("Name" symbol "kwargs" 1 . 5)))) 49233 . 49284) (symbol "PYBIND11_DEPRECATED" 49233 . 49284) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyDict_Check" 15 . 23) ("Parent" symbol "dict" 7 . 13) ("Name" symbol "kwargs" 1 . 5)))) 49233 . 49284) (symbol "PYBIND11_DEPRECATED" 49233 . 49284) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyTuple_Check" 15 . 23) ("Parent" symbol "tuple" 7 . 13) ("Name" symbol "args" 1 . 5)))) 49149 . 49200) (symbol "PYBIND11_DEPRECATED" 49149 . 49200) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyTuple_Check" 15 . 23) ("Parent" symbol "tuple" 7 . 13) ("Name" symbol "args" 1 . 5)))) 49149 . 49200) (symbol "PYBIND11_DEPRECATED" 49149 . 49200) (punctuation 49015 . 49016) (EXPLICIT 48436 . 48444) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyList_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "list" 1 . 5)))) 48367 . 48431) (symbol "PYBIND11_DEPRECATED" 48367 . 48431) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyList_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "list" 1 . 5)))) 48367 . 48431) (symbol "PYBIND11_DEPRECATED" 48367 . 48431) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PySequence_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "sequence" 1 . 5)))) 47866 . 47925) (symbol "PYBIND11_DEPRECATED" 47866 . 47925) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PySequence_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "sequence" 1 . 5)))) 47866 . 47925) (symbol "PYBIND11_DEPRECATED" 47866 . 47925) (punctuation 47033 . 47034) (punctuation 47032 . 47033) (punctuation 47031 . 47032) (punctuation 47030 . 47031) (EXPLICIT 47010 . 47018) (punctuation 47004 . 47005) (punctuation 47003 . 47004) (punctuation 47002 . 47003) (punctuation 47001 . 47002) (punctuation 47000 . 47001) (symbol 46996 . 47000) (punctuation 46994 . 46995) (punctuation 46993 . 46994) (punctuation 46992 . 46993) (symbol 46973 . 46992) (punctuation 46972 . 46973) (punctuation 46971 . 46972) (symbol 46965 . 46971) (punctuation 46964 . 46965) (symbol 46954 . 46964) (punctuation 46953 . 46954) (punctuation 46952 . 46953) (symbol 46946 . 46952) (punctuation 46944 . 46945) (symbol 46934 . 46943) (TYPENAME 46925 . 46933) (punctuation 46808 . 46809) (punctuation 46807 . 46808) (symbol 46802 . 46807) (punctuation 46801 . 46802) (punctuation 46800 . 46801) (punctuation 46799 . 46800) (punctuation 46798 . 46799) (punctuation 46797 . 46798) (punctuation 46796 . 46797) (punctuation 46795 . 46796) (symbol 46791 . 46795) (punctuation 46790 . 46791) (symbol 46774 . 46790) (punctuation 46773 . 46774) (punctuation 46772 . 46773) (symbol 46766 . 46772) (punctuation 46765 . 46766) (symbol 46759 . 46765) (punctuation 46758 . 46759) (punctuation 46757 . 46758) (symbol 46751 . 46757) (punctuation 46750 . 46751) (symbol 46739 . 46750) (punctuation 46738 . 46739) (punctuation 46737 . 46738) (symbol 46731 . 46737) (punctuation 46729 . 46730) (TYPENAME 46720 . 46728) (punctuation 46704 . 46705) (symbol 46700 . 46704) (punctuation 46698 . 46699) (punctuation 46697 . 46698) (punctuation 46696 . 46697) (TYPENAME 46688 . 46696) (punctuation 46687 . 46688) (TEMPLATE 46678 . 46686) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyDict_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "dict" 1 . 5)))) 46492 . 46549) (symbol "PYBIND11_DEPRECATED" 46492 . 46549) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyDict_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "dict" 1 . 5)))) 46492 . 46549) (symbol "PYBIND11_DEPRECATED" 46492 . 46549) (EXPLICIT 45901 . 45909) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyTuple_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "tuple" 1 . 5)))) 45829 . 45896) (symbol "PYBIND11_DEPRECATED" 45829 . 45896) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyTuple_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "tuple" 1 . 5)))) 45829 . 45896) (symbol "PYBIND11_DEPRECATED" 45829 . 45896) (semantic-list 45502 . 45715) (CONST 45496 . 45501) (semantic-list 45493 . 45495) (punctuation 45492 . 45493) (symbol 45490 . 45491) (OPERATOR 45481 . 45489) (punctuation 45479 . 45480) (symbol 45478 . 45479) (TYPENAME 45469 . 45477) (punctuation 45468 . 45469) (TEMPLATE 45459 . 45467) (semantic-list 44234 . 44297) (symbol 44215 . 44234) (string 44235 . 44296) (EXPLICIT 43922 . 43930) (semantic-list 43722 . 43791) (symbol 43703 . 43722) (string 43723 . 43790) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyCapsule_CheckExact" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "capsule" 1 . 5)))) 43636 . 43698) (symbol "PYBIND11_DEPRECATED" 43636 . 43698) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyCapsule_CheckExact" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "capsule" 1 . 5)))) 43636 . 43698) (symbol "PYBIND11_DEPRECATED" 43636 . 43698) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PySlice_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "slice" 1 . 5)))) 42871 . 42924) (symbol "PYBIND11_DEPRECATED" 42871 . 42924) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PySlice_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "slice" 1 . 5)))) 42871 . 42924) (symbol "PYBIND11_DEPRECATED" 42871 . 42924) (EXPLICIT 42619 . 42627) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyWeakref_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "weakref" 1 . 5)))) 42557 . 42614) (symbol "PYBIND11_DEPRECATED" 42557 . 42614) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyWeakref_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "weakref" 1 . 5)))) 42557 . 42614) (symbol "PYBIND11_DEPRECATED" 42557 . 42614) (semantic-list 42464 . 42508) (CONST 42458 . 42463) (semantic-list 42455 . 42457) (DOUBLE 42449 . 42455) (OPERATOR 42440 . 42448) (semantic-list 42392 . 42435) (CONST 42386 . 42391) (semantic-list 42383 . 42385) (FLOAT 42378 . 42383) (OPERATOR 42369 . 42377) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyFloat_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "float_" 1 . 5)))) 41920 . 41986) (symbol "PYBIND11_DEPRECATED" 41920 . 41986) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyFloat_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "float_" 1 . 5)))) 41920 . 41986) (symbol "PYBIND11_DEPRECATED" 41920 . 41986) (OPERATOR 41625 . 41633) (punctuation 41619 . 41620) (number 41618 . 41619) (punctuation 41616 . 41617) (punctuation 41614 . 41615) (INT 41611 . 41614) (punctuation 41609 . 41610) (symbol 41604 . 41609) (punctuation 41603 . 41604) (punctuation 41602 . 41603) (punctuation 41601 . 41602) (symbol 41600 . 41601) (punctuation 41599 . 41600) (symbol 41588 . 41599) (punctuation 41587 . 41588) (punctuation 41586 . 41587) (symbol 41583 . 41586) (punctuation 41582 . 41583) (symbol 41571 . 41582) (punctuation 41570 . 41571) (punctuation 41569 . 41570) (symbol 41563 . 41569) (punctuation 41547 . 41548) (symbol 41546 . 41547) (TYPENAME 41537 . 41545) (punctuation 41536 . 41537) (TEMPLATE 41527 . 41535) (punctuation 40967 . 40968) (number 40966 . 40967) (punctuation 40964 . 40965) (punctuation 40962 . 40963) (INT 40959 . 40962) (punctuation 40957 . 40958) (symbol 40952 . 40957) (punctuation 40951 . 40952) (punctuation 40950 . 40951) (punctuation 40949 . 40950) (symbol 40948 . 40949) (punctuation 40947 . 40948) (symbol 40936 . 40947) (punctuation 40935 . 40936) (punctuation 40934 . 40935) (symbol 40931 . 40934) (punctuation 40930 . 40931) (symbol 40919 . 40930) (punctuation 40918 . 40919) (punctuation 40917 . 40918) (symbol 40911 . 40917) (punctuation 40895 . 40896) (symbol 40894 . 40895) (TYPENAME 40885 . 40893) (punctuation 40884 . 40885) (TEMPLATE 40875 . 40883) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list 40636 . 40644) (symbol 40623 . 40636) (OPERATOR 41625 . 41633) (punctuation 41619 . 41620) (number 41618 . 41619) (punctuation 41616 . 41617) (punctuation 41614 . 41615) (INT 41611 . 41614) (punctuation 41609 . 41610) (symbol 41604 . 41609) (punctuation 41603 . 41604) (punctuation 41602 . 41603) (punctuation 41601 . 41602) (symbol 41600 . 41601) (punctuation 41599 . 41600) (symbol 41588 . 41599) (punctuation 41587 . 41588) (punctuation 41586 . 41587) (symbol 41583 . 41586) (punctuation 41582 . 41583) (symbol 41571 . 41582) (punctuation 41570 . 41571) (punctuation 41569 . 41570) (symbol 41563 . 41569) (punctuation 41547 . 41548) (symbol 41546 . 41547) (TYPENAME 41537 . 41545) (punctuation 41536 . 41537) (TEMPLATE 41527 . 41535) (punctuation 40967 . 40968) (number 40966 . 40967) (punctuation 40964 . 40965) (punctuation 40962 . 40963) (INT 40959 . 40962) (punctuation 40957 . 40958) (symbol 40952 . 40957) (punctuation 40951 . 40952) (punctuation 40950 . 40951) (punctuation 40949 . 40950) (symbol 40948 . 40949) (punctuation 40947 . 40948) (symbol 40936 . 40947) (punctuation 40935 . 40936) (punctuation 40934 . 40935) (symbol 40931 . 40934) (punctuation 40930 . 40931) (symbol 40919 . 40930) (punctuation 40918 . 40919) (punctuation 40917 . 40918) (symbol 40911 . 40917) (punctuation 40895 . 40896) (symbol 40894 . 40895) (TYPENAME 40885 . 40893) (punctuation 40884 . 40885) (TEMPLATE 40875 . 40883) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (OPERATOR 41625 . 41633) (punctuation 41619 . 41620) (number 41618 . 41619) (punctuation 41616 . 41617) (punctuation 41614 . 41615) (INT 41611 . 41614) (punctuation 41609 . 41610) (symbol 41604 . 41609) (punctuation 41603 . 41604) (punctuation 41602 . 41603) (punctuation 41601 . 41602) (symbol 41600 . 41601) (punctuation 41599 . 41600) (symbol 41588 . 41599) (punctuation 41587 . 41588) (punctuation 41586 . 41587) (symbol 41583 . 41586) (punctuation 41582 . 41583) (symbol 41571 . 41582) (punctuation 41570 . 41571) (punctuation 41569 . 41570) (symbol 41563 . 41569) (punctuation 41547 . 41548) (symbol 41546 . 41547) (TYPENAME 41537 . 41545) (punctuation 41536 . 41537) (TEMPLATE 41527 . 41535) (punctuation 40967 . 40968) (number 40966 . 40967) (punctuation 40964 . 40965) (punctuation 40962 . 40963) (INT 40959 . 40962) (punctuation 40957 . 40958) (symbol 40952 . 40957) (punctuation 40951 . 40952) (punctuation 40950 . 40951) (punctuation 40949 . 40950) (symbol 40948 . 40949) (punctuation 40947 . 40948) (symbol 40936 . 40947) (punctuation 40935 . 40936) (punctuation 40934 . 40935) (symbol 40931 . 40934) (punctuation 40930 . 40931) (symbol 40919 . 40930) (punctuation 40918 . 40919) (punctuation 40917 . 40918) (symbol 40911 . 40917) (punctuation 40895 . 40896) (symbol 40894 . 40895) (TYPENAME 40885 . 40893) (punctuation 40884 . 40885) (TEMPLATE 40875 . 40883) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list 39725 . 39733) (symbol 39710 . 39725) (semantic-list 39363 . 39409) (CONST 39357 . 39362) (semantic-list 39354 . 39356) (BOOL 39350 . 39354) (OPERATOR 39341 . 39349) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyBool_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bool_" 1 . 5)))) 39099 . 39157) (symbol "PYBIND11_DEPRECATED" 39099 . 39157) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyBool_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bool_" 1 . 5)))) 39099 . 39157) (symbol "PYBIND11_DEPRECATED" 39099 . 39157) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "none" 1 . 5)))) 38757 . 38808) (symbol "PYBIND11_DEPRECATED" 38757 . 38808) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "none" 1 . 5)))) 38757 . 38808) (symbol "PYBIND11_DEPRECATED" 38757 . 38808) (OPERATOR 37355 . 37363) (EXPLICIT 37310 . 37318) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_BYTES_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bytes" 1 . 5)))) 36752 . 36804) (symbol "PYBIND11_DEPRECATED" 36752 . 36804) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_BYTES_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bytes" 1 . 5)))) 36752 . 36804) (symbol "PYBIND11_DEPRECATED" 36752 . 36804) (string 36620 . 36622) (OPERATOR 36612 . 36620) (symbol 36608 . 36611) (INLINE 36601 . 36607) (INLINE 36516 . 36522) (punctuation 35966 . 35967) (punctuation 35965 . 35966) (punctuation 35964 . 35965) (punctuation 35963 . 35964) (punctuation 35940 . 35941) (symbol 35936 . 35940) (punctuation 35934 . 35935) (punctuation 35933 . 35934) (punctuation 35932 . 35933) (TYPENAME 35924 . 35932) (punctuation 35923 . 35924) (TEMPLATE 35914 . 35922) (OPERATOR 35353 . 35361) (EXPLICIT 35282 . 35290) (EXPLICIT 35102 . 35110) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "str" 1 . 5)))) 34466 . 34543) (symbol "PYBIND11_DEPRECATED" 34466 . 34543) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "str" 1 . 5)))) 34466 . 34543) (symbol "PYBIND11_DEPRECATED" 34466 . 34543) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterable" 1 . 5)))) 34340 . 34407) (symbol "PYBIND11_DEPRECATED" 34340 . 34407) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterable" 1 . 5)))) 34340 . 34407) (symbol "PYBIND11_DEPRECATED" 34340 . 34407) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyIter_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterator" 1 . 5)))) 32958 . 33013) (symbol "PYBIND11_DEPRECATED" 32958 . 33013) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyIter_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterator" 1 . 5)))) 32958 . 33013) (symbol "PYBIND11_DEPRECATED" 32958 . 33013) (punctuation 32951 . 32952) (punctuation 32950 . 32951) (symbol 32943 . 32949) (CONST 32937 . 32942) (punctuation 32935 . 32936) (symbol 32927 . 32934) (USING 32921 . 32926) (punctuation 32901 . 32902) (symbol 32891 . 32900) (USING 32885 . 32890) (USING 32854 . 32859) (USING 32817 . 32822) (punctuation 32786 . 32787) (symbol 32768 . 32785) (USING 32762 . 32767) (semantic-list 30308 . 30316) (symbol 30295 . 30308) (punctuation 30265 . 30266) (symbol 30246 . 30265) (punctuation 30245 . 30246) (punctuation 30244 . 30245) (symbol 30225 . 30244) (punctuation 30223 . 30224) (symbol 30216 . 30222) (symbol 30196 . 30215) (punctuation 30195 . 30196) (TEMPLATE 30186 . 30194) (punctuation 30160 . 30161) (symbol 30141 . 30160) (punctuation 30140 . 30141) (punctuation 30139 . 30140) (symbol 30120 . 30139) (punctuation 30118 . 30119) (symbol 30111 . 30117) (symbol 30091 . 30110) (punctuation 30090 . 30091) (TEMPLATE 30081 . 30089) (USING 29957 . 29962) (punctuation 29955 . 29956) (symbol 29954 . 29955) (TYPENAME 29945 . 29953) (punctuation 29944 . 29945) (TEMPLATE 29935 . 29943) (USING 29841 . 29846) (punctuation 29839 . 29840) (symbol 29838 . 29839) (TYPENAME 29829 . 29837) (punctuation 29828 . 29829) (TEMPLATE 29819 . 29827) (USING 29748 . 29753) (punctuation 29746 . 29747) (symbol 29745 . 29746) (TYPENAME 29736 . 29744) (punctuation 29735 . 29736) (TEMPLATE 29726 . 29734) (USING 29659 . 29664) (punctuation 29657 . 29658) (symbol 29656 . 29657) (TYPENAME 29647 . 29655) (punctuation 29646 . 29647) (TEMPLATE 29637 . 29645) (USING 29593 . 29598) (punctuation 29591 . 29592) (symbol 29590 . 29591) (TYPENAME 29581 . 29589) (punctuation 29580 . 29581) (TEMPLATE 29571 . 29579) (EXPLICIT 29401 . 29409) (EXPLICIT 29302 . 29310) (USING 28680 . 28685) (USING 28592 . 28597) (USING 28326 . 28331) (USING 28242 . 28247) (semantic-list 28194 . 28213) (symbol 28181 . 28194) (punctuation 27802 . 27803) (DEFAULT 27795 . 27802) (punctuation 27793 . 27794) (semantic-list 27790 . 27792) (symbol 27777 . 27790) (punctuation 27739 . 27740) (symbol 27731 . 27738) (USING 27725 . 27730) (punctuation 27701 . 27702) (symbol 27691 . 27700) (USING 27685 . 27690) (punctuation 27652 . 27653) (symbol 27641 . 27651) (USING 27635 . 27640) (punctuation 27602 . 27603) (symbol 27584 . 27601) (USING 27578 . 27583) (punctuation 26927 . 26928) (symbol 26919 . 26926) (USING 26913 . 26918) (USING 26872 . 26877) (USING 26841 . 26846) (punctuation 26802 . 26803) (symbol 26784 . 26801) (USING 26778 . 26783) (punctuation 26151 . 26152) (symbol 26143 . 26150) (USING 26137 . 26142) (punctuation 26117 . 26118) (symbol 26107 . 26116) (USING 26101 . 26106) (USING 26070 . 26075) (punctuation 26031 . 26032) (symbol 26013 . 26030) (USING 26007 . 26012) (punctuation 25783 . 25784) (semantic-list 25588 . 25607) (symbol 25573 . 25588) (punctuation 24069 . 24070) (DEFAULT 24062 . 24069) (punctuation 24060 . 24061) (semantic-list 24057 . 24059) (symbol 24041 . 24057) (punctuation 24008 . 24009) (symbol 24000 . 24007) (USING 23994 . 23999) (punctuation 23960 . 23961) (symbol 23950 . 23959) (USING 23944 . 23949) (punctuation 23909 . 23910) (symbol 23898 . 23908) (USING 23892 . 23897) (punctuation 23850 . 23851) (symbol 23832 . 23849) (USING 23826 . 23831) (USING 23789 . 23794) (USING 23747 . 23752) (semantic-list 23588 . 23607) (symbol 23575 . 23588) (USING 23035 . 23040) (USING 22473 . 22478) (USING 21903 . 21908) (USING 21459 . 21464) (punctuation 21257 . 21258) (punctuation 21256 . 21257) (CHAR 21251 . 21255) (CONST 21245 . 21250) (punctuation 21243 . 21244) (symbol 21234 . 21242) (USING 21228 . 21233) (USING 21017 . 21022) (semantic-list 20975 . 20994) (symbol 20960 . 20975) (USING 21017 . 21022) (USING 21017 . 21022) (OPERATOR 20573 . 20581) (OPERATOR 20434 . 20442) (EXPLICIT 20425 . 20433) (semantic-list 20349 . 20420) (symbol 20330 . 20349) (string 20350 . 20419) (punctuation 20324 . 20325) (symbol 20318 . 20324) (punctuation 20316 . 20317) (symbol 20314 . 20315) (TYPENAME 20305 . 20313) (punctuation 20304 . 20305) (TEMPLATE 20295 . 20303) (string 20350 . 20419) (semantic-list 20249 . 20290) (CONST 20243 . 20248) (semantic-list 20240 . 20242) (punctuation 20239 . 20240) (BOOL 20235 . 20239) (punctuation 20233 . 20234) (symbol 20228 . 20233) (punctuation 20227 . 20228) (punctuation 20226 . 20227) (punctuation 20225 . 20226) (symbol 20217 . 20225) (punctuation 20216 . 20217) (punctuation 20215 . 20216) (symbol 20198 . 20215) (punctuation 20196 . 20197) (symbol 20195 . 20196) (punctuation 20194 . 20195) (symbol 20187 . 20194) (punctuation 20186 . 20187) (punctuation 20185 . 20186) (symbol 20182 . 20185) (punctuation 20168 . 20169) (punctuation 20167 . 20168) (symbol 20161 . 20166) (punctuation 20160 . 20161) (punctuation 20159 . 20160) (punctuation 20158 . 20159) (symbol 20150 . 20158) (punctuation 20149 . 20150) (punctuation 20148 . 20149) (symbol 20131 . 20148) (punctuation 20129 . 20130) (symbol 20128 . 20129) (punctuation 20127 . 20128) (symbol 20120 . 20127) (punctuation 20119 . 20120) (punctuation 20118 . 20119) (symbol 20115 . 20118) (punctuation 20114 . 20115) (symbol 20103 . 20114) (OPERATOR 20094 . 20102) (EXPLICIT 20085 . 20093) (semantic-list 19994 . 20080) (symbol 19975 . 19994) (string 19995 . 20079) (punctuation 19969 . 19970) (symbol 19963 . 19969) (punctuation 19961 . 19962) (symbol 19959 . 19960) (TYPENAME 19950 . 19958) (punctuation 19949 . 19950) (TEMPLATE 19940 . 19948) (string 19995 . 20079) (semantic-list 19837 . 19934) (punctuation 19835 . 19836) (semantic-list 19823 . 19834) (punctuation 19822 . 19823) (OPERATOR 19814 . 19822) (punctuation 19827 . 19828) (VOID 19809 . 19813) (punctuation 19827 . 19828) (punctuation 19807 . 19808) (symbol 19806 . 19807) (TYPENAME 19797 . 19805) (punctuation 19796 . 19797) (TEMPLATE 19787 . 19795) (punctuation 19827 . 19828) (semantic-list 19704 . 19782) (punctuation 19702 . 19703) (punctuation 19701 . 19702) (semantic-list 19689 . 19700) (punctuation 19688 . 19689) (OPERATOR 19680 . 19688) (punctuation 19693 . 19694) (VOID 19675 . 19679) (punctuation 19693 . 19694) (punctuation 19673 . 19674) (symbol 19672 . 19673) (TYPENAME 19663 . 19671) (punctuation 19662 . 19663) (TEMPLATE 19653 . 19661) (punctuation 19693 . 19694) (semantic-list 19622 . 19647) (punctuation 19620 . 19621) (semantic-list 19600 . 19619) (punctuation 19599 . 19600) (OPERATOR 19591 . 19599) (VOID 19586 . 19590) (semantic-list 19539 . 19581) (punctuation 19537 . 19538) (punctuation 19536 . 19537) (semantic-list 19516 . 19535) (punctuation 19515 . 19516) (OPERATOR 19507 . 19515) (VOID 19502 . 19506) (punctuation 19335 . 19336) (DEFAULT 19328 . 19335) (punctuation 19326 . 19327) (semantic-list 19312 . 19325) (symbol 19304 . 19312) (punctuation 19323 . 19324) (punctuation 19298 . 19299) (DEFAULT 19291 . 19298) (punctuation 19289 . 19290) (semantic-list 19270 . 19288) (symbol 19262 . 19270) (punctuation 19145 . 19146) (symbol 19136 . 19144) (USING 19130 . 19135) (punctuation 18881 . 18882) (punctuation 18854 . 18855) (number 18853 . 18854) (punctuation 18851 . 18852) (punctuation 18849 . 18850) (INT 18846 . 18849) (punctuation 18844 . 18845) (symbol 18839 . 18844) (punctuation 18838 . 18839) (punctuation 18837 . 18838) (punctuation 18836 . 18837) (symbol 18835 . 18836) (punctuation 18834 . 18835) (symbol 18823 . 18834) (punctuation 18822 . 18823) (punctuation 18821 . 18822) (symbol 18810 . 18821) (punctuation 18808 . 18809) (symbol 18807 . 18808) (TYPENAME 18798 . 18806) (punctuation 18797 . 18798) (TEMPLATE 18788 . 18796) (semantic-list 18693 . 18696) (punctuation 18667 . 18668) (punctuation 18666 . 18667) (semantic-list 18658 . 18665) (symbol 18644 . 18658) (punctuation 18662 . 18663) (symbol 18639 . 18643) (punctuation 18662 . 18663) (punctuation 18637 . 18638) (number 18636 . 18637) (punctuation 18634 . 18635) (punctuation 18632 . 18633) (INT 18629 . 18632) (punctuation 18627 . 18628) (symbol 18622 . 18627) (punctuation 18621 . 18622) (punctuation 18620 . 18621) (punctuation 18619 . 18620) (symbol 18618 . 18619) (punctuation 18617 . 18618) (symbol 18606 . 18617) (punctuation 18605 . 18606) (symbol 18594 . 18605) (punctuation 18592 . 18593) (symbol 18591 . 18592) (TYPENAME 18582 . 18590) (punctuation 18581 . 18582) (TEMPLATE 18572 . 18580) (semantic-list 17957 . 17965) (symbol 17942 . 17957) (punctuation 15539 . 15540) (DELETE 15533 . 15539) (punctuation 15531 . 15532) (semantic-list 15518 . 15530) (punctuation 15517 . 15518) (symbol 15511 . 15517) (punctuation 15510 . 15511) (symbol 15500 . 15510) (BOOL 15495 . 15499) (INLINE 15488 . 15494) (punctuation 15486 . 15487) (punctuation 15485 . 15486) (TEMPLATE 15476 . 15484) (punctuation 15390 . 15391) (number 15389 . 15390) (punctuation 15387 . 15388) (punctuation 15385 . 15386) (INT 15382 . 15385) (punctuation 15380 . 15381) (symbol 15375 . 15380) (punctuation 15374 . 15375) (punctuation 15373 . 15374) (punctuation 15372 . 15373) (symbol 15371 . 15372) (punctuation 15369 . 15370) (symbol 15363 . 15369) (punctuation 15362 . 15363) (symbol 15352 . 15362) (punctuation 15351 . 15352) (punctuation 15350 . 15351) (symbol 15347 . 15350) (punctuation 15346 . 15347) (punctuation 15345 . 15346) (symbol 15334 . 15345) (punctuation 15333 . 15334) (punctuation 15332 . 15333) (symbol 15326 . 15332) (punctuation 15324 . 15325) (symbol 15323 . 15324) (TYPENAME 15314 . 15322) (punctuation 15313 . 15314) (TEMPLATE 15304 . 15312) (punctuation 15246 . 15247) (number 15245 . 15246) (punctuation 15243 . 15244) (punctuation 15241 . 15242) (INT 15238 . 15241) (punctuation 15236 . 15237) (symbol 15231 . 15236) (punctuation 15230 . 15231) (punctuation 15229 . 15230) (punctuation 15228 . 15229) (symbol 15227 . 15228) (punctuation 15225 . 15226) (symbol 15219 . 15225) (punctuation 15218 . 15219) (symbol 15208 . 15218) (punctuation 15207 . 15208) (punctuation 15206 . 15207) (symbol 15203 . 15206) (punctuation 15202 . 15203) (symbol 15191 . 15202) (punctuation 15190 . 15191) (punctuation 15189 . 15190) (symbol 15183 . 15189) (punctuation 15181 . 15182) (symbol 15180 . 15181) (TYPENAME 15171 . 15179) (punctuation 15170 . 15171) (TEMPLATE 15161 . 15169) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 13108 . 13116) (symbol 13095 . 13108) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 13051 . 13059) (symbol 13036 . 13051) (punctuation 11622 . 11623) (punctuation 11621 . 11622) (punctuation 11620 . 11621) (semantic-list 11617 . 11619) (symbol 11613 . 11617) (symbol 11611 . 11612) (punctuation 11609 . 11610) (symbol 11608 . 11609) (TYPENAME 11599 . 11607) (punctuation 11598 . 11599) (TEMPLATE 11589 . 11597) (punctuation 11509 . 11510) (punctuation 11508 . 11509) (CONST 11502 . 11507) (semantic-list 11499 . 11501) (symbol 11495 . 11499) (symbol 11493 . 11494) (punctuation 11491 . 11492) (symbol 11490 . 11491) (TYPENAME 11481 . 11489) (punctuation 11480 . 11481) (TEMPLATE 11471 . 11479) (semantic-list 11195 . 11392) (symbol 11186 . 11194) (semantic-list 11169 . 11185) (punctuation 11168 . 11169) (OPERATOR 11160 . 11168) (punctuation 11178 . 11179) (punctuation 11158 . 11159) (symbol 11152 . 11158) (punctuation 11178 . 11179) (semantic-list 10538 . 10585) (symbol 10529 . 10537) (semantic-list 10512 . 10528) (symbol 10506 . 10512) (punctuation 10521 . 10522) (semantic-list 10140 . 10207) (symbol 10121 . 10140) (string 10141 . 10206) (punctuation 10115 . 10116) (DEFAULT 10108 . 10115) (punctuation 10106 . 10107) (semantic-list 10103 . 10105) (symbol 10097 . 10103) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 7002 . 7010) (symbol 6989 . 7002) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 6510 . 6538) (symbol 6491 . 6510) (string 6511 . 6537) (punctuation 4598 . 4599) (punctuation 4597 . 4598) (punctuation 4596 . 4597) (punctuation 4595 . 4596) (semantic-list 4513 . 4569) (symbol 4494 . 4513) (string 4514 . 4568) (punctuation 4488 . 4489) (symbol 4484 . 4488) (punctuation 4482 . 4483) (punctuation 4481 . 4482) (punctuation 4480 . 4481) (TYPENAME 4472 . 4480) (punctuation 4470 . 4471) (symbol 4451 . 4470) (punctuation 4450 . 4451) (punctuation 4449 . 4450) (symbol 4430 . 4449) (punctuation 4428 . 4429) (symbol 4421 . 4427) (symbol 4401 . 4420) (punctuation 4400 . 4401) (TEMPLATE 4391 . 4399) (punctuation 4373 . 4374) (punctuation 4372 . 4373) (punctuation 4371 . 4372) (punctuation 4370 . 4371) (punctuation 4340 . 4341) (symbol 4336 . 4340) (punctuation 4334 . 4335) (punctuation 4333 . 4334) (punctuation 4332 . 4333) (TYPENAME 4324 . 4332) (punctuation 4322 . 4323) (symbol 4303 . 4322) (punctuation 4302 . 4303) (punctuation 4301 . 4302) (symbol 4282 . 4301) (punctuation 4280 . 4281) (symbol 4273 . 4279) (symbol 4253 . 4272) (punctuation 4252 . 4253) (TEMPLATE 4243 . 4251) (punctuation 3657 . 3658) (USING 1406 . 1411) (punctuation 1404 . 1405) (symbol 1403 . 1404) (TYPENAME 1394 . 1402) (punctuation 1393 . 1394) (TEMPLATE 1384 . 1392) (USING 1218 . 1223) (USING 1156 . 1161) (USING 1086 . 1091) (USING 1021 . 1026) (USING 956 . 961) (USING 891 . 896) (semantic-list 547 . 555) (symbol 532 . 547) (semantic-list 395 . 415) (symbol 380 . 395) (symbol 279 . 283) (symbol 272 . 278) (punctuation 271 . 272) (EXPLICIT 47010 . 47018) (punctuation 47004 . 47005) (punctuation 47003 . 47004) (punctuation 47002 . 47003) (punctuation 47001 . 47002) (punctuation 47000 . 47001) (symbol 46996 . 47000) (punctuation 46994 . 46995) (punctuation 46993 . 46994) (punctuation 46992 . 46993) (symbol 46973 . 46992) (punctuation 46972 . 46973) (punctuation 46971 . 46972) (symbol 46965 . 46971) (punctuation 46964 . 46965) (symbol 46954 . 46964) (punctuation 46953 . 46954) (punctuation 46952 . 46953) (symbol 46946 . 46952) (punctuation 46944 . 46945) (symbol 46934 . 46943) (TYPENAME 46925 . 46933) (punctuation 46808 . 46809) (punctuation 46807 . 46808) (symbol 46802 . 46807) (punctuation 46801 . 46802) (punctuation 46800 . 46801) (punctuation 46799 . 46800) (punctuation 46798 . 46799) (punctuation 46797 . 46798) (punctuation 46796 . 46797) (punctuation 46795 . 46796) (symbol 46791 . 46795) (punctuation 46790 . 46791) (symbol 46774 . 46790) (punctuation 46773 . 46774) (punctuation 46772 . 46773) (symbol 46766 . 46772) (punctuation 46765 . 46766) (symbol 46759 . 46765) (punctuation 46758 . 46759) (punctuation 46757 . 46758) (symbol 46751 . 46757) (punctuation 46750 . 46751) (symbol 46739 . 46750) (punctuation 46738 . 46739) (punctuation 46737 . 46738) (symbol 46731 . 46737) (punctuation 46729 . 46730) (TYPENAME 46720 . 46728) (punctuation 46704 . 46705) (symbol 46700 . 46704) (punctuation 46698 . 46699) (punctuation 46697 . 46698) (punctuation 46696 . 46697) (TYPENAME 46688 . 46696) (punctuation 46687 . 46688) (TEMPLATE 46678 . 46686) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyDict_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "dict" 1 . 5)))) 46492 . 46549) (symbol "PYBIND11_DEPRECATED" 46492 . 46549) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyDict_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "dict" 1 . 5)))) 46492 . 46549) (symbol "PYBIND11_DEPRECATED" 46492 . 46549) (EXPLICIT 45901 . 45909) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyTuple_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "tuple" 1 . 5)))) 45829 . 45896) (symbol "PYBIND11_DEPRECATED" 45829 . 45896) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyTuple_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "tuple" 1 . 5)))) 45829 . 45896) (symbol "PYBIND11_DEPRECATED" 45829 . 45896) (semantic-list 45502 . 45715) (CONST 45496 . 45501) (semantic-list 45493 . 45495) (punctuation 45492 . 45493) (symbol 45490 . 45491) (OPERATOR 45481 . 45489) (punctuation 45479 . 45480) (symbol 45478 . 45479) (TYPENAME 45469 . 45477) (punctuation 45468 . 45469) (TEMPLATE 45459 . 45467) (semantic-list 44234 . 44297) (symbol 44215 . 44234) (string 44235 . 44296) (EXPLICIT 43922 . 43930) (semantic-list 43722 . 43791) (symbol 43703 . 43722) (string 43723 . 43790) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyCapsule_CheckExact" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "capsule" 1 . 5)))) 43636 . 43698) (symbol "PYBIND11_DEPRECATED" 43636 . 43698) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyCapsule_CheckExact" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "capsule" 1 . 5)))) 43636 . 43698) (symbol "PYBIND11_DEPRECATED" 43636 . 43698) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PySlice_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "slice" 1 . 5)))) 42871 . 42924) (symbol "PYBIND11_DEPRECATED" 42871 . 42924) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PySlice_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "slice" 1 . 5)))) 42871 . 42924) (symbol "PYBIND11_DEPRECATED" 42871 . 42924) (EXPLICIT 42619 . 42627) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyWeakref_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "weakref" 1 . 5)))) 42557 . 42614) (symbol "PYBIND11_DEPRECATED" 42557 . 42614) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyWeakref_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "weakref" 1 . 5)))) 42557 . 42614) (symbol "PYBIND11_DEPRECATED" 42557 . 42614) (semantic-list 42464 . 42508) (CONST 42458 . 42463) (semantic-list 42455 . 42457) (DOUBLE 42449 . 42455) (OPERATOR 42440 . 42448) (semantic-list 42392 . 42435) (CONST 42386 . 42391) (semantic-list 42383 . 42385) (FLOAT 42378 . 42383) (OPERATOR 42369 . 42377) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyFloat_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "float_" 1 . 5)))) 41920 . 41986) (symbol "PYBIND11_DEPRECATED" 41920 . 41986) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyFloat_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "float_" 1 . 5)))) 41920 . 41986) (symbol "PYBIND11_DEPRECATED" 41920 . 41986) (OPERATOR 41625 . 41633) (punctuation 41619 . 41620) (number 41618 . 41619) (punctuation 41616 . 41617) (punctuation 41614 . 41615) (INT 41611 . 41614) (punctuation 41609 . 41610) (symbol 41604 . 41609) (punctuation 41603 . 41604) (punctuation 41602 . 41603) (punctuation 41601 . 41602) (symbol 41600 . 41601) (punctuation 41599 . 41600) (symbol 41588 . 41599) (punctuation 41587 . 41588) (punctuation 41586 . 41587) (symbol 41583 . 41586) (punctuation 41582 . 41583) (symbol 41571 . 41582) (punctuation 41570 . 41571) (punctuation 41569 . 41570) (symbol 41563 . 41569) (punctuation 41547 . 41548) (symbol 41546 . 41547) (TYPENAME 41537 . 41545) (punctuation 41536 . 41537) (TEMPLATE 41527 . 41535) (punctuation 40967 . 40968) (number 40966 . 40967) (punctuation 40964 . 40965) (punctuation 40962 . 40963) (INT 40959 . 40962) (punctuation 40957 . 40958) (symbol 40952 . 40957) (punctuation 40951 . 40952) (punctuation 40950 . 40951) (punctuation 40949 . 40950) (symbol 40948 . 40949) (punctuation 40947 . 40948) (symbol 40936 . 40947) (punctuation 40935 . 40936) (punctuation 40934 . 40935) (symbol 40931 . 40934) (punctuation 40930 . 40931) (symbol 40919 . 40930) (punctuation 40918 . 40919) (punctuation 40917 . 40918) (symbol 40911 . 40917) (punctuation 40895 . 40896) (symbol 40894 . 40895) (TYPENAME 40885 . 40893) (punctuation 40884 . 40885) (TEMPLATE 40875 . 40883) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list 40636 . 40644) (symbol 40623 . 40636) (OPERATOR 41625 . 41633) (punctuation 41619 . 41620) (number 41618 . 41619) (punctuation 41616 . 41617) (punctuation 41614 . 41615) (INT 41611 . 41614) (punctuation 41609 . 41610) (symbol 41604 . 41609) (punctuation 41603 . 41604) (punctuation 41602 . 41603) (punctuation 41601 . 41602) (symbol 41600 . 41601) (punctuation 41599 . 41600) (symbol 41588 . 41599) (punctuation 41587 . 41588) (punctuation 41586 . 41587) (symbol 41583 . 41586) (punctuation 41582 . 41583) (symbol 41571 . 41582) (punctuation 41570 . 41571) (punctuation 41569 . 41570) (symbol 41563 . 41569) (punctuation 41547 . 41548) (symbol 41546 . 41547) (TYPENAME 41537 . 41545) (punctuation 41536 . 41537) (TEMPLATE 41527 . 41535) (punctuation 40967 . 40968) (number 40966 . 40967) (punctuation 40964 . 40965) (punctuation 40962 . 40963) (INT 40959 . 40962) (punctuation 40957 . 40958) (symbol 40952 . 40957) (punctuation 40951 . 40952) (punctuation 40950 . 40951) (punctuation 40949 . 40950) (symbol 40948 . 40949) (punctuation 40947 . 40948) (symbol 40936 . 40947) (punctuation 40935 . 40936) (punctuation 40934 . 40935) (symbol 40931 . 40934) (punctuation 40930 . 40931) (symbol 40919 . 40930) (punctuation 40918 . 40919) (punctuation 40917 . 40918) (symbol 40911 . 40917) (punctuation 40895 . 40896) (symbol 40894 . 40895) (TYPENAME 40885 . 40893) (punctuation 40884 . 40885) (TEMPLATE 40875 . 40883) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (OPERATOR 41625 . 41633) (punctuation 41619 . 41620) (number 41618 . 41619) (punctuation 41616 . 41617) (punctuation 41614 . 41615) (INT 41611 . 41614) (punctuation 41609 . 41610) (symbol 41604 . 41609) (punctuation 41603 . 41604) (punctuation 41602 . 41603) (punctuation 41601 . 41602) (symbol 41600 . 41601) (punctuation 41599 . 41600) (symbol 41588 . 41599) (punctuation 41587 . 41588) (punctuation 41586 . 41587) (symbol 41583 . 41586) (punctuation 41582 . 41583) (symbol 41571 . 41582) (punctuation 41570 . 41571) (punctuation 41569 . 41570) (symbol 41563 . 41569) (punctuation 41547 . 41548) (symbol 41546 . 41547) (TYPENAME 41537 . 41545) (punctuation 41536 . 41537) (TEMPLATE 41527 . 41535) (punctuation 40967 . 40968) (number 40966 . 40967) (punctuation 40964 . 40965) (punctuation 40962 . 40963) (INT 40959 . 40962) (punctuation 40957 . 40958) (symbol 40952 . 40957) (punctuation 40951 . 40952) (punctuation 40950 . 40951) (punctuation 40949 . 40950) (symbol 40948 . 40949) (punctuation 40947 . 40948) (symbol 40936 . 40947) (punctuation 40935 . 40936) (punctuation 40934 . 40935) (symbol 40931 . 40934) (punctuation 40930 . 40931) (symbol 40919 . 40930) (punctuation 40918 . 40919) (punctuation 40917 . 40918) (symbol 40911 . 40917) (punctuation 40895 . 40896) (symbol 40894 . 40895) (TYPENAME 40885 . 40893) (punctuation 40884 . 40885) (TEMPLATE 40875 . 40883) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list 39725 . 39733) (symbol 39710 . 39725) (semantic-list 39363 . 39409) (CONST 39357 . 39362) (semantic-list 39354 . 39356) (BOOL 39350 . 39354) (OPERATOR 39341 . 39349) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyBool_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bool_" 1 . 5)))) 39099 . 39157) (symbol "PYBIND11_DEPRECATED" 39099 . 39157) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyBool_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bool_" 1 . 5)))) 39099 . 39157) (symbol "PYBIND11_DEPRECATED" 39099 . 39157) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "none" 1 . 5)))) 38757 . 38808) (symbol "PYBIND11_DEPRECATED" 38757 . 38808) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "none" 1 . 5)))) 38757 . 38808) (symbol "PYBIND11_DEPRECATED" 38757 . 38808) (OPERATOR 37355 . 37363) (EXPLICIT 37310 . 37318) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_BYTES_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bytes" 1 . 5)))) 36752 . 36804) (symbol "PYBIND11_DEPRECATED" 36752 . 36804) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_BYTES_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bytes" 1 . 5)))) 36752 . 36804) (symbol "PYBIND11_DEPRECATED" 36752 . 36804) (string 36620 . 36622) (OPERATOR 36612 . 36620) (symbol 36608 . 36611) (INLINE 36601 . 36607) (INLINE 36516 . 36522) (punctuation 35966 . 35967) (punctuation 35965 . 35966) (punctuation 35964 . 35965) (punctuation 35963 . 35964) (punctuation 35940 . 35941) (symbol 35936 . 35940) (punctuation 35934 . 35935) (punctuation 35933 . 35934) (punctuation 35932 . 35933) (TYPENAME 35924 . 35932) (punctuation 35923 . 35924) (TEMPLATE 35914 . 35922) (OPERATOR 35353 . 35361) (EXPLICIT 35282 . 35290) (EXPLICIT 35102 . 35110) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "str" 1 . 5)))) 34466 . 34543) (symbol "PYBIND11_DEPRECATED" 34466 . 34543) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "str" 1 . 5)))) 34466 . 34543) (symbol "PYBIND11_DEPRECATED" 34466 . 34543) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterable" 1 . 5)))) 34340 . 34407) (symbol "PYBIND11_DEPRECATED" 34340 . 34407) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterable" 1 . 5)))) 34340 . 34407) (symbol "PYBIND11_DEPRECATED" 34340 . 34407) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyIter_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterator" 1 . 5)))) 32958 . 33013) (symbol "PYBIND11_DEPRECATED" 32958 . 33013) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyIter_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterator" 1 . 5)))) 32958 . 33013) (symbol "PYBIND11_DEPRECATED" 32958 . 33013) (punctuation 32951 . 32952) (punctuation 32950 . 32951) (symbol 32943 . 32949) (CONST 32937 . 32942) (punctuation 32935 . 32936) (symbol 32927 . 32934) (USING 32921 . 32926) (punctuation 32901 . 32902) (symbol 32891 . 32900) (USING 32885 . 32890) (USING 32854 . 32859) (USING 32817 . 32822) (punctuation 32786 . 32787) (symbol 32768 . 32785) (USING 32762 . 32767) (semantic-list 30308 . 30316) (symbol 30295 . 30308) (punctuation 30265 . 30266) (symbol 30246 . 30265) (punctuation 30245 . 30246) (punctuation 30244 . 30245) (symbol 30225 . 30244) (punctuation 30223 . 30224) (symbol 30216 . 30222) (symbol 30196 . 30215) (punctuation 30195 . 30196) (TEMPLATE 30186 . 30194) (punctuation 30160 . 30161) (symbol 30141 . 30160) (punctuation 30140 . 30141) (punctuation 30139 . 30140) (symbol 30120 . 30139) (punctuation 30118 . 30119) (symbol 30111 . 30117) (symbol 30091 . 30110) (punctuation 30090 . 30091) (TEMPLATE 30081 . 30089) (USING 29957 . 29962) (punctuation 29955 . 29956) (symbol 29954 . 29955) (TYPENAME 29945 . 29953) (punctuation 29944 . 29945) (TEMPLATE 29935 . 29943) (USING 29841 . 29846) (punctuation 29839 . 29840) (symbol 29838 . 29839) (TYPENAME 29829 . 29837) (punctuation 29828 . 29829) (TEMPLATE 29819 . 29827) (USING 29748 . 29753) (punctuation 29746 . 29747) (symbol 29745 . 29746) (TYPENAME 29736 . 29744) (punctuation 29735 . 29736) (TEMPLATE 29726 . 29734) (USING 29659 . 29664) (punctuation 29657 . 29658) (symbol 29656 . 29657) (TYPENAME 29647 . 29655) (punctuation 29646 . 29647) (TEMPLATE 29637 . 29645) (USING 29593 . 29598) (punctuation 29591 . 29592) (symbol 29590 . 29591) (TYPENAME 29581 . 29589) (punctuation 29580 . 29581) (TEMPLATE 29571 . 29579) (EXPLICIT 29401 . 29409) (EXPLICIT 29302 . 29310) (USING 28680 . 28685) (USING 28592 . 28597) (USING 28326 . 28331) (USING 28242 . 28247) (semantic-list 28194 . 28213) (symbol 28181 . 28194) (punctuation 27802 . 27803) (DEFAULT 27795 . 27802) (punctuation 27793 . 27794) (semantic-list 27790 . 27792) (symbol 27777 . 27790) (punctuation 27739 . 27740) (symbol 27731 . 27738) (USING 27725 . 27730) (punctuation 27701 . 27702) (symbol 27691 . 27700) (USING 27685 . 27690) (punctuation 27652 . 27653) (symbol 27641 . 27651) (USING 27635 . 27640) (punctuation 27602 . 27603) (symbol 27584 . 27601) (USING 27578 . 27583) (punctuation 26927 . 26928) (symbol 26919 . 26926) (USING 26913 . 26918) (USING 26872 . 26877) (USING 26841 . 26846) (punctuation 26802 . 26803) (symbol 26784 . 26801) (USING 26778 . 26783) (punctuation 26151 . 26152) (symbol 26143 . 26150) (USING 26137 . 26142) (punctuation 26117 . 26118) (symbol 26107 . 26116) (USING 26101 . 26106) (USING 26070 . 26075) (punctuation 26031 . 26032) (symbol 26013 . 26030) (USING 26007 . 26012) (punctuation 25783 . 25784) (semantic-list 25588 . 25607) (symbol 25573 . 25588) (punctuation 24069 . 24070) (DEFAULT 24062 . 24069) (punctuation 24060 . 24061) (semantic-list 24057 . 24059) (symbol 24041 . 24057) (punctuation 24008 . 24009) (symbol 24000 . 24007) (USING 23994 . 23999) (punctuation 23960 . 23961) (symbol 23950 . 23959) (USING 23944 . 23949) (punctuation 23909 . 23910) (symbol 23898 . 23908) (USING 23892 . 23897) (punctuation 23850 . 23851) (symbol 23832 . 23849) (USING 23826 . 23831) (USING 23789 . 23794) (USING 23747 . 23752) (semantic-list 23588 . 23607) (symbol 23575 . 23588) (USING 23035 . 23040) (USING 22473 . 22478) (USING 21903 . 21908) (USING 21459 . 21464) (punctuation 21257 . 21258) (punctuation 21256 . 21257) (CHAR 21251 . 21255) (CONST 21245 . 21250) (punctuation 21243 . 21244) (symbol 21234 . 21242) (USING 21228 . 21233) (USING 21017 . 21022) (semantic-list 20975 . 20994) (symbol 20960 . 20975) (USING 21017 . 21022) (USING 21017 . 21022) (OPERATOR 20573 . 20581) (OPERATOR 20434 . 20442) (EXPLICIT 20425 . 20433) (semantic-list 20349 . 20420) (symbol 20330 . 20349) (string 20350 . 20419) (punctuation 20324 . 20325) (symbol 20318 . 20324) (punctuation 20316 . 20317) (symbol 20314 . 20315) (TYPENAME 20305 . 20313) (punctuation 20304 . 20305) (TEMPLATE 20295 . 20303) (string 20350 . 20419) (semantic-list 20249 . 20290) (CONST 20243 . 20248) (semantic-list 20240 . 20242) (punctuation 20239 . 20240) (BOOL 20235 . 20239) (punctuation 20233 . 20234) (symbol 20228 . 20233) (punctuation 20227 . 20228) (punctuation 20226 . 20227) (punctuation 20225 . 20226) (symbol 20217 . 20225) (punctuation 20216 . 20217) (punctuation 20215 . 20216) (symbol 20198 . 20215) (punctuation 20196 . 20197) (symbol 20195 . 20196) (punctuation 20194 . 20195) (symbol 20187 . 20194) (punctuation 20186 . 20187) (punctuation 20185 . 20186) (symbol 20182 . 20185) (punctuation 20168 . 20169) (punctuation 20167 . 20168) (symbol 20161 . 20166) (punctuation 20160 . 20161) (punctuation 20159 . 20160) (punctuation 20158 . 20159) (symbol 20150 . 20158) (punctuation 20149 . 20150) (punctuation 20148 . 20149) (symbol 20131 . 20148) (punctuation 20129 . 20130) (symbol 20128 . 20129) (punctuation 20127 . 20128) (symbol 20120 . 20127) (punctuation 20119 . 20120) (punctuation 20118 . 20119) (symbol 20115 . 20118) (punctuation 20114 . 20115) (symbol 20103 . 20114) (OPERATOR 20094 . 20102) (EXPLICIT 20085 . 20093) (semantic-list 19994 . 20080) (symbol 19975 . 19994) (string 19995 . 20079) (punctuation 19969 . 19970) (symbol 19963 . 19969) (punctuation 19961 . 19962) (symbol 19959 . 19960) (TYPENAME 19950 . 19958) (punctuation 19949 . 19950) (TEMPLATE 19940 . 19948) (string 19995 . 20079) (semantic-list 19837 . 19934) (punctuation 19835 . 19836) (semantic-list 19823 . 19834) (punctuation 19822 . 19823) (OPERATOR 19814 . 19822) (punctuation 19827 . 19828) (VOID 19809 . 19813) (punctuation 19827 . 19828) (punctuation 19807 . 19808) (symbol 19806 . 19807) (TYPENAME 19797 . 19805) (punctuation 19796 . 19797) (TEMPLATE 19787 . 19795) (punctuation 19827 . 19828) (semantic-list 19704 . 19782) (punctuation 19702 . 19703) (punctuation 19701 . 19702) (semantic-list 19689 . 19700) (punctuation 19688 . 19689) (OPERATOR 19680 . 19688) (punctuation 19693 . 19694) (VOID 19675 . 19679) (punctuation 19693 . 19694) (punctuation 19673 . 19674) (symbol 19672 . 19673) (TYPENAME 19663 . 19671) (punctuation 19662 . 19663) (TEMPLATE 19653 . 19661) (punctuation 19693 . 19694) (semantic-list 19622 . 19647) (punctuation 19620 . 19621) (semantic-list 19600 . 19619) (punctuation 19599 . 19600) (OPERATOR 19591 . 19599) (VOID 19586 . 19590) (semantic-list 19539 . 19581) (punctuation 19537 . 19538) (punctuation 19536 . 19537) (semantic-list 19516 . 19535) (punctuation 19515 . 19516) (OPERATOR 19507 . 19515) (VOID 19502 . 19506) (punctuation 19335 . 19336) (DEFAULT 19328 . 19335) (punctuation 19326 . 19327) (semantic-list 19312 . 19325) (symbol 19304 . 19312) (punctuation 19323 . 19324) (punctuation 19298 . 19299) (DEFAULT 19291 . 19298) (punctuation 19289 . 19290) (semantic-list 19270 . 19288) (symbol 19262 . 19270) (punctuation 19145 . 19146) (symbol 19136 . 19144) (USING 19130 . 19135) (punctuation 18881 . 18882) (punctuation 18854 . 18855) (number 18853 . 18854) (punctuation 18851 . 18852) (punctuation 18849 . 18850) (INT 18846 . 18849) (punctuation 18844 . 18845) (symbol 18839 . 18844) (punctuation 18838 . 18839) (punctuation 18837 . 18838) (punctuation 18836 . 18837) (symbol 18835 . 18836) (punctuation 18834 . 18835) (symbol 18823 . 18834) (punctuation 18822 . 18823) (punctuation 18821 . 18822) (symbol 18810 . 18821) (punctuation 18808 . 18809) (symbol 18807 . 18808) (TYPENAME 18798 . 18806) (punctuation 18797 . 18798) (TEMPLATE 18788 . 18796) (semantic-list 18693 . 18696) (punctuation 18667 . 18668) (punctuation 18666 . 18667) (semantic-list 18658 . 18665) (symbol 18644 . 18658) (punctuation 18662 . 18663) (symbol 18639 . 18643) (punctuation 18662 . 18663) (punctuation 18637 . 18638) (number 18636 . 18637) (punctuation 18634 . 18635) (punctuation 18632 . 18633) (INT 18629 . 18632) (punctuation 18627 . 18628) (symbol 18622 . 18627) (punctuation 18621 . 18622) (punctuation 18620 . 18621) (punctuation 18619 . 18620) (symbol 18618 . 18619) (punctuation 18617 . 18618) (symbol 18606 . 18617) (punctuation 18605 . 18606) (symbol 18594 . 18605) (punctuation 18592 . 18593) (symbol 18591 . 18592) (TYPENAME 18582 . 18590) (punctuation 18581 . 18582) (TEMPLATE 18572 . 18580) (semantic-list 17957 . 17965) (symbol 17942 . 17957) (punctuation 15539 . 15540) (DELETE 15533 . 15539) (punctuation 15531 . 15532) (semantic-list 15518 . 15530) (punctuation 15517 . 15518) (symbol 15511 . 15517) (punctuation 15510 . 15511) (symbol 15500 . 15510) (BOOL 15495 . 15499) (INLINE 15488 . 15494) (punctuation 15486 . 15487) (punctuation 15485 . 15486) (TEMPLATE 15476 . 15484) (punctuation 15390 . 15391) (number 15389 . 15390) (punctuation 15387 . 15388) (punctuation 15385 . 15386) (INT 15382 . 15385) (punctuation 15380 . 15381) (symbol 15375 . 15380) (punctuation 15374 . 15375) (punctuation 15373 . 15374) (punctuation 15372 . 15373) (symbol 15371 . 15372) (punctuation 15369 . 15370) (symbol 15363 . 15369) (punctuation 15362 . 15363) (symbol 15352 . 15362) (punctuation 15351 . 15352) (punctuation 15350 . 15351) (symbol 15347 . 15350) (punctuation 15346 . 15347) (punctuation 15345 . 15346) (symbol 15334 . 15345) (punctuation 15333 . 15334) (punctuation 15332 . 15333) (symbol 15326 . 15332) (punctuation 15324 . 15325) (symbol 15323 . 15324) (TYPENAME 15314 . 15322) (punctuation 15313 . 15314) (TEMPLATE 15304 . 15312) (punctuation 15246 . 15247) (number 15245 . 15246) (punctuation 15243 . 15244) (punctuation 15241 . 15242) (INT 15238 . 15241) (punctuation 15236 . 15237) (symbol 15231 . 15236) (punctuation 15230 . 15231) (punctuation 15229 . 15230) (punctuation 15228 . 15229) (symbol 15227 . 15228) (punctuation 15225 . 15226) (symbol 15219 . 15225) (punctuation 15218 . 15219) (symbol 15208 . 15218) (punctuation 15207 . 15208) (punctuation 15206 . 15207) (symbol 15203 . 15206) (punctuation 15202 . 15203) (symbol 15191 . 15202) (punctuation 15190 . 15191) (punctuation 15189 . 15190) (symbol 15183 . 15189) (punctuation 15181 . 15182) (symbol 15180 . 15181) (TYPENAME 15171 . 15179) (punctuation 15170 . 15171) (TEMPLATE 15161 . 15169) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 13108 . 13116) (symbol 13095 . 13108) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 13051 . 13059) (symbol 13036 . 13051) (punctuation 11622 . 11623) (punctuation 11621 . 11622) (punctuation 11620 . 11621) (semantic-list 11617 . 11619) (symbol 11613 . 11617) (symbol 11611 . 11612) (punctuation 11609 . 11610) (symbol 11608 . 11609) (TYPENAME 11599 . 11607) (punctuation 11598 . 11599) (TEMPLATE 11589 . 11597) (punctuation 11509 . 11510) (punctuation 11508 . 11509) (CONST 11502 . 11507) (semantic-list 11499 . 11501) (symbol 11495 . 11499) (symbol 11493 . 11494) (punctuation 11491 . 11492) (symbol 11490 . 11491) (TYPENAME 11481 . 11489) (punctuation 11480 . 11481) (TEMPLATE 11471 . 11479) (semantic-list 11195 . 11392) (symbol 11186 . 11194) (semantic-list 11169 . 11185) (punctuation 11168 . 11169) (OPERATOR 11160 . 11168) (punctuation 11178 . 11179) (punctuation 11158 . 11159) (symbol 11152 . 11158) (punctuation 11178 . 11179) (semantic-list 10538 . 10585) (symbol 10529 . 10537) (semantic-list 10512 . 10528) (symbol 10506 . 10512) (punctuation 10521 . 10522) (semantic-list 10140 . 10207) (symbol 10121 . 10140) (string 10141 . 10206) (punctuation 10115 . 10116) (DEFAULT 10108 . 10115) (punctuation 10106 . 10107) (semantic-list 10103 . 10105) (symbol 10097 . 10103) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 7002 . 7010) (symbol 6989 . 7002) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 6510 . 6538) (symbol 6491 . 6510) (string 6511 . 6537) (punctuation 4598 . 4599) (punctuation 4597 . 4598) (punctuation 4596 . 4597) (punctuation 4595 . 4596) (semantic-list 4513 . 4569) (symbol 4494 . 4513) (string 4514 . 4568) (punctuation 4488 . 4489) (symbol 4484 . 4488) (punctuation 4482 . 4483) (punctuation 4481 . 4482) (punctuation 4480 . 4481) (TYPENAME 4472 . 4480) (punctuation 4470 . 4471) (symbol 4451 . 4470) (punctuation 4450 . 4451) (punctuation 4449 . 4450) (symbol 4430 . 4449) (punctuation 4428 . 4429) (symbol 4421 . 4427) (symbol 4401 . 4420) (punctuation 4400 . 4401) (TEMPLATE 4391 . 4399) (punctuation 4373 . 4374) (punctuation 4372 . 4373) (punctuation 4371 . 4372) (punctuation 4370 . 4371) (punctuation 4340 . 4341) (symbol 4336 . 4340) (punctuation 4334 . 4335) (punctuation 4333 . 4334) (punctuation 4332 . 4333) (TYPENAME 4324 . 4332) (punctuation 4322 . 4323) (symbol 4303 . 4322) (punctuation 4302 . 4303) (punctuation 4301 . 4302) (symbol 4282 . 4301) (punctuation 4280 . 4281) (symbol 4273 . 4279) (symbol 4253 . 4272) (punctuation 4252 . 4253) (TEMPLATE 4243 . 4251) (punctuation 3657 . 3658) (USING 1406 . 1411) (punctuation 1404 . 1405) (symbol 1403 . 1404) (TYPENAME 1394 . 1402) (punctuation 1393 . 1394) (TEMPLATE 1384 . 1392) (USING 1218 . 1223) (USING 1156 . 1161) (USING 1086 . 1091) (USING 1021 . 1026) (USING 956 . 961) (USING 891 . 896) (semantic-list 547 . 555) (symbol 532 . 547) (semantic-list 395 . 415) (symbol 380 . 395) (symbol 279 . 283) (symbol 272 . 278) (punctuation 271 . 272) (punctuation 47033 . 47034) (punctuation 47032 . 47033) (punctuation 47031 . 47032) (punctuation 47030 . 47031) (EXPLICIT 47010 . 47018) (punctuation 47004 . 47005) (punctuation 47003 . 47004) (punctuation 47002 . 47003) (punctuation 47001 . 47002) (punctuation 47000 . 47001) (symbol 46996 . 47000) (punctuation 46994 . 46995) (punctuation 46993 . 46994) (punctuation 46992 . 46993) (symbol 46973 . 46992) (punctuation 46972 . 46973) (punctuation 46971 . 46972) (symbol 46965 . 46971) (punctuation 46964 . 46965) (symbol 46954 . 46964) (punctuation 46953 . 46954) (punctuation 46952 . 46953) (symbol 46946 . 46952) (punctuation 46944 . 46945) (symbol 46934 . 46943) (TYPENAME 46925 . 46933) (punctuation 46808 . 46809) (punctuation 46807 . 46808) (symbol 46802 . 46807) (punctuation 46801 . 46802) (punctuation 46800 . 46801) (punctuation 46799 . 46800) (punctuation 46798 . 46799) (punctuation 46797 . 46798) (punctuation 46796 . 46797) (punctuation 46795 . 46796) (symbol 46791 . 46795) (punctuation 46790 . 46791) (symbol 46774 . 46790) (punctuation 46773 . 46774) (punctuation 46772 . 46773) (symbol 46766 . 46772) (punctuation 46765 . 46766) (symbol 46759 . 46765) (punctuation 46758 . 46759) (punctuation 46757 . 46758) (symbol 46751 . 46757) (punctuation 46750 . 46751) (symbol 46739 . 46750) (punctuation 46738 . 46739) (punctuation 46737 . 46738) (symbol 46731 . 46737) (punctuation 46729 . 46730) (TYPENAME 46720 . 46728) (punctuation 46704 . 46705) (symbol 46700 . 46704) (punctuation 46698 . 46699) (punctuation 46697 . 46698) (punctuation 46696 . 46697) (TYPENAME 46688 . 46696) (punctuation 46687 . 46688) (TEMPLATE 46678 . 46686) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyDict_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "dict" 1 . 5)))) 46492 . 46549) (symbol "PYBIND11_DEPRECATED" 46492 . 46549) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyDict_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "dict" 1 . 5)))) 46492 . 46549) (symbol "PYBIND11_DEPRECATED" 46492 . 46549) (EXPLICIT 45901 . 45909) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyTuple_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "tuple" 1 . 5)))) 45829 . 45896) (symbol "PYBIND11_DEPRECATED" 45829 . 45896) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyTuple_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "tuple" 1 . 5)))) 45829 . 45896) (symbol "PYBIND11_DEPRECATED" 45829 . 45896) (semantic-list 45502 . 45715) (CONST 45496 . 45501) (semantic-list 45493 . 45495) (punctuation 45492 . 45493) (symbol 45490 . 45491) (OPERATOR 45481 . 45489) (punctuation 45479 . 45480) (symbol 45478 . 45479) (TYPENAME 45469 . 45477) (punctuation 45468 . 45469) (TEMPLATE 45459 . 45467) (semantic-list 44234 . 44297) (symbol 44215 . 44234) (string 44235 . 44296) (EXPLICIT 43922 . 43930) (semantic-list 43722 . 43791) (symbol 43703 . 43722) (string 43723 . 43790) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyCapsule_CheckExact" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "capsule" 1 . 5)))) 43636 . 43698) (symbol "PYBIND11_DEPRECATED" 43636 . 43698) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyCapsule_CheckExact" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "capsule" 1 . 5)))) 43636 . 43698) (symbol "PYBIND11_DEPRECATED" 43636 . 43698) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PySlice_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "slice" 1 . 5)))) 42871 . 42924) (symbol "PYBIND11_DEPRECATED" 42871 . 42924) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PySlice_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "slice" 1 . 5)))) 42871 . 42924) (symbol "PYBIND11_DEPRECATED" 42871 . 42924) (EXPLICIT 42619 . 42627) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyWeakref_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "weakref" 1 . 5)))) 42557 . 42614) (symbol "PYBIND11_DEPRECATED" 42557 . 42614) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyWeakref_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "weakref" 1 . 5)))) 42557 . 42614) (symbol "PYBIND11_DEPRECATED" 42557 . 42614) (semantic-list 42464 . 42508) (CONST 42458 . 42463) (semantic-list 42455 . 42457) (DOUBLE 42449 . 42455) (OPERATOR 42440 . 42448) (semantic-list 42392 . 42435) (CONST 42386 . 42391) (semantic-list 42383 . 42385) (FLOAT 42378 . 42383) (OPERATOR 42369 . 42377) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyFloat_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "float_" 1 . 5)))) 41920 . 41986) (symbol "PYBIND11_DEPRECATED" 41920 . 41986) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyFloat_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "float_" 1 . 5)))) 41920 . 41986) (symbol "PYBIND11_DEPRECATED" 41920 . 41986) (OPERATOR 41625 . 41633) (punctuation 41619 . 41620) (number 41618 . 41619) (punctuation 41616 . 41617) (punctuation 41614 . 41615) (INT 41611 . 41614) (punctuation 41609 . 41610) (symbol 41604 . 41609) (punctuation 41603 . 41604) (punctuation 41602 . 41603) (punctuation 41601 . 41602) (symbol 41600 . 41601) (punctuation 41599 . 41600) (symbol 41588 . 41599) (punctuation 41587 . 41588) (punctuation 41586 . 41587) (symbol 41583 . 41586) (punctuation 41582 . 41583) (symbol 41571 . 41582) (punctuation 41570 . 41571) (punctuation 41569 . 41570) (symbol 41563 . 41569) (punctuation 41547 . 41548) (symbol 41546 . 41547) (TYPENAME 41537 . 41545) (punctuation 41536 . 41537) (TEMPLATE 41527 . 41535) (punctuation 40967 . 40968) (number 40966 . 40967) (punctuation 40964 . 40965) (punctuation 40962 . 40963) (INT 40959 . 40962) (punctuation 40957 . 40958) (symbol 40952 . 40957) (punctuation 40951 . 40952) (punctuation 40950 . 40951) (punctuation 40949 . 40950) (symbol 40948 . 40949) (punctuation 40947 . 40948) (symbol 40936 . 40947) (punctuation 40935 . 40936) (punctuation 40934 . 40935) (symbol 40931 . 40934) (punctuation 40930 . 40931) (symbol 40919 . 40930) (punctuation 40918 . 40919) (punctuation 40917 . 40918) (symbol 40911 . 40917) (punctuation 40895 . 40896) (symbol 40894 . 40895) (TYPENAME 40885 . 40893) (punctuation 40884 . 40885) (TEMPLATE 40875 . 40883) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list 40636 . 40644) (symbol 40623 . 40636) (OPERATOR 41625 . 41633) (punctuation 41619 . 41620) (number 41618 . 41619) (punctuation 41616 . 41617) (punctuation 41614 . 41615) (INT 41611 . 41614) (punctuation 41609 . 41610) (symbol 41604 . 41609) (punctuation 41603 . 41604) (punctuation 41602 . 41603) (punctuation 41601 . 41602) (symbol 41600 . 41601) (punctuation 41599 . 41600) (symbol 41588 . 41599) (punctuation 41587 . 41588) (punctuation 41586 . 41587) (symbol 41583 . 41586) (punctuation 41582 . 41583) (symbol 41571 . 41582) (punctuation 41570 . 41571) (punctuation 41569 . 41570) (symbol 41563 . 41569) (punctuation 41547 . 41548) (symbol 41546 . 41547) (TYPENAME 41537 . 41545) (punctuation 41536 . 41537) (TEMPLATE 41527 . 41535) (punctuation 40967 . 40968) (number 40966 . 40967) (punctuation 40964 . 40965) (punctuation 40962 . 40963) (INT 40959 . 40962) (punctuation 40957 . 40958) (symbol 40952 . 40957) (punctuation 40951 . 40952) (punctuation 40950 . 40951) (punctuation 40949 . 40950) (symbol 40948 . 40949) (punctuation 40947 . 40948) (symbol 40936 . 40947) (punctuation 40935 . 40936) (punctuation 40934 . 40935) (symbol 40931 . 40934) (punctuation 40930 . 40931) (symbol 40919 . 40930) (punctuation 40918 . 40919) (punctuation 40917 . 40918) (symbol 40911 . 40917) (punctuation 40895 . 40896) (symbol 40894 . 40895) (TYPENAME 40885 . 40893) (punctuation 40884 . 40885) (TEMPLATE 40875 . 40883) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (OPERATOR 41625 . 41633) (punctuation 41619 . 41620) (number 41618 . 41619) (punctuation 41616 . 41617) (punctuation 41614 . 41615) (INT 41611 . 41614) (punctuation 41609 . 41610) (symbol 41604 . 41609) (punctuation 41603 . 41604) (punctuation 41602 . 41603) (punctuation 41601 . 41602) (symbol 41600 . 41601) (punctuation 41599 . 41600) (symbol 41588 . 41599) (punctuation 41587 . 41588) (punctuation 41586 . 41587) (symbol 41583 . 41586) (punctuation 41582 . 41583) (symbol 41571 . 41582) (punctuation 41570 . 41571) (punctuation 41569 . 41570) (symbol 41563 . 41569) (punctuation 41547 . 41548) (symbol 41546 . 41547) (TYPENAME 41537 . 41545) (punctuation 41536 . 41537) (TEMPLATE 41527 . 41535) (punctuation 40967 . 40968) (number 40966 . 40967) (punctuation 40964 . 40965) (punctuation 40962 . 40963) (INT 40959 . 40962) (punctuation 40957 . 40958) (symbol 40952 . 40957) (punctuation 40951 . 40952) (punctuation 40950 . 40951) (punctuation 40949 . 40950) (symbol 40948 . 40949) (punctuation 40947 . 40948) (symbol 40936 . 40947) (punctuation 40935 . 40936) (punctuation 40934 . 40935) (symbol 40931 . 40934) (punctuation 40930 . 40931) (symbol 40919 . 40930) (punctuation 40918 . 40919) (punctuation 40917 . 40918) (symbol 40911 . 40917) (punctuation 40895 . 40896) (symbol 40894 . 40895) (TYPENAME 40885 . 40893) (punctuation 40884 . 40885) (TEMPLATE 40875 . 40883) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list 39725 . 39733) (symbol 39710 . 39725) (semantic-list 39363 . 39409) (CONST 39357 . 39362) (semantic-list 39354 . 39356) (BOOL 39350 . 39354) (OPERATOR 39341 . 39349) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyBool_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bool_" 1 . 5)))) 39099 . 39157) (symbol "PYBIND11_DEPRECATED" 39099 . 39157) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyBool_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bool_" 1 . 5)))) 39099 . 39157) (symbol "PYBIND11_DEPRECATED" 39099 . 39157) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "none" 1 . 5)))) 38757 . 38808) (symbol "PYBIND11_DEPRECATED" 38757 . 38808) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "none" 1 . 5)))) 38757 . 38808) (symbol "PYBIND11_DEPRECATED" 38757 . 38808) (OPERATOR 37355 . 37363) (EXPLICIT 37310 . 37318) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_BYTES_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bytes" 1 . 5)))) 36752 . 36804) (symbol "PYBIND11_DEPRECATED" 36752 . 36804) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_BYTES_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bytes" 1 . 5)))) 36752 . 36804) (symbol "PYBIND11_DEPRECATED" 36752 . 36804) (string 36620 . 36622) (OPERATOR 36612 . 36620) (symbol 36608 . 36611) (INLINE 36601 . 36607) (INLINE 36516 . 36522) (punctuation 35966 . 35967) (punctuation 35965 . 35966) (punctuation 35964 . 35965) (punctuation 35963 . 35964) (punctuation 35940 . 35941) (symbol 35936 . 35940) (punctuation 35934 . 35935) (punctuation 35933 . 35934) (punctuation 35932 . 35933) (TYPENAME 35924 . 35932) (punctuation 35923 . 35924) (TEMPLATE 35914 . 35922) (OPERATOR 35353 . 35361) (EXPLICIT 35282 . 35290) (EXPLICIT 35102 . 35110) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "str" 1 . 5)))) 34466 . 34543) (symbol "PYBIND11_DEPRECATED" 34466 . 34543) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "str" 1 . 5)))) 34466 . 34543) (symbol "PYBIND11_DEPRECATED" 34466 . 34543) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterable" 1 . 5)))) 34340 . 34407) (symbol "PYBIND11_DEPRECATED" 34340 . 34407) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterable" 1 . 5)))) 34340 . 34407) (symbol "PYBIND11_DEPRECATED" 34340 . 34407) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyIter_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterator" 1 . 5)))) 32958 . 33013) (symbol "PYBIND11_DEPRECATED" 32958 . 33013) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyIter_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterator" 1 . 5)))) 32958 . 33013) (symbol "PYBIND11_DEPRECATED" 32958 . 33013) (punctuation 32951 . 32952) (punctuation 32950 . 32951) (symbol 32943 . 32949) (CONST 32937 . 32942) (punctuation 32935 . 32936) (symbol 32927 . 32934) (USING 32921 . 32926) (punctuation 32901 . 32902) (symbol 32891 . 32900) (USING 32885 . 32890) (USING 32854 . 32859) (USING 32817 . 32822) (punctuation 32786 . 32787) (symbol 32768 . 32785) (USING 32762 . 32767) (semantic-list 30308 . 30316) (symbol 30295 . 30308) (punctuation 30265 . 30266) (symbol 30246 . 30265) (punctuation 30245 . 30246) (punctuation 30244 . 30245) (symbol 30225 . 30244) (punctuation 30223 . 30224) (symbol 30216 . 30222) (symbol 30196 . 30215) (punctuation 30195 . 30196) (TEMPLATE 30186 . 30194) (punctuation 30160 . 30161) (symbol 30141 . 30160) (punctuation 30140 . 30141) (punctuation 30139 . 30140) (symbol 30120 . 30139) (punctuation 30118 . 30119) (symbol 30111 . 30117) (symbol 30091 . 30110) (punctuation 30090 . 30091) (TEMPLATE 30081 . 30089) (USING 29957 . 29962) (punctuation 29955 . 29956) (symbol 29954 . 29955) (TYPENAME 29945 . 29953) (punctuation 29944 . 29945) (TEMPLATE 29935 . 29943) (USING 29841 . 29846) (punctuation 29839 . 29840) (symbol 29838 . 29839) (TYPENAME 29829 . 29837) (punctuation 29828 . 29829) (TEMPLATE 29819 . 29827) (USING 29748 . 29753) (punctuation 29746 . 29747) (symbol 29745 . 29746) (TYPENAME 29736 . 29744) (punctuation 29735 . 29736) (TEMPLATE 29726 . 29734) (USING 29659 . 29664) (punctuation 29657 . 29658) (symbol 29656 . 29657) (TYPENAME 29647 . 29655) (punctuation 29646 . 29647) (TEMPLATE 29637 . 29645) (USING 29593 . 29598) (punctuation 29591 . 29592) (symbol 29590 . 29591) (TYPENAME 29581 . 29589) (punctuation 29580 . 29581) (TEMPLATE 29571 . 29579) (EXPLICIT 29401 . 29409) (EXPLICIT 29302 . 29310) (USING 28680 . 28685) (USING 28592 . 28597) (USING 28326 . 28331) (USING 28242 . 28247) (semantic-list 28194 . 28213) (symbol 28181 . 28194) (punctuation 27802 . 27803) (DEFAULT 27795 . 27802) (punctuation 27793 . 27794) (semantic-list 27790 . 27792) (symbol 27777 . 27790) (punctuation 27739 . 27740) (symbol 27731 . 27738) (USING 27725 . 27730) (punctuation 27701 . 27702) (symbol 27691 . 27700) (USING 27685 . 27690) (punctuation 27652 . 27653) (symbol 27641 . 27651) (USING 27635 . 27640) (punctuation 27602 . 27603) (symbol 27584 . 27601) (USING 27578 . 27583) (punctuation 26927 . 26928) (symbol 26919 . 26926) (USING 26913 . 26918) (USING 26872 . 26877) (USING 26841 . 26846) (punctuation 26802 . 26803) (symbol 26784 . 26801) (USING 26778 . 26783) (punctuation 26151 . 26152) (symbol 26143 . 26150) (USING 26137 . 26142) (punctuation 26117 . 26118) (symbol 26107 . 26116) (USING 26101 . 26106) (USING 26070 . 26075) (punctuation 26031 . 26032) (symbol 26013 . 26030) (USING 26007 . 26012) (punctuation 25783 . 25784) (semantic-list 25588 . 25607) (symbol 25573 . 25588) (punctuation 24069 . 24070) (DEFAULT 24062 . 24069) (punctuation 24060 . 24061) (semantic-list 24057 . 24059) (symbol 24041 . 24057) (punctuation 24008 . 24009) (symbol 24000 . 24007) (USING 23994 . 23999) (punctuation 23960 . 23961) (symbol 23950 . 23959) (USING 23944 . 23949) (punctuation 23909 . 23910) (symbol 23898 . 23908) (USING 23892 . 23897) (punctuation 23850 . 23851) (symbol 23832 . 23849) (USING 23826 . 23831) (USING 23789 . 23794) (USING 23747 . 23752) (semantic-list 23588 . 23607) (symbol 23575 . 23588) (USING 23035 . 23040) (USING 22473 . 22478) (USING 21903 . 21908) (USING 21459 . 21464) (punctuation 21257 . 21258) (punctuation 21256 . 21257) (CHAR 21251 . 21255) (CONST 21245 . 21250) (punctuation 21243 . 21244) (symbol 21234 . 21242) (USING 21228 . 21233) (USING 21017 . 21022) (semantic-list 20975 . 20994) (symbol 20960 . 20975) (USING 21017 . 21022) (USING 21017 . 21022) (OPERATOR 20573 . 20581) (OPERATOR 20434 . 20442) (EXPLICIT 20425 . 20433) (semantic-list 20349 . 20420) (symbol 20330 . 20349) (string 20350 . 20419) (punctuation 20324 . 20325) (symbol 20318 . 20324) (punctuation 20316 . 20317) (symbol 20314 . 20315) (TYPENAME 20305 . 20313) (punctuation 20304 . 20305) (TEMPLATE 20295 . 20303) (string 20350 . 20419) (semantic-list 20249 . 20290) (CONST 20243 . 20248) (semantic-list 20240 . 20242) (punctuation 20239 . 20240) (BOOL 20235 . 20239) (punctuation 20233 . 20234) (symbol 20228 . 20233) (punctuation 20227 . 20228) (punctuation 20226 . 20227) (punctuation 20225 . 20226) (symbol 20217 . 20225) (punctuation 20216 . 20217) (punctuation 20215 . 20216) (symbol 20198 . 20215) (punctuation 20196 . 20197) (symbol 20195 . 20196) (punctuation 20194 . 20195) (symbol 20187 . 20194) (punctuation 20186 . 20187) (punctuation 20185 . 20186) (symbol 20182 . 20185) (punctuation 20168 . 20169) (punctuation 20167 . 20168) (symbol 20161 . 20166) (punctuation 20160 . 20161) (punctuation 20159 . 20160) (punctuation 20158 . 20159) (symbol 20150 . 20158) (punctuation 20149 . 20150) (punctuation 20148 . 20149) (symbol 20131 . 20148) (punctuation 20129 . 20130) (symbol 20128 . 20129) (punctuation 20127 . 20128) (symbol 20120 . 20127) (punctuation 20119 . 20120) (punctuation 20118 . 20119) (symbol 20115 . 20118) (punctuation 20114 . 20115) (symbol 20103 . 20114) (OPERATOR 20094 . 20102) (EXPLICIT 20085 . 20093) (semantic-list 19994 . 20080) (symbol 19975 . 19994) (string 19995 . 20079) (punctuation 19969 . 19970) (symbol 19963 . 19969) (punctuation 19961 . 19962) (symbol 19959 . 19960) (TYPENAME 19950 . 19958) (punctuation 19949 . 19950) (TEMPLATE 19940 . 19948) (string 19995 . 20079) (semantic-list 19837 . 19934) (punctuation 19835 . 19836) (semantic-list 19823 . 19834) (punctuation 19822 . 19823) (OPERATOR 19814 . 19822) (punctuation 19827 . 19828) (VOID 19809 . 19813) (punctuation 19827 . 19828) (punctuation 19807 . 19808) (symbol 19806 . 19807) (TYPENAME 19797 . 19805) (punctuation 19796 . 19797) (TEMPLATE 19787 . 19795) (punctuation 19827 . 19828) (semantic-list 19704 . 19782) (punctuation 19702 . 19703) (punctuation 19701 . 19702) (semantic-list 19689 . 19700) (punctuation 19688 . 19689) (OPERATOR 19680 . 19688) (punctuation 19693 . 19694) (VOID 19675 . 19679) (punctuation 19693 . 19694) (punctuation 19673 . 19674) (symbol 19672 . 19673) (TYPENAME 19663 . 19671) (punctuation 19662 . 19663) (TEMPLATE 19653 . 19661) (punctuation 19693 . 19694) (semantic-list 19622 . 19647) (punctuation 19620 . 19621) (semantic-list 19600 . 19619) (punctuation 19599 . 19600) (OPERATOR 19591 . 19599) (VOID 19586 . 19590) (semantic-list 19539 . 19581) (punctuation 19537 . 19538) (punctuation 19536 . 19537) (semantic-list 19516 . 19535) (punctuation 19515 . 19516) (OPERATOR 19507 . 19515) (VOID 19502 . 19506) (punctuation 19335 . 19336) (DEFAULT 19328 . 19335) (punctuation 19326 . 19327) (semantic-list 19312 . 19325) (symbol 19304 . 19312) (punctuation 19323 . 19324) (punctuation 19298 . 19299) (DEFAULT 19291 . 19298) (punctuation 19289 . 19290) (semantic-list 19270 . 19288) (symbol 19262 . 19270) (punctuation 19145 . 19146) (symbol 19136 . 19144) (USING 19130 . 19135) (punctuation 18881 . 18882) (punctuation 18854 . 18855) (number 18853 . 18854) (punctuation 18851 . 18852) (punctuation 18849 . 18850) (INT 18846 . 18849) (punctuation 18844 . 18845) (symbol 18839 . 18844) (punctuation 18838 . 18839) (punctuation 18837 . 18838) (punctuation 18836 . 18837) (symbol 18835 . 18836) (punctuation 18834 . 18835) (symbol 18823 . 18834) (punctuation 18822 . 18823) (punctuation 18821 . 18822) (symbol 18810 . 18821) (punctuation 18808 . 18809) (symbol 18807 . 18808) (TYPENAME 18798 . 18806) (punctuation 18797 . 18798) (TEMPLATE 18788 . 18796) (semantic-list 18693 . 18696) (punctuation 18667 . 18668) (punctuation 18666 . 18667) (semantic-list 18658 . 18665) (symbol 18644 . 18658) (punctuation 18662 . 18663) (symbol 18639 . 18643) (punctuation 18662 . 18663) (punctuation 18637 . 18638) (number 18636 . 18637) (punctuation 18634 . 18635) (punctuation 18632 . 18633) (INT 18629 . 18632) (punctuation 18627 . 18628) (symbol 18622 . 18627) (punctuation 18621 . 18622) (punctuation 18620 . 18621) (punctuation 18619 . 18620) (symbol 18618 . 18619) (punctuation 18617 . 18618) (symbol 18606 . 18617) (punctuation 18605 . 18606) (symbol 18594 . 18605) (punctuation 18592 . 18593) (symbol 18591 . 18592) (TYPENAME 18582 . 18590) (punctuation 18581 . 18582) (TEMPLATE 18572 . 18580) (semantic-list 17957 . 17965) (symbol 17942 . 17957) (punctuation 15539 . 15540) (DELETE 15533 . 15539) (punctuation 15531 . 15532) (semantic-list 15518 . 15530) (punctuation 15517 . 15518) (symbol 15511 . 15517) (punctuation 15510 . 15511) (symbol 15500 . 15510) (BOOL 15495 . 15499) (INLINE 15488 . 15494) (punctuation 15486 . 15487) (punctuation 15485 . 15486) (TEMPLATE 15476 . 15484) (punctuation 15390 . 15391) (number 15389 . 15390) (punctuation 15387 . 15388) (punctuation 15385 . 15386) (INT 15382 . 15385) (punctuation 15380 . 15381) (symbol 15375 . 15380) (punctuation 15374 . 15375) (punctuation 15373 . 15374) (punctuation 15372 . 15373) (symbol 15371 . 15372) (punctuation 15369 . 15370) (symbol 15363 . 15369) (punctuation 15362 . 15363) (symbol 15352 . 15362) (punctuation 15351 . 15352) (punctuation 15350 . 15351) (symbol 15347 . 15350) (punctuation 15346 . 15347) (punctuation 15345 . 15346) (symbol 15334 . 15345) (punctuation 15333 . 15334) (punctuation 15332 . 15333) (symbol 15326 . 15332) (punctuation 15324 . 15325) (symbol 15323 . 15324) (TYPENAME 15314 . 15322) (punctuation 15313 . 15314) (TEMPLATE 15304 . 15312) (punctuation 15246 . 15247) (number 15245 . 15246) (punctuation 15243 . 15244) (punctuation 15241 . 15242) (INT 15238 . 15241) (punctuation 15236 . 15237) (symbol 15231 . 15236) (punctuation 15230 . 15231) (punctuation 15229 . 15230) (punctuation 15228 . 15229) (symbol 15227 . 15228) (punctuation 15225 . 15226) (symbol 15219 . 15225) (punctuation 15218 . 15219) (symbol 15208 . 15218) (punctuation 15207 . 15208) (punctuation 15206 . 15207) (symbol 15203 . 15206) (punctuation 15202 . 15203) (symbol 15191 . 15202) (punctuation 15190 . 15191) (punctuation 15189 . 15190) (symbol 15183 . 15189) (punctuation 15181 . 15182) (symbol 15180 . 15181) (TYPENAME 15171 . 15179) (punctuation 15170 . 15171) (TEMPLATE 15161 . 15169) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 13108 . 13116) (symbol 13095 . 13108) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 13051 . 13059) (symbol 13036 . 13051) (punctuation 11622 . 11623) (punctuation 11621 . 11622) (punctuation 11620 . 11621) (semantic-list 11617 . 11619) (symbol 11613 . 11617) (symbol 11611 . 11612) (punctuation 11609 . 11610) (symbol 11608 . 11609) (TYPENAME 11599 . 11607) (punctuation 11598 . 11599) (TEMPLATE 11589 . 11597) (punctuation 11509 . 11510) (punctuation 11508 . 11509) (CONST 11502 . 11507) (semantic-list 11499 . 11501) (symbol 11495 . 11499) (symbol 11493 . 11494) (punctuation 11491 . 11492) (symbol 11490 . 11491) (TYPENAME 11481 . 11489) (punctuation 11480 . 11481) (TEMPLATE 11471 . 11479) (semantic-list 11195 . 11392) (symbol 11186 . 11194) (semantic-list 11169 . 11185) (punctuation 11168 . 11169) (OPERATOR 11160 . 11168) (punctuation 11178 . 11179) (punctuation 11158 . 11159) (symbol 11152 . 11158) (punctuation 11178 . 11179) (semantic-list 10538 . 10585) (symbol 10529 . 10537) (semantic-list 10512 . 10528) (symbol 10506 . 10512) (punctuation 10521 . 10522) (semantic-list 10140 . 10207) (symbol 10121 . 10140) (string 10141 . 10206) (punctuation 10115 . 10116) (DEFAULT 10108 . 10115) (punctuation 10106 . 10107) (semantic-list 10103 . 10105) (symbol 10097 . 10103) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 7002 . 7010) (symbol 6989 . 7002) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 6510 . 6538) (symbol 6491 . 6510) (string 6511 . 6537) (punctuation 4598 . 4599) (punctuation 4597 . 4598) (punctuation 4596 . 4597) (punctuation 4595 . 4596) (semantic-list 4513 . 4569) (symbol 4494 . 4513) (string 4514 . 4568) (punctuation 4488 . 4489) (symbol 4484 . 4488) (punctuation 4482 . 4483) (punctuation 4481 . 4482) (punctuation 4480 . 4481) (TYPENAME 4472 . 4480) (punctuation 4470 . 4471) (symbol 4451 . 4470) (punctuation 4450 . 4451) (punctuation 4449 . 4450) (symbol 4430 . 4449) (punctuation 4428 . 4429) (symbol 4421 . 4427) (symbol 4401 . 4420) (punctuation 4400 . 4401) (TEMPLATE 4391 . 4399) (punctuation 4373 . 4374) (punctuation 4372 . 4373) (punctuation 4371 . 4372) (punctuation 4370 . 4371) (punctuation 4340 . 4341) (symbol 4336 . 4340) (punctuation 4334 . 4335) (punctuation 4333 . 4334) (punctuation 4332 . 4333) (TYPENAME 4324 . 4332) (punctuation 4322 . 4323) (symbol 4303 . 4322) (punctuation 4302 . 4303) (punctuation 4301 . 4302) (symbol 4282 . 4301) (punctuation 4280 . 4281) (symbol 4273 . 4279) (symbol 4253 . 4272) (punctuation 4252 . 4253) (TEMPLATE 4243 . 4251) (punctuation 3657 . 3658) (USING 1406 . 1411) (punctuation 1404 . 1405) (symbol 1403 . 1404) (TYPENAME 1394 . 1402) (punctuation 1393 . 1394) (TEMPLATE 1384 . 1392) (USING 1218 . 1223) (USING 1156 . 1161) (USING 1086 . 1091) (USING 1021 . 1026) (USING 956 . 961) (USING 891 . 896) (semantic-list 547 . 555) (symbol 532 . 547) (semantic-list 395 . 415) (symbol 380 . 395) (symbol 279 . 283) (symbol 272 . 278) (punctuation 271 . 272) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "str" 1 . 5)))) 34466 . 34543) (symbol "PYBIND11_DEPRECATED" 34466 . 34543) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterable" 1 . 5)))) 34340 . 34407) (symbol "PYBIND11_DEPRECATED" 34340 . 34407) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterable" 1 . 5)))) 34340 . 34407) (symbol "PYBIND11_DEPRECATED" 34340 . 34407) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyIter_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterator" 1 . 5)))) 32958 . 33013) (symbol "PYBIND11_DEPRECATED" 32958 . 33013) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyIter_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterator" 1 . 5)))) 32958 . 33013) (symbol "PYBIND11_DEPRECATED" 32958 . 33013) (punctuation 32951 . 32952) (punctuation 32950 . 32951) (symbol 32943 . 32949) (CONST 32937 . 32942) (punctuation 32935 . 32936) (symbol 32927 . 32934) (USING 32921 . 32926) (punctuation 32901 . 32902) (symbol 32891 . 32900) (USING 32885 . 32890) (USING 32854 . 32859) (USING 32817 . 32822) (punctuation 32786 . 32787) (symbol 32768 . 32785) (USING 32762 . 32767) (semantic-list 30308 . 30316) (symbol 30295 . 30308) (punctuation 30265 . 30266) (symbol 30246 . 30265) (punctuation 30245 . 30246) (punctuation 30244 . 30245) (symbol 30225 . 30244) (punctuation 30223 . 30224) (symbol 30216 . 30222) (symbol 30196 . 30215) (punctuation 30195 . 30196) (TEMPLATE 30186 . 30194) (punctuation 30160 . 30161) (symbol 30141 . 30160) (punctuation 30140 . 30141) (punctuation 30139 . 30140) (symbol 30120 . 30139) (punctuation 30118 . 30119) (symbol 30111 . 30117) (symbol 30091 . 30110) (punctuation 30090 . 30091) (TEMPLATE 30081 . 30089) (USING 29957 . 29962) (punctuation 29955 . 29956) (symbol 29954 . 29955) (TYPENAME 29945 . 29953) (punctuation 29944 . 29945) (TEMPLATE 29935 . 29943) (USING 29841 . 29846) (punctuation 29839 . 29840) (symbol 29838 . 29839) (TYPENAME 29829 . 29837) (punctuation 29828 . 29829) (TEMPLATE 29819 . 29827) (USING 29748 . 29753) (punctuation 29746 . 29747) (symbol 29745 . 29746) (TYPENAME 29736 . 29744) (punctuation 29735 . 29736) (TEMPLATE 29726 . 29734) (USING 29659 . 29664) (punctuation 29657 . 29658) (symbol 29656 . 29657) (TYPENAME 29647 . 29655) (punctuation 29646 . 29647) (TEMPLATE 29637 . 29645) (USING 29593 . 29598) (punctuation 29591 . 29592) (symbol 29590 . 29591) (TYPENAME 29581 . 29589) (punctuation 29580 . 29581) (TEMPLATE 29571 . 29579) (EXPLICIT 29401 . 29409) (EXPLICIT 29302 . 29310) (USING 28680 . 28685) (USING 28592 . 28597) (USING 28326 . 28331) (USING 28242 . 28247) (semantic-list 28194 . 28213) (symbol 28181 . 28194) (punctuation 27802 . 27803) (DEFAULT 27795 . 27802) (punctuation 27793 . 27794) (semantic-list 27790 . 27792) (symbol 27777 . 27790) (punctuation 27739 . 27740) (symbol 27731 . 27738) (USING 27725 . 27730) (punctuation 27701 . 27702) (symbol 27691 . 27700) (USING 27685 . 27690) (punctuation 27652 . 27653) (symbol 27641 . 27651) (USING 27635 . 27640) (punctuation 27602 . 27603) (symbol 27584 . 27601) (USING 27578 . 27583) (punctuation 26927 . 26928) (symbol 26919 . 26926) (USING 26913 . 26918) (USING 26872 . 26877) (USING 26841 . 26846) (punctuation 26802 . 26803) (symbol 26784 . 26801) (USING 26778 . 26783) (punctuation 26151 . 26152) (symbol 26143 . 26150) (USING 26137 . 26142) (punctuation 26117 . 26118) (symbol 26107 . 26116) (USING 26101 . 26106) (USING 26070 . 26075) (punctuation 26031 . 26032) (symbol 26013 . 26030) (USING 26007 . 26012) (punctuation 25783 . 25784) (semantic-list 25588 . 25607) (symbol 25573 . 25588) (punctuation 24069 . 24070) (DEFAULT 24062 . 24069) (punctuation 24060 . 24061) (semantic-list 24057 . 24059) (symbol 24041 . 24057) (punctuation 24008 . 24009) (symbol 24000 . 24007) (USING 23994 . 23999) (punctuation 23960 . 23961) (symbol 23950 . 23959) (USING 23944 . 23949) (punctuation 23909 . 23910) (symbol 23898 . 23908) (USING 23892 . 23897) (punctuation 23850 . 23851) (symbol 23832 . 23849) (USING 23826 . 23831) (USING 23789 . 23794) (USING 23747 . 23752) (semantic-list 23588 . 23607) (symbol 23575 . 23588) (USING 23035 . 23040) (USING 22473 . 22478) (USING 21903 . 21908) (USING 21459 . 21464) (punctuation 21257 . 21258) (punctuation 21256 . 21257) (CHAR 21251 . 21255) (CONST 21245 . 21250) (punctuation 21243 . 21244) (symbol 21234 . 21242) (USING 21228 . 21233) (USING 21017 . 21022) (semantic-list 20975 . 20994) (symbol 20960 . 20975) (USING 21017 . 21022) (USING 21017 . 21022) (OPERATOR 20573 . 20581) (OPERATOR 20434 . 20442) (EXPLICIT 20425 . 20433) (semantic-list 20349 . 20420) (symbol 20330 . 20349) (string 20350 . 20419) (punctuation 20324 . 20325) (symbol 20318 . 20324) (punctuation 20316 . 20317) (symbol 20314 . 20315) (TYPENAME 20305 . 20313) (punctuation 20304 . 20305) (TEMPLATE 20295 . 20303) (string 20350 . 20419) (semantic-list 20249 . 20290) (CONST 20243 . 20248) (semantic-list 20240 . 20242) (punctuation 20239 . 20240) (BOOL 20235 . 20239) (punctuation 20233 . 20234) (symbol 20228 . 20233) (punctuation 20227 . 20228) (punctuation 20226 . 20227) (punctuation 20225 . 20226) (symbol 20217 . 20225) (punctuation 20216 . 20217) (punctuation 20215 . 20216) (symbol 20198 . 20215) (punctuation 20196 . 20197) (symbol 20195 . 20196) (punctuation 20194 . 20195) (symbol 20187 . 20194) (punctuation 20186 . 20187) (punctuation 20185 . 20186) (symbol 20182 . 20185) (punctuation 20168 . 20169) (punctuation 20167 . 20168) (symbol 20161 . 20166) (punctuation 20160 . 20161) (punctuation 20159 . 20160) (punctuation 20158 . 20159) (symbol 20150 . 20158) (punctuation 20149 . 20150) (punctuation 20148 . 20149) (symbol 20131 . 20148) (punctuation 20129 . 20130) (symbol 20128 . 20129) (punctuation 20127 . 20128) (symbol 20120 . 20127) (punctuation 20119 . 20120) (punctuation 20118 . 20119) (symbol 20115 . 20118) (punctuation 20114 . 20115) (symbol 20103 . 20114) (OPERATOR 20094 . 20102) (EXPLICIT 20085 . 20093) (semantic-list 19994 . 20080) (symbol 19975 . 19994) (string 19995 . 20079) (punctuation 19969 . 19970) (symbol 19963 . 19969) (punctuation 19961 . 19962) (symbol 19959 . 19960) (TYPENAME 19950 . 19958) (punctuation 19949 . 19950) (TEMPLATE 19940 . 19948) (string 19995 . 20079) (semantic-list 19837 . 19934) (punctuation 19835 . 19836) (semantic-list 19823 . 19834) (punctuation 19822 . 19823) (OPERATOR 19814 . 19822) (punctuation 19827 . 19828) (VOID 19809 . 19813) (punctuation 19827 . 19828) (punctuation 19807 . 19808) (symbol 19806 . 19807) (TYPENAME 19797 . 19805) (punctuation 19796 . 19797) (TEMPLATE 19787 . 19795) (punctuation 19827 . 19828) (semantic-list 19704 . 19782) (punctuation 19702 . 19703) (punctuation 19701 . 19702) (semantic-list 19689 . 19700) (punctuation 19688 . 19689) (OPERATOR 19680 . 19688) (punctuation 19693 . 19694) (VOID 19675 . 19679) (punctuation 19693 . 19694) (punctuation 19673 . 19674) (symbol 19672 . 19673) (TYPENAME 19663 . 19671) (punctuation 19662 . 19663) (TEMPLATE 19653 . 19661) (punctuation 19693 . 19694) (semantic-list 19622 . 19647) (punctuation 19620 . 19621) (semantic-list 19600 . 19619) (punctuation 19599 . 19600) (OPERATOR 19591 . 19599) (VOID 19586 . 19590) (semantic-list 19539 . 19581) (punctuation 19537 . 19538) (punctuation 19536 . 19537) (semantic-list 19516 . 19535) (punctuation 19515 . 19516) (OPERATOR 19507 . 19515) (VOID 19502 . 19506) (punctuation 19335 . 19336) (DEFAULT 19328 . 19335) (punctuation 19326 . 19327) (semantic-list 19312 . 19325) (symbol 19304 . 19312) (punctuation 19323 . 19324) (punctuation 19298 . 19299) (DEFAULT 19291 . 19298) (punctuation 19289 . 19290) (semantic-list 19270 . 19288) (symbol 19262 . 19270) (punctuation 19145 . 19146) (symbol 19136 . 19144) (USING 19130 . 19135) (punctuation 18881 . 18882) (punctuation 18854 . 18855) (number 18853 . 18854) (punctuation 18851 . 18852) (punctuation 18849 . 18850) (INT 18846 . 18849) (punctuation 18844 . 18845) (symbol 18839 . 18844) (punctuation 18838 . 18839) (punctuation 18837 . 18838) (punctuation 18836 . 18837) (symbol 18835 . 18836) (punctuation 18834 . 18835) (symbol 18823 . 18834) (punctuation 18822 . 18823) (punctuation 18821 . 18822) (symbol 18810 . 18821) (punctuation 18808 . 18809) (symbol 18807 . 18808) (TYPENAME 18798 . 18806) (punctuation 18797 . 18798) (TEMPLATE 18788 . 18796) (semantic-list 18693 . 18696) (punctuation 18667 . 18668) (punctuation 18666 . 18667) (semantic-list 18658 . 18665) (symbol 18644 . 18658) (punctuation 18662 . 18663) (symbol 18639 . 18643) (punctuation 18662 . 18663) (punctuation 18637 . 18638) (number 18636 . 18637) (punctuation 18634 . 18635) (punctuation 18632 . 18633) (INT 18629 . 18632) (punctuation 18627 . 18628) (symbol 18622 . 18627) (punctuation 18621 . 18622) (punctuation 18620 . 18621) (punctuation 18619 . 18620) (symbol 18618 . 18619) (punctuation 18617 . 18618) (symbol 18606 . 18617) (punctuation 18605 . 18606) (symbol 18594 . 18605) (punctuation 18592 . 18593) (symbol 18591 . 18592) (TYPENAME 18582 . 18590) (punctuation 18581 . 18582) (TEMPLATE 18572 . 18580) (semantic-list 17957 . 17965) (symbol 17942 . 17957) (punctuation 15539 . 15540) (DELETE 15533 . 15539) (punctuation 15531 . 15532) (semantic-list 15518 . 15530) (punctuation 15517 . 15518) (symbol 15511 . 15517) (punctuation 15510 . 15511) (symbol 15500 . 15510) (BOOL 15495 . 15499) (INLINE 15488 . 15494) (punctuation 15486 . 15487) (punctuation 15485 . 15486) (TEMPLATE 15476 . 15484) (punctuation 15390 . 15391) (number 15389 . 15390) (punctuation 15387 . 15388) (punctuation 15385 . 15386) (INT 15382 . 15385) (punctuation 15380 . 15381) (symbol 15375 . 15380) (punctuation 15374 . 15375) (punctuation 15373 . 15374) (punctuation 15372 . 15373) (symbol 15371 . 15372) (punctuation 15369 . 15370) (symbol 15363 . 15369) (punctuation 15362 . 15363) (symbol 15352 . 15362) (punctuation 15351 . 15352) (punctuation 15350 . 15351) (symbol 15347 . 15350) (punctuation 15346 . 15347) (punctuation 15345 . 15346) (symbol 15334 . 15345) (punctuation 15333 . 15334) (punctuation 15332 . 15333) (symbol 15326 . 15332) (punctuation 15324 . 15325) (symbol 15323 . 15324) (TYPENAME 15314 . 15322) (punctuation 15313 . 15314) (TEMPLATE 15304 . 15312) (punctuation 15246 . 15247) (number 15245 . 15246) (punctuation 15243 . 15244) (punctuation 15241 . 15242) (INT 15238 . 15241) (punctuation 15236 . 15237) (symbol 15231 . 15236) (punctuation 15230 . 15231) (punctuation 15229 . 15230) (punctuation 15228 . 15229) (symbol 15227 . 15228) (punctuation 15225 . 15226) (symbol 15219 . 15225) (punctuation 15218 . 15219) (symbol 15208 . 15218) (punctuation 15207 . 15208) (punctuation 15206 . 15207) (symbol 15203 . 15206) (punctuation 15202 . 15203) (symbol 15191 . 15202) (punctuation 15190 . 15191) (punctuation 15189 . 15190) (symbol 15183 . 15189) (punctuation 15181 . 15182) (symbol 15180 . 15181) (TYPENAME 15171 . 15179) (punctuation 15170 . 15171) (TEMPLATE 15161 . 15169) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 13108 . 13116) (symbol 13095 . 13108) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 13051 . 13059) (symbol 13036 . 13051) (punctuation 11622 . 11623) (punctuation 11621 . 11622) (punctuation 11620 . 11621) (semantic-list 11617 . 11619) (symbol 11613 . 11617) (symbol 11611 . 11612) (punctuation 11609 . 11610) (symbol 11608 . 11609) (TYPENAME 11599 . 11607) (punctuation 11598 . 11599) (TEMPLATE 11589 . 11597) (punctuation 11509 . 11510) (punctuation 11508 . 11509) (CONST 11502 . 11507) (semantic-list 11499 . 11501) (symbol 11495 . 11499) (symbol 11493 . 11494) (punctuation 11491 . 11492) (symbol 11490 . 11491) (TYPENAME 11481 . 11489) (punctuation 11480 . 11481) (TEMPLATE 11471 . 11479) (semantic-list 11195 . 11392) (symbol 11186 . 11194) (semantic-list 11169 . 11185) (punctuation 11168 . 11169) (OPERATOR 11160 . 11168) (punctuation 11178 . 11179) (punctuation 11158 . 11159) (symbol 11152 . 11158) (punctuation 11178 . 11179) (semantic-list 10538 . 10585) (symbol 10529 . 10537) (semantic-list 10512 . 10528) (symbol 10506 . 10512) (punctuation 10521 . 10522) (semantic-list 10140 . 10207) (symbol 10121 . 10140) (string 10141 . 10206) (punctuation 10115 . 10116) (DEFAULT 10108 . 10115) (punctuation 10106 . 10107) (semantic-list 10103 . 10105) (symbol 10097 . 10103) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 7002 . 7010) (symbol 6989 . 7002) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 6510 . 6538) (symbol 6491 . 6510) (string 6511 . 6537) (punctuation 4598 . 4599) (punctuation 4597 . 4598) (punctuation 4596 . 4597) (punctuation 4595 . 4596) (semantic-list 4513 . 4569) (symbol 4494 . 4513) (string 4514 . 4568) (punctuation 4488 . 4489) (symbol 4484 . 4488) (punctuation 4482 . 4483) (punctuation 4481 . 4482) (punctuation 4480 . 4481) (TYPENAME 4472 . 4480) (punctuation 4470 . 4471) (symbol 4451 . 4470) (punctuation 4450 . 4451) (punctuation 4449 . 4450) (symbol 4430 . 4449) (punctuation 4428 . 4429) (symbol 4421 . 4427) (symbol 4401 . 4420) (punctuation 4400 . 4401) (TEMPLATE 4391 . 4399) (punctuation 4373 . 4374) (punctuation 4372 . 4373) (punctuation 4371 . 4372) (punctuation 4370 . 4371) (punctuation 4340 . 4341) (symbol 4336 . 4340) (punctuation 4334 . 4335) (punctuation 4333 . 4334) (punctuation 4332 . 4333) (TYPENAME 4324 . 4332) (punctuation 4322 . 4323) (symbol 4303 . 4322) (punctuation 4302 . 4303) (punctuation 4301 . 4302) (symbol 4282 . 4301) (punctuation 4280 . 4281) (symbol 4273 . 4279) (symbol 4253 . 4272) (punctuation 4252 . 4253) (TEMPLATE 4243 . 4251) (punctuation 3657 . 3658) (USING 1406 . 1411) (punctuation 1404 . 1405) (symbol 1403 . 1404) (TYPENAME 1394 . 1402) (punctuation 1393 . 1394) (TEMPLATE 1384 . 1392) (USING 1218 . 1223) (USING 1156 . 1161) (USING 1086 . 1091) (USING 1021 . 1026) (USING 956 . 961) (USING 891 . 896) (semantic-list 547 . 555) (symbol 532 . 547) (semantic-list 395 . 415) (symbol 380 . 395) (symbol 279 . 283) (symbol 272 . 278) (punctuation 271 . 272) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 13051 . 13059) (symbol 13036 . 13051) (punctuation 11622 . 11623) (punctuation 11621 . 11622) (punctuation 11620 . 11621) (semantic-list 11617 . 11619) (symbol 11613 . 11617) (symbol 11611 . 11612) (punctuation 11609 . 11610) (symbol 11608 . 11609) (TYPENAME 11599 . 11607) (punctuation 11598 . 11599) (TEMPLATE 11589 . 11597) (punctuation 11509 . 11510) (punctuation 11508 . 11509) (CONST 11502 . 11507) (semantic-list 11499 . 11501) (symbol 11495 . 11499) (symbol 11493 . 11494) (punctuation 11491 . 11492) (symbol 11490 . 11491) (TYPENAME 11481 . 11489) (punctuation 11480 . 11481) (TEMPLATE 11471 . 11479) (semantic-list 11195 . 11392) (symbol 11186 . 11194) (semantic-list 11169 . 11185) (punctuation 11168 . 11169) (OPERATOR 11160 . 11168) (punctuation 11178 . 11179) (punctuation 11158 . 11159) (symbol 11152 . 11158) (punctuation 11178 . 11179) (semantic-list 10538 . 10585) (symbol 10529 . 10537) (semantic-list 10512 . 10528) (symbol 10506 . 10512) (punctuation 10521 . 10522) (semantic-list 10140 . 10207) (symbol 10121 . 10140) (string 10141 . 10206) (punctuation 10115 . 10116) (DEFAULT 10108 . 10115) (punctuation 10106 . 10107) (semantic-list 10103 . 10105) (symbol 10097 . 10103) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 7002 . 7010) (symbol 6989 . 7002) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 6510 . 6538) (symbol 6491 . 6510) (string 6511 . 6537) (punctuation 4598 . 4599) (punctuation 4597 . 4598) (punctuation 4596 . 4597) (punctuation 4595 . 4596) (semantic-list 4513 . 4569) (symbol 4494 . 4513) (string 4514 . 4568) (punctuation 4488 . 4489) (symbol 4484 . 4488) (punctuation 4482 . 4483) (punctuation 4481 . 4482) (punctuation 4480 . 4481) (TYPENAME 4472 . 4480) (punctuation 4470 . 4471) (symbol 4451 . 4470) (punctuation 4450 . 4451) (punctuation 4449 . 4450) (symbol 4430 . 4449) (punctuation 4428 . 4429) (symbol 4421 . 4427) (symbol 4401 . 4420) (punctuation 4400 . 4401) (TEMPLATE 4391 . 4399) (punctuation 4373 . 4374) (punctuation 4372 . 4373) (punctuation 4371 . 4372) (punctuation 4370 . 4371) (punctuation 4340 . 4341) (symbol 4336 . 4340) (punctuation 4334 . 4335) (punctuation 4333 . 4334) (punctuation 4332 . 4333) (TYPENAME 4324 . 4332) (punctuation 4322 . 4323) (symbol 4303 . 4322) (punctuation 4302 . 4303) (punctuation 4301 . 4302) (symbol 4282 . 4301) (punctuation 4280 . 4281) (symbol 4273 . 4279) (symbol 4253 . 4272) (punctuation 4252 . 4253) (TEMPLATE 4243 . 4251) (punctuation 3657 . 3658) (USING 1406 . 1411) (punctuation 1404 . 1405) (symbol 1403 . 1404) (TYPENAME 1394 . 1402) (punctuation 1393 . 1394) (TEMPLATE 1384 . 1392) (USING 1218 . 1223) (USING 1156 . 1161) (USING 1086 . 1091) (USING 1021 . 1026) (USING 956 . 961) (USING 891 . 896) (semantic-list 547 . 555) (symbol 532 . 547) (semantic-list 395 . 415) (symbol 380 . 395) (symbol 279 . 283) (symbol 272 . 278) (punctuation 271 . 272))
      :lexical-table 
        '(("PYBIND11_OBJECT_COMMON" (spp-arg-list ("Name" "Parent" "CheckFun") 30638 . 30662) . 
              ((PUBLIC "public" 30669 . 30675) (punctuation ":" 30675 . 30676) (symbol "PYBIND11_DEPRECATED" 30687 . 30706) (semantic-list "(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 30706 . 30775) (symbol "Name" 30786 . 30790) (semantic-list "(handle h, bool is_borrowed)" 30790 . 30818) (punctuation ":" 30819 . 30820) (symbol "Parent" 30821 . 30827) (semantic-list "(is_borrowed ? Parent(h, borrowed_t{}) : Parent(h, stolen_t{}))" 30827 . 30890) (semantic-list "{ }" 30891 . 30894) (symbol "Name" 30905 . 30909) (semantic-list "(handle h, borrowed_t)" 30909 . 30931) (punctuation ":" 30932 . 30933) (symbol "Parent" 30934 . 30940) (semantic-list "(h, borrowed_t{})" 30940 . 30957) (semantic-list "{ }" 30958 . 30961) (symbol "Name" 30972 . 30976) (semantic-list "(handle h, stolen_t)" 30976 . 30996) (punctuation ":" 30997 . 30998) (symbol "Parent" 30999 . 31005) (semantic-list "(h, stolen_t{})" 31005 . 31020) (semantic-list "{ }" 31021 . 31024) (symbol "PYBIND11_DEPRECATED" 31035 . 31054) (semantic-list "(\"Use py::isinstance<py::python_type>(obj) instead\")" 31054 . 31106) (BOOL "bool" 31117 . 31121) (symbol "check" 31122 . 31127) (semantic-list "()" 31127 . 31129) (CONST "const" 31130 . 31135) (semantic-list "{ return m_ptr != nullptr && (bool) CheckFun(m_ptr); }" 31136 . 31190) (STATIC "static" 31201 . 31207) (BOOL "bool" 31208 . 31212) (symbol "check_" 31213 . 31219) (semantic-list "(handle h)" 31219 . 31229) (semantic-list "{ return h.ptr() != nullptr && CheckFun(h.ptr()); }" 31230 . 31281)))
          ("PYBIND11_OBJECT_CVT" (spp-arg-list ("Name" "Parent" "CheckFun" "ConvertFun") 31310 . 31346) . 
              ((symbol "PYBIND11_OBJECT_COMMON" 31353 . 31375) (semantic-list "(Name, Parent, CheckFun)" 31375 . 31399) (symbol "Name" 31496 . 31500) (semantic-list "(const object &o)" 31500 . 31517) (punctuation ":" 31524 . 31525) (symbol "Parent" 31526 . 31532) (semantic-list "(check_(o) ? o.inc_ref().ptr() : ConvertFun(o.ptr()), stolen_t{})" 31532 . 31597) (semantic-list "{ if (!m_ptr) throw error_already_set(); }" 31604 . 31646) (symbol "Name" 31653 . 31657) (semantic-list "(object &&o)" 31657 . 31669) (punctuation ":" 31676 . 31677) (symbol "Parent" 31678 . 31684) (semantic-list "(check_(o) ? o.release().ptr() : ConvertFun(o.ptr()), stolen_t{})" 31684 . 31749) (semantic-list "{ if (!m_ptr) throw error_already_set(); }" 31756 . 31798) (TEMPLATE "template" 31805 . 31813) (punctuation "<" 31814 . 31815) (TYPENAME "typename" 31815 . 31823) (symbol "Policy_" 31824 . 31831) (punctuation ">" 31831 . 31832) (symbol "Name" 31839 . 31843) (semantic-list "(const ::pybind11::detail::accessor<Policy_> &a)" 31843 . 31891) (punctuation ":" 31892 . 31893) (symbol "Name" 31894 . 31898) (semantic-list "(object(a))" 31898 . 31909) (semantic-list "{ }" 31910 . 31913)))
          ("PYBIND11_OBJECT" (spp-arg-list ("Name" "Parent" "CheckFun") 31938 . 31962) . 
              ((symbol "PYBIND11_OBJECT_COMMON" 31969 . 31991) (semantic-list "(Name, Parent, CheckFun)" 31991 . 32015) (symbol "Name" 32112 . 32116) (semantic-list "(const object &o)" 32116 . 32133) (punctuation ":" 32134 . 32135) (symbol "Parent" 32136 . 32142) (semantic-list "(o)" 32142 . 32145) (semantic-list "{ }" 32146 . 32149) (symbol "Name" 32156 . 32160) (semantic-list "(object &&o)" 32160 . 32172) (punctuation ":" 32173 . 32174) (symbol "Parent" 32175 . 32181) (semantic-list "(std::move(o))" 32181 . 32195) (semantic-list "{ }" 32196 . 32199)))
          ("PYBIND11_OBJECT_DEFAULT" (spp-arg-list ("Name" "Parent" "CheckFun") 32232 . 32256) . 
              ((symbol "PYBIND11_OBJECT" 32263 . 32278) (semantic-list "(Name, Parent, CheckFun)" 32278 . 32302) (symbol "Name" 32309 . 32313) (semantic-list "()" 32313 . 32315) (punctuation ":" 32316 . 32317) (symbol "Parent" 32318 . 32324) (semantic-list "()" 32324 . 32326) (semantic-list "{ }" 32327 . 32330)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("detail/common.h" include nil nil [269 295])
            ("buffer_info" type
               (:members 
                  ( ("ptr" variable
                       (:pointer 1
                        :default-value "nullptr"
                        :type "void")
                        (reparse-symbol classsubparts) [416 436])
                    ("itemsize" variable
                       (:default-value "0"
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [487 508])
                    ("size" variable
                       (:default-value "0"
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [558 575])
                    ("format" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [619 638])
                    ("ndim" variable
                       (:default-value "0"
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [734 751])
                    ("shape" variable (:type ("std::vector" type
                         (:template-specifier 
                            ( ("ssize_t" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [792 819])
                    ("strides" variable (:type ("std::vector" type
                         (:template-specifier 
                            ( ("ssize_t" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [873 902])
                    ("readonly" variable
                       (:default-value "false"
                        :type "bool")
                        (reparse-symbol classsubparts) [976 998])
                    ("buffer_info" function
                       (:constructor-flag t
                        :type ("buffer_info" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [1075 1092])
                    ("buffer_info" function
                       (:constructor-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [1110 1120])
                            ("itemsize" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1121 1138])
                            ("format" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1139 1165])
                            ("ndim" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1166 1179])
                            ("shape_in" variable (:type ("detail::any_container" type
                                 (:template-specifier 
                                    ( ("ssize_t" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [1196 1236])
                            ("strides_in" variable (:type ("detail::any_container" type
                                 (:template-specifier 
                                    ( ("ssize_t" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [1237 1279])
                            ("readonly" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [1280 1299]))                          
                        :type ("buffer_info" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [1098 1717])
                    ("buffer_info" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("buffer_info" type (:type "struct") nil nil)
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1761 1768])
                            ("shape_in" variable (:type ("detail::any_container" type
                                 (:template-specifier 
                                    ( ("ssize_t" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [1769 1809])
                            ("strides_in" variable (:type ("detail::any_container" type
                                 (:template-specifier 
                                    ( ("ssize_t" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [1810 1852])
                            ("readonly" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [1853 1872]))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [1723 2056])
                    ("buffer_info" function
                       (:constructor-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [2074 2084])
                            ("itemsize" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2085 2102])
                            ("format" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2103 2129])
                            ("size" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2130 2143])
                            ("readonly" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [2144 2163]))                          
                        :type ("buffer_info" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [2062 2242])
                    ("buffer_info" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("buffer_info" type (:type "struct") nil nil)
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2286 2293])
                            ("size" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2294 2307])
                            ("readonly" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [2308 2327]))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [2248 2414])
                    ("buffer_info" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("buffer_info" type (:type "struct") nil nil)
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2458 2471])
                            ("size" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2472 2485])
                            ("readonly" variable
                               (:default-value "true"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [2486 2504]))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [2420 2607])
                    ("buffer_info" function
                       (:constructor-flag t
                        :arguments 
                          ( ("view" variable
                               (:pointer 1
                                :type ("Py_buffer" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2634 2650])
                            ("ownview" variable
                               (:default-value "true"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [2651 2670]))                          
                        :type ("buffer_info" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [2622 2924])
                    ("buffer_info" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("buffer_info" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3048 3062])
                            ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3062 3068]))                          
                        :type ("buffer_info" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [3036 3112])
                    ("=" function
                       (:operator-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("buffer_info" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3141 3155])
                            ("" variable (:type ("rhs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3155 3159]))                          
                        :type ("buffer_info" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3118 3524])
                    ("buffer_info" function
                       (:destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3530 3622])
                    ("private" label nil (reparse-symbol classsubparts) [3624 3632])
                    ("private_ctr_tag" type (:type "struct") (reparse-symbol classsubparts) [3637 3664])
                    ("buffer_info" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable (:type ("private_ctr_tag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3682 3698])
                            ("ptr" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [3699 3709])
                            ("itemsize" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3710 3727])
                            ("format" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3728 3754])
                            ("ndim" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3755 3768])
                            ("" variable
                               (:reference 1
                                :type ("detail::any_container" type
                                     (:template-specifier 
                                        ( ("ssize_t" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [3785 3818])
                            ("" variable (:type ("shape_in" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3818 3827])
                            ("" variable
                               (:reference 1
                                :type ("detail::any_container" type
                                     (:template-specifier 
                                        ( ("ssize_t" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [3828 3861])
                            ("" variable (:type ("strides_in" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3861 3872])
                            ("readonly" variable (:type "bool") (reparse-symbol arg-sub-list) [3873 3887]))                          
                        :type ("buffer_info" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [3670 3992])
                    ("view" variable
                       (:pointer 1
                        :default-value "nullptr"
                        :type ("Py_buffer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3998 4024])
                    ("ownview" variable
                       (:default-value "false"
                        :type "bool")
                        (reparse-symbol classsubparts) [4029 4050]))                  
                :type "struct")
                nil [391 4053])
            ("compare_buffer_info" type
               (:members 
                  ( ("compare" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("buffer_info" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4179 4200]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [4159 4304]))                  
                :type "struct")
                nil [4126 4307])
            ("compare_buffer_info" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("compare" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("buffer_info" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4436 4457]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [4416 4763]))                  
                :template-specifier 
                  ( ("T" type nil nil nil)
                    ("detail::enable_if_t" type (:template-specifier 
                      ( ("std::is_integral::value" type nil nil nil))                      ) nil nil))                  )
                nil [4309 4766]))          
      :file "buffer_info.h"
      :pointmax 4824
      :fsize 4823
      :lastmodtime '(24269 8311 822259 25000)
      :unmatched-syntax '((semantic-list 4803 . 4823) (symbol 4790 . 4803) (semantic-list 4781 . 4789) (symbol 4768 . 4781) (punctuation 4124 . 4125) (VOID 4120 . 4124) (punctuation 4118 . 4119) (symbol 4111 . 4117) (TYPENAME 4102 . 4110) (punctuation 4100 . 4101) (symbol 4099 . 4100) (TYPENAME 4090 . 4098) (punctuation 4089 . 4090) (TEMPLATE 4080 . 4088) (semantic-list 4070 . 4078) (symbol 4055 . 4070) (punctuation 3860 . 3861) (punctuation 3817 . 3818) (punctuation 3154 . 3155) (punctuation 3061 . 3062) (punctuation 3029 . 3030) (DELETE 3023 . 3029) (punctuation 3021 . 3022) (semantic-list 2999 . 3020) (punctuation 2998 . 2999) (OPERATOR 2990 . 2998) (punctuation 2988 . 2989) (symbol 2977 . 2988) (punctuation 2971 . 2972) (DELETE 2965 . 2971) (punctuation 2963 . 2964) (semantic-list 2941 . 2962) (symbol 2930 . 2941) (EXPLICIT 2613 . 2621) (semantic-list 312 . 332) (symbol 297 . 312) (punctuation 3860 . 3861) (punctuation 3817 . 3818) (punctuation 3154 . 3155) (punctuation 3061 . 3062) (punctuation 3029 . 3030) (DELETE 3023 . 3029) (punctuation 3021 . 3022) (semantic-list 2999 . 3020) (punctuation 2998 . 2999) (OPERATOR 2990 . 2998) (punctuation 2988 . 2989) (symbol 2977 . 2988) (punctuation 2971 . 2972) (DELETE 2965 . 2971) (punctuation 2963 . 2964) (semantic-list 2941 . 2962) (symbol 2930 . 2941) (EXPLICIT 2613 . 2621) (punctuation 3860 . 3861) (punctuation 3817 . 3818) (punctuation 3154 . 3155) (punctuation 3061 . 3062) (punctuation 3029 . 3030) (DELETE 3023 . 3029) (punctuation 3021 . 3022) (semantic-list 2999 . 3020) (punctuation 2998 . 2999) (OPERATOR 2990 . 2998) (punctuation 2988 . 2989) (symbol 2977 . 2988) (punctuation 2971 . 2972) (DELETE 2965 . 2971) (punctuation 2963 . 2964) (semantic-list 2941 . 2962) (symbol 2930 . 2941) (EXPLICIT 2613 . 2621) (symbol 263 . 267) (symbol 256 . 262) (punctuation 255 . 256)))
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("numpy.h" include nil nil [291 309])
            ("Eigen/Core" include (:system-flag t) nil [1220 1241])
            ("Eigen/SparseCore" include (:system-flag t) nil [1242 1269])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("EIGEN_VERSION_AT_LEAST" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1526 1555]))                  
                :type "int")
                nil [1512 1610])
            ("Eigen::Stride" variable (:type "int") nil [1758 1804])
            ("Eigen::Ref" variable (:type "int") nil [1854 1894])
            ("Eigen::Map" variable (:type "int") nil [1944 1984])
            ("EIGEN_DEFAULT_DENSE_INDEX_TYPE" variable (:type "int") nil [2103 2134])
            ("all_of" variable (:type "int") nil [2240 2354])
            ("std::is_base_of" variable (:type "int") nil [2406 2467])
            ("all_of" variable (:type "int") nil [2519 2607])
            ("is_template_base_of" variable (:type "int") nil [2654 2702])
            ("all_of" variable (:type "int") nil [3080 3225])
            ("EigenConformable" type
               (:template 
                  ( ("bool" type (:typevar "EigenRowMajor") nil nil))                  
                :type "struct"
                :members 
                  ( ("conformable" variable
                       (:default-value "false"
                        :type "bool")
                        (reparse-symbol classsubparts) [3374 3399])
                    ("rows" variable
                       (:default-value "0"
                        :type ("EigenIndex" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3404 3434])
                    ("cols" variable
                       (:default-value "0"
                        :type ("EigenIndex" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3404 3434])
                    ("stride" variable (:type ("EigenDStride" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3439 3465])
                    ("negativestrides" variable
                       (:default-value "false"
                        :type "bool")
                        (reparse-symbol classsubparts) [3518 3547])
                    ("EigenConformable" function
                       (:constructor-flag t
                        :arguments 
                          ( ("fits" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [3603 3620]))                          
                        :type ("EigenConformable" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [3586 3644])
                    ("EigenConformable" function
                       (:constructor-flag t
                        :arguments 
                          ( ("r" variable (:type ("EigenIndex" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3686 3699])
                            ("c" variable (:type ("EigenIndex" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3700 3713])
                            ("rstride" variable (:type ("EigenIndex" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3726 3745])
                            ("cstride" variable (:type ("EigenIndex" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3746 3765]))                          
                        :type ("EigenConformable" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [3669 4212])
                    ("EigenConformable" function
                       (:constructor-flag t
                        :arguments 
                          ( ("r" variable (:type ("EigenIndex" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4254 4267])
                            ("c" variable (:type ("EigenIndex" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4268 4281])
                            ("stride" variable (:type ("EigenIndex" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4282 4300]))                          
                        :type ("EigenConformable" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [4237 4387])
                    ("stride_compatible" function
                       (:template 
                          ( ("props" type (:type "class") nil nil))                          
                        :type "bool"
                        :methodconst-flag t)
                        (reparse-symbol classsubparts) [4393 5001]))                  )
                nil [3314 5054])
            ("eigen_extract_stride" type
               (:template 
                  ( ("Type" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("type" variable
                       (:default-value "Type"
                        :type "int")
                        (reparse-symbol classsubparts) [5117 5129]))                  )
                nil [5056 5132])
            ("eigen_extract_stride" type
               (:template 
                  ( ("PlainObjectType" type (:type "class") nil nil)
                    ("int" type (:typevar "MapOptions") nil nil)
                    ("StrideType" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("type" variable
                       (:default-value "StrideType"
                        :type "int")
                        (reparse-symbol classsubparts) [5295 5313]))                  
                :template-specifier 
                  ( ("Eigen::Map" type (:template-specifier 
                      ( ("PlainObjectType" type nil nil nil)
                        ("MapOptions" type nil nil nil)
                        ("StrideType" type nil nil nil))                      ) nil nil))                  )
                nil [5133 5316])
            ("eigen_extract_stride" type
               (:template 
                  ( ("PlainObjectType" type (:type "class") nil nil)
                    ("int" type (:typevar "Options") nil nil)
                    ("StrideType" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("type" variable
                       (:default-value "StrideType"
                        :type "int")
                        (reparse-symbol classsubparts) [5473 5491]))                  
                :template-specifier 
                  ( ("Eigen::Ref" type (:template-specifier 
                      ( ("PlainObjectType" type nil nil nil)
                        ("Options" type nil nil nil)
                        ("StrideType" type nil nil nil))                      ) nil nil))                  )
                nil [5317 5494])
            ("EigenProps" type
               (:template 
                  ( ("Type_" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("Type" variable
                       (:default-value "Type_"
                        :type "int")
                        (reparse-symbol classsubparts) [5615 5628])
                    ("Type::Scalar" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [5648 5670])
                    ("eigen_extract_stride::type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [5694 5736])
                    ("Type::SizeAtCompileTime" variable (:type "int") (reparse-symbol classsubparts) [5864 5888])
                    ("fixed_cols" variable (:type "int") (reparse-symbol classsubparts) [6226 6237])
                    ("value" variable (:type "int") (reparse-symbol classsubparts) [6675 6681])
                    ("Eigen::Dynamic" variable (:type "int") (reparse-symbol classsubparts) [6775 6790])
                    ("conformable" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("array" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7373 7388]))                          
                        :type ("EigenConformable" type
                             (:template-specifier 
                                ( ("row_major" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol classsubparts) [7326 9174])
                    ("is_eigen_mutable_map::value" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9245 9288])
                    ("is_eigen_dense_map::value" variable (:type "int") (reparse-symbol classsubparts) [9328 9360])
                    ("show_c_contiguous" variable
                       (:default-value "show_order && requires_row_major"
                        :type "bool")
                        (reparse-symbol classsubparts) [9382 9440])
                    ("requires_col_major" variable (:type ("show_order" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9509 9542])
                    ("_" function
                       (:prototype-flag t
                        :operator-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [10542 10549]))                  )
                nil [5559 10552])
            ("eigen_array_cast" function
               (:template 
                  ( ("props" type (:type "class") nil nil))                  
                :type ("handle" type (:type "class") nil nil)
                :arguments 
                  ( ("src" variable
                       (:reference 1
                        :typemodifiers ("typename")
                        :constant-flag t
                        :type ("props::Type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10797 10829])
                    ("base" variable
                       (:default-value "handle()"
                        :type ("handle" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10830 10852])
                    ("writeable" variable
                       (:default-value "true"
                        :type "bool")
                        (reparse-symbol arg-sub-list) [10854 10875]))                  )
                nil [10747 11349])
            ("eigen_ref_array" function
               (:template 
                  ( ("props" type (:type "class") nil nil)
                    ("Type" type (:type "class") nil nil))                  
                :type ("handle" type (:type "class") nil nil)
                :arguments 
                  ( ("src" variable
                       (:reference 1
                        :type ("Type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11755 11765])
                    ("parent" variable
                       (:default-value "none()"
                        :type ("handle" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11766 11788]))                  )
                nil [11691 12043])
            ("eigen_encapsulate" function
               (:arguments 
                  ( ("src" variable
                       (:pointer 1
                        :type ("Type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12516 12526]))                  
                :type ("handle" type (:type "class") nil nil))
                nil [12491 12648])
            ("eigen_map_caster" type
               (:template 
                  ( ("MapType" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("private" label nil (reparse-symbol classsubparts) [16913 16921])
                    ("EigenProps" variable (:type "int") (reparse-symbol classsubparts) [16940 16960])
                    ("public" label nil (reparse-symbol classsubparts) [16962 16969])
                    ("cast" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("src" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MapType" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [17581 17600])
                            ("policy" variable (:type ("return_value_policy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17601 17628])
                            ("parent" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17629 17643]))                          
                        :type ("handle" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [17562 18385])
                    ("props::descriptor" variable (:type "int") (reparse-symbol classsubparts) [18420 18438])
                    ("cast_op_type" variable
                       (:default-value "MapType"
                        :type "int")
                        (reparse-symbol classsubparts) [18781 18804]))                  )
                nil [16859 18807])
            ("eigen_map_caster" variable (:type "int") nil [18992 19018])
            ("eigen_map_caster" variable (:type "int") nil [19400 25197]))          
      :file "eigen.h"
      :pointmax 29044
      :fsize 29043
      :lastmodtime '(24145 28046 795368 942000)
      :unmatched-syntax '((symbol 28986 . 28989) (symbol 28975 . 28985) (symbol 28971 . 28974) (symbol 28964 . 28970) (punctuation 28961 . 28962) (semantic-list 28895 . 28915) (symbol 28882 . 28895) (semantic-list 28873 . 28881) (symbol 28860 . 28873) (punctuation 28857 . 28858) (semantic-list 26592 . 28857) (punctuation 26590 . 26591) (punctuation 26589 . 26590) (symbol 26584 . 26589) (punctuation 26583 . 26584) (punctuation 26582 . 26583) (punctuation 26581 . 26582) (symbol 26577 . 26581) (punctuation 26576 . 26577) (symbol 26561 . 26576) (punctuation 26560 . 26561) (symbol 26549 . 26560) (punctuation 26547 . 26548) (symbol 26543 . 26547) (punctuation 26542 . 26543) (symbol 26531 . 26542) (STRUCT 26524 . 26530) (punctuation 26522 . 26523) (symbol 26518 . 26522) (TYPENAME 26509 . 26517) (punctuation 26508 . 26509) (TEMPLATE 26500 . 26508) (punctuation 26497 . 26498) (semantic-list 25612 . 26497) (punctuation 25610 . 25611) (punctuation 25609 . 25610) (symbol 25604 . 25609) (punctuation 25603 . 25604) (punctuation 25602 . 25603) (punctuation 25601 . 25602) (symbol 25597 . 25601) (punctuation 25596 . 25597) (symbol 25582 . 25596) (punctuation 25581 . 25582) (symbol 25570 . 25581) (punctuation 25568 . 25569) (symbol 25564 . 25568) (punctuation 25563 . 25564) (symbol 25552 . 25563) (STRUCT 25545 . 25551) (punctuation 25543 . 25544) (symbol 25539 . 25543) (TYPENAME 25530 . 25538) (punctuation 25529 . 25530) (TEMPLATE 25520 . 25528) (PUBLIC 19393 . 19399) (punctuation 19391 . 19392) (punctuation 19389 . 19390) (punctuation 19387 . 19388) (symbol 19382 . 19387) (punctuation 19381 . 19382) (punctuation 19380 . 19381) (punctuation 19379 . 19380) (punctuation 19378 . 19379) (symbol 19368 . 19378) (punctuation 19366 . 19367) (number 19365 . 19366) (punctuation 19363 . 19364) (symbol 19348 . 19363) (punctuation 19347 . 19348) (symbol 19344 . 19347) (punctuation 19343 . 19344) (punctuation 19342 . 19343) (symbol 19337 . 19342) (punctuation 19336 . 19337) (symbol 19318 . 19336) (punctuation 19317 . 19318) (symbol 19306 . 19317) (punctuation 19300 . 19301) (punctuation 19299 . 19300) (symbol 19289 . 19299) (punctuation 19287 . 19288) (number 19286 . 19287) (punctuation 19284 . 19285) (symbol 19269 . 19284) (punctuation 19268 . 19269) (symbol 19265 . 19268) (punctuation 19264 . 19265) (punctuation 19263 . 19264) (symbol 19258 . 19263) (punctuation 19252 . 19253) (symbol 19241 . 19252) (STRUCT 19234 . 19240) (punctuation 19232 . 19233) (symbol 19222 . 19232) (TYPENAME 19213 . 19221) (punctuation 19211 . 19212) (symbol 19196 . 19211) (TYPENAME 19187 . 19195) (punctuation 19186 . 19187) (TEMPLATE 19177 . 19185) (punctuation 18990 . 18991) (punctuation 18984 . 18985) (punctuation 18983 . 18984) (symbol 18978 . 18983) (punctuation 18977 . 18978) (punctuation 18976 . 18977) (punctuation 18975 . 18976) (symbol 18971 . 18975) (punctuation 18970 . 18971) (symbol 18952 . 18970) (punctuation 18951 . 18952) (symbol 18940 . 18951) (punctuation 18938 . 18939) (symbol 18934 . 18938) (punctuation 18933 . 18934) (symbol 18922 . 18933) (STRUCT 18915 . 18921) (punctuation 18913 . 18914) (symbol 18909 . 18913) (TYPENAME 18900 . 18908) (punctuation 18899 . 18900) (TEMPLATE 18890 . 18898) (USING 18775 . 18780) (punctuation 18773 . 18774) (TYPENAME 18765 . 18773) (punctuation 18764 . 18765) (TEMPLATE 18755 . 18763) (punctuation 18749 . 18750) (DELETE 18743 . 18749) (punctuation 18741 . 18742) (semantic-list 18738 . 18740) (symbol 18731 . 18738) (OPERATOR 18722 . 18730) (punctuation 18716 . 18717) (DELETE 18710 . 18716) (punctuation 18708 . 18709) (semantic-list 18693 . 18707) (symbol 18689 . 18693) (BOOL 18684 . 18688) (punctuation 18418 . 18419) (symbol 18413 . 18417) (symbol 18408 . 18412) (symbol 18398 . 18407) (STATIC 18391 . 18397) (punctuation 16938 . 16939) (symbol 16932 . 16937) (USING 16926 . 16931) (punctuation 16781 . 16782) (semantic-list 12853 . 16781) (punctuation 12851 . 12852) (punctuation 12850 . 12851) (symbol 12845 . 12850) (punctuation 12844 . 12845) (punctuation 12843 . 12844) (punctuation 12842 . 12843) (symbol 12838 . 12842) (punctuation 12837 . 12838) (symbol 12817 . 12837) (punctuation 12816 . 12817) (symbol 12805 . 12816) (punctuation 12803 . 12804) (symbol 12799 . 12803) (punctuation 12798 . 12799) (symbol 12787 . 12798) (STRUCT 12780 . 12786) (punctuation 12778 . 12779) (symbol 12774 . 12778) (TYPENAME 12765 . 12773) (punctuation 12764 . 12765) (TEMPLATE 12756 . 12764) (punctuation 12489 . 12490) (punctuation 12488 . 12489) (symbol 12483 . 12488) (punctuation 12482 . 12483) (punctuation 12481 . 12482) (punctuation 12480 . 12481) (symbol 12476 . 12480) (punctuation 12475 . 12476) (symbol 12455 . 12475) (punctuation 12454 . 12455) (symbol 12443 . 12454) (punctuation 12441 . 12442) (TYPENAME 12432 . 12440) (punctuation 12430 . 12431) (symbol 12426 . 12430) (TYPENAME 12417 . 12425) (punctuation 12415 . 12416) (symbol 12410 . 12415) (TYPENAME 12401 . 12409) (punctuation 12400 . 12401) (TEMPLATE 12391 . 12399) (string 10544 . 10547) (punctuation 10532 . 10533) (semantic-list 10503 . 10531) (punctuation 10502 . 10503) (symbol 10485 . 10502) (punctuation 10484 . 10485) (symbol 10483 . 10484) (string 10528 . 10530) (string 10504 . 10526) (punctuation 10473 . 10474) (semantic-list 10444 . 10472) (punctuation 10443 . 10444) (symbol 10426 . 10443) (punctuation 10425 . 10426) (symbol 10424 . 10425) (string 10469 . 10471) (string 10445 . 10467) (punctuation 10414 . 10415) (semantic-list 10388 . 10413) (punctuation 10387 . 10388) (symbol 10373 . 10387) (punctuation 10372 . 10373) (symbol 10371 . 10372) (string 10410 . 10412) (string 10389 . 10408) (punctuation 9790 . 9791) (semantic-list 9784 . 9789) (symbol 9783 . 9784) (string 9785 . 9788) (punctuation 9773 . 9774) (semantic-list 9744 . 9772) (punctuation 9743 . 9744) (symbol 9733 . 9743) (punctuation 9732 . 9733) (symbol 9731 . 9732) (semantic-list 9766 . 9771) (semantic-list 9761 . 9763) (punctuation 9760 . 9761) (semantic-list 9747 . 9755) (punctuation 9746 . 9747) (punctuation 9729 . 9730) (semantic-list 9722 . 9728) (symbol 9721 . 9722) (string 9723 . 9727) (punctuation 9711 . 9712) (semantic-list 9682 . 9710) (punctuation 9681 . 9682) (symbol 9671 . 9681) (punctuation 9670 . 9671) (symbol 9669 . 9670) (semantic-list 9704 . 9709) (semantic-list 9699 . 9701) (punctuation 9698 . 9699) (semantic-list 9685 . 9693) (punctuation 9684 . 9685) (punctuation 9667 . 9668) (semantic-list 9660 . 9665) (symbol 9659 . 9660) (string 9661 . 9664) (punctuation 9649 . 9650) (symbol 9644 . 9648) (punctuation 9643 . 9644) (punctuation 9642 . 9643) (punctuation 9641 . 9642) (symbol 9635 . 9641) (punctuation 9634 . 9635) (symbol 9613 . 9634) (punctuation 9611 . 9612) (semantic-list 9592 . 9610) (symbol 9591 . 9592) (string 9593 . 9609) (punctuation 9581 . 9582) (symbol 9570 . 9580) (symbol 9565 . 9569) (symbol 9555 . 9564) (STATIC 9548 . 9554) (punctuation 9507 . 9508) (punctuation 9506 . 9507) (symbol 9488 . 9505) (punctuation 9487 . 9488) (punctuation 9485 . 9486) (symbol 9467 . 9484) (BOOL 9462 . 9466) (symbol 9452 . 9461) (STATIC 9445 . 9451) (symbol 9372 . 9381) (STATIC 9365 . 9371) (punctuation 9326 . 9327) (symbol 9315 . 9325) (BOOL 9310 . 9314) (symbol 9300 . 9309) (STATIC 9293 . 9299) (punctuation 9244 . 9245) (punctuation 9243 . 9244) (punctuation 9242 . 9243) (symbol 9238 . 9242) (punctuation 9237 . 9238) (symbol 9219 . 9237) (punctuation 9217 . 9218) (symbol 9202 . 9216) (BOOL 9197 . 9201) (symbol 9187 . 9196) (STATIC 9180 . 9186) (punctuation 7039 . 7040) (number 7038 . 7039) (punctuation 7036 . 7037) (punctuation 7035 . 7036) (semantic-list 6993 . 7034) (punctuation 6991 . 6992) (punctuation 6990 . 6991) (symbol 6983 . 6989) (punctuation 6982 . 6983) (punctuation 6980 . 6981) (punctuation 6979 . 6980) (symbol 6964 . 6978) (punctuation 6963 . 6964) (punctuation 6961 . 6962) (symbol 6942 . 6960) (BOOL 6937 . 6941) (symbol 6927 . 6936) (STATIC 6920 . 6926) (punctuation 6914 . 6915) (number 6913 . 6914) (punctuation 6911 . 6912) (punctuation 6910 . 6911) (semantic-list 6868 . 6909) (punctuation 6866 . 6867) (punctuation 6865 . 6866) (symbol 6858 . 6864) (punctuation 6857 . 6858) (punctuation 6855 . 6856) (punctuation 6854 . 6855) (symbol 6839 . 6853) (punctuation 6838 . 6839) (punctuation 6836 . 6837) (symbol 6817 . 6835) (BOOL 6812 . 6816) (symbol 6802 . 6811) (STATIC 6795 . 6801) (punctuation 6773 . 6774) (punctuation 6772 . 6773) (symbol 6759 . 6771) (punctuation 6757 . 6758) (punctuation 6756 . 6757) (symbol 6748 . 6755) (punctuation 6747 . 6748) (punctuation 6746 . 6747) (symbol 6741 . 6746) (punctuation 6739 . 6740) (punctuation 6738 . 6739) (symbol 6725 . 6737) (punctuation 6723 . 6724) (symbol 6708 . 6722) (BOOL 6703 . 6707) (symbol 6693 . 6702) (STATIC 6686 . 6692) (punctuation 6674 . 6675) (punctuation 6673 . 6674) (punctuation 6672 . 6673) (symbol 6668 . 6672) (punctuation 6666 . 6667) (symbol 6661 . 6665) (punctuation 6659 . 6660) (symbol 6649 . 6658) (punctuation 6647 . 6648) (symbol 6642 . 6646) (punctuation 6640 . 6641) (symbol 6633 . 6639) (punctuation 6576 . 6577) (symbol 6552 . 6576) (punctuation 6551 . 6552) (punctuation 6550 . 6551) (symbol 6540 . 6550) (punctuation 6539 . 6540) (symbol 6532 . 6539) (punctuation 6530 . 6531) (symbol 6517 . 6529) (punctuation 6483 . 6484) (symbol 6478 . 6483) (punctuation 6477 . 6478) (punctuation 6476 . 6477) (punctuation 6475 . 6476) (number 6474 . 6475) (punctuation 6472 . 6473) (symbol 6448 . 6472) (punctuation 6447 . 6448) (punctuation 6446 . 6447) (symbol 6436 . 6446) (punctuation 6435 . 6436) (symbol 6428 . 6435) (punctuation 6426 . 6427) (symbol 6413 . 6425) (symbol 6402 . 6412) (symbol 6392 . 6401) (STATIC 6385 . 6391) (punctuation 6379 . 6380) (punctuation 6378 . 6379) (symbol 6377 . 6378) (punctuation 6375 . 6376) (symbol 6368 . 6374) (punctuation 6366 . 6367) (number 6364 . 6365) (punctuation 6362 . 6363) (punctuation 6361 . 6362) (symbol 6359 . 6360) (punctuation 6357 . 6358) (symbol 6347 . 6357) (punctuation 6346 . 6347) (symbol 6329 . 6346) (punctuation 6328 . 6329) (punctuation 6327 . 6328) (symbol 6324 . 6327) (punctuation 6322 . 6323) (symbol 6314 . 6321) (USING 6308 . 6313) (punctuation 6306 . 6307) (symbol 6300 . 6306) (symbol 6289 . 6299) (punctuation 6287 . 6288) (symbol 6286 . 6287) (symbol 6275 . 6285) (punctuation 6274 . 6275) (TEMPLATE 6265 . 6273) (punctuation 6225 . 6226) (punctuation 6223 . 6224) (punctuation 6222 . 6223) (symbol 6211 . 6221) (punctuation 6210 . 6211) (punctuation 6208 . 6209) (symbol 6200 . 6207) (punctuation 6170 . 6171) (symbol 6163 . 6170) (punctuation 6162 . 6163) (punctuation 6161 . 6162) (symbol 6156 . 6161) (punctuation 6154 . 6155) (punctuation 6153 . 6154) (symbol 6148 . 6152) (punctuation 6146 . 6147) (symbol 6140 . 6145) (punctuation 6130 . 6131) (symbol 6123 . 6130) (punctuation 6122 . 6123) (punctuation 6121 . 6122) (symbol 6116 . 6121) (punctuation 6114 . 6115) (punctuation 6113 . 6114) (symbol 6108 . 6112) (punctuation 6106 . 6107) (symbol 6095 . 6105) (punctuation 6085 . 6086) (symbol 6078 . 6085) (punctuation 6077 . 6078) (punctuation 6076 . 6077) (symbol 6071 . 6076) (punctuation 6069 . 6070) (punctuation 6068 . 6069) (symbol 6063 . 6067) (punctuation 6061 . 6062) (symbol 6050 . 6060) (punctuation 5997 . 5998) (symbol 5976 . 5997) (punctuation 5975 . 5976) (punctuation 5974 . 5975) (symbol 5970 . 5974) (punctuation 5968 . 5969) (symbol 5961 . 5967) (punctuation 5951 . 5952) (symbol 5941 . 5951) (punctuation 5940 . 5941) (punctuation 5939 . 5940) (symbol 5935 . 5939) (punctuation 5933 . 5934) (symbol 5923 . 5932) (BOOL 5910 . 5914) (symbol 5900 . 5909) (STATIC 5893 . 5899) (punctuation 5862 . 5863) (symbol 5857 . 5861) (punctuation 5847 . 5848) (symbol 5830 . 5847) (punctuation 5829 . 5830) (punctuation 5828 . 5829) (symbol 5824 . 5828) (punctuation 5822 . 5823) (symbol 5817 . 5821) (punctuation 5807 . 5808) (symbol 5790 . 5807) (punctuation 5789 . 5790) (punctuation 5788 . 5789) (symbol 5784 . 5788) (punctuation 5782 . 5783) (symbol 5777 . 5781) (symbol 5758 . 5768) (symbol 5748 . 5757) (STATIC 5741 . 5747) (punctuation 5692 . 5693) (symbol 5681 . 5691) (USING 5675 . 5680) (punctuation 5646 . 5647) (symbol 5639 . 5645) (USING 5633 . 5638) (USING 5609 . 5614) (USING 5467 . 5472) (USING 5289 . 5294) (USING 5111 . 5116) (semantic-list 5028 . 5051) (CONST 5022 . 5027) (semantic-list 5019 . 5021) (BOOL 5015 . 5019) (OPERATOR 5006 . 5014) (USING 3057 . 3062) (punctuation 3055 . 3056) (symbol 3054 . 3055) (TYPENAME 3045 . 3053) (punctuation 3044 . 3045) (TEMPLATE 3035 . 3043) (USING 2630 . 2635) (punctuation 2628 . 2629) (symbol 2627 . 2628) (TYPENAME 2618 . 2626) (punctuation 2617 . 2618) (TEMPLATE 2608 . 2616) (USING 2490 . 2495) (punctuation 2488 . 2489) (symbol 2487 . 2488) (TYPENAME 2478 . 2486) (punctuation 2477 . 2478) (TEMPLATE 2468 . 2476) (USING 2377 . 2382) (punctuation 2375 . 2376) (symbol 2374 . 2375) (TYPENAME 2365 . 2373) (punctuation 2364 . 2365) (TEMPLATE 2355 . 2363) (USING 2213 . 2218) (punctuation 2211 . 2212) (symbol 2210 . 2211) (TYPENAME 2201 . 2209) (punctuation 2200 . 2201) (TEMPLATE 2191 . 2199) (USING 2084 . 2089) (semantic-list 2001 . 2009) (symbol 1986 . 2001) (USING 1926 . 1931) (punctuation 1924 . 1925) (symbol 1914 . 1924) (TYPENAME 1905 . 1913) (punctuation 1904 . 1905) (TEMPLATE 1895 . 1903) (USING 1836 . 1841) (punctuation 1834 . 1835) (symbol 1824 . 1834) (TYPENAME 1815 . 1823) (punctuation 1814 . 1815) (TEMPLATE 1805 . 1813) (USING 1737 . 1742) (semantic-list 1627 . 1647) (symbol 1612 . 1627) (string 1557 . 1608) (semantic-list 1548 . 1555) (string 947 . 970) (symbol 939 . 946) (symbol 928 . 938) (symbol 924 . 927) (symbol 917 . 923) (punctuation 912 . 913) (string 639 . 666) (symbol 631 . 638) (symbol 620 . 630) (symbol 616 . 619) (symbol 609 . 615) (punctuation 606 . 607) (string 591 . 605) (symbol 583 . 590) (symbol 572 . 582) (symbol 568 . 571) (symbol 561 . 567) (punctuation 558 . 559) (symbol 553 . 557) (symbol 542 . 552) (symbol 538 . 541) (symbol 531 . 537) (punctuation 528 . 529) (symbol 285 . 289) (symbol 278 . 284) (punctuation 277 . 278)))
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("pybind11.h" include nil nil [273 294])
            ("complex.h" include nil nil [295 315])
            ("numeric" include (:system-flag t) nil [316 334])
            ("algorithm" include (:system-flag t) nil [335 355])
            ("array" include (:system-flag t) nil [356 372])
            ("cstdint" include (:system-flag t) nil [373 391])
            ("cstdlib" include (:system-flag t) nil [392 410])
            ("cstring" include (:system-flag t) nil [411 429])
            ("sstream" include (:system-flag t) nil [430 448])
            ("string" include (:system-flag t) nil [449 466])
            ("functional" include (:system-flag t) nil [467 488])
            ("utility" include (:system-flag t) nil [489 507])
            ("vector" include (:system-flag t) nil [508 525])
            ("typeindex" include (:system-flag t) nil [526 546])
            ("static_assert" function
               (:prototype-flag t
                :type "int")
                nil [970 1050])
            ("array" type
               (:prototype t
                :type "class")
                nil [1089 1101])
            ("npy_format_descriptor" type
               (:prototype t
                :type "struct")
                nil [1199 1228])
            ("PyArrayDescr_Proxy" type
               (:members 
                  ( ("typeobj" variable
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1280 1298])
                    ("kind" variable (:type "char") (reparse-symbol classsubparts) [1303 1313])
                    ("type" variable (:type "char") (reparse-symbol classsubparts) [1318 1328])
                    ("byteorder" variable (:type "char") (reparse-symbol classsubparts) [1333 1348])
                    ("flags" variable (:type "char") (reparse-symbol classsubparts) [1353 1364])
                    ("type_num" variable (:type "int") (reparse-symbol classsubparts) [1369 1382])
                    ("elsize" variable (:type "int") (reparse-symbol classsubparts) [1387 1398])
                    ("alignment" variable (:type "int") (reparse-symbol classsubparts) [1403 1417])
                    ("subarray" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [1422 1437])
                    ("fields" variable
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1442 1459])
                    ("names" variable
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1464 1480]))                  
                :type "struct")
                nil [1230 1483])
            ("PyArray_Proxy" type
               (:members 
                  ( ("data" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [1530 1541])
                    ("nd" variable (:type "int") (reparse-symbol classsubparts) [1546 1553])
                    ("dimensions" variable
                       (:pointer 1
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1558 1578])
                    ("strides" variable
                       (:pointer 1
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1583 1600])
                    ("base" variable
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1605 1620])
                    ("descr" variable
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1625 1641])
                    ("flags" variable (:type "int") (reparse-symbol classsubparts) [1646 1656]))                  
                :type "struct")
                nil [1485 1659])
            ("PyVoidScalarObject_Proxy" type
               (:members 
                  ( ("obval" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [1721 1733])
                    ("descr" variable
                       (:pointer 1
                        :type ("PyArrayDescr_Proxy" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1738 1764])
                    ("flags" variable (:type "int") (reparse-symbol classsubparts) [1769 1779])
                    ("base" variable
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1784 1799]))                  
                :type "struct")
                nil [1661 1802])
            ("numpy_type_info" type
               (:members 
                  ( ("dtype_ptr" variable
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1833 1853])
                    ("format_str" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1858 1881]))                  
                :type "struct")
                nil [1804 1884])
            ("numpy_internals" type
               (:members 
                  ( ("registered_dtypes" variable (:type ("std::unordered_map" type
                         (:template-specifier 
                            ( ("std::type_index" type nil nil nil)
                              ("numpy_type_info" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [1915 1986])
                    ("get_type_info" function
                       (:pointer 1
                        :arguments 
                          ( ("tinfo" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::type_info" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2023 2051])
                            ("throw_if_missing" variable
                               (:default-value "true"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [2052 2080]))                          
                        :type ("numpy_type_info" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1992 2373])
                    ("get_type_info" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("numpy_type_info" type (:type "class") nil nil)
                        :arguments 
                          ( ("throw_if_missing" variable
                               (:default-value "true"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [2431 2459]))                          
                        :pointer 1)
                        (reparse-symbol classsubparts) [2379 2558]))                  
                :type "struct")
                nil [1886 2561])
            ("load_numpy_internals" function
               (:arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("numpy_internals" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2614 2632])
                    ("" variable (:type ("ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2632 2636]))                  
                :type "void")
                nil [2588 2715])
            ("get_numpy_internals" function
               (:typemodifiers ("inline")
                :type ("numpy_internals" type (:type "class") nil nil))
                nil [2717 2875])
            ("same_size" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "struct")
                nil [2877 2996])
            ("platform_lookup" function (:type "int") nil [3037 3073])
            ("platform_lookup" function
               (:arguments 
                  ( ("I" variable (:type "int") (reparse-symbol arg-sub-list) [3275 3281])
                    ("" variable (:type ("Ints" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3282 3287])
                    ("" variable (:type ("Is" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3290 3293]))                  
                :type "int")
                nil [3255 3385])
            ("npy_api" type
               (:members 
                  ( ("constants" type
                       (:members 
                          ( ("NPY_ARRAY_C_CONTIGUOUS_" variable
                               (:constant-flag t
                                :default-value (3459 3465)
                                :type "int")
                                (reparse-symbol enumsubparts) [3433 3465])
                            ("NPY_ARRAY_F_CONTIGUOUS_" variable
                               (:constant-flag t
                                :default-value (3501 3507)
                                :type "int")
                                (reparse-symbol enumsubparts) [3475 3507])
                            ("NPY_ARRAY_OWNDATA_" variable
                               (:constant-flag t
                                :default-value (3538 3544)
                                :type "int")
                                (reparse-symbol enumsubparts) [3517 3544])
                            ("NPY_ARRAY_FORCECAST_" variable
                               (:constant-flag t
                                :default-value (3577 3583)
                                :type "int")
                                (reparse-symbol enumsubparts) [3554 3583])
                            ("NPY_ARRAY_ENSUREARRAY_" variable
                               (:constant-flag t
                                :default-value (3618 3624)
                                :type "int")
                                (reparse-symbol enumsubparts) [3593 3624])
                            ("NPY_ARRAY_ALIGNED_" variable
                               (:constant-flag t
                                :default-value (3655 3661)
                                :type "int")
                                (reparse-symbol enumsubparts) [3634 3661])
                            ("NPY_ARRAY_WRITEABLE_" variable
                               (:constant-flag t
                                :default-value (3694 3700)
                                :type "int")
                                (reparse-symbol enumsubparts) [3671 3700])
                            ("NPY_BOOL_" variable
                               (:constant-flag t
                                :default-value (3722 3723)
                                :type "int")
                                (reparse-symbol enumsubparts) [3710 3723])
                            ("NPY_BYTE_" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3733 3743])
                            ("NPY_UBYTE_" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3744 3755])
                            ("NPY_SHORT_" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3764 3775])
                            ("NPY_USHORT_" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3776 3788])
                            ("NPY_INT_" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3797 3806])
                            ("NPY_UINT_" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3807 3817])
                            ("NPY_LONG_" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3826 3836])
                            ("NPY_ULONG_" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3837 3848])
                            ("NPY_LONGLONG_" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3857 3871])
                            ("NPY_ULONGLONG_" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3872 3887])
                            ("NPY_FLOAT_" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3896 3907])
                            ("NPY_DOUBLE_" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3908 3920])
                            ("NPY_LONGDOUBLE_" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3921 3937])
                            ("NPY_CFLOAT_" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3946 3958])
                            ("NPY_CDOUBLE_" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3959 3972])
                            ("NPY_CLONGDOUBLE_" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3973 3990])
                            ("NPY_OBJECT_" variable
                               (:constant-flag t
                                :default-value (4013 4015)
                                :type "int")
                                (reparse-symbol enumsubparts) [3999 4015])
                            ("NPY_STRING_" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [4025 4037])
                            ("NPY_UNICODE_" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [4038 4051])
                            ("NPY_VOID_" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [4052 4062])
                            ("NPY_INT8_" variable
                               (:constant-flag t
                                :default-value (4127 4136)
                                :type "int")
                                (reparse-symbol enumsubparts) [4115 4136])
                            ("NPY_UINT8_" variable
                               (:constant-flag t
                                :default-value (4159 4169)
                                :type "int")
                                (reparse-symbol enumsubparts) [4146 4169])
                            ("NPY_INT16_" variable
                               (:constant-flag t
                                :default-value (4192 4202)
                                :type "int")
                                (reparse-symbol enumsubparts) [4179 4202])
                            ("NPY_UINT16_" variable
                               (:constant-flag t
                                :default-value (4226 4237)
                                :type "int")
                                (reparse-symbol enumsubparts) [4212 4237])
                            ("NPY_INT32_" variable
                               (:constant-flag t
                                :default-value (4530 4623)
                                :type "int")
                                (reparse-symbol enumsubparts) [4517 4623])
                            ("NPY_UINT32_" variable
                               (:constant-flag t
                                :default-value (4647 4771)
                                :type "int")
                                (reparse-symbol enumsubparts) [4633 4771])
                            ("NPY_INT64_" variable
                               (:constant-flag t
                                :default-value (4794 4894)
                                :type "int")
                                (reparse-symbol enumsubparts) [4781 4894])
                            ("NPY_UINT64_" variable
                               (:constant-flag t
                                :default-value (4918 5049)
                                :type "int")
                                (reparse-symbol enumsubparts) [4904 5049]))                          
                        :type "enum")
                        (reparse-symbol classsubparts) [3408 5057])
                    ("PyArray_Dims" type
                       (:typedef ("" type
                             (:members 
                                ( ("ptr" variable
                                     (:pointer 1
                                      :type ("Py_intptr_t" type (:type "class") nil nil))
                                      (reparse-symbol classsubparts) [5088 5105])
                                  ("len" variable (:type "int") (reparse-symbol classsubparts) [5114 5122]))                                
                              :type "struct")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [5063 5142])
                    ("get" function
                       (:typemodifiers ("static")
                        :type ("npy_api" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5148 5236])
                    ("PyArray_Check_" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("obj" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5262 5276]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [5242 5352])
                    ("PyArrayDescr_Check_" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("obj" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5382 5396]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [5357 5477])
                    ("PyArray_GetNDArrayCFeatureVersion_" function
                       (:prototype-flag t
                        :function-pointer t
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [5483 5536])
                    ("PyArray_DescrFromType_" function
                       (:prototype-flag t
                        :pointer 1
                        :function-pointer t
                        :arguments 
                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [5577 5581]))                          
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5541 5582])
                    ("PyArray_NewFromDescr_" function
                       (:prototype-flag t
                        :pointer 1
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("PyTypeObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5631 5646])
                            ("" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5647 5658])
                            ("" variable (:type "int") (reparse-symbol arg-sub-list) [5659 5663])
                            ("" variable
                               (:pointer 1
                                :type ("Py_intptr_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5664 5678])
                            ("" variable
                               (:pointer 1
                                :type ("Py_intptr_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5688 5702])
                            ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [5703 5710])
                            ("" variable (:type "int") (reparse-symbol arg-sub-list) [5711 5715])
                            ("" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5716 5727]))                          
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5587 5728])
                    ("PyArray_DescrNewFromType_" function
                       (:prototype-flag t
                        :pointer 1
                        :function-pointer t
                        :arguments 
                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [5772 5776]))                          
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5733 5777])
                    ("PyArray_CopyInto_" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5807 5818])
                            ("" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5819 5830]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [5782 5831])
                    ("PyArray_NewCopy_" function
                       (:prototype-flag t
                        :pointer 1
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5866 5877])
                            ("" variable (:type "int") (reparse-symbol arg-sub-list) [5878 5882]))                          
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5836 5883])
                    ("PyArray_Type_" variable
                       (:pointer 1
                        :type ("PyTypeObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5888 5916])
                    ("PyVoidArrType_Type_" variable
                       (:pointer 1
                        :type ("PyTypeObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5921 5955])
                    ("PyArrayDescr_Type_" variable
                       (:pointer 1
                        :type ("PyTypeObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5960 5993])
                    ("PyArray_DescrFromScalar_" function
                       (:prototype-flag t
                        :pointer 1
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6036 6047]))                          
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5998 6048])
                    ("PyArray_FromAny_" function
                       (:prototype-flag t
                        :pointer 1
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6084 6095])
                            ("" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6096 6107])
                            ("" variable (:type "int") (reparse-symbol arg-sub-list) [6108 6112])
                            ("" variable (:type "int") (reparse-symbol arg-sub-list) [6113 6117])
                            ("" variable (:type "int") (reparse-symbol arg-sub-list) [6118 6122])
                            ("" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6123 6134]))                          
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6053 6135])
                    ("PyArray_DescrConverter_" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6172 6183])
                            ("" variable
                               (:pointer 2
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6184 6196]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [6140 6197])
                    ("PyArray_EquivTypes_" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6231 6242])
                            ("" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6243 6254]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [6202 6255])
                    ("PyArray_GetArrayParamsFromObject_" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6301 6312])
                            ("" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6313 6324])
                            ("" variable (:type "char") (reparse-symbol arg-sub-list) [6325 6330])
                            ("" variable
                               (:pointer 2
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6331 6343])
                            ("" variable
                               (:pointer 1
                                :type "int")
                                (reparse-symbol arg-sub-list) [6344 6350])
                            ("" variable
                               (:pointer 1
                                :type ("Py_ssize_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6396 6409])
                            ("" variable
                               (:pointer 2
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6410 6422])
                            ("" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6423 6434]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [6260 6435])
                    ("PyArray_Squeeze_" function
                       (:prototype-flag t
                        :pointer 1
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6470 6481]))                          
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6440 6482])
                    ("PyArray_SetBaseObject_" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6517 6528])
                            ("" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6529 6540]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [6487 6541])
                    ("PyArray_Resize_" function
                       (:prototype-flag t
                        :pointer 1
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6575 6585])
                            ("" variable
                               (:pointer 1
                                :type ("PyArray_Dims" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6586 6600])
                            ("" variable (:type "int") (reparse-symbol arg-sub-list) [6601 6605])
                            ("" variable (:type "int") (reparse-symbol arg-sub-list) [6606 6610]))                          
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6546 6611])
                    ("private" label nil (reparse-symbol classsubparts) [6612 6620])
                    ("functions" type
                       (:members 
                          ( ("API_PyArray_GetNDArrayCFeatureVersion" variable
                               (:constant-flag t
                                :default-value (6690 6693)
                                :type "int")
                                (reparse-symbol enumsubparts) [6650 6693])
                            ("API_PyArray_Type" variable
                               (:constant-flag t
                                :default-value (6722 6723)
                                :type "int")
                                (reparse-symbol enumsubparts) [6703 6723])
                            ("API_PyArrayDescr_Type" variable
                               (:constant-flag t
                                :default-value (6757 6758)
                                :type "int")
                                (reparse-symbol enumsubparts) [6733 6758])
                            ("API_PyVoidArrType_Type" variable
                               (:constant-flag t
                                :default-value (6793 6795)
                                :type "int")
                                (reparse-symbol enumsubparts) [6768 6795])
                            ("API_PyArray_DescrFromType" variable
                               (:constant-flag t
                                :default-value (6833 6835)
                                :type "int")
                                (reparse-symbol enumsubparts) [6805 6835])
                            ("API_PyArray_DescrFromScalar" variable
                               (:constant-flag t
                                :default-value (6875 6877)
                                :type "int")
                                (reparse-symbol enumsubparts) [6845 6877])
                            ("API_PyArray_FromAny" variable
                               (:constant-flag t
                                :default-value (6909 6911)
                                :type "int")
                                (reparse-symbol enumsubparts) [6887 6911])
                            ("API_PyArray_Resize" variable
                               (:constant-flag t
                                :default-value (6942 6944)
                                :type "int")
                                (reparse-symbol enumsubparts) [6921 6944])
                            ("API_PyArray_CopyInto" variable
                               (:constant-flag t
                                :default-value (6977 6979)
                                :type "int")
                                (reparse-symbol enumsubparts) [6954 6979])
                            ("API_PyArray_NewCopy" variable
                               (:constant-flag t
                                :default-value (7011 7013)
                                :type "int")
                                (reparse-symbol enumsubparts) [6989 7013])
                            ("API_PyArray_NewFromDescr" variable
                               (:constant-flag t
                                :default-value (7050 7052)
                                :type "int")
                                (reparse-symbol enumsubparts) [7023 7052])
                            ("API_PyArray_DescrNewFromType" variable
                               (:constant-flag t
                                :default-value (7093 7094)
                                :type "int")
                                (reparse-symbol enumsubparts) [7062 7094])
                            ("API_PyArray_DescrConverter" variable
                               (:constant-flag t
                                :default-value (7133 7136)
                                :type "int")
                                (reparse-symbol enumsubparts) [7104 7136])
                            ("API_PyArray_EquivTypes" variable
                               (:constant-flag t
                                :default-value (7171 7174)
                                :type "int")
                                (reparse-symbol enumsubparts) [7146 7174])
                            ("API_PyArray_GetArrayParamsFromObject" variable
                               (:constant-flag t
                                :default-value (7223 7226)
                                :type "int")
                                (reparse-symbol enumsubparts) [7184 7226])
                            ("API_PyArray_Squeeze" variable
                               (:constant-flag t
                                :default-value (7258 7261)
                                :type "int")
                                (reparse-symbol enumsubparts) [7236 7261])
                            ("API_PyArray_SetBaseObject" variable
                               (:constant-flag t
                                :default-value (7299 7302)
                                :type "int")
                                (reparse-symbol enumsubparts) [7271 7302]))                          
                        :type "enum")
                        (reparse-symbol classsubparts) [6625 7309])
                    ("lookup" function
                       (:typemodifiers ("static")
                        :type ("npy_api" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7315 8649]))                  
                :type "struct")
                nil [3387 8652])
            ("array_proxy" function
               (:pointer 1
                :typemodifiers ("inline")
                :arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [8688 8698]))                  
                :type ("PyArray_Proxy" type (:type "class") nil nil))
                nil [8654 8752])
            ("array_proxy" function
               (:pointer 1
                :typemodifiers ("inline")
                :constant-flag t
                :arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [8794 8810]))                  
                :type ("PyArray_Proxy" type (:type "class") nil nil))
                nil [8754 8870])
            ("array_descriptor_proxy" function
               (:pointer 1
                :typemodifiers ("inline")
                :arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8922 8936]))                  
                :type ("PyArrayDescr_Proxy" type (:type "class") nil nil))
                nil [8872 8994])
            ("array_descriptor_proxy" function
               (:pointer 1
                :typemodifiers ("inline")
                :constant-flag t
                :arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9052 9072]))                  
                :type ("PyArrayDescr_Proxy" type (:type "class") nil nil))
                nil [8996 9136])
            ("check_flags" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [9162 9178])
                    ("flag" variable (:type "int") (reparse-symbol arg-sub-list) [9179 9188]))                  
                :type "bool")
                nil [9138 9247])
            ("is_std_array" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("std::false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  )
                nil [9249 9313])
            ("is_std_array" type
               (:template 
                  ( ("T" type (:type "class") nil nil)
                    ("size_t" type (:typevar "N") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("std::true_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("std::array" type (:template-specifier 
                      ( ("T" type nil nil nil)
                        ("N" type nil nil nil))                      ) nil nil))                  )
                nil [9314 9405])
            ("is_complex" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("std::false_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  )
                nil [9406 9468])
            ("is_complex" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("std::true_type" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("std::complex" type (:template-specifier 
                      ( ("T" type nil nil nil))                      ) nil nil))                  )
                nil [9469 9547])
            ("array_info_scalar" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("type" type
                       (:typedef ("T" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [9602 9617])
                    ("is_array" variable
                       (:default-value "false"
                        :type "bool")
                        (reparse-symbol classsubparts) [9639 9661])
                    ("is_empty" variable
                       (:default-value "false"
                        :type "bool")
                        (reparse-symbol classsubparts) [9683 9705])
                    ("extents" variable
                       (:default-value "_(\"\")"
                        :type ("auto" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [9727 9748])
                    ("append_extents" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("list" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9780 9798]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [9753 9802]))                  )
                nil [9549 9805])
            ("array_info" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("array_info_scalar" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  )
                nil [10011 10078])
            ("array_info" type
               (:template 
                  ( ("T" type (:type "class") nil nil)
                    ("size_t" type (:typevar "N") nil nil))                  
                :type "struct"
                :members 
                  ( ("array_info::type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [10166 10195])
                    ("is_array" variable
                       (:default-value "true"
                        :type "bool")
                        (reparse-symbol classsubparts) [10217 10238])
                    ("array_info::is_empty" variable (:type "int") (reparse-symbol classsubparts) [10288 10312])
                    ("extent" variable
                       (:default-value "N"
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [10334 10352])
                    ("append_extents" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("shape" variable
                               (:reference 1
                                :type ("list" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10421 10433]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [10394 10512]))                  
                :template-specifier 
                  ( ("std::array" type (:template-specifier 
                      ( ("T" type nil nil nil)
                        ("N" type nil nil nil))                      ) nil nil))                  )
                nil [10079 10642])
            ("array_info" type
               (:template 
                  ( ("size_t" type (:typevar "N") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("array_info_scalar" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("std::array" type (:template-specifier 
                      ( ("char" type nil nil nil)
                        ("N" type nil nil nil))                      ) nil nil))                  )
                nil [10842 10946])
            ("array_info" variable (:type "int") nil [11005 11038])
            ("array_info::type" variable
               (:typemodifiers ("typename")
                :type "int")
                nil [11090 11119])
            ("all_of" variable (:type "int") nil [11165 11939])
            ("byte_offset_unsafe" function
               (:arguments 
                  ( ("" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Strides" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12013 12029]))                  
                :type ("ssize_t" type (:type "class") nil nil))
                nil [11986 12043])
            ("byte_offset_unsafe" function
               (:arguments 
                  ( ("strides" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Strides" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12132 12155])
                    ("i" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12156 12166])
                    ("" variable (:type ("Ix" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12167 12170])
                    ("" variable (:type ("index" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12173 12179]))                  
                :type ("ssize_t" type (:type "class") nil nil))
                nil [12105 12261])
            ("unchecked_reference" type
               (:template 
                  ( ("T" type (:type "class") nil nil)
                    ("ssize_t" type (:typevar "Dims") nil nil))                  
                :type "class"
                :members 
                  ( ("protected" label nil (reparse-symbol classsubparts) [12588 12598])
                    ("data_" variable
                       (:pointer 1
                        :constant-flag t
                        :type "unsigned char")
                        (reparse-symbol classsubparts) [12649 12676])
                    ("shape_" variable (:type "int") (reparse-symbol classsubparts) [12961 12978])
                    ("strides_" variable (:type "int") (reparse-symbol classsubparts) [12961 12978])
                    ("dims_" variable
                       (:constant-flag t
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [12983 13003])
                    ("pybind11" friend nil (reparse-symbol classsubparts) [13009 13030])
                    ("array" variable (:type "int") (reparse-symbol classsubparts) [13032 13038])
                    ("unchecked_reference" function
                       (:template 
                          ( ("bool" type (:typevar "Dyn") nil nil))                          
                        :type ("unchecked_reference" type (:type "class") nil nil)
                        :arguments 
                          ( ("data" variable
                               (:pointer 1
                                :constant-flag t
                                :type "void")
                                (reparse-symbol arg-sub-list) [13145 13162])
                            ("shape" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("ssize_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13163 13184])
                            ("strides" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("ssize_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13185 13208])
                            ("" variable (:type ("enable_if_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13209 13221])
                            ("" variable (:type ("Dyn" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13222 13226])
                            ("" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13227 13235]))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [13091 13452])
                    ("unchecked_reference" function
                       (:template 
                          ( ("bool" type (:typevar "Dyn") nil nil))                          
                        :type ("unchecked_reference" type (:type "class") nil nil)
                        :arguments 
                          ( ("data" variable
                               (:pointer 1
                                :constant-flag t
                                :type "void")
                                (reparse-symbol arg-sub-list) [13554 13571])
                            ("shape" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("ssize_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13572 13593])
                            ("strides" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("ssize_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13594 13617])
                            ("dims" variable (:type ("enable_if_t" type
                                 (:template-specifier 
                                    ( ("Dyn" type nil nil nil)
                                      ("ssize_t" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [13618 13649]))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [13500 13758])
                    ("public" label nil (reparse-symbol classsubparts) [13760 13767])
                    ("()" function
                       (:methodconst-flag t
                        :operator-flag t
                        :constant-flag t
                        :arguments 
                          ( ("" variable (:type ("Ix" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14106 14109])
                            ("" variable (:type ("index" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14112 14118]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [14086 14375])
                    ("[]" function
                       (:methodconst-flag t
                        :operator-flag t
                        :constant-flag t
                        :arguments 
                          ( ("index" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14684 14698]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [14664 14734])
                    ("data" function
                       (:methodconst-flag t
                        :pointer 1
                        :constant-flag t
                        :arguments 
                          ( ("" variable (:type ("Ix" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14837 14840])
                            ("" variable (:type ("ix" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14843 14846]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [14823 14892])
                    ("itemsize" function
                       (:typemodifiers ("static")
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [14954 15001])
                    ("shape" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("dim" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15078 15090]))                          
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [15064 15129])
                    ("ndim" function
                       (:methodconst-flag t
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [15189 15227])
                    ("size" function
                       (:methodconst-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [15395 15518])
                    ("size" function
                       (:template 
                          ( ("bool" type (:typevar "Dyn") nil nil))                          
                        :type ("enable_if_t" type
                             (:template-specifier 
                                ( ("Dyn" type nil nil nil)
                                  ("ssize_t" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :methodconst-flag t)
                        (reparse-symbol classsubparts) [15523 15701])
                    ("nbytes" function
                       (:methodconst-flag t
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [15908 15974]))                  )
                nil [12524 15977])
            ("unchecked_mutable_reference" type
               (:template 
                  ( ("T" type (:type "class") nil nil)
                    ("ssize_t" type (:typevar "Dims") nil nil))                  
                :type "class"
                :members 
                  ( ("pybind11" friend nil (reparse-symbol classsubparts) [16093 16114])
                    ("array" variable (:type "int") (reparse-symbol classsubparts) [16116 16122])
                    ("unchecked_reference" variable (:type "int") (reparse-symbol classsubparts) [16145 16174])
                    ("ConstBase::ConstBase" variable (:type "int") (reparse-symbol classsubparts) [16185 16206])
                    ("ConstBase::Dynamic" variable (:type "int") (reparse-symbol classsubparts) [16217 16236])
                    ("public" label nil (reparse-symbol classsubparts) [16237 16244])
                    ("()" function
                       (:operator-flag t
                        :arguments 
                          ( ("" variable (:type ("Ix" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16353 16356])
                            ("" variable (:type ("index" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16359 16365]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [16339 16579])
                    ("[]" function
                       (:operator-flag t
                        :arguments 
                          ( ("index" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16926 16940]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [16912 16970])
                    ("mutable_data" function
                       (:pointer 1
                        :arguments 
                          ( ("" variable (:type ("Ix" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17083 17086])
                            ("" variable (:type ("ix" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17089 17092]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [17067 17132]))                  
                :superclasses 
                  ( ("unchecked_reference" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [15979 17135])
            ("type_caster" type
               (:template 
                  ( ("T" type (:type "class") nil nil)
                    ("ssize_t" type (:typevar "Dim") nil nil))                  
                :type "struct"
                :members 
                  ( ("static_assert" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("Dim" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17240 17245])
                            ("" variable (:type ("Dim" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17252 17257]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [17226 17327]))                  
                :template-specifier 
                  ( ("unchecked_reference" type (:template-specifier 
                      ( ("T" type nil nil nil)
                        ("Dim" type nil nil nil))                      ) nil nil))                  )
                nil [17137 17330])
            ("type_caster" type
               (:template 
                  ( ("T" type (:type "class") nil nil)
                    ("ssize_t" type (:typevar "Dim") nil nil))                  
                :type "struct"
                :superclasses 
                  ( ("type_caster" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :template-specifier 
                  ( ("unchecked_mutable_reference" type (:template-specifier 
                      ( ("T" type nil nil nil)
                        ("Dim" type nil nil nil))                      ) nil nil))                  )
                nil [17331 17468])
            ("dtype" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [17523 17530])
                    ("PYBIND11_OBJECT_DEFAULT" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("dtype" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17559 17565])
                            ("" variable (:type ("object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17566 17573])
                            ("" variable (:type ("detail::npy_api::get" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17574 17596])
                            ("" variable (:type ("PyArrayDescr_Check_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17597 17617]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [17535 17618])
                    ("dtype" function
                       (:constructor-flag t
                        :arguments 
                          ( ("info" variable
                               (:reference 1
                                :constant-flag t
                                :type ("buffer_info" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [17639 17663]))                          
                        :type ("dtype" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [17633 17932])
                    ("dtype" function
                       (:constructor-flag t
                        :arguments 
                          ( ("format" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [17953 17979]))                          
                        :type ("dtype" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [17947 18053])
                    ("dtype" function
                       (:constructor-flag t
                        :arguments 
                          ( ("format" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [18065 18084]))                          
                        :type ("dtype" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [18059 18117])
                    ("dtype" function
                       (:constructor-flag t
                        :arguments 
                          ( ("names" variable (:type ("list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18129 18140])
                            ("formats" variable (:type ("list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18141 18154])
                            ("offsets" variable (:type ("list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18155 18168])
                            ("itemsize" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18169 18186]))                          
                        :type ("dtype" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [18123 18416])
                    ("from_args" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("args" variable (:type ("object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18522 18534]))                          
                        :type ("dtype" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [18499 18747])
                    ("of" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("dtype" type (:type "class") nil nil)
                        :typemodifiers ("static"))
                        (reparse-symbol classsubparts) [18802 18938])
                    ("itemsize" function
                       (:methodconst-flag t
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [18984 19078])
                    ("has_fields" function
                       (:methodconst-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [19132 19235])
                    ("kind" function
                       (:methodconst-flag t
                        :type "char")
                        (reparse-symbol classsubparts) [19277 19362])
                    ("private" label nil (reparse-symbol classsubparts) [19364 19372])
                    ("_dtype_from_pep3118" function
                       (:typemodifiers ("static")
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [19377 19611])
                    ("strip_padding" function
                       (:arguments 
                          ( ("itemsize" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19637 19654]))                          
                        :type ("dtype" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [19617 21012]))                  
                :type "class")
                nil [17493 21015])
            ("array" type
               (:superclasses 
                  ( ("buffer" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [21047 21054])
                    ("" type
                       (:members 
                          ( ("c_style" variable
                               (:constant-flag t
                                :default-value (21174 21180)
                                :type "int")
                                (reparse-symbol enumsubparts) [21164 21180])
                            ("npy_api" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [21182 21190])
                            ("NPY_ARRAY_C_CONTIGUOUS_" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [21191 21215])
                            ("f_style" variable
                               (:constant-flag t
                                :default-value (21234 21240)
                                :type "int")
                                (reparse-symbol enumsubparts) [21224 21240])
                            ("npy_api" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [21242 21250])
                            ("NPY_ARRAY_F_CONTIGUOUS_" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [21251 21275])
                            ("forcecast" variable
                               (:constant-flag t
                                :default-value (21296 21302)
                                :type "int")
                                (reparse-symbol enumsubparts) [21284 21302])
                            ("npy_api" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [21304 21312])
                            ("NPY_ARRAY_FORCECAST_" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [21313 21339]))                          
                        :type "enum")
                        (reparse-symbol classsubparts) [21149 21340])
                    ("array" function
                       (:constructor-flag t
                        :type ("array" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [21346 21409])
                    ("detail::any_container" variable (:type "int") (reparse-symbol classsubparts) [21438 21469])
                    ("detail::any_container" variable (:type "int") (reparse-symbol classsubparts) [21499 21530])
                    ("array" function
                       (:constructor-flag t
                        :arguments 
                          ( ("dt" variable
                               (:reference 1
                                :constant-flag t
                                :type ("pybind11::dtype" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [21621 21647])
                            ("shape" variable (:type ("ShapeContainer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21648 21669])
                            ("strides" variable (:type ("StridesContainer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21670 21695])
                            ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "nullptr"
                                :type "void")
                                (reparse-symbol arg-sub-list) [21706 21731])
                            ("base" variable
                               (:default-value "handle()"
                                :type ("handle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [21733 21755]))                          
                        :type ("array" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [21615 23088])
                    ("array" function
                       (:constructor-flag t
                        :arguments 
                          ( ("dt" variable
                               (:reference 1
                                :constant-flag t
                                :type ("pybind11::dtype" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [23100 23126])
                            ("shape" variable (:type ("ShapeContainer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23127 23148])
                            ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "nullptr"
                                :type "void")
                                (reparse-symbol arg-sub-list) [23149 23174])
                            ("base" variable
                               (:default-value "handle()"
                                :type ("handle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [23176 23198]))                          
                        :type ("array" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [23094 23256])
                    ("array" function
                       (:constructor-flag t
                        :arguments 
                          ( ("dt" variable
                               (:reference 1
                                :constant-flag t
                                :type ("pybind11::dtype" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [23387 23413])
                            ("count" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23414 23422])
                            ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "nullptr"
                                :type "void")
                                (reparse-symbol arg-sub-list) [23423 23448])
                            ("base" variable
                               (:default-value "handle()"
                                :type ("handle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [23450 23472]))                          
                        :type ("array" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [23381 23519])
                    ("array" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("array" type (:type "class") nil nil)
                        :arguments 
                          ( ("shape" variable (:type ("ShapeContainer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23557 23578])
                            ("strides" variable (:type ("StridesContainer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23579 23604])
                            ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [23605 23618])
                            ("base" variable
                               (:default-value "handle()"
                                :type ("handle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [23619 23641]))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [23525 23737])
                    ("array" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("array" type (:type "class") nil nil)
                        :arguments 
                          ( ("shape" variable (:type ("ShapeContainer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23775 23796])
                            ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [23797 23810])
                            ("base" variable
                               (:default-value "handle()"
                                :type ("handle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [23811 23833]))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [23743 23887])
                    ("array" function
                       (:constructor-flag t
                        :arguments 
                          ( ("count" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23934 23948])
                            ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [23949 23962])
                            ("base" variable
                               (:default-value "handle()"
                                :type ("handle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [23963 23985]))                          
                        :type ("array" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [23928 24022])
                    ("array" function
                       (:constructor-flag t
                        :arguments 
                          ( ("info" variable
                               (:reference 1
                                :constant-flag t
                                :type ("buffer_info" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [24043 24067]))                          
                        :type ("array" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24037 24142])
                    ("dtype" function
                       (:methodconst-flag t
                        :type ("pybind11::dtype" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24181 24305])
                    ("size" function
                       (:methodconst-flag t
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24344 24472])
                    ("itemsize" function
                       (:methodconst-flag t
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24516 24638])
                    ("nbytes" function
                       (:methodconst-flag t
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24674 24740])
                    ("ndim" function
                       (:methodconst-flag t
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24775 24850])
                    ("base" function
                       (:methodconst-flag t
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24876 24980])
                    ("shape" function
                       (:methodconst-flag t
                        :pointer 1
                        :constant-flag t
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [25018 25109])
                    ("shape" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("dim" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25166 25178]))                          
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [25152 25297])
                    ("strides" function
                       (:methodconst-flag t
                        :pointer 1
                        :constant-flag t
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [25332 25422])
                    ("strides" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("dim" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25478 25490]))                          
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [25462 25611])
                    ("flags" function
                       (:methodconst-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [25654 25729])
                    ("writeable" function
                       (:methodconst-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [25810 25922])
                    ("owndata" function
                       (:methodconst-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [26010 26118])
                    ("data" function
                       (:methodconst-flag t
                        :pointer 1
                        :constant-flag t
                        :arguments 
                          ( ("" variable (:type ("Ix" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26337 26340])
                            ("" variable (:type ("index" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26343 26349]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [26320 26461])
                    ("mutable_data" function
                       (:pointer 1
                        :arguments 
                          ( ("" variable (:type ("Ix" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26739 26742])
                            ("" variable (:type ("index" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26745 26751]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [26720 26878])
                    ("offset_at" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("" variable (:type ("Ix" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27078 27081])
                            ("" variable (:type ("index" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27084 27090]))                          
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [27060 27279])
                    ("offset_at" function
                       (:methodconst-flag t
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [27285 27324])
                    ("index_at" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("" variable (:type ("Ix" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27522 27525])
                            ("" variable (:type ("index" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27528 27534]))                          
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [27505 27597])
                    ("squeeze" function (:type ("array" type (:type "class") nil nil)) (reparse-symbol classsubparts) [29368 29505])
                    ("resize" function
                       (:arguments 
                          ( ("new_shape" variable (:type ("ShapeContainer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29730 29755])
                            ("refcheck" variable
                               (:default-value "true"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [29756 29776]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [29718 30245])
                    ("ensure" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30403 30412])
                            ("ExtraFlags" variable
                               (:default-value "0"
                                :type "int")
                                (reparse-symbol arg-sub-list) [30413 30431]))                          
                        :type ("array" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [30383 30591])
                    ("protected" label nil (reparse-symbol classsubparts) [30593 30603])
                    ("npy_format_descriptor" type
                       (:parent "detail"
                        :prototype t
                        :type "struct")
                        (reparse-symbol classsubparts) [30644 30681])
                    ("fail_dim_check" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("dim" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30707 30719])
                            ("msg" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [30720 30743]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [30687 30889])
                    ("byte_offset" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("" variable (:type ("Ix" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30940 30943])
                            ("" variable (:type ("index" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30946 30952]))                          
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [30920 31075])
                    ("check_writeable" function
                       (:methodconst-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [31081 31206])
                    ("c_strides" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("shape" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("ssize_t" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [31282 31316])
                            ("itemsize" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31317 31334]))                          
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("ssize_t" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol classsubparts) [31244 31582])
                    ("f_strides" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("shape" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("ssize_t" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [31715 31749])
                            ("itemsize" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31750 31767]))                          
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("ssize_t" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol classsubparts) [31677 31985])
                    ("check_dimensions" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("" variable (:type ("Ix" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32038 32041])
                            ("" variable (:type ("index" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32044 32050]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [32016 32135])
                    ("check_dimensions_impl" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32168 32176])
                            ("" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("ssize_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [32177 32192]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [32141 32202])
                    ("check_dimensions_impl" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("axis" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32260 32273])
                            ("shape" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("ssize_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [32274 32295])
                            ("i" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32296 32306])
                            ("" variable (:type ("Ix" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32307 32310])
                            ("" variable (:type ("index" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32313 32319]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [32233 32662])
                    ("raw_array" function
                       (:pointer 1
                        :typemodifiers ("static")
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [32766 32780])
                            ("ExtraFlags" variable
                               (:default-value "0"
                                :type "int")
                                (reparse-symbol arg-sub-list) [32781 32799]))                          
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [32739 33125]))                  
                :type "class")
                nil [21017 33128])
            ("array_t" type
               (:superclasses 
                  ( ("array" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("private" label nil (reparse-symbol classsubparts) [33218 33226])
                    ("private_ctor" type (:type "struct") (reparse-symbol classsubparts) [33231 33254])
                    ("array_t" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable (:type ("private_ctor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33359 33372])
                            ("" variable
                               (:reference 1
                                :type ("ShapeContainer" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [33373 33390])
                            ("" variable (:type ("shape" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33390 33396])
                            ("" variable
                               (:reference 1
                                :type ("StridesContainer" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [33397 33416])
                            ("" variable (:type ("strides" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33416 33424])
                            ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [33425 33438])
                            ("base" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33439 33451]))                          
                        :type ("array_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [33351 33519])
                    ("public" label nil (reparse-symbol classsubparts) [33520 33527])
                    ("static_assert" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("detail::array_info::is_array" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33547 33579]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [33532 33623])
                    ("value_type" variable
                       (:default-value "T"
                        :type "int")
                        (reparse-symbol classsubparts) [33635 33650])
                    ("array_t" function
                       (:constructor-flag t
                        :type ("array_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [33656 33712])
                    ("array_t" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33725 33734])
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33735 33746]))                          
                        :type ("array_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [33717 33775])
                    ("array_t" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33788 33797])
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33798 33807]))                          
                        :type ("array_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [33780 33834])
                    ("array_t" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33908 33917])
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) [33918 33935]))                          
                        :type ("array_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [33900 34067])
                    ("array_t" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [34081 34097]))                          
                        :type ("array_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34073 34194])
                    ("array_t" function
                       (:constructor-flag t
                        :arguments 
                          ( ("info" variable
                               (:reference 1
                                :constant-flag t
                                :type ("buffer_info" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [34217 34241]))                          
                        :type ("array_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34209 34259])
                    ("array_t" function
                       (:constructor-flag t
                        :arguments 
                          ( ("shape" variable (:type ("ShapeContainer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34273 34294])
                            ("strides" variable (:type ("StridesContainer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34295 34320])
                            ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "nullptr"
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [34321 34343])
                            ("base" variable
                               (:default-value "handle()"
                                :type ("handle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [34345 34367]))                          
                        :type ("array_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34265 34437])
                    ("array_t" function
                       (:constructor-flag t
                        :arguments 
                          ( ("shape" variable (:type ("ShapeContainer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34460 34481])
                            ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "nullptr"
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [34482 34504])
                            ("base" variable
                               (:default-value "handle()"
                                :type ("handle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [34506 34528]))                          
                        :type ("array_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34452 34714])
                    ("array_t" function
                       (:constructor-flag t
                        :arguments 
                          ( ("count" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34737 34750])
                            ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "nullptr"
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [34751 34773])
                            ("base" variable
                               (:default-value "handle()"
                                :type ("handle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [34775 34797]))                          
                        :type ("array_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34729 34842])
                    ("itemsize" function
                       (:methodconst-flag t
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34858 34916])
                    ("index_at" function
                       (:methodconst-flag t
                        :arguments 
                          ( ("" variable (:type ("Ix" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34964 34967])
                            ("" variable (:type ("index" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34970 34976]))                          
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34947 35039])
                    ("data" function
                       (:methodconst-flag t
                        :pointer 1
                        :constant-flag t
                        :arguments 
                          ( ("" variable (:type ("Ix" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35084 35087])
                            ("" variable (:type ("index" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35090 35096]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [35070 35171])
                    ("mutable_data" function
                       (:pointer 1
                        :arguments 
                          ( ("" variable (:type ("Ix" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35218 35221])
                            ("" variable (:type ("index" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35224 35230]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [35202 35301])
                    ("at" function
                       (:methodconst-flag t
                        :constant-flag t
                        :arguments 
                          ( ("" variable (:type ("Ix" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35389 35392])
                            ("" variable (:type ("index" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35395 35401]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [35377 35641])
                    ("mutable_at" function
                       (:arguments 
                          ( ("" variable (:type ("Ix" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35739 35742])
                            ("" variable (:type ("index" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35745 35751]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [35725 35987])
                    ("ensure" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37348 37357]))                          
                        :type ("array_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [37326 37508])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37533 37542]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [37514 37745])
                    ("protected" label nil (reparse-symbol classsubparts) [37747 37757])
                    ("raw_array_t" function
                       (:pointer 1
                        :typemodifiers ("static")
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [37862 37876]))                          
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [37833 38238]))                  
                :type "class")
                nil [33187 38241])
            ("format_descriptor" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("format" function
                       (:typemodifiers ("static")
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [38353 38478]))                  
                :template-specifier 
                  ( ("T" type nil nil nil)
                    ("detail::enable_if_t" type (:template-specifier 
                      ( ("detail::is_pod_struct::value" type nil nil nil))                      ) nil nil))                  )
                nil [38243 38481])
            ("format_descriptor" type
               (:template 
                  ( ("size_t" type (:typevar "N") nil nil))                  
                :type "struct"
                :members 
                  ( ("format" function
                       (:typemodifiers ("static")
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [38682 38745]))                  
                :template-specifier 
                  ( ("std::array" type (:template-specifier 
                      ( ("char" type nil nil nil)
                        ("N" type nil nil nil))                      ) nil nil))                  )
                nil [38610 38748])
            ("format_descriptor" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("format" function
                       (:typemodifiers ("static")
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [38851 39014]))                  
                :template-specifier 
                  ( ("T" type nil nil nil)
                    ("detail::enable_if_t" type (:template-specifier 
                      ( ("std::is_enum::value" type nil nil nil))                      ) nil nil))                  )
                nil [38750 39017])
            ("format_descriptor" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("format" function
                       (:typemodifiers ("static")
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [39129 39362]))                  
                :template-specifier 
                  ( ("T" type nil nil nil)
                    ("detail::enable_if_t" type (:template-specifier 
                      ( ("detail::array_info::is_array" type nil nil nil))                      ) nil nil))                  )
                nil [39019 39365])
            ("pyobject_caster" type
               (:template 
                  ( ("T" type (:type "class") nil nil)
                    ("int" type (:typevar "ExtraFlags") nil nil))                  
                :type "struct"
                :members 
                  ( ("array_t" variable (:type "int") (reparse-symbol classsubparts) [39495 39518])
                    ("load" function
                       (:arguments 
                          ( ("src" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39534 39545])
                            ("convert" variable (:type "bool") (reparse-symbol arg-sub-list) [39546 39559]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [39524 39713])
                    ("cast" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("src" variable
                               (:reference 1
                                :constant-flag t
                                :type ("handle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [39738 39756])
                            ("" variable (:type ("return_value_policy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39757 39790])
                            ("" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39791 39811]))                          
                        :type ("handle" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [39719 39849])
                    ("PYBIND11_TYPE_CASTER" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39875 39880])
                            ("" variable (:type ("handle_type_name" type
                                 (:template-specifier 
                                    ( ("type" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [39881 39904])
                            ("" variable (:type ("name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39905 39910]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [39854 39911]))                  
                :template-specifier 
                  ( ("array_t" type (:template-specifier 
                      ( ("T" type nil nil nil)
                        ("ExtraFlags" type nil nil nil))                      ) nil nil))                  )
                nil [39391 39914])
            ("compare_buffer_info" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("compare" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("buffer_info" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [40048 40069]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [40028 40166]))                  
                :template-specifier 
                  ( ("T" type nil nil nil)
                    ("detail::enable_if_t" type (:template-specifier 
                      ( ("detail::is_pod_struct::value" type nil nil nil))                      ) nil nil))                  )
                nil [39916 40169])
            ("npy_format_descriptor_name" type
               (:prototype t
                :type "struct")
                nil [40210 40244])
            ("npy_format_descriptor_name" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("name" variable
                       (:default-value "_<std::is_same<T, bool>::value>(
        _(\"bool\"), _<std::is_signed<T>::value>(\"int\", \"uint\") + _<sizeof(T)*8>()
    )"
                        :type ("auto" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [40369 40501]))                  
                :template-specifier 
                  ( ("T" type nil nil nil)
                    ("enable_if_t" type (:template-specifier 
                      ( ("std::is_integral::value" type nil nil nil))                      ) nil nil))                  )
                nil [40246 40504])
            ("npy_format_descriptor_name" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "struct"
                :template-specifier 
                  ( ("T" type nil nil nil)
                    ("enable_if_t" type (:template-specifier 
                      ( ("std::is_floating_point::value" type nil nil nil))                      ) nil nil))                  )
                nil [40506 40779])
            ("npy_format_descriptor_name" variable (:type "int") nil [41279 42126])
            ("PYBIND11_DECL_CHAR_FMT" variable (:constant-flag t) nil [42136 42158])
            ("npy_format_descriptor" type
               (:template 
                  ( ("size_t" type (:typevar "N") nil nil))                  
                :type "struct"
                :template-specifier 
                  ( ("std::array" type (:template-specifier 
                      ( ("char" type nil nil nil)
                        ("N" type nil nil nil))                      ) nil nil))                  )
                nil [42400 42497])
            ("npy_format_descriptor" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("private" label nil (reparse-symbol classsubparts) [43192 43200])
                    ("public" label nil (reparse-symbol classsubparts) [43287 43294])
                    ("base_descr::name" variable (:type "int") (reparse-symbol classsubparts) [43328 43345])
                    ("dtype" function
                       (:typemodifiers ("static")
                        :type ("pybind11::dtype" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [43350 43412]))                  
                :template-specifier 
                  ( ("T" type nil nil nil)
                    ("enable_if_t" type (:template-specifier 
                      ( ("std::is_enum::value" type nil nil nil))                      ) nil nil))                  )
                nil [43100 43415])
            ("field_descriptor" type
               (:members 
                  ( ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol classsubparts) [43447 43464])
                    ("offset" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [43469 43484])
                    ("size" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [43489 43502])
                    ("format" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [43507 43526])
                    ("descr" variable (:type ("dtype" type (:type "class") nil nil)) (reparse-symbol classsubparts) [43531 43543]))                  
                :type "struct")
                nil [43417 43546])
            ("register_structured_dtype" function
               (:arguments 
                  ( ("fields" variable (:type ("any_container" type
                         (:template-specifier 
                            ( ("field_descriptor" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [43609 43648])
                    ("tinfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::type_info" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [43653 43681])
                    ("itemsize" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43682 43699])
                    ("direct_converter" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [43729 43740])
                            ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [43741 43748]))                          
                        :type "bool")
                        nil nil))                  
                :type "void")
                nil [43573 46555])
            ("npy_format_descriptor" type
               (:template 
                  ( ("T" type (:type "class") nil nil)
                    ("SFINAE" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("static_assert" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("is_pod_struct" type
                                 (:template-specifier 
                                    ( ("T" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [46645 46662])
                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46663 46669]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [46631 46741])
                    ("make_caster::name" variable (:type "int") (reparse-symbol classsubparts) [46776 46797])
                    ("dtype" function
                       (:typemodifiers ("static")
                        :type ("pybind11::dtype" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [46803 46906])
                    ("format" function
                       (:typemodifiers ("static")
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [46912 47065])
                    ("register_dtype" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("fields" variable (:type ("any_container" type
                                 (:template-specifier 
                                    ( ("field_descriptor" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [47098 47137]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [47071 47305])
                    ("private" label nil (reparse-symbol classsubparts) [47307 47315])
                    ("dtype_ptr" function
                       (:pointer 1
                        :typemodifiers ("static")
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [47320 47464])
                    ("direct_converter" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [47499 47513])
                            ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [47514 47520])
                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47521 47527]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [47470 47960]))                  )
                nil [46557 47963])
            ("PYBIND11_FIELD_DESCRIPTOR_EX" variable (:constant-flag t) nil [48179 48207])
            ("PYBIND11_FIELD_DESCRIPTOR" variable (:constant-flag t) nil [48731 48756])
            ("PYBIND11_EVAL0" variable (:constant-flag t) nil [48946 48960])
            ("PYBIND11_EVAL1" variable (:constant-flag t) nil [48986 49000])
            ("PYBIND11_EVAL2" variable (:constant-flag t) nil [49077 49091])
            ("PYBIND11_EVAL3" variable (:constant-flag t) nil [49168 49182])
            ("PYBIND11_EVAL4" variable (:constant-flag t) nil [49259 49273])
            ("PYBIND11_EVAL" variable (:constant-flag t) nil [49350 49363])
            ("PYBIND11_MAP_END" variable (:constant-flag t) nil [49441 49457])
            ("PYBIND11_MAP_OUT" variable (:constant-flag t) nil [49471 49487])
            ("PYBIND11_MAP_COMMA" variable (:constant-flag t) nil [49496 49514])
            ("PYBIND11_MAP_GET_END" variable (:constant-flag t) nil [49525 49545])
            ("PYBIND11_MAP_NEXT0" variable (:constant-flag t) nil [49576 49594])
            ("PYBIND11_MAP_NEXT1" variable (:constant-flag t) nil [49642 49660])
            ("PYBIND11_MAP_NEXT" variable (:constant-flag t) nil [49716 49733])
            ("PYBIND11_MAP_LIST_NEXT1" variable (:constant-flag t) nil [50015 50038])
            ("PYBIND11_MAP_LIST_NEXT" variable (:constant-flag t) nil [50126 50148])
            ("PYBIND11_MAP_LIST0" variable (:constant-flag t) nil [50233 50251])
            ("PYBIND11_MAP_LIST1" variable (:constant-flag t) nil [50370 50388])
            ("PYBIND11_MAP_LIST" variable (:constant-flag t) nil [50582 50599])
            ("PYBIND11_NUMPY_DTYPE" variable (:constant-flag t) nil [50688 50708])
            ("PYBIND11_MAP2_LIST_NEXT1" variable (:constant-flag t) nil [51085 51109])
            ("PYBIND11_MAP2_LIST_NEXT" variable (:constant-flag t) nil [51197 51220])
            ("PYBIND11_MAP2_LIST0" variable (:constant-flag t) nil [51306 51325])
            ("PYBIND11_MAP2_LIST1" variable (:constant-flag t) nil [51456 51475])
            ("PYBIND11_MAP2_LIST" variable (:constant-flag t) nil [51690 51708])
            ("PYBIND11_NUMPY_DTYPE_EX" variable (:constant-flag t) nil [51798 51821])
            ("std::add_pointer::type" variable
               (:typemodifiers ("typename")
                :type "int")
                nil [52118 52153])
            ("array_begin" function
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type ("array_iterator" type
                     (:template-specifier 
                        ( ("T" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :arguments 
                  ( ("buffer" variable
                       (:reference 1
                        :constant-flag t
                        :type ("buffer_info" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [52204 52230]))                  )
                nil [52155 52298])
            ("array_end" function
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type ("array_iterator" type
                     (:template-specifier 
                        ( ("T" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :arguments 
                  ( ("buffer" variable
                       (:reference 1
                        :constant-flag t
                        :type ("buffer_info" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [52347 52373]))                  )
                nil [52300 52455])
            ("common_iterator" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [52481 52488])
                    ("std::vector" variable (:type "int") (reparse-symbol classsubparts) [52516 52537])
                    ("container_type::value_type" variable (:type "int") (reparse-symbol classsubparts) [52561 52588])
                    ("container_type::size_type" variable (:type "int") (reparse-symbol classsubparts) [52611 52637])
                    ("common_iterator" function
                       (:constructor-flag t
                        :type ("common_iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [52643 52687])
                    ("common_iterator" function
                       (:constructor-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [52709 52719])
                            ("strides" variable
                               (:reference 1
                                :constant-flag t
                                :type ("container_type" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [52720 52750])
                            ("shape" variable
                               (:reference 1
                                :constant-flag t
                                :type ("container_type" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [52751 52779]))                          
                        :type ("common_iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [52693 53168])
                    ("increment" function
                       (:arguments 
                          ( ("dim" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53189 53203]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [53174 53244])
                    ("data" function
                       (:methodconst-flag t
                        :pointer 1
                        :type "void")
                        (reparse-symbol classsubparts) [53250 53298])
                    ("private" label nil (reparse-symbol classsubparts) [53300 53308])
                    ("p_ptr" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [53313 53325])
                    ("m_strides" variable (:type ("container_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [53330 53355]))                  
                :type "class")
                nil [52457 53358])
            ("multi_array_iterator" type
               (:template 
                  ( ("size_t" type (:typevar "N") nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [53409 53416])
                    ("std::vector" variable (:type "int") (reparse-symbol classsubparts) [53444 53465])
                    ("multi_array_iterator" function
                       (:constructor-flag t
                        :arguments 
                          ( ("buffers" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::array" type
                                     (:template-specifier 
                                        ( ("buffer_info" type nil nil nil)
                                          ("N" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [53492 53534])
                            ("shape" variable
                               (:reference 1
                                :constant-flag t
                                :type ("container_type" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [53560 53588]))                          
                        :type ("multi_array_iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [53471 54011])
                    ("++" function
                       (:operator-flag t
                        :type ("multi_array_iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [54017 54358])
                    ("data" function
                       (:methodconst-flag t
                        :pointer 1
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [54400 54489])
                    ("private" label nil (reparse-symbol classsubparts) [54491 54499])
                    ("common_iter" variable
                       (:default-value "common_iterator"
                        :type "int")
                        (reparse-symbol classsubparts) [54511 54541])
                    ("init_common_iterator" function
                       (:arguments 
                          ( ("buffer" variable
                               (:reference 1
                                :constant-flag t
                                :type ("buffer_info" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [54573 54599])
                            ("shape" variable
                               (:reference 1
                                :constant-flag t
                                :type ("container_type" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [54630 54658])
                            ("iterator" variable
                               (:reference 1
                                :type ("common_iter" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [54689 54711])
                            ("strides" variable
                               (:reference 1
                                :type ("container_type" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [54742 54766]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [54547 55441])
                    ("increment_common_iterator" function
                       (:arguments 
                          ( ("dim" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55478 55489]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [55447 55575])
                    ("m_shape" variable (:type ("container_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [55581 55604])
                    ("m_index" variable (:type ("container_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [55609 55632])
                    ("m_common_iterator" variable (:type ("std::array" type
                         (:template-specifier 
                            ( ("common_iter" type nil nil nil)
                              ("N" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [55637 55682]))                  )
                nil [53360 55685])
            ("broadcast_trivial" type (:type "class") nil [55692 55754])
            ("broadcast" function
               (:template 
                  ( ("size_t" type (:typevar "N") nil nil))                  
                :type ("broadcast_trivial" type (:type "class") nil nil)
                :arguments 
                  ( ("buffers" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::array" type
                             (:template-specifier 
                                ( ("buffer_info" type nil nil nil)
                                  ("N" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [56150 56192])
                    ("ndim" variable
                       (:reference 1
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [56193 56207])
                    ("shape" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("ssize_t" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [56208 56236]))                  )
                nil [56102 59234])
            ("vectorize_arg" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("static_assert" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("std::is_rvalue_reference::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59300 59335]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [59285 59402])
                    ("remove_reference_t" variable (:type "int") (reparse-symbol classsubparts) [59481 59503])
                    ("conditional_t" variable (:type "int") (reparse-symbol classsubparts) [60001 60080]))                  )
                nil [59236 60083])
            ("vectorize_helper" type
               (:members 
                  ( ("private" label nil (reparse-symbol classsubparts) [60171 60179])
                    ("NVectorized" variable
                       (:default-value "constexpr_sum(vectorize_arg<Args>::vectorize...)"
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [60250 60320])
                    ("static_assert" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("NVectorized" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60339 60352]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [60325 60457])
                    ("public" label nil (reparse-symbol classsubparts) [60459 60466])
                    ("vectorize_helper" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [60523 60527])
                            ("" variable (:type ("f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60527 60529]))                          
                        :type ("vectorize_helper" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [60506 60557])
                    ("()" function
                       (:operator-flag t
                        :arguments 
                          ( ("" variable
                               (:typemodifiers ("typename")
                                :type ("vectorize_arg" type
                                     (:template-specifier 
                                        ( ("Args" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [60581 60610])
                            ("" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60611 60616])
                            ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60619 60624]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [60563 60833])
                    ("private" label nil (reparse-symbol classsubparts) [60835 60843])
                    ("f" variable (:type ("remove_reference_t" type
                         (:template-specifier 
                            ( ("Func" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [60848 60875])
                    ("std::tuple_element::type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [61176 61233])
                    ("run" function
                       (:arguments 
                          ( ("" variable
                               (:typemodifiers ("typename")
                                :type ("vectorize_arg" type
                                     (:template-specifier 
                                        ( ("Args" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [61898 61927])
                            ("" variable
                               (:reference 1
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [61928 61935])
                            ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61937 61942])
                            ("" variable (:type ("index_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61955 61970])
                            ("" variable (:type ("Index" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61970 61976])
                            ("" variable (:type ("i_seq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61980 61986])
                            ("" variable (:type ("index_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61987 62002])
                            ("" variable (:type ("VIndex" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62002 62009])
                            ("" variable (:type ("vi_seq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62013 62020])
                            ("" variable (:type ("index_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62021 62036])
                            ("" variable (:type ("BIndex" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62036 62043])
                            ("" variable (:type ("bi_seq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62047 62054]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [61874 63784])
                    ("apply_trivial" function
                       (:arguments 
                          ( ("buffers" variable
                               (:reference 1
                                :type ("std::array" type
                                     (:template-specifier 
                                        ( ("buffer_info" type nil nil nil)
                                          ("NVectorized" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [63876 63922])
                            ("params" variable
                               (:reference 1
                                :type ("std::array" type
                                     (:template-specifier 
                                        ( ("void" type (:pointer 1) nil nil)
                                          ("N" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [63946 63976])
                            ("out" variable
                               (:pointer 1
                                :type ("Return" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [64000 64012])
                            ("size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64036 64048])
                            ("" variable (:type ("index_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64072 64087])
                            ("" variable (:type ("Index" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64087 64093])
                            ("" variable (:type ("index_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64098 64113])
                            ("" variable (:type ("VIndex" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64113 64120])
                            ("" variable (:type ("index_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64125 64140])
                            ("" variable (:type ("BIndex" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64140 64147]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [63857 64958])
                    ("apply_broadcast" function
                       (:arguments 
                          ( ("buffers" variable
                               (:reference 1
                                :type ("std::array" type
                                     (:template-specifier 
                                        ( ("buffer_info" type nil nil nil)
                                          ("NVectorized" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [65052 65098])
                            ("params" variable
                               (:reference 1
                                :type ("std::array" type
                                     (:template-specifier 
                                        ( ("void" type (:pointer 1) nil nil)
                                          ("N" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [65124 65154])
                            ("output_array" variable
                               (:reference 1
                                :type ("array_t" type
                                     (:template-specifier 
                                        ( ("Return" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [65180 65210])
                            ("" variable (:type ("index_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [65236 65251])
                            ("" variable (:type ("Index" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [65251 65257])
                            ("" variable (:type ("index_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [65262 65277])
                            ("" variable (:type ("VIndex" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [65277 65284])
                            ("" variable (:type ("index_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [65289 65304])
                            ("" variable (:type ("BIndex" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [65304 65311]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [65031 65850]))                  
                :type "struct")
                nil [60145 65853])
            ("vectorize_extractor" function
               (:arguments 
                  ( ("f" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Func" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [65975 65989])
                    ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [66002 66008])
                            ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [66007 66011]))                          
                        :type ("Return" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [65955 66079])
            ("handle_type_name" type
               (:template 
                  ( ("T" type (:type "class") nil nil)
                    ("int" type (:typevar "Flags") nil nil))                  
                :type "struct"
                :members 
                  ( ("_" function
                       (:prototype-flag t
                        :operator-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [66247 66254]))                  
                :template-specifier 
                  ( ("array_t" type (:template-specifier 
                      ( ("T" type nil nil nil)
                        ("Flags" type nil nil nil))                      ) nil nil))                  )
                nil [66081 66257])
            ("Return" function (:type "int") nil [66383 66402])
            ("vectorize" function
               (:arguments 
                  ( ("f" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [66444 66450])
                            ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [66449 66453]))                          
                        :type ("Return" type (:type "class") nil nil))
                        nil nil))                  
                :type "int")
                nil [66421 66536])
            ("decltype" function
               (:arguments 
                  ( ("" variable (:type ("detail::vectorize_extractor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [66693 66791]))                  
                :type "int")
                nil [66675 66907])
            ("vectorize" function
               (:arguments ((nil variable (:pointer (("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67194 67199]) ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [67198 67202])) :type ("Return" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67175 67203]))
                :type ("Helper" type (:type "class") nil nil))
                nil [67158 67242])
            ("vectorize" function
               (:arguments ((nil variable (:pointer (("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67537 67542]) ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [67541 67545])) :type ("Return" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67518 67551]))
                :type ("Helper" type (:type "class") nil nil))
                nil [67501 67591]))          
      :file "numpy.h"
      :pointmax 67678
      :fsize 67677
      :lastmodtime '(24145 28046 795368 942000)
      :unmatched-syntax '((semantic-list 67606 . 67626) (symbol 67593 . 67606) (CONST 67546 . 67551) (punctuation 67499 . 67500) (punctuation 67498 . 67499) (punctuation 67497 . 67498) (punctuation 67496 . 67497) (punctuation 67495 . 67496) (symbol 67491 . 67495) (punctuation 67489 . 67490) (punctuation 67488 . 67489) (symbol 67482 . 67487) (CONST 67476 . 67481) (punctuation 67474 . 67475) (symbol 67468 . 67474) (punctuation 67466 . 67467) (semantic-list 67403 . 67466) (symbol 67395 . 67403) (semantic-list 67415 . 67465) (punctuation 67394 . 67395) (symbol 67378 . 67394) (punctuation 67377 . 67378) (punctuation 67376 . 67377) (symbol 67370 . 67376) (punctuation 67368 . 67369) (symbol 67361 . 67367) (TYPENAME 67352 . 67360) (punctuation 67340 . 67341) (symbol 67336 . 67340) (punctuation 67334 . 67335) (punctuation 67333 . 67334) (punctuation 67332 . 67333) (TYPENAME 67324 . 67332) (punctuation 67322 . 67323) (symbol 67317 . 67322) (TYPENAME 67308 . 67316) (punctuation 67306 . 67307) (symbol 67300 . 67306) (TYPENAME 67291 . 67299) (punctuation 67290 . 67291) (TEMPLATE 67281 . 67289) (punctuation 67156 . 67157) (punctuation 67155 . 67156) (punctuation 67154 . 67155) (punctuation 67153 . 67154) (punctuation 67152 . 67153) (symbol 67148 . 67152) (punctuation 67146 . 67147) (punctuation 67145 . 67146) (symbol 67139 . 67144) (punctuation 67137 . 67138) (symbol 67131 . 67137) (punctuation 67129 . 67130) (semantic-list 67072 . 67129) (symbol 67064 . 67072) (semantic-list 67084 . 67128) (punctuation 67063 . 67064) (symbol 67047 . 67063) (punctuation 67046 . 67047) (punctuation 67045 . 67046) (symbol 67039 . 67045) (punctuation 67037 . 67038) (symbol 67030 . 67036) (TYPENAME 67021 . 67029) (punctuation 67009 . 67010) (symbol 67005 . 67009) (punctuation 67003 . 67004) (punctuation 67002 . 67003) (punctuation 67001 . 67002) (TYPENAME 66993 . 67001) (punctuation 66991 . 66992) (symbol 66986 . 66991) (TYPENAME 66977 . 66985) (punctuation 66975 . 66976) (symbol 66969 . 66975) (TYPENAME 66960 . 66968) (punctuation 66959 . 66960) (TEMPLATE 66950 . 66958) (semantic-list 66720 . 66791) (punctuation 66673 . 66674) (punctuation 66672 . 66673) (semantic-list 66661 . 66671) (symbol 66652 . 66661) (punctuation 66668 . 66669) (symbol 66647 . 66651) (punctuation 66668 . 66669) (punctuation 66645 . 66646) (number 66644 . 66645) (punctuation 66642 . 66643) (punctuation 66640 . 66641) (INT 66637 . 66640) (punctuation 66635 . 66636) (symbol 66630 . 66635) (punctuation 66629 . 66630) (punctuation 66628 . 66629) (punctuation 66627 . 66628) (symbol 66623 . 66627) (punctuation 66622 . 66623) (symbol 66613 . 66622) (punctuation 66612 . 66613) (punctuation 66611 . 66612) (symbol 66605 . 66611) (punctuation 66604 . 66605) (symbol 66593 . 66604) (punctuation 66592 . 66593) (punctuation 66591 . 66592) (symbol 66585 . 66591) (punctuation 66583 . 66584) (symbol 66579 . 66583) (TYPENAME 66570 . 66578) (punctuation 66569 . 66570) (TEMPLATE 66560 . 66568) (punctuation 66419 . 66420) (punctuation 66418 . 66419) (punctuation 66417 . 66418) (punctuation 66416 . 66417) (symbol 66412 . 66416) (punctuation 66410 . 66411) (symbol 66404 . 66410) (punctuation 66402 . 66403) (punctuation 66391 . 66392) (punctuation 66382 . 66383) (symbol 66366 . 66382) (punctuation 66365 . 66366) (punctuation 66364 . 66365) (symbol 66358 . 66364) (punctuation 66356 . 66357) (symbol 66352 . 66356) (punctuation 66350 . 66351) (punctuation 66349 . 66350) (punctuation 66348 . 66349) (TYPENAME 66340 . 66348) (punctuation 66338 . 66339) (symbol 66332 . 66338) (TYPENAME 66323 . 66331) (punctuation 66322 . 66323) (TEMPLATE 66313 . 66321) (semantic-list 66272 . 66280) (symbol 66259 . 66272) (string 66249 . 66252) (punctuation 66245 . 66246) (symbol 66240 . 66244) (punctuation 66239 . 66240) (punctuation 66238 . 66239) (punctuation 66237 . 66238) (symbol 66236 . 66237) (punctuation 66235 . 66236) (symbol 66214 . 66235) (punctuation 66212 . 66213) (semantic-list 66193 . 66211) (symbol 66192 . 66193) (string 66194 . 66210) (punctuation 66190 . 66191) (symbol 66185 . 66189) (symbol 66180 . 66184) (symbol 66170 . 66179) (STATIC 66163 . 66169) (punctuation 65953 . 65954) (punctuation 65952 . 65953) (punctuation 65951 . 65952) (punctuation 65950 . 65951) (symbol 65946 . 65950) (punctuation 65944 . 65945) (symbol 65938 . 65944) (punctuation 65936 . 65937) (symbol 65932 . 65936) (punctuation 65931 . 65932) (symbol 65915 . 65931) (punctuation 65913 . 65914) (symbol 65909 . 65913) (punctuation 65907 . 65908) (punctuation 65906 . 65907) (punctuation 65905 . 65906) (TYPENAME 65897 . 65905) (punctuation 65895 . 65896) (symbol 65889 . 65895) (TYPENAME 65880 . 65888) (punctuation 65878 . 65879) (symbol 65874 . 65878) (TYPENAME 65865 . 65873) (punctuation 65864 . 65865) (TEMPLATE 65855 . 65863) (punctuation 65313 . 65314) (punctuation 65312 . 65313) (punctuation 65311 . 65312) (punctuation 65310 . 65311) (punctuation 65303 . 65304) (punctuation 65286 . 65287) (punctuation 65285 . 65286) (punctuation 65284 . 65285) (punctuation 65283 . 65284) (punctuation 65276 . 65277) (punctuation 65259 . 65260) (punctuation 65258 . 65259) (punctuation 65257 . 65258) (punctuation 65256 . 65257) (punctuation 65250 . 65251) (punctuation 65025 . 65026) (symbol 65019 . 65025) (punctuation 65017 . 65018) (punctuation 65016 . 65017) (punctuation 65015 . 65016) (symbol 65009 . 65015) (punctuation 65007 . 65008) (symbol 65001 . 65007) (punctuation 64999 . 65000) (punctuation 64998 . 64999) (punctuation 64997 . 64998) (symbol 64991 . 64997) (punctuation 64989 . 64990) (symbol 64984 . 64989) (punctuation 64982 . 64983) (punctuation 64981 . 64982) (punctuation 64980 . 64981) (symbol 64974 . 64980) (punctuation 64973 . 64974) (TEMPLATE 64964 . 64972) (punctuation 64149 . 64150) (punctuation 64148 . 64149) (punctuation 64147 . 64148) (punctuation 64146 . 64147) (punctuation 64139 . 64140) (punctuation 64122 . 64123) (punctuation 64121 . 64122) (punctuation 64120 . 64121) (punctuation 64119 . 64120) (punctuation 64112 . 64113) (punctuation 64095 . 64096) (punctuation 64094 . 64095) (punctuation 64093 . 64094) (punctuation 64092 . 64093) (punctuation 64086 . 64087) (punctuation 63851 . 63852) (symbol 63845 . 63851) (punctuation 63843 . 63844) (punctuation 63842 . 63843) (punctuation 63841 . 63842) (symbol 63835 . 63841) (punctuation 63833 . 63834) (symbol 63827 . 63833) (punctuation 63825 . 63826) (punctuation 63824 . 63825) (punctuation 63823 . 63824) (symbol 63817 . 63823) (punctuation 63815 . 63816) (symbol 63810 . 63815) (punctuation 63808 . 63809) (punctuation 63807 . 63808) (punctuation 63806 . 63807) (symbol 63800 . 63806) (punctuation 63799 . 63800) (TEMPLATE 63790 . 63798) (punctuation 62045 . 62046) (punctuation 62044 . 62045) (punctuation 62043 . 62044) (punctuation 62042 . 62043) (punctuation 62035 . 62036) (punctuation 62011 . 62012) (punctuation 62010 . 62011) (punctuation 62009 . 62010) (punctuation 62008 . 62009) (punctuation 62001 . 62002) (punctuation 61978 . 61979) (punctuation 61977 . 61978) (punctuation 61976 . 61977) (punctuation 61975 . 61976) (punctuation 61969 . 61970) (punctuation 61936 . 61937) (punctuation 61935 . 61936) (punctuation 61934 . 61935) (punctuation 61927 . 61928) (punctuation 61926 . 61927) (punctuation 61872 . 61873) (symbol 61866 . 61872) (punctuation 61864 . 61865) (punctuation 61863 . 61864) (punctuation 61862 . 61863) (symbol 61856 . 61862) (punctuation 61854 . 61855) (symbol 61848 . 61854) (punctuation 61846 . 61847) (punctuation 61845 . 61846) (punctuation 61844 . 61845) (symbol 61838 . 61844) (punctuation 61836 . 61837) (symbol 61831 . 61836) (punctuation 61829 . 61830) (punctuation 61828 . 61829) (punctuation 61827 . 61828) (symbol 61821 . 61827) (punctuation 61820 . 61821) (TEMPLATE 61811 . 61819) (punctuation 61174 . 61175) (symbol 61164 . 61173) (USING 61158 . 61163) (punctuation 61156 . 61157) (symbol 61151 . 61156) (symbol 61144 . 61150) (punctuation 61143 . 61144) (TEMPLATE 61134 . 61142) (punctuation 61128 . 61129) (punctuation 61127 . 61128) (punctuation 61126 . 61127) (punctuation 61125 . 61126) (punctuation 61124 . 61125) (symbol 61115 . 61124) (punctuation 61114 . 61115) (punctuation 61113 . 61114) (punctuation 61112 . 61113) (symbol 61108 . 61112) (punctuation 61107 . 61108) (symbol 61094 . 61107) (TYPENAME 61085 . 61093) (punctuation 61084 . 61085) (symbol 61079 . 61084) (punctuation 61078 . 61079) (punctuation 61077 . 61078) (symbol 61074 . 61077) (punctuation 61072 . 61073) (symbol 61057 . 61071) (USING 61051 . 61056) (punctuation 60617 . 60618) (punctuation 60616 . 60617) (punctuation 60615 . 60616) (punctuation 60610 . 60611) (punctuation 60609 . 60610) (punctuation 60526 . 60527) (EXPLICIT 60497 . 60505) (punctuation 60491 . 60492) (symbol 60490 . 60491) (TYPENAME 60481 . 60489) (punctuation 60480 . 60481) (TEMPLATE 60471 . 60479) (string 60369 . 60455) (number 60354 . 60355) (punctuation 60352 . 60353) (punctuation 60351 . 60352) (symbol 60240 . 60249) (STATIC 60233 . 60239) (punctuation 60227 . 60228) (semantic-list 60221 . 60227) (punctuation 60220 . 60221) (punctuation 60219 . 60220) (punctuation 60218 . 60219) (SIZEOF 60212 . 60218) (punctuation 60210 . 60211) (symbol 60208 . 60209) (symbol 60201 . 60207) (symbol 60191 . 60200) (STATIC 60184 . 60190) (punctuation 60143 . 60144) (symbol 60139 . 60143) (punctuation 60137 . 60138) (punctuation 60136 . 60137) (punctuation 60135 . 60136) (TYPENAME 60127 . 60135) (punctuation 60125 . 60126) (symbol 60119 . 60125) (TYPENAME 60110 . 60118) (punctuation 60108 . 60109) (symbol 60104 . 60108) (TYPENAME 60095 . 60103) (punctuation 60094 . 60095) (TEMPLATE 60085 . 60093) (punctuation 59999 . 60000) (symbol 59994 . 59998) (USING 59988 . 59993) (punctuation 59900 . 59901) (semantic-list 59786 . 59900) (punctuation 59776 . 59777) (punctuation 59775 . 59776) (symbol 59769 . 59774) (punctuation 59768 . 59769) (punctuation 59767 . 59768) (punctuation 59766 . 59767) (symbol 59759 . 59766) (punctuation 59758 . 59759) (punctuation 59757 . 59758) (symbol 59754 . 59757) (punctuation 59752 . 59753) (symbol 59740 . 59752) (punctuation 59738 . 59739) (symbol 59730 . 59738) (punctuation 59729 . 59730) (punctuation 59728 . 59729) (symbol 59725 . 59728) (punctuation 59723 . 59724) (symbol 59713 . 59723) (punctuation 59712 . 59713) (punctuation 59711 . 59712) (symbol 59708 . 59711) (punctuation 59706 . 59707) (symbol 59697 . 59706) (punctuation 59696 . 59697) (symbol 59679 . 59696) (punctuation 59669 . 59670) (punctuation 59668 . 59669) (symbol 59662 . 59667) (punctuation 59661 . 59662) (punctuation 59660 . 59661) (punctuation 59659 . 59660) (symbol 59653 . 59659) (punctuation 59652 . 59653) (punctuation 59651 . 59652) (symbol 59648 . 59651) (punctuation 59646 . 59647) (symbol 59636 . 59646) (punctuation 59634 . 59635) (symbol 59621 . 59634) (punctuation 59620 . 59621) (punctuation 59619 . 59620) (symbol 59616 . 59619) (punctuation 59614 . 59615) (symbol 59605 . 59614) (punctuation 59604 . 59605) (symbol 59588 . 59604) (punctuation 59578 . 59579) (symbol 59568 . 59577) (BOOL 59563 . 59567) (symbol 59553 . 59562) (STATIC 59546 . 59552) (punctuation 59479 . 59480) (symbol 59469 . 59478) (USING 59463 . 59468) (string 59336 . 59400) (punctuation 59299 . 59300) (symbol 55742 . 55751) (punctuation 55740 . 55741) (symbol 55731 . 55740) (punctuation 55729 . 55730) (symbol 55718 . 55729) (ENUM 55687 . 55691) (USING 54505 . 54510) (punctuation 54398 . 54399) (VOID 54394 . 54398) (punctuation 54392 . 54393) (symbol 54390 . 54391) (CLASS 54384 . 54389) (punctuation 54382 . 54383) (symbol 54381 . 54382) (symbol 54374 . 54380) (punctuation 54373 . 54374) (TEMPLATE 54364 . 54372) (punctuation 53442 . 53443) (symbol 53427 . 53441) (USING 53421 . 53426) (punctuation 52609 . 52610) (symbol 52599 . 52608) (USING 52593 . 52598) (punctuation 52559 . 52560) (symbol 52548 . 52558) (USING 52542 . 52547) (punctuation 52514 . 52515) (symbol 52499 . 52513) (USING 52493 . 52498) (USING 52095 . 52100) (punctuation 52093 . 52094) (symbol 52092 . 52093) (CLASS 52086 . 52091) (punctuation 52085 . 52086) (TEMPLATE 52075 . 52083) (punctuation 47519 . 47520) (punctuation 46774 . 46775) (symbol 46769 . 46773) (symbol 46764 . 46768) (symbol 46754 . 46763) (STATIC 46747 . 46753) (string 46670 . 46739) (punctuation 46662 . 46663) (punctuation 46661 . 46662) (punctuation 43747 . 43748) (symbol 43555 . 43572) (INLINE 43548 . 43554) (punctuation 43326 . 43327) (symbol 43321 . 43325) (symbol 43316 . 43320) (symbol 43306 . 43315) (STATIC 43299 . 43305) (punctuation 43285 . 43286) (punctuation 43284 . 43285) (symbol 43280 . 43284) (punctuation 43279 . 43280) (punctuation 43278 . 43279) (punctuation 43277 . 43278) (symbol 43276 . 43277) (punctuation 43275 . 43276) (symbol 43260 . 43275) (punctuation 43259 . 43260) (punctuation 43258 . 43259) (symbol 43255 . 43258) (TYPENAME 43246 . 43254) (punctuation 43245 . 43246) (symbol 43224 . 43245) (punctuation 43222 . 43223) (symbol 43211 . 43221) (USING 43205 . 43210) (punctuation 43097 . 43098) (semantic-list 42620 . 43097) (punctuation 42618 . 42619) (punctuation 42617 . 42618) (symbol 42609 . 42617) (punctuation 42608 . 42609) (punctuation 42607 . 42608) (punctuation 42606 . 42607) (symbol 42605 . 42606) (punctuation 42604 . 42605) (symbol 42594 . 42604) (punctuation 42593 . 42594) (symbol 42582 . 42593) (punctuation 42580 . 42581) (symbol 42579 . 42580) (punctuation 42578 . 42579) (symbol 42557 . 42578) (STRUCT 42550 . 42556) (punctuation 42548 . 42549) (symbol 42547 . 42548) (TYPENAME 42538 . 42546) (punctuation 42537 . 42538) (TEMPLATE 42529 . 42537) (symbol 42472 . 42494) (punctuation 42398 . 42399) (semantic-list 42372 . 42398) (punctuation 42370 . 42371) (semantic-list 42367 . 42370) (CHAR 42363 . 42367) (punctuation 42362 . 42363) (symbol 42341 . 42362) (STRUCT 42334 . 42340) (punctuation 42332 . 42333) (symbol 42331 . 42332) (symbol 42324 . 42330) (punctuation 42323 . 42324) (TEMPLATE 42314 . 42322) (punctuation 41277 . 41278) (punctuation 41271 . 41272) (punctuation 41270 . 41271) (symbol 41265 . 41270) (punctuation 41264 . 41265) (punctuation 41263 . 41264) (punctuation 41262 . 41263) (symbol 41252 . 41262) (punctuation 41250 . 41251) (symbol 41237 . 41250) (punctuation 41236 . 41237) (punctuation 41235 . 41236) (symbol 41232 . 41235) (punctuation 41230 . 41231) (symbol 41229 . 41230) (punctuation 41228 . 41229) (symbol 41212 . 41228) (punctuation 41211 . 41212) (symbol 41200 . 41211) (punctuation 41198 . 41199) (symbol 41197 . 41198) (punctuation 41196 . 41197) (symbol 41175 . 41196) (STRUCT 41168 . 41174) (punctuation 41166 . 41167) (symbol 41165 . 41166) (TYPENAME 41156 . 41164) (punctuation 41155 . 41156) (TEMPLATE 41146 . 41154) (punctuation 41143 . 41144) (semantic-list 40875 . 41143) (punctuation 40873 . 40874) (punctuation 40872 . 40873) (symbol 40867 . 40872) (punctuation 40866 . 40867) (punctuation 40865 . 40866) (punctuation 40864 . 40865) (symbol 40863 . 40864) (punctuation 40862 . 40863) (symbol 40852 . 40862) (punctuation 40851 . 40852) (symbol 40840 . 40851) (punctuation 40838 . 40839) (symbol 40837 . 40838) (punctuation 40836 . 40837) (symbol 40810 . 40836) (STRUCT 40803 . 40809) (punctuation 40801 . 40802) (symbol 40800 . 40801) (TYPENAME 40791 . 40799) (punctuation 40790 . 40791) (TEMPLATE 40781 . 40789) (punctuation 40775 . 40776) (semantic-list 40713 . 40775) (punctuation 40712 . 40713) (symbol 40707 . 40712) (punctuation 40706 . 40707) (punctuation 40705 . 40706) (punctuation 40704 . 40705) (DOUBLE 40698 . 40704) (punctuation 40696 . 40697) (symbol 40695 . 40696) (punctuation 40694 . 40695) (symbol 40687 . 40694) (punctuation 40686 . 40687) (punctuation 40685 . 40686) (symbol 40682 . 40685) (punctuation 40680 . 40681) (punctuation 40679 . 40680) (symbol 40673 . 40678) (punctuation 40672 . 40673) (punctuation 40671 . 40672) (punctuation 40670 . 40671) (FLOAT 40665 . 40670) (punctuation 40663 . 40664) (symbol 40662 . 40663) (punctuation 40661 . 40662) (symbol 40654 . 40661) (punctuation 40653 . 40654) (punctuation 40652 . 40653) (symbol 40649 . 40652) (punctuation 40648 . 40649) (symbol 40647 . 40648) (punctuation 40645 . 40646) (symbol 40640 . 40644) (symbol 40635 . 40639) (symbol 40625 . 40634) (STATIC 40618 . 40624) (symbol 40359 . 40368) (STATIC 40352 . 40358) (punctuation 40208 . 40209) (VOID 40204 . 40208) (punctuation 40202 . 40203) (TYPENAME 40193 . 40201) (punctuation 40191 . 40192) (symbol 40190 . 40191) (TYPENAME 40181 . 40189) (punctuation 40180 . 40181) (TEMPLATE 40171 . 40179) (punctuation 39904 . 39905) (punctuation 39903 . 39904) (punctuation 39493 . 39494) (symbol 39488 . 39492) (USING 39482 . 39487) (semantic-list 39382 . 39390) (symbol 39367 . 39382) (punctuation 38608 . 38609) (semantic-list 38537 . 38608) (punctuation 38535 . 38536) (semantic-list 38532 . 38535) (CHAR 38528 . 38532) (punctuation 38527 . 38528) (symbol 38510 . 38527) (STRUCT 38503 . 38509) (punctuation 38501 . 38502) (symbol 38500 . 38501) (symbol 38493 . 38499) (punctuation 38492 . 38493) (TEMPLATE 38483 . 38491) (semantic-list 37082 . 37133) (punctuation 37080 . 37081) (CONST 37074 . 37079) (semantic-list 37071 . 37073) (symbol 37062 . 37071) (punctuation 37060 . 37061) (symbol 37056 . 37060) (punctuation 37054 . 37055) (symbol 37053 . 37054) (punctuation 37052 . 37053) (symbol 37033 . 37052) (punctuation 37032 . 37033) (punctuation 37031 . 37032) (symbol 37025 . 37031) (punctuation 37023 . 37024) (number 37022 . 37023) (punctuation 37021 . 37022) (punctuation 37019 . 37020) (symbol 37014 . 37018) (symbol 37006 . 37013) (punctuation 37005 . 37006) (TEMPLATE 36996 . 37004) (semantic-list 36484 . 36543) (punctuation 36482 . 36483) (semantic-list 36479 . 36481) (symbol 36462 . 36479) (punctuation 36460 . 36461) (symbol 36456 . 36460) (punctuation 36454 . 36455) (symbol 36453 . 36454) (punctuation 36452 . 36453) (symbol 36425 . 36452) (punctuation 36424 . 36425) (punctuation 36423 . 36424) (symbol 36417 . 36423) (punctuation 36415 . 36416) (number 36414 . 36415) (punctuation 36413 . 36414) (punctuation 36411 . 36412) (symbol 36406 . 36410) (symbol 36398 . 36405) (punctuation 36397 . 36398) (TEMPLATE 36388 . 36396) (punctuation 35743 . 35744) (punctuation 35742 . 35743) (punctuation 35741 . 35742) (punctuation 35723 . 35724) (symbol 35721 . 35723) (punctuation 35719 . 35720) (punctuation 35718 . 35719) (punctuation 35717 . 35718) (TYPENAME 35709 . 35717) (punctuation 35708 . 35709) (TEMPLATE 35700 . 35708) (punctuation 35393 . 35394) (punctuation 35392 . 35393) (punctuation 35391 . 35392) (punctuation 35375 . 35376) (symbol 35373 . 35375) (punctuation 35371 . 35372) (punctuation 35370 . 35371) (punctuation 35369 . 35370) (TYPENAME 35361 . 35369) (punctuation 35360 . 35361) (TEMPLATE 35352 . 35360) (punctuation 35222 . 35223) (punctuation 35221 . 35222) (punctuation 35220 . 35221) (punctuation 35200 . 35201) (symbol 35198 . 35200) (punctuation 35196 . 35197) (punctuation 35195 . 35196) (punctuation 35194 . 35195) (TYPENAME 35186 . 35194) (punctuation 35185 . 35186) (TEMPLATE 35177 . 35185) (punctuation 35088 . 35089) (punctuation 35087 . 35088) (punctuation 35086 . 35087) (punctuation 35068 . 35069) (symbol 35066 . 35068) (punctuation 35064 . 35065) (punctuation 35063 . 35064) (punctuation 35062 . 35063) (TYPENAME 35054 . 35062) (punctuation 35053 . 35054) (TEMPLATE 35045 . 35053) (punctuation 34968 . 34969) (punctuation 34967 . 34968) (punctuation 34966 . 34967) (punctuation 34945 . 34946) (symbol 34943 . 34945) (punctuation 34941 . 34942) (punctuation 34940 . 34941) (punctuation 34939 . 34940) (TYPENAME 34931 . 34939) (punctuation 34930 . 34931) (TEMPLATE 34922 . 34930) (symbol 34848 . 34857) (EXPLICIT 34720 . 34728) (EXPLICIT 34443 . 34451) (EXPLICIT 34200 . 34208) (semantic-list 33859 . 33895) (symbol 33840 . 33859) (string 33860 . 33894) (USING 33629 . 33634) (string 33580 . 33621) (punctuation 33546 . 33547) (punctuation 33415 . 33416) (punctuation 33389 . 33390) (punctuation 33185 . 33186) (symbol 33176 . 33185) (punctuation 33175 . 33176) (punctuation 33174 . 33175) (symbol 33169 . 33174) (punctuation 33167 . 33168) (symbol 33156 . 33166) (INT 33152 . 33155) (punctuation 33150 . 33151) (symbol 33149 . 33150) (TYPENAME 33140 . 33148) (punctuation 33139 . 33140) (TEMPLATE 33130 . 33138) (punctuation 32311 . 32312) (punctuation 32310 . 32311) (punctuation 32309 . 32310) (punctuation 32231 . 32232) (symbol 32229 . 32231) (punctuation 32227 . 32228) (punctuation 32226 . 32227) (punctuation 32225 . 32226) (TYPENAME 32217 . 32225) (punctuation 32216 . 32217) (TEMPLATE 32208 . 32216) (punctuation 32042 . 32043) (punctuation 32041 . 32042) (punctuation 32040 . 32041) (punctuation 32014 . 32015) (symbol 32012 . 32014) (punctuation 32010 . 32011) (punctuation 32009 . 32010) (punctuation 32008 . 32009) (TYPENAME 32000 . 32008) (punctuation 31999 . 32000) (TEMPLATE 31991 . 31999) (punctuation 30944 . 30945) (punctuation 30943 . 30944) (punctuation 30942 . 30943) (punctuation 30918 . 30919) (symbol 30916 . 30918) (punctuation 30914 . 30915) (punctuation 30913 . 30914) (punctuation 30912 . 30913) (TYPENAME 30904 . 30912) (punctuation 30903 . 30904) (TEMPLATE 30895 . 30903) (FRIEND 30637 . 30643) (punctuation 30635 . 30636) (TYPENAME 30627 . 30635) (punctuation 30625 . 30626) (TYPENAME 30617 . 30625) (punctuation 30616 . 30617) (TEMPLATE 30608 . 30616) (semantic-list 28985 . 29289) (punctuation 28983 . 28984) (CONST 28977 . 28982) (semantic-list 28974 . 28976) (symbol 28965 . 28974) (punctuation 28963 . 28964) (symbol 28959 . 28963) (punctuation 28957 . 28958) (symbol 28956 . 28957) (punctuation 28955 . 28956) (symbol 28936 . 28955) (punctuation 28935 . 28936) (punctuation 28934 . 28935) (symbol 28928 . 28934) (punctuation 28926 . 28927) (number 28925 . 28926) (punctuation 28924 . 28925) (punctuation 28922 . 28923) (symbol 28917 . 28921) (symbol 28909 . 28916) (punctuation 28907 . 28908) (symbol 28906 . 28907) (TYPENAME 28897 . 28905) (punctuation 28896 . 28897) (TEMPLATE 28887 . 28895) (semantic-list 28106 . 28426) (punctuation 28104 . 28105) (semantic-list 28101 . 28103) (symbol 28084 . 28101) (punctuation 28082 . 28083) (symbol 28078 . 28082) (punctuation 28076 . 28077) (symbol 28075 . 28076) (punctuation 28074 . 28075) (symbol 28047 . 28074) (punctuation 28046 . 28047) (punctuation 28045 . 28046) (symbol 28039 . 28045) (punctuation 28037 . 28038) (number 28036 . 28037) (punctuation 28035 . 28036) (punctuation 28033 . 28034) (symbol 28028 . 28032) (symbol 28020 . 28027) (punctuation 28018 . 28019) (symbol 28017 . 28018) (TYPENAME 28008 . 28016) (punctuation 28007 . 28008) (TEMPLATE 27998 . 28006) (punctuation 27526 . 27527) (punctuation 27525 . 27526) (punctuation 27524 . 27525) (punctuation 27503 . 27504) (symbol 27501 . 27503) (punctuation 27499 . 27500) (punctuation 27498 . 27499) (punctuation 27497 . 27498) (TYPENAME 27489 . 27497) (punctuation 27488 . 27489) (TEMPLATE 27480 . 27488) (punctuation 27082 . 27083) (punctuation 27081 . 27082) (punctuation 27080 . 27081) (punctuation 27058 . 27059) (symbol 27056 . 27058) (punctuation 27054 . 27055) (punctuation 27053 . 27054) (punctuation 27052 . 27053) (TYPENAME 27044 . 27052) (punctuation 27043 . 27044) (TEMPLATE 27035 . 27043) (punctuation 26743 . 26744) (punctuation 26742 . 26743) (punctuation 26741 . 26742) (punctuation 26718 . 26719) (symbol 26716 . 26718) (punctuation 26714 . 26715) (punctuation 26713 . 26714) (punctuation 26712 . 26713) (TYPENAME 26704 . 26712) (punctuation 26703 . 26704) (TEMPLATE 26695 . 26703) (punctuation 26341 . 26342) (punctuation 26340 . 26341) (punctuation 26339 . 26340) (punctuation 26318 . 26319) (symbol 26316 . 26318) (punctuation 26314 . 26315) (punctuation 26313 . 26314) (punctuation 26312 . 26313) (TYPENAME 26304 . 26312) (punctuation 26303 . 26304) (TEMPLATE 26295 . 26303) (EXPLICIT 24028 . 24036) (EXPLICIT 23919 . 23927) (punctuation 23913 . 23914) (symbol 23912 . 23913) (TYPENAME 23903 . 23911) (punctuation 23902 . 23903) (TEMPLATE 23893 . 23901) (punctuation 23375 . 23376) (punctuation 23374 . 23375) (symbol 23369 . 23374) (punctuation 23368 . 23369) (punctuation 23367 . 23368) (punctuation 23366 . 23367) (symbol 23365 . 23366) (punctuation 23363 . 23364) (BOOL 23359 . 23363) (punctuation 23358 . 23359) (symbol 23351 . 23358) (punctuation 23350 . 23351) (punctuation 23349 . 23350) (symbol 23346 . 23349) (punctuation 23345 . 23346) (punctuation 23343 . 23344) (punctuation 23342 . 23343) (symbol 23336 . 23341) (punctuation 23335 . 23336) (punctuation 23334 . 23335) (punctuation 23333 . 23334) (symbol 23332 . 23333) (punctuation 23331 . 23332) (symbol 23320 . 23331) (punctuation 23319 . 23320) (punctuation 23318 . 23319) (symbol 23315 . 23318) (punctuation 23314 . 23315) (symbol 23303 . 23314) (punctuation 23302 . 23303) (punctuation 23301 . 23302) (symbol 23295 . 23301) (punctuation 23293 . 23294) (TYPENAME 23284 . 23292) (punctuation 23282 . 23283) (symbol 23281 . 23282) (TYPENAME 23272 . 23280) (punctuation 23271 . 23272) (TEMPLATE 23262 . 23270) (punctuation 21497 . 21498) (symbol 21480 . 21496) (USING 21474 . 21479) (punctuation 21436 . 21437) (symbol 21421 . 21435) (USING 21415 . 21420) (punctuation 21312 . 21313) (punctuation 21311 . 21312) (punctuation 21303 . 21304) (punctuation 21302 . 21303) (punctuation 21250 . 21251) (punctuation 21249 . 21250) (punctuation 21241 . 21242) (punctuation 21240 . 21241) (punctuation 21190 . 21191) (punctuation 21189 . 21190) (punctuation 21181 . 21182) (punctuation 21180 . 21181) (punctuation 21312 . 21313) (punctuation 21311 . 21312) (punctuation 21303 . 21304) (punctuation 21302 . 21303) (punctuation 21250 . 21251) (punctuation 21249 . 21250) (punctuation 21241 . 21242) (punctuation 21240 . 21241) (punctuation 21190 . 21191) (punctuation 21189 . 21190) (punctuation 21181 . 21182) (punctuation 21180 . 21181) (semantic-list 21078 . 21143) (symbol 21059 . 21078) (punctuation 21116 . 21117) (semantic-list 21114 . 21116) (punctuation 21312 . 21313) (punctuation 21311 . 21312) (punctuation 21303 . 21304) (punctuation 21302 . 21303) (punctuation 21250 . 21251) (punctuation 21249 . 21250) (punctuation 21241 . 21242) (punctuation 21240 . 21241) (punctuation 21190 . 21191) (punctuation 21189 . 21190) (punctuation 21181 . 21182) (punctuation 21180 . 21181) (punctuation 21312 . 21313) (punctuation 21311 . 21312) (punctuation 21303 . 21304) (punctuation 21302 . 21303) (punctuation 21250 . 21251) (punctuation 21249 . 21250) (punctuation 21241 . 21242) (punctuation 21240 . 21241) (punctuation 21190 . 21191) (punctuation 21189 . 21190) (punctuation 21181 . 21182) (punctuation 21180 . 21181) (EXPLICIT 17938 . 17946) (EXPLICIT 17624 . 17632) (punctuation 17596 . 17597) (semantic-list 17594 . 17596) (semantic-list 17483 . 17491) (symbol 17470 . 17483) (EXPLICIT 17938 . 17946) (EXPLICIT 17624 . 17632) (punctuation 17596 . 17597) (semantic-list 17594 . 17596) (EXPLICIT 17938 . 17946) (EXPLICIT 17624 . 17632) (punctuation 17596 . 17597) (semantic-list 17594 . 17596) (string 17279 . 17325) (number 17258 . 17259) (punctuation 17256 . 17257) (punctuation 17250 . 17251) (punctuation 17249 . 17250) (number 17247 . 17248) (punctuation 17245 . 17246) (punctuation 17244 . 17245) (punctuation 17087 . 17088) (punctuation 17086 . 17087) (punctuation 17085 . 17086) (punctuation 17065 . 17066) (symbol 17063 . 17065) (punctuation 17061 . 17062) (punctuation 17060 . 17061) (punctuation 17059 . 17060) (TYPENAME 17051 . 17059) (punctuation 17050 . 17051) (TEMPLATE 17041 . 17049) (punctuation 16906 . 16907) (punctuation 16905 . 16906) (symbol 16898 . 16905) (punctuation 16896 . 16897) (punctuation 16895 . 16896) (number 16893 . 16894) (punctuation 16891 . 16892) (punctuation 16890 . 16891) (symbol 16888 . 16889) (punctuation 16887 . 16888) (symbol 16876 . 16887) (punctuation 16874 . 16875) (TYPENAME 16865 . 16873) (punctuation 16863 . 16864) (symbol 16859 . 16863) (punctuation 16857 . 16858) (symbol 16855 . 16856) (symbol 16847 . 16854) (punctuation 16846 . 16847) (TEMPLATE 16837 . 16845) (punctuation 16357 . 16358) (punctuation 16356 . 16357) (punctuation 16355 . 16356) (punctuation 16337 . 16338) (symbol 16335 . 16337) (punctuation 16333 . 16334) (punctuation 16332 . 16333) (punctuation 16331 . 16332) (TYPENAME 16323 . 16331) (punctuation 16322 . 16323) (TEMPLATE 16313 . 16321) (USING 16211 . 16216) (USING 16179 . 16184) (punctuation 16143 . 16144) (symbol 16133 . 16142) (USING 16127 . 16132) (punctuation 16115 . 16116) (punctuation 16114 . 16115) (punctuation 15393 . 15394) (symbol 15386 . 15393) (punctuation 15384 . 15385) (symbol 15381 . 15384) (punctuation 15380 . 15381) (punctuation 15379 . 15380) (symbol 15368 . 15379) (punctuation 15362 . 15363) (symbol 15355 . 15362) (punctuation 15353 . 15354) (symbol 15349 . 15352) (BOOL 15344 . 15348) (punctuation 15343 . 15344) (TEMPLATE 15334 . 15342) (symbol 14944 . 14953) (punctuation 14841 . 14842) (punctuation 14840 . 14841) (punctuation 14839 . 14840) (punctuation 14821 . 14822) (symbol 14819 . 14821) (punctuation 14817 . 14818) (punctuation 14816 . 14817) (punctuation 14815 . 14816) (TYPENAME 14807 . 14815) (punctuation 14806 . 14807) (TEMPLATE 14797 . 14805) (punctuation 14658 . 14659) (punctuation 14657 . 14658) (symbol 14650 . 14657) (punctuation 14648 . 14649) (punctuation 14647 . 14648) (number 14645 . 14646) (punctuation 14643 . 14644) (punctuation 14642 . 14643) (symbol 14640 . 14641) (punctuation 14639 . 14640) (symbol 14628 . 14639) (punctuation 14626 . 14627) (TYPENAME 14617 . 14625) (punctuation 14615 . 14616) (symbol 14611 . 14615) (punctuation 14609 . 14610) (symbol 14607 . 14608) (symbol 14599 . 14606) (punctuation 14598 . 14599) (TEMPLATE 14589 . 14597) (punctuation 14110 . 14111) (punctuation 14109 . 14110) (punctuation 14108 . 14109) (punctuation 14084 . 14085) (symbol 14082 . 14084) (punctuation 14080 . 14081) (punctuation 14079 . 14080) (punctuation 14078 . 14079) (TYPENAME 14070 . 14078) (punctuation 14069 . 14070) (TEMPLATE 14060 . 14068) (punctuation 13234 . 13235) (punctuation 13221 . 13222) (punctuation 13220 . 13221) (punctuation 13031 . 13032) (punctuation 13030 . 13031) (punctuation 12947 . 12948) (punctuation 12946 . 12947) (symbol 12942 . 12946) (semantic-list 12933 . 12941) (punctuation 12931 . 12932) (symbol 12924 . 12931) (punctuation 12923 . 12924) (symbol 12918 . 12923) (punctuation 12917 . 12918) (punctuation 12916 . 12917) (symbol 12913 . 12916) (punctuation 12911 . 12912) (punctuation 12910 . 12911) (symbol 12902 . 12909) (CONST 12896 . 12901) (punctuation 12894 . 12895) (symbol 12887 . 12894) (punctuation 12886 . 12887) (symbol 12873 . 12886) (punctuation 12643 . 12644) (number 12642 . 12643) (punctuation 12640 . 12641) (symbol 12635 . 12639) (punctuation 12633 . 12634) (symbol 12625 . 12632) (BOOL 12620 . 12624) (symbol 12610 . 12619) (STATIC 12603 . 12609) (punctuation 12171 . 12172) (punctuation 12170 . 12171) (punctuation 12169 . 12170) (punctuation 12103 . 12104) (symbol 12101 . 12103) (punctuation 12099 . 12100) (punctuation 12098 . 12099) (punctuation 12097 . 12098) (TYPENAME 12089 . 12097) (punctuation 12087 . 12088) (symbol 12080 . 12087) (TYPENAME 12071 . 12079) (punctuation 12069 . 12070) (number 12068 . 12069) (punctuation 12066 . 12067) (symbol 12062 . 12065) (symbol 12054 . 12061) (punctuation 12053 . 12054) (TEMPLATE 12044 . 12052) (punctuation 11984 . 11985) (symbol 11977 . 11984) (TYPENAME 11968 . 11976) (punctuation 11966 . 11967) (number 11965 . 11966) (punctuation 11963 . 11964) (symbol 11959 . 11962) (symbol 11951 . 11958) (punctuation 11950 . 11951) (TEMPLATE 11941 . 11949) (USING 11143 . 11148) (punctuation 11141 . 11142) (symbol 11140 . 11141) (TYPENAME 11131 . 11139) (punctuation 11130 . 11131) (TEMPLATE 11121 . 11129) (USING 11061 . 11066) (punctuation 11059 . 11060) (symbol 11058 . 11059) (TYPENAME 11049 . 11057) (punctuation 11048 . 11049) (TEMPLATE 11039 . 11047) (punctuation 11003 . 11004) (punctuation 11001 . 11002) (semantic-list 10998 . 11001) (symbol 10997 . 10998) (punctuation 10996 . 10997) (symbol 10986 . 10996) (STRUCT 10979 . 10985) (punctuation 10977 . 10978) (symbol 10976 . 10977) (symbol 10969 . 10975) (punctuation 10967 . 10968) (symbol 10966 . 10967) (TYPENAME 10957 . 10965) (punctuation 10956 . 10957) (TEMPLATE 10947 . 10955) (punctuation 10840 . 10841) (semantic-list 10837 . 10840) (punctuation 10835 . 10836) (semantic-list 10832 . 10835) (CHAR 10828 . 10832) (punctuation 10827 . 10828) (symbol 10810 . 10827) (punctuation 10808 . 10809) (punctuation 10806 . 10807) (semantic-list 10803 . 10806) (CHAR 10799 . 10803) (punctuation 10798 . 10799) (symbol 10788 . 10798) (STRUCT 10781 . 10787) (punctuation 10779 . 10780) (symbol 10778 . 10779) (symbol 10771 . 10777) (punctuation 10770 . 10771) (TEMPLATE 10761 . 10769) (punctuation 10638 . 10639) (semantic-list 10576 . 10638) (punctuation 10575 . 10576) (symbol 10567 . 10575) (punctuation 10566 . 10567) (punctuation 10565 . 10566) (punctuation 10564 . 10565) (symbol 10563 . 10564) (punctuation 10562 . 10563) (symbol 10552 . 10562) (punctuation 10551 . 10552) (symbol 10550 . 10551) (punctuation 10548 . 10549) (symbol 10540 . 10547) (symbol 10535 . 10539) (symbol 10525 . 10534) (STATIC 10518 . 10524) (symbol 10324 . 10333) (STATIC 10317 . 10323) (punctuation 10286 . 10287) (punctuation 10285 . 10286) (semantic-list 10276 . 10284) (punctuation 10274 . 10275) (symbol 10265 . 10273) (BOOL 10260 . 10264) (symbol 10250 . 10259) (STATIC 10243 . 10249) (symbol 10207 . 10216) (STATIC 10200 . 10206) (punctuation 10164 . 10165) (symbol 10159 . 10163) (USING 10153 . 10158) (symbol 9717 . 9726) (STATIC 9710 . 9716) (symbol 9673 . 9682) (STATIC 9666 . 9672) (symbol 9629 . 9638) (STATIC 9622 . 9628) (punctuation 3288 . 3289) (punctuation 3287 . 3288) (punctuation 3286 . 3287) (symbol 3245 . 3254) (punctuation 3243 . 3244) (symbol 3239 . 3243) (punctuation 3237 . 3238) (punctuation 3236 . 3237) (punctuation 3235 . 3236) (TYPENAME 3227 . 3235) (punctuation 3225 . 3226) (symbol 3223 . 3225) (punctuation 3221 . 3222) (punctuation 3220 . 3221) (punctuation 3219 . 3220) (TYPENAME 3211 . 3219) (punctuation 3209 . 3210) (symbol 3208 . 3209) (TYPENAME 3199 . 3207) (punctuation 3197 . 3198) (symbol 3189 . 3197) (TYPENAME 3180 . 3188) (punctuation 3179 . 3180) (TEMPLATE 3170 . 3178) (symbol 3027 . 3036) (punctuation 3025 . 3026) (symbol 3017 . 3025) (TYPENAME 3008 . 3016) (punctuation 3007 . 3008) (TEMPLATE 2998 . 3006) (punctuation 2992 . 2993) (punctuation 2991 . 2992) (semantic-list 2988 . 2991) (SIZEOF 2982 . 2988) (punctuation 2980 . 2981) (punctuation 2979 . 2980) (semantic-list 2975 . 2978) (SIZEOF 2969 . 2975) (punctuation 2968 . 2969) (symbol 2955 . 2968) (punctuation 2953 . 2954) (symbol 2950 . 2952) (USING 2944 . 2949) (punctuation 2942 . 2943) (symbol 2941 . 2942) (TYPENAME 2932 . 2940) (punctuation 2931 . 2932) (TEMPLATE 2922 . 2930) (punctuation 2631 . 2632) (symbol 2570 . 2587) (INLINE 2563 . 2569) (symbol 1699 . 1716) (symbol 1512 . 1525) (symbol 1262 . 1275) (punctuation 1197 . 1198) (VOID 1193 . 1197) (punctuation 1191 . 1192) (symbol 1184 . 1190) (TYPENAME 1175 . 1183) (punctuation 1173 . 1174) (symbol 1169 . 1173) (TYPENAME 1160 . 1168) (punctuation 1159 . 1160) (TEMPLATE 1150 . 1158) (semantic-list 1141 . 1149) (symbol 1126 . 1141) (semantic-list 1067 . 1087) (symbol 1052 . 1067) (string 1024 . 1048) (semantic-list 1009 . 1022) (SIZEOF 1003 . 1009) (punctuation 1001 . 1002) (punctuation 1000 . 1001) (semantic-list 990 . 999) (SIZEOF 984 . 990) (symbol 267 . 271) (symbol 260 . 266) (punctuation 259 . 260) (punctuation 40873 . 40874) (punctuation 40872 . 40873) (symbol 40867 . 40872) (punctuation 40866 . 40867) (punctuation 40865 . 40866) (punctuation 40864 . 40865) (symbol 40863 . 40864) (punctuation 40862 . 40863) (symbol 40852 . 40862) (punctuation 40851 . 40852) (symbol 40840 . 40851) (punctuation 40838 . 40839) (symbol 40837 . 40838) (punctuation 40836 . 40837) (symbol 40810 . 40836) (STRUCT 40803 . 40809) (punctuation 40801 . 40802) (symbol 40800 . 40801) (TYPENAME 40791 . 40799) (punctuation 40790 . 40791) (TEMPLATE 40781 . 40789) (punctuation 40775 . 40776) (semantic-list 40713 . 40775) (punctuation 40712 . 40713) (symbol 40707 . 40712) (punctuation 40706 . 40707) (punctuation 40705 . 40706) (punctuation 40704 . 40705) (DOUBLE 40698 . 40704) (punctuation 40696 . 40697) (symbol 40695 . 40696) (punctuation 40694 . 40695) (symbol 40687 . 40694) (punctuation 40686 . 40687) (punctuation 40685 . 40686) (symbol 40682 . 40685) (punctuation 40680 . 40681) (punctuation 40679 . 40680) (symbol 40673 . 40678) (punctuation 40672 . 40673) (punctuation 40671 . 40672) (punctuation 40670 . 40671) (FLOAT 40665 . 40670) (punctuation 40663 . 40664) (symbol 40662 . 40663) (punctuation 40661 . 40662) (symbol 40654 . 40661) (punctuation 40653 . 40654) (punctuation 40652 . 40653) (symbol 40649 . 40652) (punctuation 40648 . 40649) (symbol 40647 . 40648) (punctuation 40645 . 40646) (symbol 40640 . 40644) (symbol 40635 . 40639) (symbol 40625 . 40634) (STATIC 40618 . 40624) (symbol 40359 . 40368) (STATIC 40352 . 40358) (punctuation 40208 . 40209) (VOID 40204 . 40208) (punctuation 40202 . 40203) (TYPENAME 40193 . 40201) (punctuation 40191 . 40192) (symbol 40190 . 40191) (TYPENAME 40181 . 40189) (punctuation 40180 . 40181) (TEMPLATE 40171 . 40179) (punctuation 39904 . 39905) (punctuation 39903 . 39904) (punctuation 39493 . 39494) (symbol 39488 . 39492) (USING 39482 . 39487) (semantic-list 39382 . 39390) (symbol 39367 . 39382) (punctuation 38608 . 38609) (semantic-list 38537 . 38608) (punctuation 38535 . 38536) (semantic-list 38532 . 38535) (CHAR 38528 . 38532) (punctuation 38527 . 38528) (symbol 38510 . 38527) (STRUCT 38503 . 38509) (punctuation 38501 . 38502) (symbol 38500 . 38501) (symbol 38493 . 38499) (punctuation 38492 . 38493) (TEMPLATE 38483 . 38491) (semantic-list 37082 . 37133) (punctuation 37080 . 37081) (CONST 37074 . 37079) (semantic-list 37071 . 37073) (symbol 37062 . 37071) (punctuation 37060 . 37061) (symbol 37056 . 37060) (punctuation 37054 . 37055) (symbol 37053 . 37054) (punctuation 37052 . 37053) (symbol 37033 . 37052) (punctuation 37032 . 37033) (punctuation 37031 . 37032) (symbol 37025 . 37031) (punctuation 37023 . 37024) (number 37022 . 37023) (punctuation 37021 . 37022) (punctuation 37019 . 37020) (symbol 37014 . 37018) (symbol 37006 . 37013) (punctuation 37005 . 37006) (TEMPLATE 36996 . 37004) (semantic-list 36484 . 36543) (punctuation 36482 . 36483) (semantic-list 36479 . 36481) (symbol 36462 . 36479) (punctuation 36460 . 36461) (symbol 36456 . 36460) (punctuation 36454 . 36455) (symbol 36453 . 36454) (punctuation 36452 . 36453) (symbol 36425 . 36452) (punctuation 36424 . 36425) (punctuation 36423 . 36424) (symbol 36417 . 36423) (punctuation 36415 . 36416) (number 36414 . 36415) (punctuation 36413 . 36414) (punctuation 36411 . 36412) (symbol 36406 . 36410) (symbol 36398 . 36405) (punctuation 36397 . 36398) (TEMPLATE 36388 . 36396) (punctuation 35743 . 35744) (punctuation 35742 . 35743) (punctuation 35741 . 35742) (punctuation 35723 . 35724) (symbol 35721 . 35723) (punctuation 35719 . 35720) (punctuation 35718 . 35719) (punctuation 35717 . 35718) (TYPENAME 35709 . 35717) (punctuation 35708 . 35709) (TEMPLATE 35700 . 35708) (punctuation 35393 . 35394) (punctuation 35392 . 35393) (punctuation 35391 . 35392) (punctuation 35375 . 35376) (symbol 35373 . 35375) (punctuation 35371 . 35372) (punctuation 35370 . 35371) (punctuation 35369 . 35370) (TYPENAME 35361 . 35369) (punctuation 35360 . 35361) (TEMPLATE 35352 . 35360) (punctuation 35222 . 35223) (punctuation 35221 . 35222) (punctuation 35220 . 35221) (punctuation 35200 . 35201) (symbol 35198 . 35200) (punctuation 35196 . 35197) (punctuation 35195 . 35196) (punctuation 35194 . 35195) (TYPENAME 35186 . 35194) (punctuation 35185 . 35186) (TEMPLATE 35177 . 35185) (punctuation 35088 . 35089) (punctuation 35087 . 35088) (punctuation 35086 . 35087) (punctuation 35068 . 35069) (symbol 35066 . 35068) (punctuation 35064 . 35065) (punctuation 35063 . 35064) (punctuation 35062 . 35063) (TYPENAME 35054 . 35062) (punctuation 35053 . 35054) (TEMPLATE 35045 . 35053) (punctuation 34968 . 34969) (punctuation 34967 . 34968) (punctuation 34966 . 34967) (punctuation 34945 . 34946) (symbol 34943 . 34945) (punctuation 34941 . 34942) (punctuation 34940 . 34941) (punctuation 34939 . 34940) (TYPENAME 34931 . 34939) (punctuation 34930 . 34931) (TEMPLATE 34922 . 34930) (symbol 34848 . 34857) (EXPLICIT 34720 . 34728) (EXPLICIT 34443 . 34451) (EXPLICIT 34200 . 34208) (semantic-list 33859 . 33895) (symbol 33840 . 33859) (string 33860 . 33894) (USING 33629 . 33634) (string 33580 . 33621) (punctuation 33546 . 33547) (punctuation 33415 . 33416) (punctuation 33389 . 33390) (punctuation 33185 . 33186) (symbol 33176 . 33185) (punctuation 33175 . 33176) (punctuation 33174 . 33175) (symbol 33169 . 33174) (punctuation 33167 . 33168) (symbol 33156 . 33166) (INT 33152 . 33155) (punctuation 33150 . 33151) (symbol 33149 . 33150) (TYPENAME 33140 . 33148) (punctuation 33139 . 33140) (TEMPLATE 33130 . 33138) (punctuation 32311 . 32312) (punctuation 32310 . 32311) (punctuation 32309 . 32310) (punctuation 32231 . 32232) (symbol 32229 . 32231) (punctuation 32227 . 32228) (punctuation 32226 . 32227) (punctuation 32225 . 32226) (TYPENAME 32217 . 32225) (punctuation 32216 . 32217) (TEMPLATE 32208 . 32216) (punctuation 32042 . 32043) (punctuation 32041 . 32042) (punctuation 32040 . 32041) (punctuation 32014 . 32015) (symbol 32012 . 32014) (punctuation 32010 . 32011) (punctuation 32009 . 32010) (punctuation 32008 . 32009) (TYPENAME 32000 . 32008) (punctuation 31999 . 32000) (TEMPLATE 31991 . 31999) (punctuation 30944 . 30945) (punctuation 30943 . 30944) (punctuation 30942 . 30943) (punctuation 30918 . 30919) (symbol 30916 . 30918) (punctuation 30914 . 30915) (punctuation 30913 . 30914) (punctuation 30912 . 30913) (TYPENAME 30904 . 30912) (punctuation 30903 . 30904) (TEMPLATE 30895 . 30903) (FRIEND 30637 . 30643) (punctuation 30635 . 30636) (TYPENAME 30627 . 30635) (punctuation 30625 . 30626) (TYPENAME 30617 . 30625) (punctuation 30616 . 30617) (TEMPLATE 30608 . 30616) (semantic-list 28985 . 29289) (punctuation 28983 . 28984) (CONST 28977 . 28982) (semantic-list 28974 . 28976) (symbol 28965 . 28974) (punctuation 28963 . 28964) (symbol 28959 . 28963) (punctuation 28957 . 28958) (symbol 28956 . 28957) (punctuation 28955 . 28956) (symbol 28936 . 28955) (punctuation 28935 . 28936) (punctuation 28934 . 28935) (symbol 28928 . 28934) (punctuation 28926 . 28927) (number 28925 . 28926) (punctuation 28924 . 28925) (punctuation 28922 . 28923) (symbol 28917 . 28921) (symbol 28909 . 28916) (punctuation 28907 . 28908) (symbol 28906 . 28907) (TYPENAME 28897 . 28905) (punctuation 28896 . 28897) (TEMPLATE 28887 . 28895) (semantic-list 28106 . 28426) (punctuation 28104 . 28105) (semantic-list 28101 . 28103) (symbol 28084 . 28101) (punctuation 28082 . 28083) (symbol 28078 . 28082) (punctuation 28076 . 28077) (symbol 28075 . 28076) (punctuation 28074 . 28075) (symbol 28047 . 28074) (punctuation 28046 . 28047) (punctuation 28045 . 28046) (symbol 28039 . 28045) (punctuation 28037 . 28038) (number 28036 . 28037) (punctuation 28035 . 28036) (punctuation 28033 . 28034) (symbol 28028 . 28032) (symbol 28020 . 28027) (punctuation 28018 . 28019) (symbol 28017 . 28018) (TYPENAME 28008 . 28016) (punctuation 28007 . 28008) (TEMPLATE 27998 . 28006) (punctuation 27526 . 27527) (punctuation 27525 . 27526) (punctuation 27524 . 27525) (punctuation 27503 . 27504) (symbol 27501 . 27503) (punctuation 27499 . 27500) (punctuation 27498 . 27499) (punctuation 27497 . 27498) (TYPENAME 27489 . 27497) (punctuation 27488 . 27489) (TEMPLATE 27480 . 27488) (punctuation 27082 . 27083) (punctuation 27081 . 27082) (punctuation 27080 . 27081) (punctuation 27058 . 27059) (symbol 27056 . 27058) (punctuation 27054 . 27055) (punctuation 27053 . 27054) (punctuation 27052 . 27053) (TYPENAME 27044 . 27052) (punctuation 27043 . 27044) (TEMPLATE 27035 . 27043) (punctuation 26743 . 26744) (punctuation 26742 . 26743) (punctuation 26741 . 26742) (punctuation 26718 . 26719) (symbol 26716 . 26718) (punctuation 26714 . 26715) (punctuation 26713 . 26714) (punctuation 26712 . 26713) (TYPENAME 26704 . 26712) (punctuation 26703 . 26704) (TEMPLATE 26695 . 26703) (punctuation 26341 . 26342) (punctuation 26340 . 26341) (punctuation 26339 . 26340) (punctuation 26318 . 26319) (symbol 26316 . 26318) (punctuation 26314 . 26315) (punctuation 26313 . 26314) (punctuation 26312 . 26313) (TYPENAME 26304 . 26312) (punctuation 26303 . 26304) (TEMPLATE 26295 . 26303) (EXPLICIT 24028 . 24036) (EXPLICIT 23919 . 23927) (punctuation 23913 . 23914) (symbol 23912 . 23913) (TYPENAME 23903 . 23911) (punctuation 23902 . 23903) (TEMPLATE 23893 . 23901) (punctuation 23375 . 23376) (punctuation 23374 . 23375) (symbol 23369 . 23374) (punctuation 23368 . 23369) (punctuation 23367 . 23368) (punctuation 23366 . 23367) (symbol 23365 . 23366) (punctuation 23363 . 23364) (BOOL 23359 . 23363) (punctuation 23358 . 23359) (symbol 23351 . 23358) (punctuation 23350 . 23351) (punctuation 23349 . 23350) (symbol 23346 . 23349) (punctuation 23345 . 23346) (punctuation 23343 . 23344) (punctuation 23342 . 23343) (symbol 23336 . 23341) (punctuation 23335 . 23336) (punctuation 23334 . 23335) (punctuation 23333 . 23334) (symbol 23332 . 23333) (punctuation 23331 . 23332) (symbol 23320 . 23331) (punctuation 23319 . 23320) (punctuation 23318 . 23319) (symbol 23315 . 23318) (punctuation 23314 . 23315) (symbol 23303 . 23314) (punctuation 23302 . 23303) (punctuation 23301 . 23302) (symbol 23295 . 23301) (punctuation 23293 . 23294) (TYPENAME 23284 . 23292) (punctuation 23282 . 23283) (symbol 23281 . 23282) (TYPENAME 23272 . 23280) (punctuation 23271 . 23272) (TEMPLATE 23262 . 23270) (punctuation 21497 . 21498) (symbol 21480 . 21496) (USING 21474 . 21479) (punctuation 21436 . 21437) (symbol 21421 . 21435) (USING 21415 . 21420) (punctuation 21312 . 21313) (punctuation 21311 . 21312) (punctuation 21303 . 21304) (punctuation 21302 . 21303) (punctuation 21250 . 21251) (punctuation 21249 . 21250) (punctuation 21241 . 21242) (punctuation 21240 . 21241) (punctuation 21190 . 21191) (punctuation 21189 . 21190) (punctuation 21181 . 21182) (punctuation 21180 . 21181) (punctuation 21312 . 21313) (punctuation 21311 . 21312) (punctuation 21303 . 21304) (punctuation 21302 . 21303) (punctuation 21250 . 21251) (punctuation 21249 . 21250) (punctuation 21241 . 21242) (punctuation 21240 . 21241) (punctuation 21190 . 21191) (punctuation 21189 . 21190) (punctuation 21181 . 21182) (punctuation 21180 . 21181) (semantic-list 21078 . 21143) (symbol 21059 . 21078) (punctuation 21116 . 21117) (semantic-list 21114 . 21116) (punctuation 21312 . 21313) (punctuation 21311 . 21312) (punctuation 21303 . 21304) (punctuation 21302 . 21303) (punctuation 21250 . 21251) (punctuation 21249 . 21250) (punctuation 21241 . 21242) (punctuation 21240 . 21241) (punctuation 21190 . 21191) (punctuation 21189 . 21190) (punctuation 21181 . 21182) (punctuation 21180 . 21181) (punctuation 21312 . 21313) (punctuation 21311 . 21312) (punctuation 21303 . 21304) (punctuation 21302 . 21303) (punctuation 21250 . 21251) (punctuation 21249 . 21250) (punctuation 21241 . 21242) (punctuation 21240 . 21241) (punctuation 21190 . 21191) (punctuation 21189 . 21190) (punctuation 21181 . 21182) (punctuation 21180 . 21181) (EXPLICIT 17938 . 17946) (EXPLICIT 17624 . 17632) (punctuation 17596 . 17597) (semantic-list 17594 . 17596) (semantic-list 17483 . 17491) (symbol 17470 . 17483) (EXPLICIT 17938 . 17946) (EXPLICIT 17624 . 17632) (punctuation 17596 . 17597) (semantic-list 17594 . 17596) (EXPLICIT 17938 . 17946) (EXPLICIT 17624 . 17632) (punctuation 17596 . 17597) (semantic-list 17594 . 17596) (string 17279 . 17325) (number 17258 . 17259) (punctuation 17256 . 17257) (punctuation 17250 . 17251) (punctuation 17249 . 17250) (number 17247 . 17248) (punctuation 17245 . 17246) (punctuation 17244 . 17245) (punctuation 17087 . 17088) (punctuation 17086 . 17087) (punctuation 17085 . 17086) (punctuation 17065 . 17066) (symbol 17063 . 17065) (punctuation 17061 . 17062) (punctuation 17060 . 17061) (punctuation 17059 . 17060) (TYPENAME 17051 . 17059) (punctuation 17050 . 17051) (TEMPLATE 17041 . 17049) (punctuation 16906 . 16907) (punctuation 16905 . 16906) (symbol 16898 . 16905) (punctuation 16896 . 16897) (punctuation 16895 . 16896) (number 16893 . 16894) (punctuation 16891 . 16892) (punctuation 16890 . 16891) (symbol 16888 . 16889) (punctuation 16887 . 16888) (symbol 16876 . 16887) (punctuation 16874 . 16875) (TYPENAME 16865 . 16873) (punctuation 16863 . 16864) (symbol 16859 . 16863) (punctuation 16857 . 16858) (symbol 16855 . 16856) (symbol 16847 . 16854) (punctuation 16846 . 16847) (TEMPLATE 16837 . 16845) (punctuation 16357 . 16358) (punctuation 16356 . 16357) (punctuation 16355 . 16356) (punctuation 16337 . 16338) (symbol 16335 . 16337) (punctuation 16333 . 16334) (punctuation 16332 . 16333) (punctuation 16331 . 16332) (TYPENAME 16323 . 16331) (punctuation 16322 . 16323) (TEMPLATE 16313 . 16321) (USING 16211 . 16216) (USING 16179 . 16184) (punctuation 16143 . 16144) (symbol 16133 . 16142) (USING 16127 . 16132) (punctuation 16115 . 16116) (punctuation 16114 . 16115) (punctuation 15393 . 15394) (symbol 15386 . 15393) (punctuation 15384 . 15385) (symbol 15381 . 15384) (punctuation 15380 . 15381) (punctuation 15379 . 15380) (symbol 15368 . 15379) (punctuation 15362 . 15363) (symbol 15355 . 15362) (punctuation 15353 . 15354) (symbol 15349 . 15352) (BOOL 15344 . 15348) (punctuation 15343 . 15344) (TEMPLATE 15334 . 15342) (symbol 14944 . 14953) (punctuation 14841 . 14842) (punctuation 14840 . 14841) (punctuation 14839 . 14840) (punctuation 14821 . 14822) (symbol 14819 . 14821) (punctuation 14817 . 14818) (punctuation 14816 . 14817) (punctuation 14815 . 14816) (TYPENAME 14807 . 14815) (punctuation 14806 . 14807) (TEMPLATE 14797 . 14805) (punctuation 14658 . 14659) (punctuation 14657 . 14658) (symbol 14650 . 14657) (punctuation 14648 . 14649) (punctuation 14647 . 14648) (number 14645 . 14646) (punctuation 14643 . 14644) (punctuation 14642 . 14643) (symbol 14640 . 14641) (punctuation 14639 . 14640) (symbol 14628 . 14639) (punctuation 14626 . 14627) (TYPENAME 14617 . 14625) (punctuation 14615 . 14616) (symbol 14611 . 14615) (punctuation 14609 . 14610) (symbol 14607 . 14608) (symbol 14599 . 14606) (punctuation 14598 . 14599) (TEMPLATE 14589 . 14597) (punctuation 14110 . 14111) (punctuation 14109 . 14110) (punctuation 14108 . 14109) (punctuation 14084 . 14085) (symbol 14082 . 14084) (punctuation 14080 . 14081) (punctuation 14079 . 14080) (punctuation 14078 . 14079) (TYPENAME 14070 . 14078) (punctuation 14069 . 14070) (TEMPLATE 14060 . 14068) (punctuation 13234 . 13235) (punctuation 13221 . 13222) (punctuation 13220 . 13221) (punctuation 13031 . 13032) (punctuation 13030 . 13031) (punctuation 12947 . 12948) (punctuation 12946 . 12947) (symbol 12942 . 12946) (semantic-list 12933 . 12941) (punctuation 12931 . 12932) (symbol 12924 . 12931) (punctuation 12923 . 12924) (symbol 12918 . 12923) (punctuation 12917 . 12918) (punctuation 12916 . 12917) (symbol 12913 . 12916) (punctuation 12911 . 12912) (punctuation 12910 . 12911) (symbol 12902 . 12909) (CONST 12896 . 12901) (punctuation 12894 . 12895) (symbol 12887 . 12894) (punctuation 12886 . 12887) (symbol 12873 . 12886) (punctuation 12643 . 12644) (number 12642 . 12643) (punctuation 12640 . 12641) (symbol 12635 . 12639) (punctuation 12633 . 12634) (symbol 12625 . 12632) (BOOL 12620 . 12624) (symbol 12610 . 12619) (STATIC 12603 . 12609) (punctuation 12171 . 12172) (punctuation 12170 . 12171) (punctuation 12169 . 12170) (punctuation 12103 . 12104) (symbol 12101 . 12103) (punctuation 12099 . 12100) (punctuation 12098 . 12099) (punctuation 12097 . 12098) (TYPENAME 12089 . 12097) (punctuation 12087 . 12088) (symbol 12080 . 12087) (TYPENAME 12071 . 12079) (punctuation 12069 . 12070) (number 12068 . 12069) (punctuation 12066 . 12067) (symbol 12062 . 12065) (symbol 12054 . 12061) (punctuation 12053 . 12054) (TEMPLATE 12044 . 12052) (punctuation 11984 . 11985) (symbol 11977 . 11984) (TYPENAME 11968 . 11976) (punctuation 11966 . 11967) (number 11965 . 11966) (punctuation 11963 . 11964) (symbol 11959 . 11962) (symbol 11951 . 11958) (punctuation 11950 . 11951) (TEMPLATE 11941 . 11949) (USING 11143 . 11148) (punctuation 11141 . 11142) (symbol 11140 . 11141) (TYPENAME 11131 . 11139) (punctuation 11130 . 11131) (TEMPLATE 11121 . 11129) (USING 11061 . 11066) (punctuation 11059 . 11060) (symbol 11058 . 11059) (TYPENAME 11049 . 11057) (punctuation 11048 . 11049) (TEMPLATE 11039 . 11047) (punctuation 11003 . 11004) (punctuation 11001 . 11002) (semantic-list 10998 . 11001) (symbol 10997 . 10998) (punctuation 10996 . 10997) (symbol 10986 . 10996) (STRUCT 10979 . 10985) (punctuation 10977 . 10978) (symbol 10976 . 10977) (symbol 10969 . 10975) (punctuation 10967 . 10968) (symbol 10966 . 10967) (TYPENAME 10957 . 10965) (punctuation 10956 . 10957) (TEMPLATE 10947 . 10955) (punctuation 10840 . 10841) (semantic-list 10837 . 10840) (punctuation 10835 . 10836) (semantic-list 10832 . 10835) (CHAR 10828 . 10832) (punctuation 10827 . 10828) (symbol 10810 . 10827) (punctuation 10808 . 10809) (punctuation 10806 . 10807) (semantic-list 10803 . 10806) (CHAR 10799 . 10803) (punctuation 10798 . 10799) (symbol 10788 . 10798) (STRUCT 10781 . 10787) (punctuation 10779 . 10780) (symbol 10778 . 10779) (symbol 10771 . 10777) (punctuation 10770 . 10771) (TEMPLATE 10761 . 10769) (punctuation 10638 . 10639) (semantic-list 10576 . 10638) (punctuation 10575 . 10576) (symbol 10567 . 10575) (punctuation 10566 . 10567) (punctuation 10565 . 10566) (punctuation 10564 . 10565) (symbol 10563 . 10564) (punctuation 10562 . 10563) (symbol 10552 . 10562) (punctuation 10551 . 10552) (symbol 10550 . 10551) (punctuation 10548 . 10549) (symbol 10540 . 10547) (symbol 10535 . 10539) (symbol 10525 . 10534) (STATIC 10518 . 10524) (symbol 10324 . 10333) (STATIC 10317 . 10323) (punctuation 10286 . 10287) (punctuation 10285 . 10286) (semantic-list 10276 . 10284) (punctuation 10274 . 10275) (symbol 10265 . 10273) (BOOL 10260 . 10264) (symbol 10250 . 10259) (STATIC 10243 . 10249) (symbol 10207 . 10216) (STATIC 10200 . 10206) (punctuation 10164 . 10165) (symbol 10159 . 10163) (USING 10153 . 10158) (symbol 9717 . 9726) (STATIC 9710 . 9716) (symbol 9673 . 9682) (STATIC 9666 . 9672) (symbol 9629 . 9638) (STATIC 9622 . 9628) (punctuation 3288 . 3289) (punctuation 3287 . 3288) (punctuation 3286 . 3287) (symbol 3245 . 3254) (punctuation 3243 . 3244) (symbol 3239 . 3243) (punctuation 3237 . 3238) (punctuation 3236 . 3237) (punctuation 3235 . 3236) (TYPENAME 3227 . 3235) (punctuation 3225 . 3226) (symbol 3223 . 3225) (punctuation 3221 . 3222) (punctuation 3220 . 3221) (punctuation 3219 . 3220) (TYPENAME 3211 . 3219) (punctuation 3209 . 3210) (symbol 3208 . 3209) (TYPENAME 3199 . 3207) (punctuation 3197 . 3198) (symbol 3189 . 3197) (TYPENAME 3180 . 3188) (punctuation 3179 . 3180) (TEMPLATE 3170 . 3178) (symbol 3027 . 3036) (punctuation 3025 . 3026) (symbol 3017 . 3025) (TYPENAME 3008 . 3016) (punctuation 3007 . 3008) (TEMPLATE 2998 . 3006) (punctuation 2992 . 2993) (punctuation 2991 . 2992) (semantic-list 2988 . 2991) (SIZEOF 2982 . 2988) (punctuation 2980 . 2981) (punctuation 2979 . 2980) (semantic-list 2975 . 2978) (SIZEOF 2969 . 2975) (punctuation 2968 . 2969) (symbol 2955 . 2968) (punctuation 2953 . 2954) (symbol 2950 . 2952) (USING 2944 . 2949) (punctuation 2942 . 2943) (symbol 2941 . 2942) (TYPENAME 2932 . 2940) (punctuation 2931 . 2932) (TEMPLATE 2922 . 2930) (punctuation 2631 . 2632) (symbol 2570 . 2587) (INLINE 2563 . 2569) (symbol 1699 . 1716) (symbol 1512 . 1525) (symbol 1262 . 1275) (punctuation 1197 . 1198) (VOID 1193 . 1197) (punctuation 1191 . 1192) (symbol 1184 . 1190) (TYPENAME 1175 . 1183) (punctuation 1173 . 1174) (symbol 1169 . 1173) (TYPENAME 1160 . 1168) (punctuation 1159 . 1160) (TEMPLATE 1150 . 1158) (semantic-list 1141 . 1149) (symbol 1126 . 1141) (semantic-list 1067 . 1087) (symbol 1052 . 1067) (string 1024 . 1048) (semantic-list 1009 . 1022) (SIZEOF 1003 . 1009) (punctuation 1001 . 1002) (punctuation 1000 . 1001) (semantic-list 990 . 999) (SIZEOF 984 . 990) (symbol 267 . 271) (symbol 260 . 266) (punctuation 259 . 260) (punctuation 3288 . 3289) (punctuation 3287 . 3288) (punctuation 3286 . 3287) (symbol 3245 . 3254) (punctuation 3243 . 3244) (symbol 3239 . 3243) (punctuation 3237 . 3238) (punctuation 3236 . 3237) (punctuation 3235 . 3236) (TYPENAME 3227 . 3235) (punctuation 3225 . 3226) (symbol 3223 . 3225) (punctuation 3221 . 3222) (punctuation 3220 . 3221) (punctuation 3219 . 3220) (TYPENAME 3211 . 3219) (punctuation 3209 . 3210) (symbol 3208 . 3209) (TYPENAME 3199 . 3207) (punctuation 3197 . 3198) (symbol 3189 . 3197) (TYPENAME 3180 . 3188) (punctuation 3179 . 3180) (TEMPLATE 3170 . 3178) (symbol 3027 . 3036) (punctuation 3025 . 3026) (symbol 3017 . 3025) (TYPENAME 3008 . 3016) (punctuation 3007 . 3008) (TEMPLATE 2998 . 3006) (punctuation 2992 . 2993) (punctuation 2991 . 2992) (semantic-list 2988 . 2991) (SIZEOF 2982 . 2988) (punctuation 2980 . 2981) (punctuation 2979 . 2980) (semantic-list 2975 . 2978) (SIZEOF 2969 . 2975) (punctuation 2968 . 2969) (symbol 2955 . 2968) (punctuation 2953 . 2954) (symbol 2950 . 2952) (USING 2944 . 2949) (punctuation 2942 . 2943) (symbol 2941 . 2942) (TYPENAME 2932 . 2940) (punctuation 2931 . 2932) (TEMPLATE 2922 . 2930) (punctuation 2631 . 2632) (symbol 2570 . 2587) (INLINE 2563 . 2569) (symbol 1699 . 1716) (symbol 1512 . 1525) (symbol 1262 . 1275) (punctuation 1197 . 1198) (VOID 1193 . 1197) (punctuation 1191 . 1192) (symbol 1184 . 1190) (TYPENAME 1175 . 1183) (punctuation 1173 . 1174) (symbol 1169 . 1173) (TYPENAME 1160 . 1168) (punctuation 1159 . 1160) (TEMPLATE 1150 . 1158) (semantic-list 1141 . 1149) (symbol 1126 . 1141) (semantic-list 1067 . 1087) (symbol 1052 . 1067) (string 1024 . 1048) (semantic-list 1009 . 1022) (SIZEOF 1003 . 1009) (punctuation 1001 . 1002) (punctuation 1000 . 1001) (semantic-list 990 . 999) (SIZEOF 984 . 990) (symbol 267 . 271) (symbol 260 . 266) (punctuation 259 . 260) (punctuation 59776 . 59777) (punctuation 59775 . 59776) (symbol 59769 . 59774) (punctuation 59768 . 59769) (punctuation 59767 . 59768) (punctuation 59766 . 59767) (symbol 59759 . 59766) (punctuation 59758 . 59759) (punctuation 59757 . 59758) (symbol 59754 . 59757) (punctuation 59752 . 59753) (symbol 59740 . 59752) (punctuation 59738 . 59739) (symbol 59730 . 59738) (punctuation 59729 . 59730) (punctuation 59728 . 59729) (symbol 59725 . 59728) (punctuation 59723 . 59724) (symbol 59713 . 59723) (punctuation 59712 . 59713) (punctuation 59711 . 59712) (symbol 59708 . 59711) (punctuation 59706 . 59707) (symbol 59697 . 59706) (punctuation 59696 . 59697) (symbol 59679 . 59696) (punctuation 59669 . 59670) (punctuation 59668 . 59669) (symbol 59662 . 59667) (punctuation 59661 . 59662) (punctuation 59660 . 59661) (punctuation 59659 . 59660) (symbol 59653 . 59659) (punctuation 59652 . 59653) (punctuation 59651 . 59652) (symbol 59648 . 59651) (punctuation 59646 . 59647) (symbol 59636 . 59646) (punctuation 59634 . 59635) (symbol 59621 . 59634) (punctuation 59620 . 59621) (punctuation 59619 . 59620) (symbol 59616 . 59619) (punctuation 59614 . 59615) (symbol 59605 . 59614) (punctuation 59604 . 59605) (symbol 59588 . 59604) (punctuation 59578 . 59579) (symbol 59568 . 59577) (BOOL 59563 . 59567) (symbol 59553 . 59562) (STATIC 59546 . 59552) (punctuation 59479 . 59480) (symbol 59469 . 59478) (USING 59463 . 59468) (string 59336 . 59400) (punctuation 59299 . 59300) (symbol 55742 . 55751) (punctuation 55740 . 55741) (symbol 55731 . 55740) (punctuation 55729 . 55730) (symbol 55718 . 55729) (ENUM 55687 . 55691) (USING 54505 . 54510) (punctuation 54398 . 54399) (VOID 54394 . 54398) (punctuation 54392 . 54393) (symbol 54390 . 54391) (CLASS 54384 . 54389) (punctuation 54382 . 54383) (symbol 54381 . 54382) (symbol 54374 . 54380) (punctuation 54373 . 54374) (TEMPLATE 54364 . 54372) (punctuation 53442 . 53443) (symbol 53427 . 53441) (USING 53421 . 53426) (punctuation 52609 . 52610) (symbol 52599 . 52608) (USING 52593 . 52598) (punctuation 52559 . 52560) (symbol 52548 . 52558) (USING 52542 . 52547) (punctuation 52514 . 52515) (symbol 52499 . 52513) (USING 52493 . 52498) (USING 52095 . 52100) (punctuation 52093 . 52094) (symbol 52092 . 52093) (CLASS 52086 . 52091) (punctuation 52085 . 52086) (TEMPLATE 52075 . 52083) (punctuation 47519 . 47520) (punctuation 46774 . 46775) (symbol 46769 . 46773) (symbol 46764 . 46768) (symbol 46754 . 46763) (STATIC 46747 . 46753) (string 46670 . 46739) (punctuation 46662 . 46663) (punctuation 46661 . 46662) (punctuation 43747 . 43748) (symbol 43555 . 43572) (INLINE 43548 . 43554) (punctuation 43326 . 43327) (symbol 43321 . 43325) (symbol 43316 . 43320) (symbol 43306 . 43315) (STATIC 43299 . 43305) (punctuation 43285 . 43286) (punctuation 43284 . 43285) (symbol 43280 . 43284) (punctuation 43279 . 43280) (punctuation 43278 . 43279) (punctuation 43277 . 43278) (symbol 43276 . 43277) (punctuation 43275 . 43276) (symbol 43260 . 43275) (punctuation 43259 . 43260) (punctuation 43258 . 43259) (symbol 43255 . 43258) (TYPENAME 43246 . 43254) (punctuation 43245 . 43246) (symbol 43224 . 43245) (punctuation 43222 . 43223) (symbol 43211 . 43221) (USING 43205 . 43210) (punctuation 43097 . 43098) (semantic-list 42620 . 43097) (punctuation 42618 . 42619) (punctuation 42617 . 42618) (symbol 42609 . 42617) (punctuation 42608 . 42609) (punctuation 42607 . 42608) (punctuation 42606 . 42607) (symbol 42605 . 42606) (punctuation 42604 . 42605) (symbol 42594 . 42604) (punctuation 42593 . 42594) (symbol 42582 . 42593) (punctuation 42580 . 42581) (symbol 42579 . 42580) (punctuation 42578 . 42579) (symbol 42557 . 42578) (STRUCT 42550 . 42556) (punctuation 42548 . 42549) (symbol 42547 . 42548) (TYPENAME 42538 . 42546) (punctuation 42537 . 42538) (TEMPLATE 42529 . 42537) (symbol 42472 . 42494) (punctuation 42398 . 42399) (semantic-list 42372 . 42398) (punctuation 42370 . 42371) (semantic-list 42367 . 42370) (CHAR 42363 . 42367) (punctuation 42362 . 42363) (symbol 42341 . 42362) (STRUCT 42334 . 42340) (punctuation 42332 . 42333) (symbol 42331 . 42332) (symbol 42324 . 42330) (punctuation 42323 . 42324) (TEMPLATE 42314 . 42322) (punctuation 41277 . 41278) (punctuation 41271 . 41272) (punctuation 41270 . 41271) (symbol 41265 . 41270) (punctuation 41264 . 41265) (punctuation 41263 . 41264) (punctuation 41262 . 41263) (symbol 41252 . 41262) (punctuation 41250 . 41251) (symbol 41237 . 41250) (punctuation 41236 . 41237) (punctuation 41235 . 41236) (symbol 41232 . 41235) (punctuation 41230 . 41231) (symbol 41229 . 41230) (punctuation 41228 . 41229) (symbol 41212 . 41228) (punctuation 41211 . 41212) (symbol 41200 . 41211) (punctuation 41198 . 41199) (symbol 41197 . 41198) (punctuation 41196 . 41197) (symbol 41175 . 41196) (STRUCT 41168 . 41174) (punctuation 41166 . 41167) (symbol 41165 . 41166) (TYPENAME 41156 . 41164) (punctuation 41155 . 41156) (TEMPLATE 41146 . 41154) (punctuation 41143 . 41144) (semantic-list 40875 . 41143) (punctuation 40873 . 40874) (punctuation 40872 . 40873) (symbol 40867 . 40872) (punctuation 40866 . 40867) (punctuation 40865 . 40866) (punctuation 40864 . 40865) (symbol 40863 . 40864) (punctuation 40862 . 40863) (symbol 40852 . 40862) (punctuation 40851 . 40852) (symbol 40840 . 40851) (punctuation 40838 . 40839) (symbol 40837 . 40838) (punctuation 40836 . 40837) (symbol 40810 . 40836) (STRUCT 40803 . 40809) (punctuation 40801 . 40802) (symbol 40800 . 40801) (TYPENAME 40791 . 40799) (punctuation 40790 . 40791) (TEMPLATE 40781 . 40789) (punctuation 40775 . 40776) (semantic-list 40713 . 40775) (punctuation 40712 . 40713) (symbol 40707 . 40712) (punctuation 40706 . 40707) (punctuation 40705 . 40706) (punctuation 40704 . 40705) (DOUBLE 40698 . 40704) (punctuation 40696 . 40697) (symbol 40695 . 40696) (punctuation 40694 . 40695) (symbol 40687 . 40694) (punctuation 40686 . 40687) (punctuation 40685 . 40686) (symbol 40682 . 40685) (punctuation 40680 . 40681) (punctuation 40679 . 40680) (symbol 40673 . 40678) (punctuation 40672 . 40673) (punctuation 40671 . 40672) (punctuation 40670 . 40671) (FLOAT 40665 . 40670) (punctuation 40663 . 40664) (symbol 40662 . 40663) (punctuation 40661 . 40662) (symbol 40654 . 40661) (punctuation 40653 . 40654) (punctuation 40652 . 40653) (symbol 40649 . 40652) (punctuation 40648 . 40649) (symbol 40647 . 40648) (punctuation 40645 . 40646) (symbol 40640 . 40644) (symbol 40635 . 40639) (symbol 40625 . 40634) (STATIC 40618 . 40624) (symbol 40359 . 40368) (STATIC 40352 . 40358) (punctuation 40208 . 40209) (VOID 40204 . 40208) (punctuation 40202 . 40203) (TYPENAME 40193 . 40201) (punctuation 40191 . 40192) (symbol 40190 . 40191) (TYPENAME 40181 . 40189) (punctuation 40180 . 40181) (TEMPLATE 40171 . 40179) (punctuation 39904 . 39905) (punctuation 39903 . 39904) (punctuation 39493 . 39494) (symbol 39488 . 39492) (USING 39482 . 39487) (semantic-list 39382 . 39390) (symbol 39367 . 39382) (punctuation 38608 . 38609) (semantic-list 38537 . 38608) (punctuation 38535 . 38536) (semantic-list 38532 . 38535) (CHAR 38528 . 38532) (punctuation 38527 . 38528) (symbol 38510 . 38527) (STRUCT 38503 . 38509) (punctuation 38501 . 38502) (symbol 38500 . 38501) (symbol 38493 . 38499) (punctuation 38492 . 38493) (TEMPLATE 38483 . 38491) (semantic-list 37082 . 37133) (punctuation 37080 . 37081) (CONST 37074 . 37079) (semantic-list 37071 . 37073) (symbol 37062 . 37071) (punctuation 37060 . 37061) (symbol 37056 . 37060) (punctuation 37054 . 37055) (symbol 37053 . 37054) (punctuation 37052 . 37053) (symbol 37033 . 37052) (punctuation 37032 . 37033) (punctuation 37031 . 37032) (symbol 37025 . 37031) (punctuation 37023 . 37024) (number 37022 . 37023) (punctuation 37021 . 37022) (punctuation 37019 . 37020) (symbol 37014 . 37018) (symbol 37006 . 37013) (punctuation 37005 . 37006) (TEMPLATE 36996 . 37004) (semantic-list 36484 . 36543) (punctuation 36482 . 36483) (semantic-list 36479 . 36481) (symbol 36462 . 36479) (punctuation 36460 . 36461) (symbol 36456 . 36460) (punctuation 36454 . 36455) (symbol 36453 . 36454) (punctuation 36452 . 36453) (symbol 36425 . 36452) (punctuation 36424 . 36425) (punctuation 36423 . 36424) (symbol 36417 . 36423) (punctuation 36415 . 36416) (number 36414 . 36415) (punctuation 36413 . 36414) (punctuation 36411 . 36412) (symbol 36406 . 36410) (symbol 36398 . 36405) (punctuation 36397 . 36398) (TEMPLATE 36388 . 36396) (punctuation 35743 . 35744) (punctuation 35742 . 35743) (punctuation 35741 . 35742) (punctuation 35723 . 35724) (symbol 35721 . 35723) (punctuation 35719 . 35720) (punctuation 35718 . 35719) (punctuation 35717 . 35718) (TYPENAME 35709 . 35717) (punctuation 35708 . 35709) (TEMPLATE 35700 . 35708) (punctuation 35393 . 35394) (punctuation 35392 . 35393) (punctuation 35391 . 35392) (punctuation 35375 . 35376) (symbol 35373 . 35375) (punctuation 35371 . 35372) (punctuation 35370 . 35371) (punctuation 35369 . 35370) (TYPENAME 35361 . 35369) (punctuation 35360 . 35361) (TEMPLATE 35352 . 35360) (punctuation 35222 . 35223) (punctuation 35221 . 35222) (punctuation 35220 . 35221) (punctuation 35200 . 35201) (symbol 35198 . 35200) (punctuation 35196 . 35197) (punctuation 35195 . 35196) (punctuation 35194 . 35195) (TYPENAME 35186 . 35194) (punctuation 35185 . 35186) (TEMPLATE 35177 . 35185) (punctuation 35088 . 35089) (punctuation 35087 . 35088) (punctuation 35086 . 35087) (punctuation 35068 . 35069) (symbol 35066 . 35068) (punctuation 35064 . 35065) (punctuation 35063 . 35064) (punctuation 35062 . 35063) (TYPENAME 35054 . 35062) (punctuation 35053 . 35054) (TEMPLATE 35045 . 35053) (punctuation 34968 . 34969) (punctuation 34967 . 34968) (punctuation 34966 . 34967) (punctuation 34945 . 34946) (symbol 34943 . 34945) (punctuation 34941 . 34942) (punctuation 34940 . 34941) (punctuation 34939 . 34940) (TYPENAME 34931 . 34939) (punctuation 34930 . 34931) (TEMPLATE 34922 . 34930) (symbol 34848 . 34857) (EXPLICIT 34720 . 34728) (EXPLICIT 34443 . 34451) (EXPLICIT 34200 . 34208) (semantic-list 33859 . 33895) (symbol 33840 . 33859) (string 33860 . 33894) (USING 33629 . 33634) (string 33580 . 33621) (punctuation 33546 . 33547) (punctuation 33415 . 33416) (punctuation 33389 . 33390) (punctuation 33185 . 33186) (symbol 33176 . 33185) (punctuation 33175 . 33176) (punctuation 33174 . 33175) (symbol 33169 . 33174) (punctuation 33167 . 33168) (symbol 33156 . 33166) (INT 33152 . 33155) (punctuation 33150 . 33151) (symbol 33149 . 33150) (TYPENAME 33140 . 33148) (punctuation 33139 . 33140) (TEMPLATE 33130 . 33138) (punctuation 32311 . 32312) (punctuation 32310 . 32311) (punctuation 32309 . 32310) (punctuation 32231 . 32232) (symbol 32229 . 32231) (punctuation 32227 . 32228) (punctuation 32226 . 32227) (punctuation 32225 . 32226) (TYPENAME 32217 . 32225) (punctuation 32216 . 32217) (TEMPLATE 32208 . 32216) (punctuation 32042 . 32043) (punctuation 32041 . 32042) (punctuation 32040 . 32041) (punctuation 32014 . 32015) (symbol 32012 . 32014) (punctuation 32010 . 32011) (punctuation 32009 . 32010) (punctuation 32008 . 32009) (TYPENAME 32000 . 32008) (punctuation 31999 . 32000) (TEMPLATE 31991 . 31999) (punctuation 30944 . 30945) (punctuation 30943 . 30944) (punctuation 30942 . 30943) (punctuation 30918 . 30919) (symbol 30916 . 30918) (punctuation 30914 . 30915) (punctuation 30913 . 30914) (punctuation 30912 . 30913) (TYPENAME 30904 . 30912) (punctuation 30903 . 30904) (TEMPLATE 30895 . 30903) (FRIEND 30637 . 30643) (punctuation 30635 . 30636) (TYPENAME 30627 . 30635) (punctuation 30625 . 30626) (TYPENAME 30617 . 30625) (punctuation 30616 . 30617) (TEMPLATE 30608 . 30616) (semantic-list 28985 . 29289) (punctuation 28983 . 28984) (CONST 28977 . 28982) (semantic-list 28974 . 28976) (symbol 28965 . 28974) (punctuation 28963 . 28964) (symbol 28959 . 28963) (punctuation 28957 . 28958) (symbol 28956 . 28957) (punctuation 28955 . 28956) (symbol 28936 . 28955) (punctuation 28935 . 28936) (punctuation 28934 . 28935) (symbol 28928 . 28934) (punctuation 28926 . 28927) (number 28925 . 28926) (punctuation 28924 . 28925) (punctuation 28922 . 28923) (symbol 28917 . 28921) (symbol 28909 . 28916) (punctuation 28907 . 28908) (symbol 28906 . 28907) (TYPENAME 28897 . 28905) (punctuation 28896 . 28897) (TEMPLATE 28887 . 28895) (semantic-list 28106 . 28426) (punctuation 28104 . 28105) (semantic-list 28101 . 28103) (symbol 28084 . 28101) (punctuation 28082 . 28083) (symbol 28078 . 28082) (punctuation 28076 . 28077) (symbol 28075 . 28076) (punctuation 28074 . 28075) (symbol 28047 . 28074) (punctuation 28046 . 28047) (punctuation 28045 . 28046) (symbol 28039 . 28045) (punctuation 28037 . 28038) (number 28036 . 28037) (punctuation 28035 . 28036) (punctuation 28033 . 28034) (symbol 28028 . 28032) (symbol 28020 . 28027) (punctuation 28018 . 28019) (symbol 28017 . 28018) (TYPENAME 28008 . 28016) (punctuation 28007 . 28008) (TEMPLATE 27998 . 28006) (punctuation 27526 . 27527) (punctuation 27525 . 27526) (punctuation 27524 . 27525) (punctuation 27503 . 27504) (symbol 27501 . 27503) (punctuation 27499 . 27500) (punctuation 27498 . 27499) (punctuation 27497 . 27498) (TYPENAME 27489 . 27497) (punctuation 27488 . 27489) (TEMPLATE 27480 . 27488) (punctuation 27082 . 27083) (punctuation 27081 . 27082) (punctuation 27080 . 27081) (punctuation 27058 . 27059) (symbol 27056 . 27058) (punctuation 27054 . 27055) (punctuation 27053 . 27054) (punctuation 27052 . 27053) (TYPENAME 27044 . 27052) (punctuation 27043 . 27044) (TEMPLATE 27035 . 27043) (punctuation 26743 . 26744) (punctuation 26742 . 26743) (punctuation 26741 . 26742) (punctuation 26718 . 26719) (symbol 26716 . 26718) (punctuation 26714 . 26715) (punctuation 26713 . 26714) (punctuation 26712 . 26713) (TYPENAME 26704 . 26712) (punctuation 26703 . 26704) (TEMPLATE 26695 . 26703) (punctuation 26341 . 26342) (punctuation 26340 . 26341) (punctuation 26339 . 26340) (punctuation 26318 . 26319) (symbol 26316 . 26318) (punctuation 26314 . 26315) (punctuation 26313 . 26314) (punctuation 26312 . 26313) (TYPENAME 26304 . 26312) (punctuation 26303 . 26304) (TEMPLATE 26295 . 26303) (EXPLICIT 24028 . 24036) (EXPLICIT 23919 . 23927) (punctuation 23913 . 23914) (symbol 23912 . 23913) (TYPENAME 23903 . 23911) (punctuation 23902 . 23903) (TEMPLATE 23893 . 23901) (punctuation 23375 . 23376) (punctuation 23374 . 23375) (symbol 23369 . 23374) (punctuation 23368 . 23369) (punctuation 23367 . 23368) (punctuation 23366 . 23367) (symbol 23365 . 23366) (punctuation 23363 . 23364) (BOOL 23359 . 23363) (punctuation 23358 . 23359) (symbol 23351 . 23358) (punctuation 23350 . 23351) (punctuation 23349 . 23350) (symbol 23346 . 23349) (punctuation 23345 . 23346) (punctuation 23343 . 23344) (punctuation 23342 . 23343) (symbol 23336 . 23341) (punctuation 23335 . 23336) (punctuation 23334 . 23335) (punctuation 23333 . 23334) (symbol 23332 . 23333) (punctuation 23331 . 23332) (symbol 23320 . 23331) (punctuation 23319 . 23320) (punctuation 23318 . 23319) (symbol 23315 . 23318) (punctuation 23314 . 23315) (symbol 23303 . 23314) (punctuation 23302 . 23303) (punctuation 23301 . 23302) (symbol 23295 . 23301) (punctuation 23293 . 23294) (TYPENAME 23284 . 23292) (punctuation 23282 . 23283) (symbol 23281 . 23282) (TYPENAME 23272 . 23280) (punctuation 23271 . 23272) (TEMPLATE 23262 . 23270) (punctuation 21497 . 21498) (symbol 21480 . 21496) (USING 21474 . 21479) (punctuation 21436 . 21437) (symbol 21421 . 21435) (USING 21415 . 21420) (punctuation 21312 . 21313) (punctuation 21311 . 21312) (punctuation 21303 . 21304) (punctuation 21302 . 21303) (punctuation 21250 . 21251) (punctuation 21249 . 21250) (punctuation 21241 . 21242) (punctuation 21240 . 21241) (punctuation 21190 . 21191) (punctuation 21189 . 21190) (punctuation 21181 . 21182) (punctuation 21180 . 21181) (punctuation 21312 . 21313) (punctuation 21311 . 21312) (punctuation 21303 . 21304) (punctuation 21302 . 21303) (punctuation 21250 . 21251) (punctuation 21249 . 21250) (punctuation 21241 . 21242) (punctuation 21240 . 21241) (punctuation 21190 . 21191) (punctuation 21189 . 21190) (punctuation 21181 . 21182) (punctuation 21180 . 21181) (semantic-list 21078 . 21143) (symbol 21059 . 21078) (punctuation 21116 . 21117) (semantic-list 21114 . 21116) (punctuation 21312 . 21313) (punctuation 21311 . 21312) (punctuation 21303 . 21304) (punctuation 21302 . 21303) (punctuation 21250 . 21251) (punctuation 21249 . 21250) (punctuation 21241 . 21242) (punctuation 21240 . 21241) (punctuation 21190 . 21191) (punctuation 21189 . 21190) (punctuation 21181 . 21182) (punctuation 21180 . 21181) (punctuation 21312 . 21313) (punctuation 21311 . 21312) (punctuation 21303 . 21304) (punctuation 21302 . 21303) (punctuation 21250 . 21251) (punctuation 21249 . 21250) (punctuation 21241 . 21242) (punctuation 21240 . 21241) (punctuation 21190 . 21191) (punctuation 21189 . 21190) (punctuation 21181 . 21182) (punctuation 21180 . 21181) (EXPLICIT 17938 . 17946) (EXPLICIT 17624 . 17632) (punctuation 17596 . 17597) (semantic-list 17594 . 17596) (semantic-list 17483 . 17491) (symbol 17470 . 17483) (EXPLICIT 17938 . 17946) (EXPLICIT 17624 . 17632) (punctuation 17596 . 17597) (semantic-list 17594 . 17596) (EXPLICIT 17938 . 17946) (EXPLICIT 17624 . 17632) (punctuation 17596 . 17597) (semantic-list 17594 . 17596) (string 17279 . 17325) (number 17258 . 17259) (punctuation 17256 . 17257) (punctuation 17250 . 17251) (punctuation 17249 . 17250) (number 17247 . 17248) (punctuation 17245 . 17246) (punctuation 17244 . 17245) (punctuation 17087 . 17088) (punctuation 17086 . 17087) (punctuation 17085 . 17086) (punctuation 17065 . 17066) (symbol 17063 . 17065) (punctuation 17061 . 17062) (punctuation 17060 . 17061) (punctuation 17059 . 17060) (TYPENAME 17051 . 17059) (punctuation 17050 . 17051) (TEMPLATE 17041 . 17049) (punctuation 16906 . 16907) (punctuation 16905 . 16906) (symbol 16898 . 16905) (punctuation 16896 . 16897) (punctuation 16895 . 16896) (number 16893 . 16894) (punctuation 16891 . 16892) (punctuation 16890 . 16891) (symbol 16888 . 16889) (punctuation 16887 . 16888) (symbol 16876 . 16887) (punctuation 16874 . 16875) (TYPENAME 16865 . 16873) (punctuation 16863 . 16864) (symbol 16859 . 16863) (punctuation 16857 . 16858) (symbol 16855 . 16856) (symbol 16847 . 16854) (punctuation 16846 . 16847) (TEMPLATE 16837 . 16845) (punctuation 16357 . 16358) (punctuation 16356 . 16357) (punctuation 16355 . 16356) (punctuation 16337 . 16338) (symbol 16335 . 16337) (punctuation 16333 . 16334) (punctuation 16332 . 16333) (punctuation 16331 . 16332) (TYPENAME 16323 . 16331) (punctuation 16322 . 16323) (TEMPLATE 16313 . 16321) (USING 16211 . 16216) (USING 16179 . 16184) (punctuation 16143 . 16144) (symbol 16133 . 16142) (USING 16127 . 16132) (punctuation 16115 . 16116) (punctuation 16114 . 16115) (punctuation 15393 . 15394) (symbol 15386 . 15393) (punctuation 15384 . 15385) (symbol 15381 . 15384) (punctuation 15380 . 15381) (punctuation 15379 . 15380) (symbol 15368 . 15379) (punctuation 15362 . 15363) (symbol 15355 . 15362) (punctuation 15353 . 15354) (symbol 15349 . 15352) (BOOL 15344 . 15348) (punctuation 15343 . 15344) (TEMPLATE 15334 . 15342) (symbol 14944 . 14953) (punctuation 14841 . 14842) (punctuation 14840 . 14841) (punctuation 14839 . 14840) (punctuation 14821 . 14822) (symbol 14819 . 14821) (punctuation 14817 . 14818) (punctuation 14816 . 14817) (punctuation 14815 . 14816) (TYPENAME 14807 . 14815) (punctuation 14806 . 14807) (TEMPLATE 14797 . 14805) (punctuation 14658 . 14659) (punctuation 14657 . 14658) (symbol 14650 . 14657) (punctuation 14648 . 14649) (punctuation 14647 . 14648) (number 14645 . 14646) (punctuation 14643 . 14644) (punctuation 14642 . 14643) (symbol 14640 . 14641) (punctuation 14639 . 14640) (symbol 14628 . 14639) (punctuation 14626 . 14627) (TYPENAME 14617 . 14625) (punctuation 14615 . 14616) (symbol 14611 . 14615) (punctuation 14609 . 14610) (symbol 14607 . 14608) (symbol 14599 . 14606) (punctuation 14598 . 14599) (TEMPLATE 14589 . 14597) (punctuation 14110 . 14111) (punctuation 14109 . 14110) (punctuation 14108 . 14109) (punctuation 14084 . 14085) (symbol 14082 . 14084) (punctuation 14080 . 14081) (punctuation 14079 . 14080) (punctuation 14078 . 14079) (TYPENAME 14070 . 14078) (punctuation 14069 . 14070) (TEMPLATE 14060 . 14068) (punctuation 13234 . 13235) (punctuation 13221 . 13222) (punctuation 13220 . 13221) (punctuation 13031 . 13032) (punctuation 13030 . 13031) (punctuation 12947 . 12948) (punctuation 12946 . 12947) (symbol 12942 . 12946) (semantic-list 12933 . 12941) (punctuation 12931 . 12932) (symbol 12924 . 12931) (punctuation 12923 . 12924) (symbol 12918 . 12923) (punctuation 12917 . 12918) (punctuation 12916 . 12917) (symbol 12913 . 12916) (punctuation 12911 . 12912) (punctuation 12910 . 12911) (symbol 12902 . 12909) (CONST 12896 . 12901) (punctuation 12894 . 12895) (symbol 12887 . 12894) (punctuation 12886 . 12887) (symbol 12873 . 12886) (punctuation 12643 . 12644) (number 12642 . 12643) (punctuation 12640 . 12641) (symbol 12635 . 12639) (punctuation 12633 . 12634) (symbol 12625 . 12632) (BOOL 12620 . 12624) (symbol 12610 . 12619) (STATIC 12603 . 12609) (punctuation 12171 . 12172) (punctuation 12170 . 12171) (punctuation 12169 . 12170) (punctuation 12103 . 12104) (symbol 12101 . 12103) (punctuation 12099 . 12100) (punctuation 12098 . 12099) (punctuation 12097 . 12098) (TYPENAME 12089 . 12097) (punctuation 12087 . 12088) (symbol 12080 . 12087) (TYPENAME 12071 . 12079) (punctuation 12069 . 12070) (number 12068 . 12069) (punctuation 12066 . 12067) (symbol 12062 . 12065) (symbol 12054 . 12061) (punctuation 12053 . 12054) (TEMPLATE 12044 . 12052) (punctuation 11984 . 11985) (symbol 11977 . 11984) (TYPENAME 11968 . 11976) (punctuation 11966 . 11967) (number 11965 . 11966) (punctuation 11963 . 11964) (symbol 11959 . 11962) (symbol 11951 . 11958) (punctuation 11950 . 11951) (TEMPLATE 11941 . 11949) (USING 11143 . 11148) (punctuation 11141 . 11142) (symbol 11140 . 11141) (TYPENAME 11131 . 11139) (punctuation 11130 . 11131) (TEMPLATE 11121 . 11129) (USING 11061 . 11066) (punctuation 11059 . 11060) (symbol 11058 . 11059) (TYPENAME 11049 . 11057) (punctuation 11048 . 11049) (TEMPLATE 11039 . 11047) (punctuation 11003 . 11004) (punctuation 11001 . 11002) (semantic-list 10998 . 11001) (symbol 10997 . 10998) (punctuation 10996 . 10997) (symbol 10986 . 10996) (STRUCT 10979 . 10985) (punctuation 10977 . 10978) (symbol 10976 . 10977) (symbol 10969 . 10975) (punctuation 10967 . 10968) (symbol 10966 . 10967) (TYPENAME 10957 . 10965) (punctuation 10956 . 10957) (TEMPLATE 10947 . 10955) (punctuation 10840 . 10841) (semantic-list 10837 . 10840) (punctuation 10835 . 10836) (semantic-list 10832 . 10835) (CHAR 10828 . 10832) (punctuation 10827 . 10828) (symbol 10810 . 10827) (punctuation 10808 . 10809) (punctuation 10806 . 10807) (semantic-list 10803 . 10806) (CHAR 10799 . 10803) (punctuation 10798 . 10799) (symbol 10788 . 10798) (STRUCT 10781 . 10787) (punctuation 10779 . 10780) (symbol 10778 . 10779) (symbol 10771 . 10777) (punctuation 10770 . 10771) (TEMPLATE 10761 . 10769) (punctuation 10638 . 10639) (semantic-list 10576 . 10638) (punctuation 10575 . 10576) (symbol 10567 . 10575) (punctuation 10566 . 10567) (punctuation 10565 . 10566) (punctuation 10564 . 10565) (symbol 10563 . 10564) (punctuation 10562 . 10563) (symbol 10552 . 10562) (punctuation 10551 . 10552) (symbol 10550 . 10551) (punctuation 10548 . 10549) (symbol 10540 . 10547) (symbol 10535 . 10539) (symbol 10525 . 10534) (STATIC 10518 . 10524) (symbol 10324 . 10333) (STATIC 10317 . 10323) (punctuation 10286 . 10287) (punctuation 10285 . 10286) (semantic-list 10276 . 10284) (punctuation 10274 . 10275) (symbol 10265 . 10273) (BOOL 10260 . 10264) (symbol 10250 . 10259) (STATIC 10243 . 10249) (symbol 10207 . 10216) (STATIC 10200 . 10206) (punctuation 10164 . 10165) (symbol 10159 . 10163) (USING 10153 . 10158) (symbol 9717 . 9726) (STATIC 9710 . 9716) (symbol 9673 . 9682) (STATIC 9666 . 9672) (symbol 9629 . 9638) (STATIC 9622 . 9628) (punctuation 3288 . 3289) (punctuation 3287 . 3288) (punctuation 3286 . 3287) (symbol 3245 . 3254) (punctuation 3243 . 3244) (symbol 3239 . 3243) (punctuation 3237 . 3238) (punctuation 3236 . 3237) (punctuation 3235 . 3236) (TYPENAME 3227 . 3235) (punctuation 3225 . 3226) (symbol 3223 . 3225) (punctuation 3221 . 3222) (punctuation 3220 . 3221) (punctuation 3219 . 3220) (TYPENAME 3211 . 3219) (punctuation 3209 . 3210) (symbol 3208 . 3209) (TYPENAME 3199 . 3207) (punctuation 3197 . 3198) (symbol 3189 . 3197) (TYPENAME 3180 . 3188) (punctuation 3179 . 3180) (TEMPLATE 3170 . 3178) (symbol 3027 . 3036) (punctuation 3025 . 3026) (symbol 3017 . 3025) (TYPENAME 3008 . 3016) (punctuation 3007 . 3008) (TEMPLATE 2998 . 3006) (punctuation 2992 . 2993) (punctuation 2991 . 2992) (semantic-list 2988 . 2991) (SIZEOF 2982 . 2988) (punctuation 2980 . 2981) (punctuation 2979 . 2980) (semantic-list 2975 . 2978) (SIZEOF 2969 . 2975) (punctuation 2968 . 2969) (symbol 2955 . 2968) (punctuation 2953 . 2954) (symbol 2950 . 2952) (USING 2944 . 2949) (punctuation 2942 . 2943) (symbol 2941 . 2942) (TYPENAME 2932 . 2940) (punctuation 2931 . 2932) (TEMPLATE 2922 . 2930) (punctuation 2631 . 2632) (symbol 2570 . 2587) (INLINE 2563 . 2569) (symbol 1699 . 1716) (symbol 1512 . 1525) (symbol 1262 . 1275) (punctuation 1197 . 1198) (VOID 1193 . 1197) (punctuation 1191 . 1192) (symbol 1184 . 1190) (TYPENAME 1175 . 1183) (punctuation 1173 . 1174) (symbol 1169 . 1173) (TYPENAME 1160 . 1168) (punctuation 1159 . 1160) (TEMPLATE 1150 . 1158) (semantic-list 1141 . 1149) (symbol 1126 . 1141) (semantic-list 1067 . 1087) (symbol 1052 . 1067) (string 1024 . 1048) (semantic-list 1009 . 1022) (SIZEOF 1003 . 1009) (punctuation 1001 . 1002) (punctuation 1000 . 1001) (semantic-list 990 . 999) (SIZEOF 984 . 990) (symbol 267 . 271) (symbol 260 . 266) (punctuation 259 . 260) (symbol 267 . 271) (symbol 260 . 266) (punctuation 259 . 260))
      :lexical-table 
        '(("PYBIND11_MAP_LIST0" (spp-arg-list ("f" "t" "x" "peek" "...") 50251 . 50271) . 
              ((symbol "f" 50278 . 50279) (semantic-list "(t, x)" 50279 . 50285) (symbol "PYBIND11_MAP_LIST_NEXT" 50286 . 50308) (semantic-list "(peek, PYBIND11_MAP_LIST1)" 50309 . 50335) (semantic-list "(f, t, peek, __VA_ARGS__)" 50336 . 50361)))
          ("PYBIND11_MAP2_LIST0" (spp-arg-list ("f" "t" "x1" "x2" "peek" "...") 51325 . 51350) . 
              ((symbol "f" 51357 . 51358) (semantic-list "(t, x1, x2)" 51358 . 51369) (symbol "PYBIND11_MAP2_LIST_NEXT" 51370 . 51393) (semantic-list "(peek, PYBIND11_MAP2_LIST1)" 51394 . 51421) (semantic-list "(f, t, peek, __VA_ARGS__)" 51422 . 51447)))
          ("PYBIND11_MAP_LIST_NEXT" (spp-arg-list ("test" "next") 50148 . 50160) . ((symbol "PYBIND11_MAP_LIST_NEXT1" 50167 . 50190) (semantic-list "(PYBIND11_MAP_GET_END test, next)" 50191 . 50224)))
          ("PYBIND11_MAP_LIST1" (spp-arg-list ("f" "t" "x" "peek" "...") 50388 . 50408) . 
              ((symbol "f" 50415 . 50416) (semantic-list "(t, x)" 50416 . 50422) (symbol "PYBIND11_MAP_LIST_NEXT" 50423 . 50445) (semantic-list "(peek, PYBIND11_MAP_LIST0)" 50446 . 50472) (semantic-list "(f, t, peek, __VA_ARGS__)" 50473 . 50498)))
          ("PYBIND11_MAP2_LIST1" (spp-arg-list ("f" "t" "x1" "x2" "peek" "...") 51475 . 51500) . 
              ((symbol "f" 51507 . 51508) (semantic-list "(t, x1, x2)" 51508 . 51519) (symbol "PYBIND11_MAP2_LIST_NEXT" 51520 . 51543) (semantic-list "(peek, PYBIND11_MAP2_LIST0)" 51544 . 51571) (semantic-list "(f, t, peek, __VA_ARGS__)" 51572 . 51597)))
          ("PYBIND11_MAP2_LIST" (spp-arg-list ("f" "t" "...") 51708 . 51719) . ((symbol "PYBIND11_EVAL" 51726 . 51739) (semantic-list "(PYBIND11_MAP2_LIST1 (f, t, __VA_ARGS__, (), 0))" 51740 . 51788)))
          ("PYBIND11_NUMPY_DTYPE_EX" (spp-arg-list ("Type" "...") 51821 . 51832) . 
              ((punctuation ":" 51839 . 51840) (punctuation ":" 51840 . 51841) (symbol "pybind11" 51841 . 51849) (punctuation ":" 51849 . 51850) (punctuation ":" 51850 . 51851) (symbol "detail" 51851 . 51857) (punctuation ":" 51857 . 51858) (punctuation ":" 51858 . 51859) (symbol "npy_format_descriptor" 51859 . 51880) (punctuation "<" 51880 . 51881) (symbol "Type" 51881 . 51885) (punctuation ">" 51885 . 51886) (punctuation ":" 51886 . 51887) (punctuation ":" 51887 . 51888) (symbol "register_dtype" 51888 . 51902) (semantic-list "(::std::vector<::pybind11::detail::field_descriptor> \\
         {PYBIND11_MAP2_LIST (PYBIND11_FIELD_DESCRIPTOR_EX, Type, __VA_ARGS__)})" 51913 . 52048)))
          ("PYBIND11_FIELD_DESCRIPTOR" (spp-arg-list ("T" "Field") 48756 . 48766) . ((symbol "PYBIND11_FIELD_DESCRIPTOR_EX" 48767 . 48795) (semantic-list "(T, Field, #Field)" 48795 . 48813)))
          ("PYBIND11_FIELD_DESCRIPTOR_EX" (spp-arg-list ("T" "Field" "Name") 48207 . 48223) . 
              ((punctuation ":" 48271 . 48272) (punctuation ":" 48272 . 48273) (symbol "pybind11" 48273 . 48281) (punctuation ":" 48281 . 48282) (punctuation ":" 48282 . 48283) (symbol "detail" 48283 . 48289) (punctuation ":" 48289 . 48290) (punctuation ":" 48290 . 48291) (symbol "field_descriptor" 48291 . 48307) (semantic-list "{                                                    \\
        Name, offsetof(T, Field), sizeof(decltype(std::declval<T>().Field)),                  \\
        ::pybind11::format_descriptor<decltype(std::declval<T>().Field)>::format(),           \\
        ::pybind11::detail::npy_format_descriptor<decltype(std::declval<T>().Field)>::dtype() \\
    }" 48308 . 48656)))
          ("PYBIND11_NUMPY_DTYPE" (spp-arg-list ("Type" "...") 50708 . 50719) . 
              ((punctuation ":" 50726 . 50727) (punctuation ":" 50727 . 50728) (symbol "pybind11" 50728 . 50736) (punctuation ":" 50736 . 50737) (punctuation ":" 50737 . 50738) (symbol "detail" 50738 . 50744) (punctuation ":" 50744 . 50745) (punctuation ":" 50745 . 50746) (symbol "npy_format_descriptor" 50746 . 50767) (punctuation "<" 50767 . 50768) (symbol "Type" 50768 . 50772) (punctuation ">" 50772 . 50773) (punctuation ":" 50773 . 50774) (punctuation ":" 50774 . 50775) (symbol "register_dtype" 50775 . 50789) (semantic-list "(::std::vector<::pybind11::detail::field_descriptor> \\
         {PYBIND11_MAP_LIST (PYBIND11_FIELD_DESCRIPTOR, Type, __VA_ARGS__)})" 50800 . 50931)))
          ("PYBIND11_MAP_NEXT" (spp-arg-list ("test" "next") 49733 . 49745) . ((symbol "PYBIND11_MAP_NEXT1" 49747 . 49765) (semantic-list "(PYBIND11_MAP_GET_END test, next)" 49766 . 49799)))
          ("PYBIND11_MAP_LIST_NEXT1" (spp-arg-list ("test" "next") 50038 . 50050) . ((symbol "PYBIND11_MAP_NEXT0" 50057 . 50075) (semantic-list "(test, PYBIND11_MAP_COMMA next, 0)" 50076 . 50110)))
          ("PYBIND11_EVAL0" (spp-arg-list ("...") 48960 . 48965) . ((symbol "__VA_ARGS__" 48966 . 48977)))
          ("PYBIND11_MAP2_LIST_NEXT1" (spp-arg-list ("test" "next") 51109 . 51121) . ((symbol "PYBIND11_MAP_NEXT0" 51128 . 51146) (semantic-list "(test, PYBIND11_MAP_COMMA next, 0)" 51147 . 51181)))
          ("PYBIND11_EVAL1" (spp-arg-list ("...") 49000 . 49005) . ((symbol "PYBIND11_EVAL0" 49006 . 49020) (semantic-list "(PYBIND11_EVAL0 (PYBIND11_EVAL0 (__VA_ARGS__)))" 49021 . 49068)))
          ("PYBIND11_EVAL" (spp-arg-list ("...") 49363 . 49368) . ((symbol "PYBIND11_EVAL4" 49370 . 49384) (semantic-list "(PYBIND11_EVAL4 (PYBIND11_EVAL4 (__VA_ARGS__)))" 49385 . 49432)))
          ("PYBIND11_MAP_OUT")
          ("PYBIND11_MAP_NEXT0" (spp-arg-list ("test" "next" "...") 49594 . 49611) . ((symbol "next" 49612 . 49616) (symbol "PYBIND11_MAP_OUT" 49617 . 49633)))
          ("PYBIND11_MAP2_LIST_NEXT" (spp-arg-list ("test" "next") 51220 . 51232) . ((symbol "PYBIND11_MAP2_LIST_NEXT1" 51239 . 51263) (semantic-list "(PYBIND11_MAP_GET_END test, next)" 51264 . 51297)))
          ("PYBIND11_EVAL2" (spp-arg-list ("...") 49091 . 49096) . ((symbol "PYBIND11_EVAL1" 49097 . 49111) (semantic-list "(PYBIND11_EVAL1 (PYBIND11_EVAL1 (__VA_ARGS__)))" 49112 . 49159)))
          ("PYBIND11_MAP_NEXT1" (spp-arg-list ("test" "next") 49660 . 49672) . ((symbol "PYBIND11_MAP_NEXT0" 49673 . 49691) (semantic-list "(test, next, 0)" 49692 . 49707)))
          ("PYBIND11_EVAL3" (spp-arg-list ("...") 49182 . 49187) . ((symbol "PYBIND11_EVAL2" 49188 . 49202) (semantic-list "(PYBIND11_EVAL2 (PYBIND11_EVAL2 (__VA_ARGS__)))" 49203 . 49250)))
          ("PYBIND11_MAP_GET_END" (spp-arg-list nil 49545 . 49547) . 
              ((number "0" 49548 . 49549) (punctuation "," 49549 . 49550) (symbol "PYBIND11_MAP_END" 49551 . 49567)))
          ("PYBIND11_MAP_LIST" (spp-arg-list ("f" "t" "...") 50599 . 50610) . ((symbol "PYBIND11_EVAL" 50617 . 50630) (semantic-list "(PYBIND11_MAP_LIST1 (f, t, __VA_ARGS__, (), 0))" 50631 . 50678)))
          ("PYBIND11_EVAL4" (spp-arg-list ("...") 49273 . 49278) . ((symbol "PYBIND11_EVAL3" 49279 . 49293) (semantic-list "(PYBIND11_EVAL3 (PYBIND11_EVAL3 (__VA_ARGS__)))" 49294 . 49341)))
          ("PYBIND11_MAP_END" (spp-arg-list ("...") 49457 . 49462))
          ("PYBIND11_MAP_COMMA" . ((punctuation "," 49515 . 49516)))
          )
)
    (semanticdb-table "semanticdb-table"
      :file "pybind11.h"
      :fsize 97860
      :lastmodtime '(24269 8311 822259 25000))
    (semanticdb-table "semanticdb-table"
      :file "complex.h"
      :fsize 2001
      :lastmodtime '(24145 28046 795368 942000)))
  :file "!home!rvbust!Rvbust!Sources!Pybind11!include!pybind11!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
