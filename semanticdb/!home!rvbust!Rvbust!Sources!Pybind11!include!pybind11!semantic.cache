;; Object pybind11/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "pybind11/"
  :tables
  (list
    (semanticdb-table "pytypes.h"
      :major-mode 'c++-mode
      :tags 
        '( ("detail/common.h" include nil nil [285 311])
            ("buffer_info.h" include nil nil [312 336])
            ("utility" include (:system-flag t) nil [337 355])
            ("type_traits" include (:system-flag t) nil [356 378])
            ("handle" type
               (:prototype t
                :type "class")
                nil [450 463])
            ("object" type
               (:prototype t
                :type "class")
                nil [464 477])
            ("str" type
               (:prototype t
                :type "class")
                nil [478 488])
            ("iterator" type
               (:prototype t
                :type "class")
                nil [489 504])
            ("arg" type
               (:prototype t
                :type "struct")
                nil [505 516])
            ("arg_v" type
               (:prototype t
                :type "struct")
                nil [517 530])
            ("args_proxy" type
               (:prototype t
                :type "class")
                nil [556 573])
            ("isinstance_generic" function
               (:prototype-flag t
                :typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [605 616])
                    ("tp" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::type_info" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [617 642]))                  
                :type "bool")
                nil [574 643])
            ("accessor" type
               (:template 
                  ( ("Policy" type (:type "class") nil nil))                  
                :type "class"
                :prototype t)
                nil [678 720])
            ("accessor_policies" type
               (:members 
                  ( ("obj_attr" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [755 771])
                    ("str_attr" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [776 792])
                    ("generic_item" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [797 817])
                    ("sequence_item" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [822 843])
                    ("list_item" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [848 865])
                    ("tuple_item" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [870 888]))                  
                :type "namespace")
                nil [721 890])
            ("accessor" variable (:type "int") nil [917 955])
            ("accessor" variable (:type "int") nil [982 1020])
            ("accessor" variable (:type "int") nil [1043 1085])
            ("accessor" variable (:type "int") nil [1112 1155])
            ("accessor" variable (:type "int") nil [1178 1217])
            ("accessor" variable (:type "int") nil [1241 1281])
            ("pyobject_tag" type (:type "class") nil [1360 1383])
            ("std::is_base_of" variable (:type "int") nil [1426 1479])
            ("object_api" type
               (:template 
                  ( ("Derived" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("derived" function
                       (:constant-flag t
                        :type ("Derived" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1756 1834])
                    ("public" label nil (reparse-symbol classsubparts) [1836 1843])
                    ("begin" function
                       (:prototype-flag t
                        :type ("iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2026 2049])
                    ("end" function
                       (:prototype-flag t
                        :type ("iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2102 2123])
                    ("[]" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("key" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2498 2509]))                          
                        :type ("item_accessor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2473 2516])
                    ("[]" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("key" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [2635 2651]))                          
                        :type ("item_accessor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2610 2658])
                    ("attr" function
                       (:prototype-flag t
                        :arguments 
                          ( ("key" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3020 3031]))                          
                        :type ("obj_attr_accessor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2997 3038])
                    ("attr" function
                       (:prototype-flag t
                        :arguments 
                          ( ("key" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [3155 3171]))                          
                        :type ("str_attr_accessor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3132 3178])
                    ("" function
                       (:prototype-flag t
                        :operator-flag t
                        :function-pointer t
                        :type ("args_proxy" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3496 3525])
                    ("contains" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3654 3658])
                            ("" variable (:type ("item" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3658 3663]))                          
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [3618 3670])
                    ("()" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Args" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4364 4371])
                            ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4374 4379]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4346 4386])
                    ("call" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Args" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4590 4596])
                            ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4600 4605]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4578 4612])
                    ("is" function
                       (:arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4676 4700]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [4668 4759])
                    ("is_none" function (:type "bool") (reparse-symbol classsubparts) [4813 4872])
                    ("equal" function
                       (:arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4933 4957]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [4922 5007])
                    ("not_equal" function
                       (:arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5027 5051]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [5012 5097])
                    ("<" function
                       (:operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5117 5141]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [5102 5187])
                    ("<=" function
                       (:operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5208 5232]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [5192 5277])
                    (">" function
                       (:operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5297 5321]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [5282 5367])
                    (">=" function
                       (:operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5388 5412]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [5372 5457])
                    ("-" function
                       (:prototype-flag t
                        :operator-flag t
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5463 5488])
                    ("~" function
                       (:prototype-flag t
                        :operator-flag t
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5493 5518])
                    ("+" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5540 5564]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5523 5571])
                    ("+=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5594 5618]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5576 5625])
                    ("-" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5647 5671]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5630 5678])
                    ("-=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5701 5725]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5683 5732])
                    ("" function
                       (:prototype-flag t
                        :operator-flag t
                        :function-pointer t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5754 5778]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5737 5785])
                    ("=" function
                       (:prototype-flag t
                        :operator-flag t
                        :function-pointer t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5808 5832]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5790 5839])
                    ("/" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5861 5885]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5844 5892])
                    ("/=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5915 5939]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5897 5946])
                    ("|" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5968 5992]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5951 5999])
                    ("|=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6022 6046]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6004 6053])
                    ("&" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6075 6099]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6058 6106])
                    ("&=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6129 6153]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6111 6160])
                    ("^" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6182 6206]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6165 6213])
                    ("^=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6236 6260]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6218 6267])
                    ("<<" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6290 6314]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6272 6321])
                    ("<<=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6345 6369]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6326 6376])
                    (">>" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6399 6423]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6381 6430])
                    (">>=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6454 6478]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6435 6485])
                    ("str" function
                       (:prototype-flag t
                        :type ("pybind11::str" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6543 6569])
                    ("doc" function
                       (:prototype-flag t
                        :type ("str_attr_accessor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6640 6670])
                    ("ref_count" function (:type "int") (reparse-symbol classsubparts) [6728 6806])
                    ("get_type" function
                       (:prototype-flag t
                        :type ("handle" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6885 6909])
                    ("private" label nil (reparse-symbol classsubparts) [6911 6919])
                    ("rich_compare" function
                       (:prototype-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object_api" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6942 6966])
                            ("value" variable (:type "int") (reparse-symbol arg-sub-list) [6967 6977]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [6924 6984]))                  
                :superclasses 
                  ( ("pyobject_tag" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [1683 6987])
            ("handle" type
               (:superclasses 
                  ( ("detail::object_api" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [7527 7534])
                    ("handle" function
                       (:constructor-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7723 7737]))                          
                        :type ("handle" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7716 7754])
                    ("ptr" function
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7857 7896])
                    ("ptr" function (:type "int") (reparse-symbol classsubparts) [7912 7935])
                    ("cast" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("T" type (:type "class") nil nil)
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [8759 8796])
                    ("==" function
                       (:operator-flag t
                        :arguments 
                          ( ("h" variable
                               (:reference 1
                                :constant-flag t
                                :type ("handle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9151 9167]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [9135 9202])
                    ("!=" function
                       (:operator-flag t
                        :arguments 
                          ( ("h" variable
                               (:reference 1
                                :constant-flag t
                                :type ("handle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9277 9293]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [9261 9328])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [9396 9443])
                    ("protected" label nil (reparse-symbol classsubparts) [9444 9454])
                    ("m_ptr" variable
                       (:pointer 1
                        :default-value "nullptr"
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [9459 9485]))                  
                :type "class")
                nil [7476 9488])
            ("object" type
               (:superclasses 
                  ( ("handle" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [10085 10092])
                    ("object" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10219 10228])
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) [10229 10246]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [10212 10290])
                    ("object" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10365 10381]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [10358 10408])
                    ("object" function
                       (:destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [10650 10674])
                    ("release" function (:type ("handle" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10897 10999])
                    ("=" function
                       (:operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11023 11043]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [11005 11146])
                    ("protected" label nil (reparse-symbol classsubparts) [11625 11635])
                    ("borrowed_t" type (:type "struct") (reparse-symbol classsubparts) [11698 11720])
                    ("stolen_t" type (:type "struct") (reparse-symbol classsubparts) [11725 11745])
                    ("reinterpret_borrow" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("T" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11801 11808]))                          
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [11751 11809])
                    ("reinterpret_steal" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("T" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11863 11870]))                          
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [11814 11871])
                    ("public" label nil (reparse-symbol classsubparts) [11873 11880])
                    ("object" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11968 11977])
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11978 11989]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [11961 12016])
                    ("object" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12028 12037])
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12038 12047]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [12021 12063]))                  
                :type "class")
                nil [10054 12066])
            ("reinterpret_borrow" function
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type ("T" type (:type "class") nil nil)
                :arguments 
                  ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12664 12673]))                  )
                nil [12621 12711])
            ("reinterpret_steal" function
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type ("T" type (:type "class") nil nil)
                :arguments 
                  ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12989 12998]))                  )
                nil [12947 13034])
            ("error_string" function
               (:prototype-flag t
                :typemodifiers ("inline")
                :type ("std::string" type (:type "class") nil nil))
                nil [13060 13094])
            ("error_already_set" type
               (:superclasses 
                  ( ("std::runtime_error" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [13472 13479])
                    ("error_already_set" function
                       (:constructor-flag t
                        :type ("error_already_set" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [13629 13763])
                    ("error_already_set" function
                       (:prototype-flag t
                        :destructor-flag t
                        :typemodifiers ("inline")
                        :type "void")
                        (reparse-symbol classsubparts) [13885 13913])
                    ("restore" function (:type "void") (reparse-symbol classsubparts) [14189 14290])
                    ("clear" function (:type "void") (reparse-symbol classsubparts) [14429 14444])
                    ("matches" function
                       (:arguments 
                          ( ("ex" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14685 14695]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [14672 14763])
                    ("private" label nil (reparse-symbol classsubparts) [14765 14773])
                    ("type" variable (:type ("object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14778 14804])
                    ("value" variable (:type ("object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14778 14804])
                    ("trace" variable (:type ("object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14778 14804]))                  
                :type "class")
                nil [13418 14807])
            ("isinstance" function
               (:arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15264 15275]))                  
                :type "bool")
                nil [15248 15302])
            ("isinstance" function
               (:arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15408 15419]))                  
                :type "bool")
                nil [15392 15474])
            ("isinstance" function
               (:type "bool"
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15584 15595]))                  
                :typemodifiers ("inline")
                :template-specifier 
                  ( ("object" type nil nil nil))                  )
                nil [15541 15628])
            ("isinstance" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15741 15752])
                    ("type" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15753 15765]))                  
                :type "bool")
                nil [15718 15918])
            ("hasattr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15979 15990])
                    ("name" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15991 16003]))                  
                :type "bool")
                nil [15959 16064])
            ("hasattr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16086 16097])
                    ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16098 16115]))                  
                :type "bool")
                nil [16066 16176])
            ("delattr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16198 16209])
                    ("name" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16210 16222]))                  
                :type "void")
                nil [16178 16311])
            ("delattr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16333 16344])
                    ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16345 16362]))                  
                :type "void")
                nil [16313 16451])
            ("getattr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16475 16486])
                    ("name" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16487 16499]))                  
                :type ("object" type (:type "class") nil nil))
                nil [16453 16661])
            ("getattr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16685 16696])
                    ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16697 16714]))                  
                :type ("object" type (:type "class") nil nil))
                nil [16663 16876])
            ("getattr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16900 16911])
                    ("name" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16912 16924])
                    ("default_" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16925 16941]))                  
                :type ("object" type (:type "class") nil nil))
                nil [16878 17160])
            ("getattr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17184 17195])
                    ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17196 17213])
                    ("default_" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17214 17230]))                  
                :type ("object" type (:type "class") nil nil))
                nil [17162 17449])
            ("setattr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17471 17482])
                    ("name" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17483 17495])
                    ("value" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17496 17509]))                  
                :type "void")
                nil [17451 17611])
            ("setattr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17633 17644])
                    ("name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17645 17662])
                    ("value" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17663 17676]))                  
                :type "void")
                nil [17613 17778])
            ("hash" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17800 17811]))                  
                :type ("ssize_t" type (:type "class") nil nil))
                nil [17780 17916])
            ("get_function" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("value" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17993 18006]))                  
                :type ("handle" type (:type "class") nil nil))
                nil [17966 18307])
            ("decltype" function
               (:arguments 
                  ( ("" variable (:type ("std::forward" type
                         (:template-specifier 
                            ( ("T" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [18678 18696]))                  
                :type "int")
                nil [18669 18728])
            ("object_or_cast" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:reference 1
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18878 18882])
                    ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18882 18884]))                  
                :type ("object" type (:type "class") nil nil))
                nil [18856 18885])
            ("object_or_cast" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19012 19026]))                  
                :type ("handle" type (:type "class") nil nil))
                nil [18983 19042])
            ("accessor" type
               (:template 
                  ( ("Policy" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("Policy::key_type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [19147 19173])
                    ("public" label nil (reparse-symbol classsubparts) [19175 19182])
                    ("accessor" function
                       (:constructor-flag t
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19196 19207])
                            ("key" variable (:type ("key_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19208 19221]))                          
                        :type ("accessor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [19187 19257])
                    ("enable_if_t" function
                       (:template-specifier 
                          ( ("std::is_same::value" type nil nil nil)
                            ("bool" type nil nil nil))                          
                        :type "int")
                        (reparse-symbol classsubparts) [20443 20567])
                    ("object" function (:type "int") (reparse-symbol classsubparts) [20582 20620])
                    ("ptr" function
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [20625 20676])
                    ("cast" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [20681 20760])
                    ("private" label nil (reparse-symbol classsubparts) [20762 20770])
                    ("get_cache" function (:type ("object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20775 20885])
                    ("private" label nil (reparse-symbol classsubparts) [20887 20895])
                    ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20900 20911])
                    ("key" variable (:type ("key_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20916 20929])
                    ("cache" variable
                       (:typemodifiers ("mutable")
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [20934 20955]))                  
                :superclasses 
                  ( ("object_api" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [19044 20958])
            ("obj_attr" type
               (:members 
                  ( ("key_type" variable
                       (:default-value "object"
                        :type "int")
                        (reparse-symbol classsubparts) [21023 21041])
                    ("get" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21064 21075])
                            ("key" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21076 21087]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [21046 21117])
                    ("set" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21138 21149])
                            ("key" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21150 21161])
                            ("val" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21162 21173]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [21122 21201]))                  
                :type "struct")
                nil [20995 21204])
            ("str_attr" type
               (:members 
                  ( ("get" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21281 21292])
                            ("key" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [21293 21309]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [21263 21339])
                    ("set" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21360 21371])
                            ("key" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [21372 21388])
                            ("val" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21389 21400]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [21344 21428]))                  
                :type "struct")
                nil [21206 21431])
            ("generic_item" type
               (:members 
                  ( ("key_type" variable
                       (:default-value "object"
                        :type "int")
                        (reparse-symbol classsubparts) [21465 21483])
                    ("get" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21507 21518])
                            ("key" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21519 21530]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [21489 21707])
                    ("set" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21729 21740])
                            ("key" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21741 21752])
                            ("val" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21753 21764]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [21713 21871]))                  
                :type "struct")
                nil [21433 21874])
            ("sequence_item" type
               (:members 
                  ( ("key_type" variable
                       (:default-value "size_t"
                        :type "int")
                        (reparse-symbol classsubparts) [21909 21927])
                    ("get" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21951 21962])
                            ("index" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21963 21976]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [21933 22173])
                    ("set" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22195 22206])
                            ("index" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22207 22220])
                            ("val" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22221 22232]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [22179 22445]))                  
                :type "struct")
                nil [21876 22448])
            ("list_item" type
               (:members 
                  ( ("key_type" variable
                       (:default-value "size_t"
                        :type "int")
                        (reparse-symbol classsubparts) [22479 22497])
                    ("get" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22521 22532])
                            ("index" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22533 22546]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [22503 22740])
                    ("set" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22762 22773])
                            ("index" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22774 22787])
                            ("val" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22788 22799]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [22746 23006]))                  
                :type "struct")
                nil [22450 23009])
            ("tuple_item" type
               (:members 
                  ( ("key_type" variable
                       (:default-value "size_t"
                        :type "int")
                        (reparse-symbol classsubparts) [23041 23059])
                    ("get" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23083 23094])
                            ("index" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23095 23108]))                          
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [23065 23303])
                    ("set" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23325 23336])
                            ("index" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23337 23350])
                            ("val" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23351 23362]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [23309 23571]))                  
                :type "struct")
                nil [23011 23574])
            ("generic_iterator" type
               (:template 
                  ( ("Policy" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("It" variable
                       (:default-value "generic_iterator"
                        :type "int")
                        (reparse-symbol classsubparts) [23753 23775])
                    ("public" label nil (reparse-symbol classsubparts) [23777 23784])
                    ("difference_type" variable
                       (:default-value "ssize_t"
                        :type "int")
                        (reparse-symbol classsubparts) [23795 23821])
                    ("Policy::iterator_category" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [23852 23887])
                    ("Policy::value_type" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [23911 23939])
                    ("Policy::reference" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [23962 23989])
                    ("Policy::pointer" variable
                       (:typemodifiers ("typename")
                        :type "int")
                        (reparse-symbol classsubparts) [24010 24035])
                    ("generic_iterator" function
                       (:constructor-flag t
                        :arguments 
                          ( ("seq" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24092 24103])
                            ("index" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24104 24118]))                          
                        :type ("generic_iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24075 24143])
                    ("" function
                       (:operator-flag t
                        :function-pointer t
                        :type ("reference" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24149 24210])
                    ("[]" function
                       (:operator-flag t
                        :arguments 
                          ( ("n" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24236 24254]))                          
                        :type ("reference" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24215 24285])
                    ("->" function
                       (:operator-flag t
                        :type ("pointer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24290 24335])
                    ("++" function
                       (:operator-flag t
                        :type ("It" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24341 24396])
                    ("++" function
                       (:operator-flag t
                        :arguments 
                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [24415 24419]))                          
                        :type ("It" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24401 24476])
                    ("--" function
                       (:operator-flag t
                        :type ("It" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24481 24536])
                    ("--" function
                       (:operator-flag t
                        :arguments 
                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [24555 24559]))                          
                        :type ("It" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24541 24616])
                    ("+=" function
                       (:operator-flag t
                        :arguments 
                          ( ("n" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24636 24654]))                          
                        :type ("It" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24621 24692])
                    ("-=" function
                       (:operator-flag t
                        :arguments 
                          ( ("n" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24712 24730]))                          
                        :type ("It" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24697 24769])
                    ("+" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [24795 24807])
                            ("n" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24808 24826]))                          
                        :type ("It" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24775 24863])
                    ("+" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("n" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24888 24906])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [24907 24919]))                          
                        :type ("It" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24868 24937])
                    ("-" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [24962 24974])
                            ("n" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24975 24993]))                          
                        :type ("It" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [24942 25030])
                    ("-" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25068 25080])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25081 25093]))                          
                        :type ("difference_type" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [25035 25122])
                    ("==" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25151 25163])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25164 25176]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [25128 25199])
                    ("!=" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25227 25239])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25240 25252]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [25204 25274])
                    ("<" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25302 25314])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25315 25327]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [25279 25349])
                    (">" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25377 25389])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25390 25402]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [25354 25420])
                    (">=" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25448 25460])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25461 25473]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [25425 25494])
                    ("<=" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25522 25534])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("It" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25535 25547]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [25499 25568]))                  
                :superclasses 
                  ( ("Policy" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [23675 25571])
            ("arrow_proxy" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [25754 25762])
                    ("arrow_proxy" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25780 25784])
                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25784 25790]))                          
                        :type ("arrow_proxy" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [25768 25820])
                    ("->" function
                       (:operator-flag t
                        :pointer 1
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [25825 25865]))                  )
                nil [25707 25868])
            ("sequence_fast_readonly" type
               (:members 
                  ( ("protected" label nil (reparse-symbol classsubparts) [25992 26002])
                    ("std::random_access_iterator_tag" variable (:type "int") (reparse-symbol classsubparts) [26033 26065])
                    ("value_type" variable
                       (:default-value "handle"
                        :type "int")
                        (reparse-symbol classsubparts) [26076 26096])
                    ("handle" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [26119 26132])
                    ("arrow_proxy" variable (:type "int") (reparse-symbol classsubparts) [26153 26179])
                    ("sequence_fast_readonly" function
                       (:constructor-flag t
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26208 26219])
                            ("n" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26220 26230]))                          
                        :type ("sequence_fast_readonly" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [26185 26278])
                    ("dereference" function (:type ("reference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [26284 26330])
                    ("increment" function (:type "void") (reparse-symbol classsubparts) [26335 26362])
                    ("decrement" function (:type "void") (reparse-symbol classsubparts) [26367 26394])
                    ("advance" function
                       (:arguments 
                          ( ("n" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26412 26422]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [26399 26436])
                    ("equal" function
                       (:arguments 
                          ( ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("sequence_fast_readonly" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [26452 26484]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [26441 26515])
                    ("distance_to" function
                       (:arguments 
                          ( ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("sequence_fast_readonly" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [26540 26572]))                          
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [26520 26602])
                    ("private" label nil (reparse-symbol classsubparts) [26604 26612])
                    ("ptr" variable
                       (:pointer 2
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [26617 26632]))                  
                :type "class")
                nil [25961 26635])
            ("sequence_slow_readwrite" type
               (:members 
                  ( ("protected" label nil (reparse-symbol classsubparts) [26763 26773])
                    ("std::random_access_iterator_tag" variable (:type "int") (reparse-symbol classsubparts) [26804 26836])
                    ("value_type" variable
                       (:default-value "object"
                        :type "int")
                        (reparse-symbol classsubparts) [26847 26867])
                    ("reference" variable
                       (:default-value "sequence_accessor"
                        :type "int")
                        (reparse-symbol classsubparts) [26878 26908])
                    ("arrow_proxy" variable (:type "int") (reparse-symbol classsubparts) [26929 26966])
                    ("sequence_slow_readwrite" function
                       (:constructor-flag t
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26996 27007])
                            ("index" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27008 27022]))                          
                        :type ("sequence_slow_readwrite" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [26972 27051])
                    ("dereference" function (:type ("reference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27057 27132])
                    ("increment" function (:type "void") (reparse-symbol classsubparts) [27137 27166])
                    ("decrement" function (:type "void") (reparse-symbol classsubparts) [27171 27200])
                    ("advance" function
                       (:arguments 
                          ( ("n" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27218 27228]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [27205 27244])
                    ("equal" function
                       (:arguments 
                          ( ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("sequence_slow_readwrite" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [27260 27293]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [27249 27328])
                    ("distance_to" function
                       (:arguments 
                          ( ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("sequence_slow_readwrite" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [27353 27386]))                          
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [27333 27420])
                    ("private" label nil (reparse-symbol classsubparts) [27422 27430])
                    ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27435 27446])
                    ("index" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27451 27465]))                  
                :type "class")
                nil [26731 27468])
            ("dict_readonly" type
               (:members 
                  ( ("protected" label nil (reparse-symbol classsubparts) [27563 27573])
                    ("std::forward_iterator_tag" variable (:type "int") (reparse-symbol classsubparts) [27604 27630])
                    ("std::pair" variable (:type "int") (reparse-symbol classsubparts) [27654 27680])
                    ("value_type" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [27703 27720])
                    ("arrow_proxy" variable (:type "int") (reparse-symbol classsubparts) [27741 27771])
                    ("dict_readonly" function
                       (:constructor-flag t
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27822 27833])
                            ("pos" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27834 27846]))                          
                        :type ("dict_readonly" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [27808 27884])
                    ("dereference" function (:type ("reference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27890 27944])
                    ("increment" function (:type "void") (reparse-symbol classsubparts) [27949 28032])
                    ("equal" function
                       (:arguments 
                          ( ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("dict_readonly" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [28048 28071]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [28037 28102])
                    ("private" label nil (reparse-symbol classsubparts) [28104 28112])
                    ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol classsubparts) [28117 28128])
                    ("key" variable
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [28133 28155])
                    ("value" variable
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [28133 28155])
                    ("pos" variable
                       (:default-value "-1"
                        :type ("ssize_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [28160 28177]))                  
                :type "class")
                nil [27541 28180])
            ("generic_iterator" variable (:type "int") nil [28265 28325])
            ("generic_iterator" variable (:type "int") nil [28348 28408])
            ("generic_iterator" variable (:type "int") nil [28618 28679])
            ("generic_iterator" variable (:type "int") nil [28702 28753])
            ("PyIterable_Check" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28784 28798]))                  
                :type "bool")
                nil [28755 28972])
            ("PyNone_Check" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("o" variable
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28999 29011]))                  
                :type "bool")
                nil [28974 29036])
            ("PyUnicode_Check_Permissive" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("o" variable
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29181 29193]))                  
                :type "bool")
                nil [29142 29251])
            ("kwargs_proxy" type
               (:superclasses 
                  ( ("handle" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [29290 29297])
                    ("kwargs_proxy" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29324 29333]))                          
                        :type ("kwargs_proxy" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [29311 29349]))                  
                :type "class")
                nil [29253 29352])
            ("args_proxy" type
               (:superclasses 
                  ( ("handle" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [29389 29396])
                    ("args_proxy" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29421 29430]))                          
                        :type ("args_proxy" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [29410 29446])
                    ("" function
                       (:operator-flag t
                        :function-pointer t
                        :type ("kwargs_proxy" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [29451 29513]))                  
                :type "class")
                nil [29354 29516])
            ("std::is_base_of" variable (:type "int") nil [29612 29636])
            ("std::is_same" variable (:type "int") nil [29682 29710])
            ("std::is_same" variable (:type "int") nil [29772 29802])
            ("satisfies_none_of" variable (:type "int") nil [29863 29934])
            ("satisfies_any_of" variable (:type "int") nil [29982 30031])
            ("simple_collector" type
               (:prototype t
                :type "class")
                nil [30162 30185])
            ("unpacking_collector" type
               (:prototype t
                :type "class")
                nil [30267 30293])
            ("PYBIND11_OBJECT_COMMON" variable (:constant-flag t) nil [30616 30638])
            ("PYBIND11_OBJECT_CVT" variable (:constant-flag t) nil [31291 31310])
            ("PYBIND11_OBJECT" variable (:constant-flag t) nil [31923 31938])
            ("PYBIND11_OBJECT_DEFAULT" variable (:constant-flag t) nil [32209 32232])
            ("iterator" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [32750 32757])
                    ("std::input_iterator_tag" variable (:type "int") (reparse-symbol classsubparts) [32788 32812])
                    ("difference_type" variable
                       (:default-value "ssize_t"
                        :type "int")
                        (reparse-symbol classsubparts) [32823 32849])
                    ("value_type" variable
                       (:default-value "handle"
                        :type "int")
                        (reparse-symbol classsubparts) [32860 32880])
                    ("handle" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [32903 32916])
                    ("public" label nil (reparse-symbol classsubparts) [32958 33013])
                    ("iterator" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [32958 33013])
                    ("iterator" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [32958 33013])
                    ("iterator" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [32958 33013])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [32958 33013])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [32958 33013])
                    ("iterator" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [32958 33013])
                    ("iterator" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [32958 33013])
                    ("iterator" function
                       (:constructor-flag t
                        :type ("iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [32958 33013])
                    ("++" function
                       (:operator-flag t
                        :type ("iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [33019 33090])
                    ("++" function
                       (:operator-flag t
                        :arguments 
                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [33116 33120]))                          
                        :type ("iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [33096 33191])
                    ("" function
                       (:operator-flag t
                        :function-pointer t
                        :type ("reference" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [33197 33385])
                    ("->" function
                       (:operator-flag t
                        :type ("pointer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [33391 33449])
                    ("sentinel" function
                       (:typemodifiers ("static")
                        :type ("iterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [33858 33899])
                    ("==" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [33928 33946])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [33947 33965]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [33905 33998])
                    ("!=" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [34026 34044])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [34045 34063]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [34003 34096])
                    ("private" label nil (reparse-symbol classsubparts) [34098 34106])
                    ("advance" function (:type "void") (reparse-symbol classsubparts) [34111 34257])
                    ("private" label nil (reparse-symbol classsubparts) [34259 34267])
                    ("value" variable
                       (:default-value "{}"
                        :type ("object" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34272 34290]))                  
                :type "class")
                nil [32717 34293])
            ("iterable" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [34328 34335])
                    ("public" label nil (reparse-symbol classsubparts) [34340 34407])
                    ("iterable" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("iterable" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34340 34407])
                    ("iterable" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("iterable" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34340 34407])
                    ("iterable" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("iterable" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34340 34407])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [34340 34407])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [34340 34407])
                    ("iterable" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("iterable" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34340 34407])
                    ("iterable" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("iterable" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34340 34407])
                    ("iterable" function
                       (:constructor-flag t
                        :type ("iterable" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34340 34407]))                  
                :type "class")
                nil [34295 34410])
            ("bytes" type
               (:prototype t
                :type "class")
                nil [34412 34424])
            ("str" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [34454 34461])
                    ("public" label nil (reparse-symbol classsubparts) [34466 34543])
                    ("str" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("str" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34466 34543])
                    ("str" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("str" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34466 34543])
                    ("str" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("str" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34466 34543])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [34466 34543])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [34466 34543])
                    ("str" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("str" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34466 34543])
                    ("str" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("str" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34466 34543])
                    ("str" function
                       (:template 
                          ( ("Policy_" type (:type "class") nil nil))                          
                        :type ("str" type (:type "class") nil nil)
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :type ("pybind11::detail::accessor" type
                                     (:template-specifier 
                                        ( ("Policy_" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [34466 34543])
                    ("str" function
                       (:constructor-flag t
                        :arguments 
                          ( ("c" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [34553 34567])
                            ("n" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34568 34577]))                          
                        :type ("str" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34549 34731])
                    ("str" function
                       (:constructor-flag t
                        :arguments 
                          ( ("c" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "\"\""
                                :type "char")
                                (reparse-symbol arg-sub-list) [34882 34900]))                          
                        :type ("str" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [34878 35035])
                    ("str" function
                       (:constructor-flag t
                        :arguments 
                          ( ("s" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [35045 35066]))                          
                        :type ("str" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [35041 35096])
                    ("str" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("bytes" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [35115 35130]))                          
                        :type ("str" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [35111 35131])
                    ("str" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35295 35304]))                          
                        :type ("str" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [35291 35347])
                    ("string" function
                       (:parent "std"
                        :type "int")
                        (reparse-symbol classsubparts) [35362 35908])
                    ("format" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Args" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [35957 35964])
                            ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35967 35972]))                          
                        :type ("str" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [35946 36046])
                    ("private" label nil (reparse-symbol classsubparts) [36048 36056])
                    ("raw_str" function
                       (:pointer 1
                        :typemodifiers ("static")
                        :arguments 
                          ( ("op" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [36180 36193]))                          
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [36155 36496]))                  
                :type "class")
                nil [34426 36499])
            ("literals" type
               (:members 
                  ( ("_s" function
                       (:arguments 
                          ( ("s" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [36626 36640])
                            ("size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36641 36653]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [36623 36675]))                  
                :type "namespace")
                nil [36523 36677])
            ("bytes" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [36740 36747])
                    ("public" label nil (reparse-symbol classsubparts) [36752 36804])
                    ("bytes" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("bytes" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [36752 36804])
                    ("bytes" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("bytes" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [36752 36804])
                    ("bytes" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("bytes" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [36752 36804])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [36752 36804])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [36752 36804])
                    ("bytes" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("bytes" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [36752 36804])
                    ("bytes" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("bytes" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [36752 36804])
                    ("bytes" function
                       (:constructor-flag t
                        :arguments 
                          ( ("c" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "\"\""
                                :type "char")
                                (reparse-symbol arg-sub-list) [36850 36868]))                          
                        :type ("bytes" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [36844 37008])
                    ("bytes" function
                       (:constructor-flag t
                        :arguments 
                          ( ("c" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [37020 37034])
                            ("n" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37035 37044]))                          
                        :type ("bytes" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [37014 37205])
                    ("bytes" function
                       (:constructor-flag t
                        :arguments 
                          ( ("s" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [37251 37272]))                          
                        :type ("bytes" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [37245 37304])
                    ("bytes" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("s" variable
                               (:reference 1
                                :constant-flag t
                                :type ("pybind11::str" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [37325 37348]))                          
                        :type ("bytes" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [37319 37349])
                    ("string" function
                       (:parent "std"
                        :type "int")
                        (reparse-symbol classsubparts) [37364 37626]))                  
                :type "class")
                nil [36710 37629])
            ("bytes" function
               (:constructor-flag t
                :parent "bytes"
                :typemodifiers ("inline")
                :arguments 
                  ( ("s" variable
                       (:reference 1
                        :constant-flag t
                        :type ("pybind11::str" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [37651 37674]))                  
                :type ("bytes" type (:type "class") nil nil))
                nil [37631 38305])
            ("str" function
               (:constructor-flag t
                :parent "str"
                :typemodifiers ("inline")
                :arguments 
                  ( ("b" variable
                       (:reference 1
                        :constant-flag t
                        :type ("bytes" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [38323 38338]))                  
                :type ("str" type (:type "class") nil nil))
                nil [38307 38714])
            ("none" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [38745 38752])
                    ("public" label nil (reparse-symbol classsubparts) [38757 38808])
                    ("none" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("none" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [38757 38808])
                    ("none" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("none" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [38757 38808])
                    ("none" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("none" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [38757 38808])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [38757 38808])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [38757 38808])
                    ("none" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("none" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [38757 38808])
                    ("none" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("none" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [38757 38808])
                    ("none" function
                       (:constructor-flag t
                        :type ("none" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [38813 38855]))                  
                :type "class")
                nil [38716 38858])
            ("bool_" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [39087 39094])
                    ("public" label nil (reparse-symbol classsubparts) [39099 39157])
                    ("bool_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("bool_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [39099 39157])
                    ("bool_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("bool_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [39099 39157])
                    ("bool_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("bool_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [39099 39157])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [39099 39157])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [39099 39157])
                    ("bool_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("bool_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [39099 39157])
                    ("bool_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("bool_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [39099 39157])
                    ("bool_" function
                       (:template 
                          ( ("Policy_" type (:type "class") nil nil))                          
                        :type ("bool_" type (:type "class") nil nil)
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :type ("pybind11::detail::accessor" type
                                     (:template-specifier 
                                        ( ("Policy_" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [39099 39157])
                    ("bool_" function
                       (:constructor-flag t
                        :type ("bool_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [39162 39206])
                    ("bool_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("value" variable (:type "bool") (reparse-symbol arg-sub-list) [39270 39281]))                          
                        :type ("bool_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [39264 39336])
                    ("private" label nil (reparse-symbol classsubparts) [39411 39419])
                    ("raw_bool" function
                       (:pointer 1
                        :typemodifiers ("static")
                        :arguments 
                          ( ("op" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [39528 39541]))                          
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [39502 39705]))                  
                :type "class")
                nil [39057 39708])
            ("as_unsigned" function
               (:template 
                  ( ("Unsigned" type (:type "class") nil nil))                  
                :type ("Unsigned" type (:type "class") nil nil)
                :arguments 
                  ( ("o" variable
                       (:pointer 1
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [40156 40168]))                  )
                nil [40106 40622])
            ("int_" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [40675 40682])
                    ("public" label nil (reparse-symbol classsubparts) [40687 40756])
                    ("int_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("int_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [40687 40756])
                    ("int_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("int_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [40687 40756])
                    ("int_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("int_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [40687 40756])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [40687 40756])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [40687 40756])
                    ("int_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("int_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [40687 40756])
                    ("int_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("int_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [40687 40756])
                    ("int_" function
                       (:template 
                          ( ("Policy_" type (:type "class") nil nil))                          
                        :type ("int_" type (:type "class") nil nil)
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :type ("pybind11::detail::accessor" type
                                     (:template-specifier 
                                        ( ("Policy_" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [40687 40756])
                    ("int_" function
                       (:constructor-flag t
                        :type ("int_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [40761 40812])
                    ("int_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40978 40986]))                          
                        :type ("int_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [40973 41521])
                    ("T" function (:type "int") (reparse-symbol classsubparts) [41634 41872]))                  
                :type "class")
                nil [40646 41875])
            ("float_" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [41908 41915])
                    ("public" label nil (reparse-symbol classsubparts) [41920 41986])
                    ("float_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("float_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [41920 41986])
                    ("float_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("float_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [41920 41986])
                    ("float_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("float_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [41920 41986])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [41920 41986])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [41920 41986])
                    ("float_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("float_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [41920 41986])
                    ("float_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("float_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [41920 41986])
                    ("float_" function
                       (:template 
                          ( ("Policy_" type (:type "class") nil nil))                          
                        :type ("float_" type (:type "class") nil nil)
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :type ("pybind11::detail::accessor" type
                                     (:template-specifier 
                                        ( ("Policy_" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [41920 41986])
                    ("float_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("value" variable (:type "float") (reparse-symbol arg-sub-list) [42050 42062]))                          
                        :type ("float_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42043 42198])
                    ("float_" function
                       (:constructor-flag t
                        :arguments 
                          ( ("value" variable
                               (:default-value ".0"
                                :type "double")
                                (reparse-symbol arg-sub-list) [42210 42227]))                          
                        :type ("float_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42203 42364]))                  
                :type "class")
                nil [41877 42511])
            ("weakref" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [42545 42552])
                    ("public" label nil (reparse-symbol classsubparts) [42557 42614])
                    ("weakref" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("weakref" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42557 42614])
                    ("weakref" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("weakref" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42557 42614])
                    ("weakref" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("weakref" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42557 42614])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [42557 42614])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [42557 42614])
                    ("weakref" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("weakref" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42557 42614])
                    ("weakref" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("weakref" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42557 42614])
                    ("weakref" function
                       (:constructor-flag t
                        :type ("weakref" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42557 42614])
                    ("weakref" function
                       (:constructor-flag t
                        :arguments 
                          ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42636 42647])
                            ("callback" variable
                               (:default-value "{}"
                                :type ("handle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [42648 42668]))                          
                        :type ("weakref" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42628 42824]))                  
                :type "class")
                nil [42513 42827])
            ("slice" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [42859 42866])
                    ("public" label nil (reparse-symbol classsubparts) [42871 42924])
                    ("slice" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("slice" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42871 42924])
                    ("slice" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("slice" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42871 42924])
                    ("slice" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("slice" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42871 42924])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [42871 42924])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [42871 42924])
                    ("slice" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("slice" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42871 42924])
                    ("slice" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("slice" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42871 42924])
                    ("slice" function
                       (:constructor-flag t
                        :type ("slice" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42871 42924])
                    ("slice" function
                       (:constructor-flag t
                        :arguments 
                          ( ("start_" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42935 42950])
                            ("stop_" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42951 42965])
                            ("step_" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42966 42980]))                          
                        :type ("slice" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42929 43179])
                    ("compute" function
                       (:arguments 
                          ( ("length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43197 43211])
                            ("start" variable
                               (:pointer 1
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [43212 43226])
                            ("stop" variable
                               (:pointer 1
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [43227 43240])
                            ("step" variable
                               (:pointer 1
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [43241 43254])
                            ("slicelength" variable
                               (:pointer 1
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [43272 43292]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [43184 43587]))                  
                :type "class")
                nil [42829 43590])
            ("capsule" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [43624 43631])
                    ("public" label nil (reparse-symbol classsubparts) [43636 43698])
                    ("capsule" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("capsule" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [43636 43698])
                    ("capsule" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("capsule" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [43636 43698])
                    ("capsule" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("capsule" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [43636 43698])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [43636 43698])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [43636 43698])
                    ("capsule" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("capsule" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [43636 43698])
                    ("capsule" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("capsule" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [43636 43698])
                    ("capsule" function
                       (:constructor-flag t
                        :type ("capsule" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [43636 43698])
                    ("capsule" function
                       (:constructor-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [43804 43818])
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) [43819 43836]))                          
                        :type ("capsule" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [43796 43916])
                    ("capsule" function
                       (:constructor-flag t
                        :arguments 
                          ( ("value" variable
                               (:pointer 1
                                :constant-flag t
                                :type "void")
                                (reparse-symbol arg-sub-list) [43939 43957])
                            ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "nullptr"
                                :type "char")
                                (reparse-symbol arg-sub-list) [43958 43984])
                            ("destructor" function
                               (:function-pointer t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("PyObject" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44005 44016]))                                  
                                :type "void")
                                nil nil))                          
                        :type ("capsule" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [43931 44209])
                    ("capsule" function
                       (:constructor-flag t
                        :arguments 
                          ( ("value" variable
                               (:pointer 1
                                :constant-flag t
                                :type "void")
                                (reparse-symbol arg-sub-list) [44310 44328])
                            ("destruct" function
                               (:function-pointer t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("PyObject" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44346 44357]))                                  
                                :type "void")
                                nil nil))                          
                        :type ("capsule" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [44302 44540])
                    ("capsule" function
                       (:constructor-flag t
                        :arguments 
                          ( ("value" variable
                               (:pointer 1
                                :constant-flag t
                                :type "void")
                                (reparse-symbol arg-sub-list) [44554 44572])
                            ("destructor" function
                               (:function-pointer t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [44592 44599]))                                  
                                :type "void")
                                nil nil))                          
                        :type ("capsule" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [44546 45097])
                    ("capsule" function
                       (:constructor-flag t
                        :arguments 
                          ( ("destructor" function
                               (:function-pointer t
                                :arguments "void"
                                :type "void")
                                nil nil))                          
                        :type ("capsule" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [45103 45453])
                    ("name" function
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol classsubparts) [45721 45782]))                  
                :type "class")
                nil [43592 45785])
            ("tuple" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [45817 45824])
                    ("public" label nil (reparse-symbol classsubparts) [45829 45896])
                    ("tuple" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("tuple" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [45829 45896])
                    ("tuple" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("tuple" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [45829 45896])
                    ("tuple" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("tuple" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [45829 45896])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [45829 45896])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [45829 45896])
                    ("tuple" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("tuple" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [45829 45896])
                    ("tuple" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("tuple" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [45829 45896])
                    ("tuple" function
                       (:template 
                          ( ("Policy_" type (:type "class") nil nil))                          
                        :type ("tuple" type (:type "class") nil nil)
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :type ("pybind11::detail::accessor" type
                                     (:template-specifier 
                                        ( ("Policy_" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [45829 45896])
                    ("tuple" function
                       (:constructor-flag t
                        :arguments 
                          ( ("size" variable
                               (:default-value "0"
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [45916 45931]))                          
                        :type ("tuple" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [45910 46061])
                    ("size" function (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [46066 46126])
                    ("[]" function
                       (:operator-flag t
                        :arguments 
                          ( ("index" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46165 46178]))                          
                        :type ("detail::tuple_accessor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [46131 46211])
                    ("[]" function
                       (:operator-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46249 46258]))                          
                        :type ("detail::item_accessor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [46216 46298])
                    ("begin" function (:type ("detail::tuple_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [46303 46362])
                    ("end" function (:type ("detail::tuple_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [46367 46446]))                  
                :type "class")
                nil [45787 46449])
            ("dict" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [46480 46487])
                    ("public" label nil (reparse-symbol classsubparts) [46492 46549])
                    ("dict" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("dict" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [46492 46549])
                    ("dict" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("dict" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [46492 46549])
                    ("dict" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("dict" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [46492 46549])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [46492 46549])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [46492 46549])
                    ("dict" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("dict" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [46492 46549])
                    ("dict" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("dict" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [46492 46549])
                    ("dict" function
                       (:template 
                          ( ("Policy_" type (:type "class") nil nil))                          
                        :type ("dict" type (:type "class") nil nil)
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :type ("pybind11::detail::accessor" type
                                     (:template-specifier 
                                        ( ("Policy_" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [46492 46549])
                    ("dict" function
                       (:constructor-flag t
                        :type ("dict" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [46554 46673])
                    ("dict" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Args" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [47024 47031])
                            ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47034 47039]))                          
                        :type ("dict" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [47019 47099])
                    ("size" function (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [47105 47164])
                    ("begin" function (:type ("detail::dict_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [47169 47227])
                    ("end" function (:type ("detail::dict_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [47232 47280])
                    ("clear" function (:type "void") (reparse-symbol classsubparts) [47285 47328])
                    ("contains" function
                       (:arguments 
                          ( ("key" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47347 47358]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [47333 47415])
                    ("contains" function
                       (:arguments 
                          ( ("key" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [47434 47450]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [47420 47522])
                    ("private" label nil (reparse-symbol classsubparts) [47524 47532])
                    ("raw_dict" function
                       (:pointer 1
                        :typemodifiers ("static")
                        :arguments 
                          ( ("op" variable
                               (:pointer 1
                                :type ("PyObject" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [47633 47646]))                          
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [47607 47816]))                  
                :type "class")
                nil [46451 47819])
            ("sequence" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [47854 47861])
                    ("public" label nil (reparse-symbol classsubparts) [47866 47925])
                    ("sequence" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("sequence" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [47866 47925])
                    ("sequence" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("sequence" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [47866 47925])
                    ("sequence" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("sequence" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [47866 47925])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [47866 47925])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [47866 47925])
                    ("sequence" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("sequence" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [47866 47925])
                    ("sequence" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("sequence" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [47866 47925])
                    ("sequence" function
                       (:constructor-flag t
                        :type ("sequence" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [47866 47925])
                    ("size" function (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [47930 47993])
                    ("[]" function
                       (:operator-flag t
                        :arguments 
                          ( ("index" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48035 48048]))                          
                        :type ("detail::sequence_accessor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [47998 48081])
                    ("[]" function
                       (:operator-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48119 48128]))                          
                        :type ("detail::item_accessor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [48086 48168])
                    ("begin" function (:type ("detail::sequence_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [48173 48235])
                    ("end" function (:type ("detail::sequence_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [48240 48321]))                  
                :type "class")
                nil [47821 48324])
            ("list" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [48355 48362])
                    ("public" label nil (reparse-symbol classsubparts) [48367 48431])
                    ("list" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("list" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [48367 48431])
                    ("list" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("list" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [48367 48431])
                    ("list" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("list" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [48367 48431])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [48367 48431])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [48367 48431])
                    ("list" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("list" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [48367 48431])
                    ("list" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("list" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [48367 48431])
                    ("list" function
                       (:template 
                          ( ("Policy_" type (:type "class") nil nil))                          
                        :type ("list" type (:type "class") nil nil)
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :type ("pybind11::detail::accessor" type
                                     (:template-specifier 
                                        ( ("Policy_" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [48367 48431])
                    ("list" function
                       (:constructor-flag t
                        :arguments 
                          ( ("size" variable
                               (:default-value "0"
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [48450 48465]))                          
                        :type ("list" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [48445 48593])
                    ("size" function (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [48598 48657])
                    ("[]" function
                       (:operator-flag t
                        :arguments 
                          ( ("index" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48695 48708]))                          
                        :type ("detail::list_accessor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [48662 48741])
                    ("[]" function
                       (:operator-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48779 48788]))                          
                        :type ("detail::item_accessor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [48746 48828])
                    ("begin" function (:type ("detail::list_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [48833 48891])
                    ("end" function (:type ("detail::list_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [48896 48973])
                    ("append" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [49012 49016])
                            ("" variable (:type ("val" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49016 49020]))                          )
                        (reparse-symbol classsubparts) [48978 49116]))                  
                :type "class")
                nil [48326 49119])
            ("args" type
               (:superclasses 
                  ( ("tuple" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [49149 49200])
                    ("args" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("args" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49149 49200])
                    ("args" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("args" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49149 49200])
                    ("args" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("args" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49149 49200])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [49149 49200])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [49149 49200])
                    ("args" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("args" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49149 49200])
                    ("args" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("args" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49149 49200])
                    ("args" function
                       (:constructor-flag t
                        :type ("args" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49149 49200]))                  
                :type "class")
                nil [49121 49203])
            ("kwargs" type
               (:superclasses 
                  ( ("dict" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [49233 49284])
                    ("kwargs" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("kwargs" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49233 49284])
                    ("kwargs" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("kwargs" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49233 49284])
                    ("kwargs" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("kwargs" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49233 49284])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [49233 49284])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [49233 49284])
                    ("kwargs" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("kwargs" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49233 49284])
                    ("kwargs" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("kwargs" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49233 49284])
                    ("kwargs" function
                       (:constructor-flag t
                        :type ("kwargs" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49233 49284]))                  
                :type "class")
                nil [49204 49288])
            ("set" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [49318 49325])
                    ("public" label nil (reparse-symbol classsubparts) [49330 49386])
                    ("set" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("set" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49330 49386])
                    ("set" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("set" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49330 49386])
                    ("set" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("set" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49330 49386])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [49330 49386])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [49330 49386])
                    ("set" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("set" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49330 49386])
                    ("set" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("set" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49330 49386])
                    ("set" function
                       (:template 
                          ( ("Policy_" type (:type "class") nil nil))                          
                        :type ("set" type (:type "class") nil nil)
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :type ("pybind11::detail::accessor" type
                                     (:template-specifier 
                                        ( ("Policy_" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [49330 49386])
                    ("set" function
                       (:constructor-flag t
                        :type ("set" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49391 49514])
                    ("size" function (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [49519 49577])
                    ("add" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [49613 49617])
                            ("" variable (:type ("val" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49617 49621]))                          )
                        (reparse-symbol classsubparts) [49582 49725])
                    ("clear" function (:type "void") (reparse-symbol classsubparts) [49730 49772]))                  
                :type "class")
                nil [49290 49775])
            ("function" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [49810 49817])
                    ("public" label nil (reparse-symbol classsubparts) [49822 49881])
                    ("function" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("function" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49822 49881])
                    ("function" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("function" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49822 49881])
                    ("function" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("function" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49822 49881])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [49822 49881])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [49822 49881])
                    ("function" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("function" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49822 49881])
                    ("function" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("function" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49822 49881])
                    ("function" function
                       (:constructor-flag t
                        :type ("function" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [49822 49881])
                    ("cpp_function" function (:type ("handle" type (:type "class") nil nil)) (reparse-symbol classsubparts) [49886 50069])
                    ("is_cpp_function" function (:type "bool") (reparse-symbol classsubparts) [50074 50136]))                  
                :type "class")
                nil [49777 50139])
            ("buffer" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [50172 50179])
                    ("public" label nil (reparse-symbol classsubparts) [50184 50245])
                    ("buffer" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("buffer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [50184 50245])
                    ("buffer" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("buffer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [50184 50245])
                    ("buffer" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("buffer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [50184 50245])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [50184 50245])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [50184 50245])
                    ("buffer" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("buffer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [50184 50245])
                    ("buffer" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("buffer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [50184 50245])
                    ("buffer" function
                       (:constructor-flag t
                        :type ("buffer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [50184 50245])
                    ("request" function
                       (:arguments 
                          ( ("writable" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [50271 50292]))                          
                        :type ("buffer_info" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [50251 50608]))                  
                :type "class")
                nil [50141 50611])
            ("memoryview" type
               (:superclasses 
                  ( ("object" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [50648 50655])
                    ("memoryview" function
                       (:constructor-flag t
                        :arguments 
                          ( ("info" variable
                               (:reference 1
                                :constant-flag t
                                :type ("buffer_info" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [50680 50704]))                          
                        :type ("memoryview" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [50669 51651])
                    ("public" label nil (reparse-symbol classsubparts) [51657 51741])
                    ("memoryview" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("is_borrowed" variable (:type "bool") (reparse-symbol arg-sub-list) nil))                          
                        :type ("memoryview" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [51657 51741])
                    ("memoryview" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("borrowed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("memoryview" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [51657 51741])
                    ("memoryview" function
                       (:constructor-flag t
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("stolen_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("memoryview" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [51657 51741])
                    ("check" function (:type "bool") (reparse-symbol classsubparts) [51657 51741])
                    ("check_" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [51657 51741])
                    ("memoryview" function
                       (:constructor-flag t
                        :arguments 
                          ( ("o" variable
                               (:reference 1
                                :constant-flag t
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("memoryview" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [51657 51741])
                    ("memoryview" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type ("memoryview" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [51657 51741])
                    ("memoryview" function
                       (:template 
                          ( ("Policy_" type (:type "class") nil nil))                          
                        :type ("memoryview" type (:type "class") nil nil)
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :type ("pybind11::detail::accessor" type
                                     (:template-specifier 
                                        ( ("Policy_" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :constructor-flag t)
                        (reparse-symbol classsubparts) [51657 51741]))                  
                :type "class")
                nil [50613 51744])
            ("len" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51818 51827]))                  
                :type ("size_t" type (:type "class") nil nil))
                nil [51800 51987])
            ("repr" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("h" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52005 52014]))                  
                :type ("str" type (:type "class") nil nil))
                nil [51989 52370])
            ("iter" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("obj" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52393 52404]))                  
                :type ("iterator" type (:type "class") nil nil))
                nil [52372 52556])
            ("begin" function
               (:template 
                  ( ("D" type (:type "class") nil nil))                  
                :type ("iterator" type (:type "class") nil nil)
                :parent "object_api")
                nil [52605 52692])
            ("end" function
               (:template 
                  ( ("D" type (:type "class") nil nil))                  
                :type ("iterator" type (:type "class") nil nil)
                :parent "object_api")
                nil [52693 52783])
            ("[]" function
               (:template 
                  ( ("D" type (:type "class") nil nil))                  
                :type ("item_accessor" type (:type "class") nil nil)
                :arguments 
                  ( ("key" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52846 52857]))                  
                :parent "object_api"
                :operator-flag t)
                nil [52784 52924])
            ("[]" function
               (:template 
                  ( ("D" type (:type "class") nil nil))                  
                :type ("item_accessor" type (:type "class") nil nil)
                :arguments 
                  ( ("key" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [52987 53003]))                  
                :parent "object_api"
                :operator-flag t)
                nil [52925 53057])
            ("attr" function
               (:template 
                  ( ("D" type (:type "class") nil nil))                  
                :type ("obj_attr_accessor" type (:type "class") nil nil)
                :arguments 
                  ( ("key" variable (:type ("handle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53118 53129]))                  
                :parent "object_api")
                nil [53058 53196])
            ("attr" function
               (:template 
                  ( ("D" type (:type "class") nil nil))                  
                :type ("str_attr_accessor" type (:type "class") nil nil)
                :arguments 
                  ( ("key" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [53257 53273]))                  
                :parent "object_api")
                nil [53197 53312])
            ("" function
               (:template 
                  ( ("D" type (:type "class") nil nil))                  
                :type ("args_proxy" type (:type "class") nil nil)
                :parent "object_api"
                :function-pointer t
                :operator-flag t)
                nil [53313 53422])
            ("contains" function
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "bool"
                :arguments 
                  ( ("" variable
                       (:reference 1
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [53496 53500])
                    ("" variable (:type ("item" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53500 53505]))                  
                :parent "object_api")
                nil [53445 53593])
            ("str" function
               (:template 
                  ( ("D" type (:type "class") nil nil))                  
                :type ("pybind11::str" type (:type "class") nil nil)
                :parent "object_api")
                nil [53595 53694])
            ("doc" function
               (:template 
                  ( ("D" type (:type "class") nil nil))                  
                :type ("str_attr_accessor" type (:type "class") nil nil)
                :parent "object_api")
                nil [53696 53790])
            ("get_type" function
               (:template 
                  ( ("D" type (:type "class") nil nil))                  
                :type ("handle" type (:type "class") nil nil)
                :parent "object_api")
                nil [53792 53902])
            ("rich_compare" function
               (:template 
                  ( ("D" type (:type "class") nil nil))                  
                :type "bool"
                :arguments 
                  ( ("other" variable
                       (:reference 1
                        :constant-flag t
                        :type ("object_api" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [53959 53983])
                    ("value" variable (:type "int") (reparse-symbol arg-sub-list) [53984 53994]))                  
                :parent "object_api")
                nil [53904 54163])
            ("PYBIND11_MATH_OPERATOR_UNARY" variable (:constant-flag t) nil [54173 54201])
            ("PYBIND11_MATH_OPERATOR_BINARY" variable (:constant-flag t) nil [54666 54695]))          
      :file "pytypes.h"
      :pointmax 56699
      :fsize 56698
      :lastmodtime '(23741 18204 925157 620000)
      :unmatched-syntax '((semantic-list 56678 . 56698) (symbol 56665 . 56678) (semantic-list 56656 . 56664) (symbol 56643 . 56656) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_InPlaceRshift" 56544 . 56566) ("op" OPERATOR "operator" 56531 . 56539)))) 56501 . 56567) (CONST "const" 56501 . 56567) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_InPlaceRshift" 56544 . 56566) ("op" OPERATOR "operator" 56531 . 56539)))) 56501 . 56567) (OPERATOR "operator" 56501 . 56567) (punctuation ":" 56501 . 56567) (punctuation ":" 56501 . 56567) (punctuation ">" 56501 . 56567) (symbol "D" 56501 . 56567) (punctuation "<" 56501 . 56567) (symbol "object_api" 56501 . 56567) (symbol "object" 56501 . 56567) (punctuation ">" 56501 . 56567) (symbol "D" 56501 . 56567) (TYPENAME "typename" 56501 . 56567) (punctuation "<" 56501 . 56567) (TEMPLATE "template" 56501 . 56567) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_Rshift" 56484 . 56499) ("op" OPERATOR "operator" 56471 . 56479)))) 56441 . 56500) (CONST "const" 56441 . 56500) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_Rshift" 56484 . 56499) ("op" OPERATOR "operator" 56471 . 56479)))) 56441 . 56500) (OPERATOR "operator" 56441 . 56500) (punctuation ":" 56441 . 56500) (punctuation ":" 56441 . 56500) (punctuation ">" 56441 . 56500) (symbol "D" 56441 . 56500) (punctuation "<" 56441 . 56500) (symbol "object_api" 56441 . 56500) (symbol "object" 56441 . 56500) (punctuation ">" 56441 . 56500) (symbol "D" 56441 . 56500) (TYPENAME "typename" 56441 . 56500) (punctuation "<" 56441 . 56500) (TEMPLATE "template" 56441 . 56500) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_InPlaceLshift" 56417 . 56439) ("op" OPERATOR "operator" 56404 . 56412)))) 56374 . 56440) (CONST "const" 56374 . 56440) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_InPlaceLshift" 56417 . 56439) ("op" OPERATOR "operator" 56404 . 56412)))) 56374 . 56440) (OPERATOR "operator" 56374 . 56440) (punctuation ":" 56374 . 56440) (punctuation ":" 56374 . 56440) (punctuation ">" 56374 . 56440) (symbol "D" 56374 . 56440) (punctuation "<" 56374 . 56440) (symbol "object_api" 56374 . 56440) (symbol "object" 56374 . 56440) (punctuation ">" 56374 . 56440) (symbol "D" 56374 . 56440) (TYPENAME "typename" 56374 . 56440) (punctuation "<" 56374 . 56440) (TEMPLATE "template" 56374 . 56440) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_Lshift" 56357 . 56372) ("op" OPERATOR "operator" 56344 . 56352)))) 56314 . 56373) (CONST "const" 56314 . 56373) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_Lshift" 56357 . 56372) ("op" OPERATOR "operator" 56344 . 56352)))) 56314 . 56373) (OPERATOR "operator" 56314 . 56373) (punctuation ":" 56314 . 56373) (punctuation ":" 56314 . 56373) (punctuation ">" 56314 . 56373) (symbol "D" 56314 . 56373) (punctuation "<" 56314 . 56373) (symbol "object_api" 56314 . 56373) (symbol "object" 56314 . 56373) (punctuation ">" 56314 . 56373) (symbol "D" 56314 . 56373) (TYPENAME "typename" 56314 . 56373) (punctuation "<" 56314 . 56373) (TEMPLATE "template" 56314 . 56373) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_InPlaceXor" 56293 . 56312) ("op" OPERATOR "operator" 56280 . 56288)))) 56250 . 56313) (CONST "const" 56250 . 56313) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_InPlaceXor" 56293 . 56312) ("op" OPERATOR "operator" 56280 . 56288)))) 56250 . 56313) (OPERATOR "operator" 56250 . 56313) (punctuation ":" 56250 . 56313) (punctuation ":" 56250 . 56313) (punctuation ">" 56250 . 56313) (symbol "D" 56250 . 56313) (punctuation "<" 56250 . 56313) (symbol "object_api" 56250 . 56313) (symbol "object" 56250 . 56313) (punctuation ">" 56250 . 56313) (symbol "D" 56250 . 56313) (TYPENAME "typename" 56250 . 56313) (punctuation "<" 56250 . 56313) (TEMPLATE "template" 56250 . 56313) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_Xor" 56236 . 56248) ("op" OPERATOR "operator" 56223 . 56231)))) 56193 . 56249) (CONST "const" 56193 . 56249) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_Xor" 56236 . 56248) ("op" OPERATOR "operator" 56223 . 56231)))) 56193 . 56249) (OPERATOR "operator" 56193 . 56249) (punctuation ":" 56193 . 56249) (punctuation ":" 56193 . 56249) (punctuation ">" 56193 . 56249) (symbol "D" 56193 . 56249) (punctuation "<" 56193 . 56249) (symbol "object_api" 56193 . 56249) (symbol "object" 56193 . 56249) (punctuation ">" 56193 . 56249) (symbol "D" 56193 . 56249) (TYPENAME "typename" 56193 . 56249) (punctuation "<" 56193 . 56249) (TEMPLATE "template" 56193 . 56249) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_InPlaceAnd" 56172 . 56191) ("op" OPERATOR "operator" 56159 . 56167)))) 56129 . 56192) (CONST "const" 56129 . 56192) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_InPlaceAnd" 56172 . 56191) ("op" OPERATOR "operator" 56159 . 56167)))) 56129 . 56192) (OPERATOR "operator" 56129 . 56192) (punctuation ":" 56129 . 56192) (punctuation ":" 56129 . 56192) (punctuation ">" 56129 . 56192) (symbol "D" 56129 . 56192) (punctuation "<" 56129 . 56192) (symbol "object_api" 56129 . 56192) (symbol "object" 56129 . 56192) (punctuation ">" 56129 . 56192) (symbol "D" 56129 . 56192) (TYPENAME "typename" 56129 . 56192) (punctuation "<" 56129 . 56192) (TEMPLATE "template" 56129 . 56192) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_And" 56115 . 56127) ("op" OPERATOR "operator" 56102 . 56110)))) 56072 . 56128) (CONST "const" 56072 . 56128) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_And" 56115 . 56127) ("op" OPERATOR "operator" 56102 . 56110)))) 56072 . 56128) (OPERATOR "operator" 56072 . 56128) (punctuation ":" 56072 . 56128) (punctuation ":" 56072 . 56128) (punctuation ">" 56072 . 56128) (symbol "D" 56072 . 56128) (punctuation "<" 56072 . 56128) (symbol "object_api" 56072 . 56128) (symbol "object" 56072 . 56128) (punctuation ">" 56072 . 56128) (symbol "D" 56072 . 56128) (TYPENAME "typename" 56072 . 56128) (punctuation "<" 56072 . 56128) (TEMPLATE "template" 56072 . 56128) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_InPlaceOr" 56052 . 56070) ("op" OPERATOR "operator" 56039 . 56047)))) 56009 . 56071) (CONST "const" 56009 . 56071) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_InPlaceOr" 56052 . 56070) ("op" OPERATOR "operator" 56039 . 56047)))) 56009 . 56071) (OPERATOR "operator" 56009 . 56071) (punctuation ":" 56009 . 56071) (punctuation ":" 56009 . 56071) (punctuation ">" 56009 . 56071) (symbol "D" 56009 . 56071) (punctuation "<" 56009 . 56071) (symbol "object_api" 56009 . 56071) (symbol "object" 56009 . 56071) (punctuation ">" 56009 . 56071) (symbol "D" 56009 . 56071) (TYPENAME "typename" 56009 . 56071) (punctuation "<" 56009 . 56071) (TEMPLATE "template" 56009 . 56071) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_Or" 55996 . 56007) ("op" OPERATOR "operator" 55983 . 55991)))) 55953 . 56008) (CONST "const" 55953 . 56008) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_Or" 55996 . 56007) ("op" OPERATOR "operator" 55983 . 55991)))) 55953 . 56008) (OPERATOR "operator" 55953 . 56008) (punctuation ":" 55953 . 56008) (punctuation ":" 55953 . 56008) (punctuation ">" 55953 . 56008) (symbol "D" 55953 . 56008) (punctuation "<" 55953 . 56008) (symbol "object_api" 55953 . 56008) (symbol "object" 55953 . 56008) (punctuation ">" 55953 . 56008) (symbol "D" 55953 . 56008) (TYPENAME "typename" 55953 . 56008) (punctuation "<" 55953 . 56008) (TEMPLATE "template" 55953 . 56008) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_InPlaceTrueDivide" 55925 . 55951) ("op" OPERATOR "operator" 55912 . 55920)))) 55882 . 55952) (CONST "const" 55882 . 55952) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_InPlaceTrueDivide" 55925 . 55951) ("op" OPERATOR "operator" 55912 . 55920)))) 55882 . 55952) (OPERATOR "operator" 55882 . 55952) (punctuation ":" 55882 . 55952) (punctuation ":" 55882 . 55952) (punctuation ">" 55882 . 55952) (symbol "D" 55882 . 55952) (punctuation "<" 55882 . 55952) (symbol "object_api" 55882 . 55952) (symbol "object" 55882 . 55952) (punctuation ">" 55882 . 55952) (symbol "D" 55882 . 55952) (TYPENAME "typename" 55882 . 55952) (punctuation "<" 55882 . 55952) (TEMPLATE "template" 55882 . 55952) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_TrueDivide" 55861 . 55880) ("op" OPERATOR "operator" 55848 . 55856)))) 55818 . 55881) (CONST "const" 55818 . 55881) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_TrueDivide" 55861 . 55880) ("op" OPERATOR "operator" 55848 . 55856)))) 55818 . 55881) (OPERATOR "operator" 55818 . 55881) (punctuation ":" 55818 . 55881) (punctuation ":" 55818 . 55881) (punctuation ">" 55818 . 55881) (symbol "D" 55818 . 55881) (punctuation "<" 55818 . 55881) (symbol "object_api" 55818 . 55881) (symbol "object" 55818 . 55881) (punctuation ">" 55818 . 55881) (symbol "D" 55818 . 55881) (TYPENAME "typename" 55818 . 55881) (punctuation "<" 55818 . 55881) (TEMPLATE "template" 55818 . 55881) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_InPlaceMultiply" 55792 . 55816) ("op" OPERATOR "operator" 55779 . 55787)))) 55749 . 55817) (CONST "const" 55749 . 55817) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_InPlaceMultiply" 55792 . 55816) ("op" OPERATOR "operator" 55779 . 55787)))) 55749 . 55817) (OPERATOR "operator" 55749 . 55817) (punctuation ":" 55749 . 55817) (punctuation ":" 55749 . 55817) (punctuation ">" 55749 . 55817) (symbol "D" 55749 . 55817) (punctuation "<" 55749 . 55817) (symbol "object_api" 55749 . 55817) (symbol "object" 55749 . 55817) (punctuation ">" 55749 . 55817) (symbol "D" 55749 . 55817) (TYPENAME "typename" 55749 . 55817) (punctuation "<" 55749 . 55817) (TEMPLATE "template" 55749 . 55817) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_Multiply" 55730 . 55747) ("op" OPERATOR "operator" 55717 . 55725)))) 55687 . 55748) (CONST "const" 55687 . 55748) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_Multiply" 55730 . 55747) ("op" OPERATOR "operator" 55717 . 55725)))) 55687 . 55748) (OPERATOR "operator" 55687 . 55748) (punctuation ":" 55687 . 55748) (punctuation ":" 55687 . 55748) (punctuation ">" 55687 . 55748) (symbol "D" 55687 . 55748) (punctuation "<" 55687 . 55748) (symbol "object_api" 55687 . 55748) (symbol "object" 55687 . 55748) (punctuation ">" 55687 . 55748) (symbol "D" 55687 . 55748) (TYPENAME "typename" 55687 . 55748) (punctuation "<" 55687 . 55748) (TEMPLATE "template" 55687 . 55748) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_InPlaceSubtract" 55661 . 55685) ("op" OPERATOR "operator" 55648 . 55656)))) 55618 . 55686) (CONST "const" 55618 . 55686) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_InPlaceSubtract" 55661 . 55685) ("op" OPERATOR "operator" 55648 . 55656)))) 55618 . 55686) (OPERATOR "operator" 55618 . 55686) (punctuation ":" 55618 . 55686) (punctuation ":" 55618 . 55686) (punctuation ">" 55618 . 55686) (symbol "D" 55618 . 55686) (punctuation "<" 55618 . 55686) (symbol "object_api" 55618 . 55686) (symbol "object" 55618 . 55686) (punctuation ">" 55618 . 55686) (symbol "D" 55618 . 55686) (TYPENAME "typename" 55618 . 55686) (punctuation "<" 55618 . 55686) (TEMPLATE "template" 55618 . 55686) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_Subtract" 55599 . 55616) ("op" OPERATOR "operator" 55586 . 55594)))) 55556 . 55617) (CONST "const" 55556 . 55617) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_Subtract" 55599 . 55616) ("op" OPERATOR "operator" 55586 . 55594)))) 55556 . 55617) (OPERATOR "operator" 55556 . 55617) (punctuation ":" 55556 . 55617) (punctuation ":" 55556 . 55617) (punctuation ">" 55556 . 55617) (symbol "D" 55556 . 55617) (punctuation "<" 55556 . 55617) (symbol "object_api" 55556 . 55617) (symbol "object" 55556 . 55617) (punctuation ">" 55556 . 55617) (symbol "D" 55556 . 55617) (TYPENAME "typename" 55556 . 55617) (punctuation "<" 55556 . 55617) (TEMPLATE "template" 55556 . 55617) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_InPlaceAdd" 55535 . 55554) ("op" OPERATOR "operator" 55522 . 55530)))) 55492 . 55555) (CONST "const" 55492 . 55555) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_InPlaceAdd" 55535 . 55554) ("op" OPERATOR "operator" 55522 . 55530)))) 55492 . 55555) (OPERATOR "operator" 55492 . 55555) (punctuation ":" 55492 . 55555) (punctuation ":" 55492 . 55555) (punctuation ">" 55492 . 55555) (symbol "D" 55492 . 55555) (punctuation "<" 55492 . 55555) (symbol "object_api" 55492 . 55555) (symbol "object" 55492 . 55555) (punctuation ">" 55492 . 55555) (symbol "D" 55492 . 55555) (TYPENAME "typename" 55492 . 55555) (punctuation "<" 55492 . 55555) (TEMPLATE "template" 55492 . 55555) (semantic-list #("{                  \\
        object result = reinterpret_steal<object>(                             \\
            fn(derived().ptr(), other.derived().ptr()));                       \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_Add" 55478 . 55490) ("op" OPERATOR "operator" 55465 . 55473)))) 55435 . 55491) (CONST "const" 55435 . 55491) (semantic-list #("(object_api const &other)" 0 1 (macros (("fn" symbol "PyNumber_Add" 55478 . 55490) ("op" OPERATOR "operator" 55465 . 55473)))) 55435 . 55491) (OPERATOR "operator" 55435 . 55491) (punctuation ":" 55435 . 55491) (punctuation ":" 55435 . 55491) (punctuation ">" 55435 . 55491) (symbol "D" 55435 . 55491) (punctuation "<" 55435 . 55491) (symbol "object_api" 55435 . 55491) (symbol "object" 55435 . 55491) (punctuation ">" 55435 . 55491) (symbol "D" 55435 . 55491) (TYPENAME "typename" 55435 . 55491) (punctuation "<" 55435 . 55491) (TEMPLATE "template" 55435 . 55491) (semantic-list #("{                   \\
        object result = reinterpret_steal<object>(fn(derived().ptr()));        \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_Negative" 55416 . 55433) ("op" OPERATOR "operator" 55403 . 55411)))) 55373 . 55434) (CONST "const" 55373 . 55434) (semantic-list #("()" 0 1 (macros (("fn" symbol "PyNumber_Negative" 55416 . 55433) ("op" OPERATOR "operator" 55403 . 55411)))) 55373 . 55434) (OPERATOR "operator" 55373 . 55434) (punctuation ":" 55373 . 55434) (punctuation ":" 55373 . 55434) (punctuation ">" 55373 . 55434) (symbol "D" 55373 . 55434) (punctuation "<" 55373 . 55434) (symbol "object_api" 55373 . 55434) (symbol "object" 55373 . 55434) (punctuation ">" 55373 . 55434) (symbol "D" 55373 . 55434) (TYPENAME "typename" 55373 . 55434) (punctuation "<" 55373 . 55434) (TEMPLATE "template" 55373 . 55434) (semantic-list #("{                   \\
        object result = reinterpret_steal<object>(fn(derived().ptr()));        \\
        if (!result.ptr())                                                     \\
            throw error_already_set();                                         \\
        return result;                                                         \\
    }" 0 1 (macros (("fn" symbol "PyNumber_Invert" 55356 . 55371) ("op" OPERATOR "operator" 55343 . 55351)))) 55313 . 55372) (CONST "const" 55313 . 55372) (semantic-list #("()" 0 1 (macros (("fn" symbol "PyNumber_Invert" 55356 . 55371) ("op" OPERATOR "operator" 55343 . 55351)))) 55313 . 55372) (OPERATOR "operator" 55313 . 55372) (punctuation ":" 55313 . 55372) (punctuation ":" 55313 . 55372) (punctuation ">" 55313 . 55372) (symbol "D" 55313 . 55372) (punctuation "<" 55313 . 55372) (symbol "object_api" 55313 . 55372) (symbol "object" 55313 . 55372) (punctuation ">" 55313 . 55372) (symbol "D" 55313 . 55372) (TYPENAME "typename" 55313 . 55372) (punctuation "<" 55313 . 55372) (TEMPLATE "template" 55313 . 55372) (punctuation 53499 . 53500) (punctuation 53443 . 53444) (symbol 53442 . 53443) (TYPENAME 53433 . 53441) (punctuation 53432 . 53433) (TEMPLATE 53423 . 53431) (semantic-list 52596 . 52604) (symbol 52581 . 52596) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyMemoryView_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "memoryview" 1 . 5)))) 51657 . 51741) (symbol "PYBIND11_DEPRECATED" 51657 . 51741) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyMemoryView_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "memoryview" 1 . 5)))) 51657 . 51741) (symbol "PYBIND11_DEPRECATED" 51657 . 51741) (EXPLICIT 50660 . 50668) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyObject_CheckBuffer" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "buffer" 1 . 5)))) 50184 . 50245) (symbol "PYBIND11_DEPRECATED" 50184 . 50245) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyObject_CheckBuffer" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "buffer" 1 . 5)))) 50184 . 50245) (symbol "PYBIND11_DEPRECATED" 50184 . 50245) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyCallable_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "function" 1 . 5)))) 49822 . 49881) (symbol "PYBIND11_DEPRECATED" 49822 . 49881) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyCallable_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "function" 1 . 5)))) 49822 . 49881) (symbol "PYBIND11_DEPRECATED" 49822 . 49881) (punctuation 49616 . 49617) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PySet_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "set" 1 . 5)))) 49330 . 49386) (symbol "PYBIND11_DEPRECATED" 49330 . 49386) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PySet_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "set" 1 . 5)))) 49330 . 49386) (symbol "PYBIND11_DEPRECATED" 49330 . 49386) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyDict_Check" 15 . 23) ("Parent" symbol "dict" 7 . 13) ("Name" symbol "kwargs" 1 . 5)))) 49233 . 49284) (symbol "PYBIND11_DEPRECATED" 49233 . 49284) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyDict_Check" 15 . 23) ("Parent" symbol "dict" 7 . 13) ("Name" symbol "kwargs" 1 . 5)))) 49233 . 49284) (symbol "PYBIND11_DEPRECATED" 49233 . 49284) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyTuple_Check" 15 . 23) ("Parent" symbol "tuple" 7 . 13) ("Name" symbol "args" 1 . 5)))) 49149 . 49200) (symbol "PYBIND11_DEPRECATED" 49149 . 49200) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyTuple_Check" 15 . 23) ("Parent" symbol "tuple" 7 . 13) ("Name" symbol "args" 1 . 5)))) 49149 . 49200) (symbol "PYBIND11_DEPRECATED" 49149 . 49200) (punctuation 49015 . 49016) (EXPLICIT 48436 . 48444) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyList_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "list" 1 . 5)))) 48367 . 48431) (symbol "PYBIND11_DEPRECATED" 48367 . 48431) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyList_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "list" 1 . 5)))) 48367 . 48431) (symbol "PYBIND11_DEPRECATED" 48367 . 48431) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PySequence_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "sequence" 1 . 5)))) 47866 . 47925) (symbol "PYBIND11_DEPRECATED" 47866 . 47925) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PySequence_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "sequence" 1 . 5)))) 47866 . 47925) (symbol "PYBIND11_DEPRECATED" 47866 . 47925) (punctuation 47033 . 47034) (punctuation 47032 . 47033) (punctuation 47031 . 47032) (punctuation 47030 . 47031) (EXPLICIT 47010 . 47018) (punctuation 47004 . 47005) (punctuation 47003 . 47004) (punctuation 47002 . 47003) (punctuation 47001 . 47002) (punctuation 47000 . 47001) (symbol 46996 . 47000) (punctuation 46994 . 46995) (punctuation 46993 . 46994) (punctuation 46992 . 46993) (symbol 46973 . 46992) (punctuation 46972 . 46973) (punctuation 46971 . 46972) (symbol 46965 . 46971) (punctuation 46964 . 46965) (symbol 46954 . 46964) (punctuation 46953 . 46954) (punctuation 46952 . 46953) (symbol 46946 . 46952) (punctuation 46944 . 46945) (symbol 46934 . 46943) (TYPENAME 46925 . 46933) (punctuation 46808 . 46809) (punctuation 46807 . 46808) (symbol 46802 . 46807) (punctuation 46801 . 46802) (punctuation 46800 . 46801) (punctuation 46799 . 46800) (punctuation 46798 . 46799) (punctuation 46797 . 46798) (punctuation 46796 . 46797) (punctuation 46795 . 46796) (symbol 46791 . 46795) (punctuation 46790 . 46791) (symbol 46774 . 46790) (punctuation 46773 . 46774) (punctuation 46772 . 46773) (symbol 46766 . 46772) (punctuation 46765 . 46766) (symbol 46759 . 46765) (punctuation 46758 . 46759) (punctuation 46757 . 46758) (symbol 46751 . 46757) (punctuation 46750 . 46751) (symbol 46739 . 46750) (punctuation 46738 . 46739) (punctuation 46737 . 46738) (symbol 46731 . 46737) (punctuation 46729 . 46730) (TYPENAME 46720 . 46728) (punctuation 46704 . 46705) (symbol 46700 . 46704) (punctuation 46698 . 46699) (punctuation 46697 . 46698) (punctuation 46696 . 46697) (TYPENAME 46688 . 46696) (punctuation 46687 . 46688) (TEMPLATE 46678 . 46686) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyDict_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "dict" 1 . 5)))) 46492 . 46549) (symbol "PYBIND11_DEPRECATED" 46492 . 46549) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyDict_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "dict" 1 . 5)))) 46492 . 46549) (symbol "PYBIND11_DEPRECATED" 46492 . 46549) (EXPLICIT 45901 . 45909) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyTuple_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "tuple" 1 . 5)))) 45829 . 45896) (symbol "PYBIND11_DEPRECATED" 45829 . 45896) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyTuple_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "tuple" 1 . 5)))) 45829 . 45896) (symbol "PYBIND11_DEPRECATED" 45829 . 45896) (semantic-list 45502 . 45715) (CONST 45496 . 45501) (semantic-list 45493 . 45495) (punctuation 45492 . 45493) (symbol 45490 . 45491) (OPERATOR 45481 . 45489) (punctuation 45479 . 45480) (symbol 45478 . 45479) (TYPENAME 45469 . 45477) (punctuation 45468 . 45469) (TEMPLATE 45459 . 45467) (semantic-list 44234 . 44297) (symbol 44215 . 44234) (string 44235 . 44296) (EXPLICIT 43922 . 43930) (semantic-list 43722 . 43791) (symbol 43703 . 43722) (string 43723 . 43790) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyCapsule_CheckExact" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "capsule" 1 . 5)))) 43636 . 43698) (symbol "PYBIND11_DEPRECATED" 43636 . 43698) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyCapsule_CheckExact" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "capsule" 1 . 5)))) 43636 . 43698) (symbol "PYBIND11_DEPRECATED" 43636 . 43698) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PySlice_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "slice" 1 . 5)))) 42871 . 42924) (symbol "PYBIND11_DEPRECATED" 42871 . 42924) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PySlice_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "slice" 1 . 5)))) 42871 . 42924) (symbol "PYBIND11_DEPRECATED" 42871 . 42924) (EXPLICIT 42619 . 42627) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyWeakref_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "weakref" 1 . 5)))) 42557 . 42614) (symbol "PYBIND11_DEPRECATED" 42557 . 42614) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyWeakref_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "weakref" 1 . 5)))) 42557 . 42614) (symbol "PYBIND11_DEPRECATED" 42557 . 42614) (semantic-list 42464 . 42508) (CONST 42458 . 42463) (semantic-list 42455 . 42457) (DOUBLE 42449 . 42455) (OPERATOR 42440 . 42448) (semantic-list 42392 . 42435) (CONST 42386 . 42391) (semantic-list 42383 . 42385) (FLOAT 42378 . 42383) (OPERATOR 42369 . 42377) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyFloat_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "float_" 1 . 5)))) 41920 . 41986) (symbol "PYBIND11_DEPRECATED" 41920 . 41986) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyFloat_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "float_" 1 . 5)))) 41920 . 41986) (symbol "PYBIND11_DEPRECATED" 41920 . 41986) (OPERATOR 41625 . 41633) (punctuation 41619 . 41620) (number 41618 . 41619) (punctuation 41616 . 41617) (punctuation 41614 . 41615) (INT 41611 . 41614) (punctuation 41609 . 41610) (symbol 41604 . 41609) (punctuation 41603 . 41604) (punctuation 41602 . 41603) (punctuation 41601 . 41602) (symbol 41600 . 41601) (punctuation 41599 . 41600) (symbol 41588 . 41599) (punctuation 41587 . 41588) (punctuation 41586 . 41587) (symbol 41583 . 41586) (punctuation 41582 . 41583) (symbol 41571 . 41582) (punctuation 41570 . 41571) (punctuation 41569 . 41570) (symbol 41563 . 41569) (punctuation 41547 . 41548) (symbol 41546 . 41547) (TYPENAME 41537 . 41545) (punctuation 41536 . 41537) (TEMPLATE 41527 . 41535) (punctuation 40967 . 40968) (number 40966 . 40967) (punctuation 40964 . 40965) (punctuation 40962 . 40963) (INT 40959 . 40962) (punctuation 40957 . 40958) (symbol 40952 . 40957) (punctuation 40951 . 40952) (punctuation 40950 . 40951) (punctuation 40949 . 40950) (symbol 40948 . 40949) (punctuation 40947 . 40948) (symbol 40936 . 40947) (punctuation 40935 . 40936) (punctuation 40934 . 40935) (symbol 40931 . 40934) (punctuation 40930 . 40931) (symbol 40919 . 40930) (punctuation 40918 . 40919) (punctuation 40917 . 40918) (symbol 40911 . 40917) (punctuation 40895 . 40896) (symbol 40894 . 40895) (TYPENAME 40885 . 40893) (punctuation 40884 . 40885) (TEMPLATE 40875 . 40883) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list 40636 . 40644) (symbol 40623 . 40636) (OPERATOR 41625 . 41633) (punctuation 41619 . 41620) (number 41618 . 41619) (punctuation 41616 . 41617) (punctuation 41614 . 41615) (INT 41611 . 41614) (punctuation 41609 . 41610) (symbol 41604 . 41609) (punctuation 41603 . 41604) (punctuation 41602 . 41603) (punctuation 41601 . 41602) (symbol 41600 . 41601) (punctuation 41599 . 41600) (symbol 41588 . 41599) (punctuation 41587 . 41588) (punctuation 41586 . 41587) (symbol 41583 . 41586) (punctuation 41582 . 41583) (symbol 41571 . 41582) (punctuation 41570 . 41571) (punctuation 41569 . 41570) (symbol 41563 . 41569) (punctuation 41547 . 41548) (symbol 41546 . 41547) (TYPENAME 41537 . 41545) (punctuation 41536 . 41537) (TEMPLATE 41527 . 41535) (punctuation 40967 . 40968) (number 40966 . 40967) (punctuation 40964 . 40965) (punctuation 40962 . 40963) (INT 40959 . 40962) (punctuation 40957 . 40958) (symbol 40952 . 40957) (punctuation 40951 . 40952) (punctuation 40950 . 40951) (punctuation 40949 . 40950) (symbol 40948 . 40949) (punctuation 40947 . 40948) (symbol 40936 . 40947) (punctuation 40935 . 40936) (punctuation 40934 . 40935) (symbol 40931 . 40934) (punctuation 40930 . 40931) (symbol 40919 . 40930) (punctuation 40918 . 40919) (punctuation 40917 . 40918) (symbol 40911 . 40917) (punctuation 40895 . 40896) (symbol 40894 . 40895) (TYPENAME 40885 . 40893) (punctuation 40884 . 40885) (TEMPLATE 40875 . 40883) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (OPERATOR 41625 . 41633) (punctuation 41619 . 41620) (number 41618 . 41619) (punctuation 41616 . 41617) (punctuation 41614 . 41615) (INT 41611 . 41614) (punctuation 41609 . 41610) (symbol 41604 . 41609) (punctuation 41603 . 41604) (punctuation 41602 . 41603) (punctuation 41601 . 41602) (symbol 41600 . 41601) (punctuation 41599 . 41600) (symbol 41588 . 41599) (punctuation 41587 . 41588) (punctuation 41586 . 41587) (symbol 41583 . 41586) (punctuation 41582 . 41583) (symbol 41571 . 41582) (punctuation 41570 . 41571) (punctuation 41569 . 41570) (symbol 41563 . 41569) (punctuation 41547 . 41548) (symbol 41546 . 41547) (TYPENAME 41537 . 41545) (punctuation 41536 . 41537) (TEMPLATE 41527 . 41535) (punctuation 40967 . 40968) (number 40966 . 40967) (punctuation 40964 . 40965) (punctuation 40962 . 40963) (INT 40959 . 40962) (punctuation 40957 . 40958) (symbol 40952 . 40957) (punctuation 40951 . 40952) (punctuation 40950 . 40951) (punctuation 40949 . 40950) (symbol 40948 . 40949) (punctuation 40947 . 40948) (symbol 40936 . 40947) (punctuation 40935 . 40936) (punctuation 40934 . 40935) (symbol 40931 . 40934) (punctuation 40930 . 40931) (symbol 40919 . 40930) (punctuation 40918 . 40919) (punctuation 40917 . 40918) (symbol 40911 . 40917) (punctuation 40895 . 40896) (symbol 40894 . 40895) (TYPENAME 40885 . 40893) (punctuation 40884 . 40885) (TEMPLATE 40875 . 40883) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list 39725 . 39733) (symbol 39710 . 39725) (semantic-list 39363 . 39409) (CONST 39357 . 39362) (semantic-list 39354 . 39356) (BOOL 39350 . 39354) (OPERATOR 39341 . 39349) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyBool_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bool_" 1 . 5)))) 39099 . 39157) (symbol "PYBIND11_DEPRECATED" 39099 . 39157) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyBool_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bool_" 1 . 5)))) 39099 . 39157) (symbol "PYBIND11_DEPRECATED" 39099 . 39157) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "none" 1 . 5)))) 38757 . 38808) (symbol "PYBIND11_DEPRECATED" 38757 . 38808) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "none" 1 . 5)))) 38757 . 38808) (symbol "PYBIND11_DEPRECATED" 38757 . 38808) (OPERATOR 37355 . 37363) (EXPLICIT 37310 . 37318) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_BYTES_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bytes" 1 . 5)))) 36752 . 36804) (symbol "PYBIND11_DEPRECATED" 36752 . 36804) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_BYTES_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bytes" 1 . 5)))) 36752 . 36804) (symbol "PYBIND11_DEPRECATED" 36752 . 36804) (string 36620 . 36622) (OPERATOR 36612 . 36620) (symbol 36608 . 36611) (INLINE 36601 . 36607) (INLINE 36516 . 36522) (punctuation 35966 . 35967) (punctuation 35965 . 35966) (punctuation 35964 . 35965) (punctuation 35963 . 35964) (punctuation 35940 . 35941) (symbol 35936 . 35940) (punctuation 35934 . 35935) (punctuation 35933 . 35934) (punctuation 35932 . 35933) (TYPENAME 35924 . 35932) (punctuation 35923 . 35924) (TEMPLATE 35914 . 35922) (OPERATOR 35353 . 35361) (EXPLICIT 35282 . 35290) (EXPLICIT 35102 . 35110) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "str" 1 . 5)))) 34466 . 34543) (symbol "PYBIND11_DEPRECATED" 34466 . 34543) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "str" 1 . 5)))) 34466 . 34543) (symbol "PYBIND11_DEPRECATED" 34466 . 34543) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterable" 1 . 5)))) 34340 . 34407) (symbol "PYBIND11_DEPRECATED" 34340 . 34407) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterable" 1 . 5)))) 34340 . 34407) (symbol "PYBIND11_DEPRECATED" 34340 . 34407) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyIter_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterator" 1 . 5)))) 32958 . 33013) (symbol "PYBIND11_DEPRECATED" 32958 . 33013) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyIter_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterator" 1 . 5)))) 32958 . 33013) (symbol "PYBIND11_DEPRECATED" 32958 . 33013) (punctuation 32951 . 32952) (punctuation 32950 . 32951) (symbol 32943 . 32949) (CONST 32937 . 32942) (punctuation 32935 . 32936) (symbol 32927 . 32934) (USING 32921 . 32926) (punctuation 32901 . 32902) (symbol 32891 . 32900) (USING 32885 . 32890) (USING 32854 . 32859) (USING 32817 . 32822) (punctuation 32786 . 32787) (symbol 32768 . 32785) (USING 32762 . 32767) (semantic-list 30308 . 30316) (symbol 30295 . 30308) (punctuation 30265 . 30266) (symbol 30246 . 30265) (punctuation 30245 . 30246) (punctuation 30244 . 30245) (symbol 30225 . 30244) (punctuation 30223 . 30224) (symbol 30216 . 30222) (symbol 30196 . 30215) (punctuation 30195 . 30196) (TEMPLATE 30186 . 30194) (punctuation 30160 . 30161) (symbol 30141 . 30160) (punctuation 30140 . 30141) (punctuation 30139 . 30140) (symbol 30120 . 30139) (punctuation 30118 . 30119) (symbol 30111 . 30117) (symbol 30091 . 30110) (punctuation 30090 . 30091) (TEMPLATE 30081 . 30089) (USING 29957 . 29962) (punctuation 29955 . 29956) (symbol 29954 . 29955) (TYPENAME 29945 . 29953) (punctuation 29944 . 29945) (TEMPLATE 29935 . 29943) (USING 29841 . 29846) (punctuation 29839 . 29840) (symbol 29838 . 29839) (TYPENAME 29829 . 29837) (punctuation 29828 . 29829) (TEMPLATE 29819 . 29827) (USING 29748 . 29753) (punctuation 29746 . 29747) (symbol 29745 . 29746) (TYPENAME 29736 . 29744) (punctuation 29735 . 29736) (TEMPLATE 29726 . 29734) (USING 29659 . 29664) (punctuation 29657 . 29658) (symbol 29656 . 29657) (TYPENAME 29647 . 29655) (punctuation 29646 . 29647) (TEMPLATE 29637 . 29645) (USING 29593 . 29598) (punctuation 29591 . 29592) (symbol 29590 . 29591) (TYPENAME 29581 . 29589) (punctuation 29580 . 29581) (TEMPLATE 29571 . 29579) (EXPLICIT 29401 . 29409) (EXPLICIT 29302 . 29310) (USING 28680 . 28685) (USING 28592 . 28597) (USING 28326 . 28331) (USING 28242 . 28247) (semantic-list 28194 . 28213) (symbol 28181 . 28194) (punctuation 27802 . 27803) (DEFAULT 27795 . 27802) (punctuation 27793 . 27794) (semantic-list 27790 . 27792) (symbol 27777 . 27790) (punctuation 27739 . 27740) (symbol 27731 . 27738) (USING 27725 . 27730) (punctuation 27701 . 27702) (symbol 27691 . 27700) (USING 27685 . 27690) (punctuation 27652 . 27653) (symbol 27641 . 27651) (USING 27635 . 27640) (punctuation 27602 . 27603) (symbol 27584 . 27601) (USING 27578 . 27583) (punctuation 26927 . 26928) (symbol 26919 . 26926) (USING 26913 . 26918) (USING 26872 . 26877) (USING 26841 . 26846) (punctuation 26802 . 26803) (symbol 26784 . 26801) (USING 26778 . 26783) (punctuation 26151 . 26152) (symbol 26143 . 26150) (USING 26137 . 26142) (punctuation 26117 . 26118) (symbol 26107 . 26116) (USING 26101 . 26106) (USING 26070 . 26075) (punctuation 26031 . 26032) (symbol 26013 . 26030) (USING 26007 . 26012) (punctuation 25783 . 25784) (semantic-list 25588 . 25607) (symbol 25573 . 25588) (punctuation 24069 . 24070) (DEFAULT 24062 . 24069) (punctuation 24060 . 24061) (semantic-list 24057 . 24059) (symbol 24041 . 24057) (punctuation 24008 . 24009) (symbol 24000 . 24007) (USING 23994 . 23999) (punctuation 23960 . 23961) (symbol 23950 . 23959) (USING 23944 . 23949) (punctuation 23909 . 23910) (symbol 23898 . 23908) (USING 23892 . 23897) (punctuation 23850 . 23851) (symbol 23832 . 23849) (USING 23826 . 23831) (USING 23789 . 23794) (USING 23747 . 23752) (semantic-list 23588 . 23607) (symbol 23575 . 23588) (USING 23035 . 23040) (USING 22473 . 22478) (USING 21903 . 21908) (USING 21459 . 21464) (punctuation 21257 . 21258) (punctuation 21256 . 21257) (CHAR 21251 . 21255) (CONST 21245 . 21250) (punctuation 21243 . 21244) (symbol 21234 . 21242) (USING 21228 . 21233) (USING 21017 . 21022) (semantic-list 20975 . 20994) (symbol 20960 . 20975) (USING 21017 . 21022) (USING 21017 . 21022) (OPERATOR 20573 . 20581) (OPERATOR 20434 . 20442) (EXPLICIT 20425 . 20433) (semantic-list 20349 . 20420) (symbol 20330 . 20349) (string 20350 . 20419) (punctuation 20324 . 20325) (symbol 20318 . 20324) (punctuation 20316 . 20317) (symbol 20314 . 20315) (TYPENAME 20305 . 20313) (punctuation 20304 . 20305) (TEMPLATE 20295 . 20303) (string 20350 . 20419) (semantic-list 20249 . 20290) (CONST 20243 . 20248) (semantic-list 20240 . 20242) (punctuation 20239 . 20240) (BOOL 20235 . 20239) (punctuation 20233 . 20234) (symbol 20228 . 20233) (punctuation 20227 . 20228) (punctuation 20226 . 20227) (punctuation 20225 . 20226) (symbol 20217 . 20225) (punctuation 20216 . 20217) (punctuation 20215 . 20216) (symbol 20198 . 20215) (punctuation 20196 . 20197) (symbol 20195 . 20196) (punctuation 20194 . 20195) (symbol 20187 . 20194) (punctuation 20186 . 20187) (punctuation 20185 . 20186) (symbol 20182 . 20185) (punctuation 20168 . 20169) (punctuation 20167 . 20168) (symbol 20161 . 20166) (punctuation 20160 . 20161) (punctuation 20159 . 20160) (punctuation 20158 . 20159) (symbol 20150 . 20158) (punctuation 20149 . 20150) (punctuation 20148 . 20149) (symbol 20131 . 20148) (punctuation 20129 . 20130) (symbol 20128 . 20129) (punctuation 20127 . 20128) (symbol 20120 . 20127) (punctuation 20119 . 20120) (punctuation 20118 . 20119) (symbol 20115 . 20118) (punctuation 20114 . 20115) (symbol 20103 . 20114) (OPERATOR 20094 . 20102) (EXPLICIT 20085 . 20093) (semantic-list 19994 . 20080) (symbol 19975 . 19994) (string 19995 . 20079) (punctuation 19969 . 19970) (symbol 19963 . 19969) (punctuation 19961 . 19962) (symbol 19959 . 19960) (TYPENAME 19950 . 19958) (punctuation 19949 . 19950) (TEMPLATE 19940 . 19948) (string 19995 . 20079) (semantic-list 19837 . 19934) (punctuation 19835 . 19836) (semantic-list 19823 . 19834) (punctuation 19822 . 19823) (OPERATOR 19814 . 19822) (punctuation 19827 . 19828) (VOID 19809 . 19813) (punctuation 19827 . 19828) (punctuation 19807 . 19808) (symbol 19806 . 19807) (TYPENAME 19797 . 19805) (punctuation 19796 . 19797) (TEMPLATE 19787 . 19795) (punctuation 19827 . 19828) (semantic-list 19704 . 19782) (punctuation 19702 . 19703) (punctuation 19701 . 19702) (semantic-list 19689 . 19700) (punctuation 19688 . 19689) (OPERATOR 19680 . 19688) (punctuation 19693 . 19694) (VOID 19675 . 19679) (punctuation 19693 . 19694) (punctuation 19673 . 19674) (symbol 19672 . 19673) (TYPENAME 19663 . 19671) (punctuation 19662 . 19663) (TEMPLATE 19653 . 19661) (punctuation 19693 . 19694) (semantic-list 19622 . 19647) (punctuation 19620 . 19621) (semantic-list 19600 . 19619) (punctuation 19599 . 19600) (OPERATOR 19591 . 19599) (VOID 19586 . 19590) (semantic-list 19539 . 19581) (punctuation 19537 . 19538) (punctuation 19536 . 19537) (semantic-list 19516 . 19535) (punctuation 19515 . 19516) (OPERATOR 19507 . 19515) (VOID 19502 . 19506) (punctuation 19335 . 19336) (DEFAULT 19328 . 19335) (punctuation 19326 . 19327) (semantic-list 19312 . 19325) (symbol 19304 . 19312) (punctuation 19323 . 19324) (punctuation 19298 . 19299) (DEFAULT 19291 . 19298) (punctuation 19289 . 19290) (semantic-list 19270 . 19288) (symbol 19262 . 19270) (punctuation 19145 . 19146) (symbol 19136 . 19144) (USING 19130 . 19135) (punctuation 18881 . 18882) (punctuation 18854 . 18855) (number 18853 . 18854) (punctuation 18851 . 18852) (punctuation 18849 . 18850) (INT 18846 . 18849) (punctuation 18844 . 18845) (symbol 18839 . 18844) (punctuation 18838 . 18839) (punctuation 18837 . 18838) (punctuation 18836 . 18837) (symbol 18835 . 18836) (punctuation 18834 . 18835) (symbol 18823 . 18834) (punctuation 18822 . 18823) (punctuation 18821 . 18822) (symbol 18810 . 18821) (punctuation 18808 . 18809) (symbol 18807 . 18808) (TYPENAME 18798 . 18806) (punctuation 18797 . 18798) (TEMPLATE 18788 . 18796) (semantic-list 18693 . 18696) (punctuation 18667 . 18668) (punctuation 18666 . 18667) (semantic-list 18658 . 18665) (symbol 18644 . 18658) (punctuation 18662 . 18663) (symbol 18639 . 18643) (punctuation 18662 . 18663) (punctuation 18637 . 18638) (number 18636 . 18637) (punctuation 18634 . 18635) (punctuation 18632 . 18633) (INT 18629 . 18632) (punctuation 18627 . 18628) (symbol 18622 . 18627) (punctuation 18621 . 18622) (punctuation 18620 . 18621) (punctuation 18619 . 18620) (symbol 18618 . 18619) (punctuation 18617 . 18618) (symbol 18606 . 18617) (punctuation 18605 . 18606) (symbol 18594 . 18605) (punctuation 18592 . 18593) (symbol 18591 . 18592) (TYPENAME 18582 . 18590) (punctuation 18581 . 18582) (TEMPLATE 18572 . 18580) (semantic-list 17957 . 17965) (symbol 17942 . 17957) (punctuation 15539 . 15540) (DELETE 15533 . 15539) (punctuation 15531 . 15532) (semantic-list 15518 . 15530) (punctuation 15517 . 15518) (symbol 15511 . 15517) (punctuation 15510 . 15511) (symbol 15500 . 15510) (BOOL 15495 . 15499) (INLINE 15488 . 15494) (punctuation 15486 . 15487) (punctuation 15485 . 15486) (TEMPLATE 15476 . 15484) (punctuation 15390 . 15391) (number 15389 . 15390) (punctuation 15387 . 15388) (punctuation 15385 . 15386) (INT 15382 . 15385) (punctuation 15380 . 15381) (symbol 15375 . 15380) (punctuation 15374 . 15375) (punctuation 15373 . 15374) (punctuation 15372 . 15373) (symbol 15371 . 15372) (punctuation 15369 . 15370) (symbol 15363 . 15369) (punctuation 15362 . 15363) (symbol 15352 . 15362) (punctuation 15351 . 15352) (punctuation 15350 . 15351) (symbol 15347 . 15350) (punctuation 15346 . 15347) (punctuation 15345 . 15346) (symbol 15334 . 15345) (punctuation 15333 . 15334) (punctuation 15332 . 15333) (symbol 15326 . 15332) (punctuation 15324 . 15325) (symbol 15323 . 15324) (TYPENAME 15314 . 15322) (punctuation 15313 . 15314) (TEMPLATE 15304 . 15312) (punctuation 15246 . 15247) (number 15245 . 15246) (punctuation 15243 . 15244) (punctuation 15241 . 15242) (INT 15238 . 15241) (punctuation 15236 . 15237) (symbol 15231 . 15236) (punctuation 15230 . 15231) (punctuation 15229 . 15230) (punctuation 15228 . 15229) (symbol 15227 . 15228) (punctuation 15225 . 15226) (symbol 15219 . 15225) (punctuation 15218 . 15219) (symbol 15208 . 15218) (punctuation 15207 . 15208) (punctuation 15206 . 15207) (symbol 15203 . 15206) (punctuation 15202 . 15203) (symbol 15191 . 15202) (punctuation 15190 . 15191) (punctuation 15189 . 15190) (symbol 15183 . 15189) (punctuation 15181 . 15182) (symbol 15180 . 15181) (TYPENAME 15171 . 15179) (punctuation 15170 . 15171) (TEMPLATE 15161 . 15169) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 13108 . 13116) (symbol 13095 . 13108) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 13051 . 13059) (symbol 13036 . 13051) (punctuation 11622 . 11623) (punctuation 11621 . 11622) (punctuation 11620 . 11621) (semantic-list 11617 . 11619) (symbol 11613 . 11617) (symbol 11611 . 11612) (punctuation 11609 . 11610) (symbol 11608 . 11609) (TYPENAME 11599 . 11607) (punctuation 11598 . 11599) (TEMPLATE 11589 . 11597) (punctuation 11509 . 11510) (punctuation 11508 . 11509) (CONST 11502 . 11507) (semantic-list 11499 . 11501) (symbol 11495 . 11499) (symbol 11493 . 11494) (punctuation 11491 . 11492) (symbol 11490 . 11491) (TYPENAME 11481 . 11489) (punctuation 11480 . 11481) (TEMPLATE 11471 . 11479) (semantic-list 11195 . 11392) (symbol 11186 . 11194) (semantic-list 11169 . 11185) (punctuation 11168 . 11169) (OPERATOR 11160 . 11168) (punctuation 11178 . 11179) (punctuation 11158 . 11159) (symbol 11152 . 11158) (punctuation 11178 . 11179) (semantic-list 10538 . 10585) (symbol 10529 . 10537) (semantic-list 10512 . 10528) (symbol 10506 . 10512) (punctuation 10521 . 10522) (semantic-list 10140 . 10207) (symbol 10121 . 10140) (string 10141 . 10206) (punctuation 10115 . 10116) (DEFAULT 10108 . 10115) (punctuation 10106 . 10107) (semantic-list 10103 . 10105) (symbol 10097 . 10103) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 7002 . 7010) (symbol 6989 . 7002) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 6510 . 6538) (symbol 6491 . 6510) (string 6511 . 6537) (punctuation 4598 . 4599) (punctuation 4597 . 4598) (punctuation 4596 . 4597) (punctuation 4595 . 4596) (semantic-list 4513 . 4569) (symbol 4494 . 4513) (string 4514 . 4568) (punctuation 4488 . 4489) (symbol 4484 . 4488) (punctuation 4482 . 4483) (punctuation 4481 . 4482) (punctuation 4480 . 4481) (TYPENAME 4472 . 4480) (punctuation 4470 . 4471) (symbol 4451 . 4470) (punctuation 4450 . 4451) (punctuation 4449 . 4450) (symbol 4430 . 4449) (punctuation 4428 . 4429) (symbol 4421 . 4427) (symbol 4401 . 4420) (punctuation 4400 . 4401) (TEMPLATE 4391 . 4399) (punctuation 4373 . 4374) (punctuation 4372 . 4373) (punctuation 4371 . 4372) (punctuation 4370 . 4371) (punctuation 4340 . 4341) (symbol 4336 . 4340) (punctuation 4334 . 4335) (punctuation 4333 . 4334) (punctuation 4332 . 4333) (TYPENAME 4324 . 4332) (punctuation 4322 . 4323) (symbol 4303 . 4322) (punctuation 4302 . 4303) (punctuation 4301 . 4302) (symbol 4282 . 4301) (punctuation 4280 . 4281) (symbol 4273 . 4279) (symbol 4253 . 4272) (punctuation 4252 . 4253) (TEMPLATE 4243 . 4251) (punctuation 3657 . 3658) (USING 1406 . 1411) (punctuation 1404 . 1405) (symbol 1403 . 1404) (TYPENAME 1394 . 1402) (punctuation 1393 . 1394) (TEMPLATE 1384 . 1392) (USING 1218 . 1223) (USING 1156 . 1161) (USING 1086 . 1091) (USING 1021 . 1026) (USING 956 . 961) (USING 891 . 896) (semantic-list 547 . 555) (symbol 532 . 547) (semantic-list 395 . 415) (symbol 380 . 395) (symbol 279 . 283) (symbol 272 . 278) (punctuation 271 . 272) (punctuation 49616 . 49617) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PySet_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "set" 1 . 5)))) 49330 . 49386) (symbol "PYBIND11_DEPRECATED" 49330 . 49386) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PySet_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "set" 1 . 5)))) 49330 . 49386) (symbol "PYBIND11_DEPRECATED" 49330 . 49386) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyDict_Check" 15 . 23) ("Parent" symbol "dict" 7 . 13) ("Name" symbol "kwargs" 1 . 5)))) 49233 . 49284) (symbol "PYBIND11_DEPRECATED" 49233 . 49284) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyDict_Check" 15 . 23) ("Parent" symbol "dict" 7 . 13) ("Name" symbol "kwargs" 1 . 5)))) 49233 . 49284) (symbol "PYBIND11_DEPRECATED" 49233 . 49284) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyTuple_Check" 15 . 23) ("Parent" symbol "tuple" 7 . 13) ("Name" symbol "args" 1 . 5)))) 49149 . 49200) (symbol "PYBIND11_DEPRECATED" 49149 . 49200) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyTuple_Check" 15 . 23) ("Parent" symbol "tuple" 7 . 13) ("Name" symbol "args" 1 . 5)))) 49149 . 49200) (symbol "PYBIND11_DEPRECATED" 49149 . 49200) (punctuation 49015 . 49016) (EXPLICIT 48436 . 48444) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyList_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "list" 1 . 5)))) 48367 . 48431) (symbol "PYBIND11_DEPRECATED" 48367 . 48431) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyList_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "list" 1 . 5)))) 48367 . 48431) (symbol "PYBIND11_DEPRECATED" 48367 . 48431) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PySequence_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "sequence" 1 . 5)))) 47866 . 47925) (symbol "PYBIND11_DEPRECATED" 47866 . 47925) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PySequence_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "sequence" 1 . 5)))) 47866 . 47925) (symbol "PYBIND11_DEPRECATED" 47866 . 47925) (punctuation 47033 . 47034) (punctuation 47032 . 47033) (punctuation 47031 . 47032) (punctuation 47030 . 47031) (EXPLICIT 47010 . 47018) (punctuation 47004 . 47005) (punctuation 47003 . 47004) (punctuation 47002 . 47003) (punctuation 47001 . 47002) (punctuation 47000 . 47001) (symbol 46996 . 47000) (punctuation 46994 . 46995) (punctuation 46993 . 46994) (punctuation 46992 . 46993) (symbol 46973 . 46992) (punctuation 46972 . 46973) (punctuation 46971 . 46972) (symbol 46965 . 46971) (punctuation 46964 . 46965) (symbol 46954 . 46964) (punctuation 46953 . 46954) (punctuation 46952 . 46953) (symbol 46946 . 46952) (punctuation 46944 . 46945) (symbol 46934 . 46943) (TYPENAME 46925 . 46933) (punctuation 46808 . 46809) (punctuation 46807 . 46808) (symbol 46802 . 46807) (punctuation 46801 . 46802) (punctuation 46800 . 46801) (punctuation 46799 . 46800) (punctuation 46798 . 46799) (punctuation 46797 . 46798) (punctuation 46796 . 46797) (punctuation 46795 . 46796) (symbol 46791 . 46795) (punctuation 46790 . 46791) (symbol 46774 . 46790) (punctuation 46773 . 46774) (punctuation 46772 . 46773) (symbol 46766 . 46772) (punctuation 46765 . 46766) (symbol 46759 . 46765) (punctuation 46758 . 46759) (punctuation 46757 . 46758) (symbol 46751 . 46757) (punctuation 46750 . 46751) (symbol 46739 . 46750) (punctuation 46738 . 46739) (punctuation 46737 . 46738) (symbol 46731 . 46737) (punctuation 46729 . 46730) (TYPENAME 46720 . 46728) (punctuation 46704 . 46705) (symbol 46700 . 46704) (punctuation 46698 . 46699) (punctuation 46697 . 46698) (punctuation 46696 . 46697) (TYPENAME 46688 . 46696) (punctuation 46687 . 46688) (TEMPLATE 46678 . 46686) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyDict_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "dict" 1 . 5)))) 46492 . 46549) (symbol "PYBIND11_DEPRECATED" 46492 . 46549) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyDict_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "dict" 1 . 5)))) 46492 . 46549) (symbol "PYBIND11_DEPRECATED" 46492 . 46549) (EXPLICIT 45901 . 45909) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyTuple_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "tuple" 1 . 5)))) 45829 . 45896) (symbol "PYBIND11_DEPRECATED" 45829 . 45896) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyTuple_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "tuple" 1 . 5)))) 45829 . 45896) (symbol "PYBIND11_DEPRECATED" 45829 . 45896) (semantic-list 45502 . 45715) (CONST 45496 . 45501) (semantic-list 45493 . 45495) (punctuation 45492 . 45493) (symbol 45490 . 45491) (OPERATOR 45481 . 45489) (punctuation 45479 . 45480) (symbol 45478 . 45479) (TYPENAME 45469 . 45477) (punctuation 45468 . 45469) (TEMPLATE 45459 . 45467) (semantic-list 44234 . 44297) (symbol 44215 . 44234) (string 44235 . 44296) (EXPLICIT 43922 . 43930) (semantic-list 43722 . 43791) (symbol 43703 . 43722) (string 43723 . 43790) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyCapsule_CheckExact" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "capsule" 1 . 5)))) 43636 . 43698) (symbol "PYBIND11_DEPRECATED" 43636 . 43698) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyCapsule_CheckExact" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "capsule" 1 . 5)))) 43636 . 43698) (symbol "PYBIND11_DEPRECATED" 43636 . 43698) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PySlice_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "slice" 1 . 5)))) 42871 . 42924) (symbol "PYBIND11_DEPRECATED" 42871 . 42924) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PySlice_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "slice" 1 . 5)))) 42871 . 42924) (symbol "PYBIND11_DEPRECATED" 42871 . 42924) (EXPLICIT 42619 . 42627) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyWeakref_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "weakref" 1 . 5)))) 42557 . 42614) (symbol "PYBIND11_DEPRECATED" 42557 . 42614) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyWeakref_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "weakref" 1 . 5)))) 42557 . 42614) (symbol "PYBIND11_DEPRECATED" 42557 . 42614) (semantic-list 42464 . 42508) (CONST 42458 . 42463) (semantic-list 42455 . 42457) (DOUBLE 42449 . 42455) (OPERATOR 42440 . 42448) (semantic-list 42392 . 42435) (CONST 42386 . 42391) (semantic-list 42383 . 42385) (FLOAT 42378 . 42383) (OPERATOR 42369 . 42377) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyFloat_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "float_" 1 . 5)))) 41920 . 41986) (symbol "PYBIND11_DEPRECATED" 41920 . 41986) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyFloat_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "float_" 1 . 5)))) 41920 . 41986) (symbol "PYBIND11_DEPRECATED" 41920 . 41986) (OPERATOR 41625 . 41633) (punctuation 41619 . 41620) (number 41618 . 41619) (punctuation 41616 . 41617) (punctuation 41614 . 41615) (INT 41611 . 41614) (punctuation 41609 . 41610) (symbol 41604 . 41609) (punctuation 41603 . 41604) (punctuation 41602 . 41603) (punctuation 41601 . 41602) (symbol 41600 . 41601) (punctuation 41599 . 41600) (symbol 41588 . 41599) (punctuation 41587 . 41588) (punctuation 41586 . 41587) (symbol 41583 . 41586) (punctuation 41582 . 41583) (symbol 41571 . 41582) (punctuation 41570 . 41571) (punctuation 41569 . 41570) (symbol 41563 . 41569) (punctuation 41547 . 41548) (symbol 41546 . 41547) (TYPENAME 41537 . 41545) (punctuation 41536 . 41537) (TEMPLATE 41527 . 41535) (punctuation 40967 . 40968) (number 40966 . 40967) (punctuation 40964 . 40965) (punctuation 40962 . 40963) (INT 40959 . 40962) (punctuation 40957 . 40958) (symbol 40952 . 40957) (punctuation 40951 . 40952) (punctuation 40950 . 40951) (punctuation 40949 . 40950) (symbol 40948 . 40949) (punctuation 40947 . 40948) (symbol 40936 . 40947) (punctuation 40935 . 40936) (punctuation 40934 . 40935) (symbol 40931 . 40934) (punctuation 40930 . 40931) (symbol 40919 . 40930) (punctuation 40918 . 40919) (punctuation 40917 . 40918) (symbol 40911 . 40917) (punctuation 40895 . 40896) (symbol 40894 . 40895) (TYPENAME 40885 . 40893) (punctuation 40884 . 40885) (TEMPLATE 40875 . 40883) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list 40636 . 40644) (symbol 40623 . 40636) (OPERATOR 41625 . 41633) (punctuation 41619 . 41620) (number 41618 . 41619) (punctuation 41616 . 41617) (punctuation 41614 . 41615) (INT 41611 . 41614) (punctuation 41609 . 41610) (symbol 41604 . 41609) (punctuation 41603 . 41604) (punctuation 41602 . 41603) (punctuation 41601 . 41602) (symbol 41600 . 41601) (punctuation 41599 . 41600) (symbol 41588 . 41599) (punctuation 41587 . 41588) (punctuation 41586 . 41587) (symbol 41583 . 41586) (punctuation 41582 . 41583) (symbol 41571 . 41582) (punctuation 41570 . 41571) (punctuation 41569 . 41570) (symbol 41563 . 41569) (punctuation 41547 . 41548) (symbol 41546 . 41547) (TYPENAME 41537 . 41545) (punctuation 41536 . 41537) (TEMPLATE 41527 . 41535) (punctuation 40967 . 40968) (number 40966 . 40967) (punctuation 40964 . 40965) (punctuation 40962 . 40963) (INT 40959 . 40962) (punctuation 40957 . 40958) (symbol 40952 . 40957) (punctuation 40951 . 40952) (punctuation 40950 . 40951) (punctuation 40949 . 40950) (symbol 40948 . 40949) (punctuation 40947 . 40948) (symbol 40936 . 40947) (punctuation 40935 . 40936) (punctuation 40934 . 40935) (symbol 40931 . 40934) (punctuation 40930 . 40931) (symbol 40919 . 40930) (punctuation 40918 . 40919) (punctuation 40917 . 40918) (symbol 40911 . 40917) (punctuation 40895 . 40896) (symbol 40894 . 40895) (TYPENAME 40885 . 40893) (punctuation 40884 . 40885) (TEMPLATE 40875 . 40883) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (OPERATOR 41625 . 41633) (punctuation 41619 . 41620) (number 41618 . 41619) (punctuation 41616 . 41617) (punctuation 41614 . 41615) (INT 41611 . 41614) (punctuation 41609 . 41610) (symbol 41604 . 41609) (punctuation 41603 . 41604) (punctuation 41602 . 41603) (punctuation 41601 . 41602) (symbol 41600 . 41601) (punctuation 41599 . 41600) (symbol 41588 . 41599) (punctuation 41587 . 41588) (punctuation 41586 . 41587) (symbol 41583 . 41586) (punctuation 41582 . 41583) (symbol 41571 . 41582) (punctuation 41570 . 41571) (punctuation 41569 . 41570) (symbol 41563 . 41569) (punctuation 41547 . 41548) (symbol 41546 . 41547) (TYPENAME 41537 . 41545) (punctuation 41536 . 41537) (TEMPLATE 41527 . 41535) (punctuation 40967 . 40968) (number 40966 . 40967) (punctuation 40964 . 40965) (punctuation 40962 . 40963) (INT 40959 . 40962) (punctuation 40957 . 40958) (symbol 40952 . 40957) (punctuation 40951 . 40952) (punctuation 40950 . 40951) (punctuation 40949 . 40950) (symbol 40948 . 40949) (punctuation 40947 . 40948) (symbol 40936 . 40947) (punctuation 40935 . 40936) (punctuation 40934 . 40935) (symbol 40931 . 40934) (punctuation 40930 . 40931) (symbol 40919 . 40930) (punctuation 40918 . 40919) (punctuation 40917 . 40918) (symbol 40911 . 40917) (punctuation 40895 . 40896) (symbol 40894 . 40895) (TYPENAME 40885 . 40893) (punctuation 40884 . 40885) (TEMPLATE 40875 . 40883) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list 39725 . 39733) (symbol 39710 . 39725) (semantic-list 39363 . 39409) (CONST 39357 . 39362) (semantic-list 39354 . 39356) (BOOL 39350 . 39354) (OPERATOR 39341 . 39349) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyBool_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bool_" 1 . 5)))) 39099 . 39157) (symbol "PYBIND11_DEPRECATED" 39099 . 39157) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyBool_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bool_" 1 . 5)))) 39099 . 39157) (symbol "PYBIND11_DEPRECATED" 39099 . 39157) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "none" 1 . 5)))) 38757 . 38808) (symbol "PYBIND11_DEPRECATED" 38757 . 38808) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "none" 1 . 5)))) 38757 . 38808) (symbol "PYBIND11_DEPRECATED" 38757 . 38808) (OPERATOR 37355 . 37363) (EXPLICIT 37310 . 37318) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_BYTES_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bytes" 1 . 5)))) 36752 . 36804) (symbol "PYBIND11_DEPRECATED" 36752 . 36804) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_BYTES_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bytes" 1 . 5)))) 36752 . 36804) (symbol "PYBIND11_DEPRECATED" 36752 . 36804) (string 36620 . 36622) (OPERATOR 36612 . 36620) (symbol 36608 . 36611) (INLINE 36601 . 36607) (INLINE 36516 . 36522) (punctuation 35966 . 35967) (punctuation 35965 . 35966) (punctuation 35964 . 35965) (punctuation 35963 . 35964) (punctuation 35940 . 35941) (symbol 35936 . 35940) (punctuation 35934 . 35935) (punctuation 35933 . 35934) (punctuation 35932 . 35933) (TYPENAME 35924 . 35932) (punctuation 35923 . 35924) (TEMPLATE 35914 . 35922) (OPERATOR 35353 . 35361) (EXPLICIT 35282 . 35290) (EXPLICIT 35102 . 35110) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "str" 1 . 5)))) 34466 . 34543) (symbol "PYBIND11_DEPRECATED" 34466 . 34543) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "str" 1 . 5)))) 34466 . 34543) (symbol "PYBIND11_DEPRECATED" 34466 . 34543) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterable" 1 . 5)))) 34340 . 34407) (symbol "PYBIND11_DEPRECATED" 34340 . 34407) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterable" 1 . 5)))) 34340 . 34407) (symbol "PYBIND11_DEPRECATED" 34340 . 34407) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyIter_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterator" 1 . 5)))) 32958 . 33013) (symbol "PYBIND11_DEPRECATED" 32958 . 33013) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyIter_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterator" 1 . 5)))) 32958 . 33013) (symbol "PYBIND11_DEPRECATED" 32958 . 33013) (punctuation 32951 . 32952) (punctuation 32950 . 32951) (symbol 32943 . 32949) (CONST 32937 . 32942) (punctuation 32935 . 32936) (symbol 32927 . 32934) (USING 32921 . 32926) (punctuation 32901 . 32902) (symbol 32891 . 32900) (USING 32885 . 32890) (USING 32854 . 32859) (USING 32817 . 32822) (punctuation 32786 . 32787) (symbol 32768 . 32785) (USING 32762 . 32767) (semantic-list 30308 . 30316) (symbol 30295 . 30308) (punctuation 30265 . 30266) (symbol 30246 . 30265) (punctuation 30245 . 30246) (punctuation 30244 . 30245) (symbol 30225 . 30244) (punctuation 30223 . 30224) (symbol 30216 . 30222) (symbol 30196 . 30215) (punctuation 30195 . 30196) (TEMPLATE 30186 . 30194) (punctuation 30160 . 30161) (symbol 30141 . 30160) (punctuation 30140 . 30141) (punctuation 30139 . 30140) (symbol 30120 . 30139) (punctuation 30118 . 30119) (symbol 30111 . 30117) (symbol 30091 . 30110) (punctuation 30090 . 30091) (TEMPLATE 30081 . 30089) (USING 29957 . 29962) (punctuation 29955 . 29956) (symbol 29954 . 29955) (TYPENAME 29945 . 29953) (punctuation 29944 . 29945) (TEMPLATE 29935 . 29943) (USING 29841 . 29846) (punctuation 29839 . 29840) (symbol 29838 . 29839) (TYPENAME 29829 . 29837) (punctuation 29828 . 29829) (TEMPLATE 29819 . 29827) (USING 29748 . 29753) (punctuation 29746 . 29747) (symbol 29745 . 29746) (TYPENAME 29736 . 29744) (punctuation 29735 . 29736) (TEMPLATE 29726 . 29734) (USING 29659 . 29664) (punctuation 29657 . 29658) (symbol 29656 . 29657) (TYPENAME 29647 . 29655) (punctuation 29646 . 29647) (TEMPLATE 29637 . 29645) (USING 29593 . 29598) (punctuation 29591 . 29592) (symbol 29590 . 29591) (TYPENAME 29581 . 29589) (punctuation 29580 . 29581) (TEMPLATE 29571 . 29579) (EXPLICIT 29401 . 29409) (EXPLICIT 29302 . 29310) (USING 28680 . 28685) (USING 28592 . 28597) (USING 28326 . 28331) (USING 28242 . 28247) (semantic-list 28194 . 28213) (symbol 28181 . 28194) (punctuation 27802 . 27803) (DEFAULT 27795 . 27802) (punctuation 27793 . 27794) (semantic-list 27790 . 27792) (symbol 27777 . 27790) (punctuation 27739 . 27740) (symbol 27731 . 27738) (USING 27725 . 27730) (punctuation 27701 . 27702) (symbol 27691 . 27700) (USING 27685 . 27690) (punctuation 27652 . 27653) (symbol 27641 . 27651) (USING 27635 . 27640) (punctuation 27602 . 27603) (symbol 27584 . 27601) (USING 27578 . 27583) (punctuation 26927 . 26928) (symbol 26919 . 26926) (USING 26913 . 26918) (USING 26872 . 26877) (USING 26841 . 26846) (punctuation 26802 . 26803) (symbol 26784 . 26801) (USING 26778 . 26783) (punctuation 26151 . 26152) (symbol 26143 . 26150) (USING 26137 . 26142) (punctuation 26117 . 26118) (symbol 26107 . 26116) (USING 26101 . 26106) (USING 26070 . 26075) (punctuation 26031 . 26032) (symbol 26013 . 26030) (USING 26007 . 26012) (punctuation 25783 . 25784) (semantic-list 25588 . 25607) (symbol 25573 . 25588) (punctuation 24069 . 24070) (DEFAULT 24062 . 24069) (punctuation 24060 . 24061) (semantic-list 24057 . 24059) (symbol 24041 . 24057) (punctuation 24008 . 24009) (symbol 24000 . 24007) (USING 23994 . 23999) (punctuation 23960 . 23961) (symbol 23950 . 23959) (USING 23944 . 23949) (punctuation 23909 . 23910) (symbol 23898 . 23908) (USING 23892 . 23897) (punctuation 23850 . 23851) (symbol 23832 . 23849) (USING 23826 . 23831) (USING 23789 . 23794) (USING 23747 . 23752) (semantic-list 23588 . 23607) (symbol 23575 . 23588) (USING 23035 . 23040) (USING 22473 . 22478) (USING 21903 . 21908) (USING 21459 . 21464) (punctuation 21257 . 21258) (punctuation 21256 . 21257) (CHAR 21251 . 21255) (CONST 21245 . 21250) (punctuation 21243 . 21244) (symbol 21234 . 21242) (USING 21228 . 21233) (USING 21017 . 21022) (semantic-list 20975 . 20994) (symbol 20960 . 20975) (USING 21017 . 21022) (USING 21017 . 21022) (OPERATOR 20573 . 20581) (OPERATOR 20434 . 20442) (EXPLICIT 20425 . 20433) (semantic-list 20349 . 20420) (symbol 20330 . 20349) (string 20350 . 20419) (punctuation 20324 . 20325) (symbol 20318 . 20324) (punctuation 20316 . 20317) (symbol 20314 . 20315) (TYPENAME 20305 . 20313) (punctuation 20304 . 20305) (TEMPLATE 20295 . 20303) (string 20350 . 20419) (semantic-list 20249 . 20290) (CONST 20243 . 20248) (semantic-list 20240 . 20242) (punctuation 20239 . 20240) (BOOL 20235 . 20239) (punctuation 20233 . 20234) (symbol 20228 . 20233) (punctuation 20227 . 20228) (punctuation 20226 . 20227) (punctuation 20225 . 20226) (symbol 20217 . 20225) (punctuation 20216 . 20217) (punctuation 20215 . 20216) (symbol 20198 . 20215) (punctuation 20196 . 20197) (symbol 20195 . 20196) (punctuation 20194 . 20195) (symbol 20187 . 20194) (punctuation 20186 . 20187) (punctuation 20185 . 20186) (symbol 20182 . 20185) (punctuation 20168 . 20169) (punctuation 20167 . 20168) (symbol 20161 . 20166) (punctuation 20160 . 20161) (punctuation 20159 . 20160) (punctuation 20158 . 20159) (symbol 20150 . 20158) (punctuation 20149 . 20150) (punctuation 20148 . 20149) (symbol 20131 . 20148) (punctuation 20129 . 20130) (symbol 20128 . 20129) (punctuation 20127 . 20128) (symbol 20120 . 20127) (punctuation 20119 . 20120) (punctuation 20118 . 20119) (symbol 20115 . 20118) (punctuation 20114 . 20115) (symbol 20103 . 20114) (OPERATOR 20094 . 20102) (EXPLICIT 20085 . 20093) (semantic-list 19994 . 20080) (symbol 19975 . 19994) (string 19995 . 20079) (punctuation 19969 . 19970) (symbol 19963 . 19969) (punctuation 19961 . 19962) (symbol 19959 . 19960) (TYPENAME 19950 . 19958) (punctuation 19949 . 19950) (TEMPLATE 19940 . 19948) (string 19995 . 20079) (semantic-list 19837 . 19934) (punctuation 19835 . 19836) (semantic-list 19823 . 19834) (punctuation 19822 . 19823) (OPERATOR 19814 . 19822) (punctuation 19827 . 19828) (VOID 19809 . 19813) (punctuation 19827 . 19828) (punctuation 19807 . 19808) (symbol 19806 . 19807) (TYPENAME 19797 . 19805) (punctuation 19796 . 19797) (TEMPLATE 19787 . 19795) (punctuation 19827 . 19828) (semantic-list 19704 . 19782) (punctuation 19702 . 19703) (punctuation 19701 . 19702) (semantic-list 19689 . 19700) (punctuation 19688 . 19689) (OPERATOR 19680 . 19688) (punctuation 19693 . 19694) (VOID 19675 . 19679) (punctuation 19693 . 19694) (punctuation 19673 . 19674) (symbol 19672 . 19673) (TYPENAME 19663 . 19671) (punctuation 19662 . 19663) (TEMPLATE 19653 . 19661) (punctuation 19693 . 19694) (semantic-list 19622 . 19647) (punctuation 19620 . 19621) (semantic-list 19600 . 19619) (punctuation 19599 . 19600) (OPERATOR 19591 . 19599) (VOID 19586 . 19590) (semantic-list 19539 . 19581) (punctuation 19537 . 19538) (punctuation 19536 . 19537) (semantic-list 19516 . 19535) (punctuation 19515 . 19516) (OPERATOR 19507 . 19515) (VOID 19502 . 19506) (punctuation 19335 . 19336) (DEFAULT 19328 . 19335) (punctuation 19326 . 19327) (semantic-list 19312 . 19325) (symbol 19304 . 19312) (punctuation 19323 . 19324) (punctuation 19298 . 19299) (DEFAULT 19291 . 19298) (punctuation 19289 . 19290) (semantic-list 19270 . 19288) (symbol 19262 . 19270) (punctuation 19145 . 19146) (symbol 19136 . 19144) (USING 19130 . 19135) (punctuation 18881 . 18882) (punctuation 18854 . 18855) (number 18853 . 18854) (punctuation 18851 . 18852) (punctuation 18849 . 18850) (INT 18846 . 18849) (punctuation 18844 . 18845) (symbol 18839 . 18844) (punctuation 18838 . 18839) (punctuation 18837 . 18838) (punctuation 18836 . 18837) (symbol 18835 . 18836) (punctuation 18834 . 18835) (symbol 18823 . 18834) (punctuation 18822 . 18823) (punctuation 18821 . 18822) (symbol 18810 . 18821) (punctuation 18808 . 18809) (symbol 18807 . 18808) (TYPENAME 18798 . 18806) (punctuation 18797 . 18798) (TEMPLATE 18788 . 18796) (semantic-list 18693 . 18696) (punctuation 18667 . 18668) (punctuation 18666 . 18667) (semantic-list 18658 . 18665) (symbol 18644 . 18658) (punctuation 18662 . 18663) (symbol 18639 . 18643) (punctuation 18662 . 18663) (punctuation 18637 . 18638) (number 18636 . 18637) (punctuation 18634 . 18635) (punctuation 18632 . 18633) (INT 18629 . 18632) (punctuation 18627 . 18628) (symbol 18622 . 18627) (punctuation 18621 . 18622) (punctuation 18620 . 18621) (punctuation 18619 . 18620) (symbol 18618 . 18619) (punctuation 18617 . 18618) (symbol 18606 . 18617) (punctuation 18605 . 18606) (symbol 18594 . 18605) (punctuation 18592 . 18593) (symbol 18591 . 18592) (TYPENAME 18582 . 18590) (punctuation 18581 . 18582) (TEMPLATE 18572 . 18580) (semantic-list 17957 . 17965) (symbol 17942 . 17957) (punctuation 15539 . 15540) (DELETE 15533 . 15539) (punctuation 15531 . 15532) (semantic-list 15518 . 15530) (punctuation 15517 . 15518) (symbol 15511 . 15517) (punctuation 15510 . 15511) (symbol 15500 . 15510) (BOOL 15495 . 15499) (INLINE 15488 . 15494) (punctuation 15486 . 15487) (punctuation 15485 . 15486) (TEMPLATE 15476 . 15484) (punctuation 15390 . 15391) (number 15389 . 15390) (punctuation 15387 . 15388) (punctuation 15385 . 15386) (INT 15382 . 15385) (punctuation 15380 . 15381) (symbol 15375 . 15380) (punctuation 15374 . 15375) (punctuation 15373 . 15374) (punctuation 15372 . 15373) (symbol 15371 . 15372) (punctuation 15369 . 15370) (symbol 15363 . 15369) (punctuation 15362 . 15363) (symbol 15352 . 15362) (punctuation 15351 . 15352) (punctuation 15350 . 15351) (symbol 15347 . 15350) (punctuation 15346 . 15347) (punctuation 15345 . 15346) (symbol 15334 . 15345) (punctuation 15333 . 15334) (punctuation 15332 . 15333) (symbol 15326 . 15332) (punctuation 15324 . 15325) (symbol 15323 . 15324) (TYPENAME 15314 . 15322) (punctuation 15313 . 15314) (TEMPLATE 15304 . 15312) (punctuation 15246 . 15247) (number 15245 . 15246) (punctuation 15243 . 15244) (punctuation 15241 . 15242) (INT 15238 . 15241) (punctuation 15236 . 15237) (symbol 15231 . 15236) (punctuation 15230 . 15231) (punctuation 15229 . 15230) (punctuation 15228 . 15229) (symbol 15227 . 15228) (punctuation 15225 . 15226) (symbol 15219 . 15225) (punctuation 15218 . 15219) (symbol 15208 . 15218) (punctuation 15207 . 15208) (punctuation 15206 . 15207) (symbol 15203 . 15206) (punctuation 15202 . 15203) (symbol 15191 . 15202) (punctuation 15190 . 15191) (punctuation 15189 . 15190) (symbol 15183 . 15189) (punctuation 15181 . 15182) (symbol 15180 . 15181) (TYPENAME 15171 . 15179) (punctuation 15170 . 15171) (TEMPLATE 15161 . 15169) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 13108 . 13116) (symbol 13095 . 13108) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 13051 . 13059) (symbol 13036 . 13051) (punctuation 11622 . 11623) (punctuation 11621 . 11622) (punctuation 11620 . 11621) (semantic-list 11617 . 11619) (symbol 11613 . 11617) (symbol 11611 . 11612) (punctuation 11609 . 11610) (symbol 11608 . 11609) (TYPENAME 11599 . 11607) (punctuation 11598 . 11599) (TEMPLATE 11589 . 11597) (punctuation 11509 . 11510) (punctuation 11508 . 11509) (CONST 11502 . 11507) (semantic-list 11499 . 11501) (symbol 11495 . 11499) (symbol 11493 . 11494) (punctuation 11491 . 11492) (symbol 11490 . 11491) (TYPENAME 11481 . 11489) (punctuation 11480 . 11481) (TEMPLATE 11471 . 11479) (semantic-list 11195 . 11392) (symbol 11186 . 11194) (semantic-list 11169 . 11185) (punctuation 11168 . 11169) (OPERATOR 11160 . 11168) (punctuation 11178 . 11179) (punctuation 11158 . 11159) (symbol 11152 . 11158) (punctuation 11178 . 11179) (semantic-list 10538 . 10585) (symbol 10529 . 10537) (semantic-list 10512 . 10528) (symbol 10506 . 10512) (punctuation 10521 . 10522) (semantic-list 10140 . 10207) (symbol 10121 . 10140) (string 10141 . 10206) (punctuation 10115 . 10116) (DEFAULT 10108 . 10115) (punctuation 10106 . 10107) (semantic-list 10103 . 10105) (symbol 10097 . 10103) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 7002 . 7010) (symbol 6989 . 7002) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 6510 . 6538) (symbol 6491 . 6510) (string 6511 . 6537) (punctuation 4598 . 4599) (punctuation 4597 . 4598) (punctuation 4596 . 4597) (punctuation 4595 . 4596) (semantic-list 4513 . 4569) (symbol 4494 . 4513) (string 4514 . 4568) (punctuation 4488 . 4489) (symbol 4484 . 4488) (punctuation 4482 . 4483) (punctuation 4481 . 4482) (punctuation 4480 . 4481) (TYPENAME 4472 . 4480) (punctuation 4470 . 4471) (symbol 4451 . 4470) (punctuation 4450 . 4451) (punctuation 4449 . 4450) (symbol 4430 . 4449) (punctuation 4428 . 4429) (symbol 4421 . 4427) (symbol 4401 . 4420) (punctuation 4400 . 4401) (TEMPLATE 4391 . 4399) (punctuation 4373 . 4374) (punctuation 4372 . 4373) (punctuation 4371 . 4372) (punctuation 4370 . 4371) (punctuation 4340 . 4341) (symbol 4336 . 4340) (punctuation 4334 . 4335) (punctuation 4333 . 4334) (punctuation 4332 . 4333) (TYPENAME 4324 . 4332) (punctuation 4322 . 4323) (symbol 4303 . 4322) (punctuation 4302 . 4303) (punctuation 4301 . 4302) (symbol 4282 . 4301) (punctuation 4280 . 4281) (symbol 4273 . 4279) (symbol 4253 . 4272) (punctuation 4252 . 4253) (TEMPLATE 4243 . 4251) (punctuation 3657 . 3658) (USING 1406 . 1411) (punctuation 1404 . 1405) (symbol 1403 . 1404) (TYPENAME 1394 . 1402) (punctuation 1393 . 1394) (TEMPLATE 1384 . 1392) (USING 1218 . 1223) (USING 1156 . 1161) (USING 1086 . 1091) (USING 1021 . 1026) (USING 956 . 961) (USING 891 . 896) (semantic-list 547 . 555) (symbol 532 . 547) (semantic-list 395 . 415) (symbol 380 . 395) (symbol 279 . 283) (symbol 272 . 278) (punctuation 271 . 272) (EXPLICIT 47010 . 47018) (punctuation 47004 . 47005) (punctuation 47003 . 47004) (punctuation 47002 . 47003) (punctuation 47001 . 47002) (punctuation 47000 . 47001) (symbol 46996 . 47000) (punctuation 46994 . 46995) (punctuation 46993 . 46994) (punctuation 46992 . 46993) (symbol 46973 . 46992) (punctuation 46972 . 46973) (punctuation 46971 . 46972) (symbol 46965 . 46971) (punctuation 46964 . 46965) (symbol 46954 . 46964) (punctuation 46953 . 46954) (punctuation 46952 . 46953) (symbol 46946 . 46952) (punctuation 46944 . 46945) (symbol 46934 . 46943) (TYPENAME 46925 . 46933) (punctuation 46808 . 46809) (punctuation 46807 . 46808) (symbol 46802 . 46807) (punctuation 46801 . 46802) (punctuation 46800 . 46801) (punctuation 46799 . 46800) (punctuation 46798 . 46799) (punctuation 46797 . 46798) (punctuation 46796 . 46797) (punctuation 46795 . 46796) (symbol 46791 . 46795) (punctuation 46790 . 46791) (symbol 46774 . 46790) (punctuation 46773 . 46774) (punctuation 46772 . 46773) (symbol 46766 . 46772) (punctuation 46765 . 46766) (symbol 46759 . 46765) (punctuation 46758 . 46759) (punctuation 46757 . 46758) (symbol 46751 . 46757) (punctuation 46750 . 46751) (symbol 46739 . 46750) (punctuation 46738 . 46739) (punctuation 46737 . 46738) (symbol 46731 . 46737) (punctuation 46729 . 46730) (TYPENAME 46720 . 46728) (punctuation 46704 . 46705) (symbol 46700 . 46704) (punctuation 46698 . 46699) (punctuation 46697 . 46698) (punctuation 46696 . 46697) (TYPENAME 46688 . 46696) (punctuation 46687 . 46688) (TEMPLATE 46678 . 46686) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyDict_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "dict" 1 . 5)))) 46492 . 46549) (symbol "PYBIND11_DEPRECATED" 46492 . 46549) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyDict_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "dict" 1 . 5)))) 46492 . 46549) (symbol "PYBIND11_DEPRECATED" 46492 . 46549) (EXPLICIT 45901 . 45909) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyTuple_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "tuple" 1 . 5)))) 45829 . 45896) (symbol "PYBIND11_DEPRECATED" 45829 . 45896) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyTuple_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "tuple" 1 . 5)))) 45829 . 45896) (symbol "PYBIND11_DEPRECATED" 45829 . 45896) (semantic-list 45502 . 45715) (CONST 45496 . 45501) (semantic-list 45493 . 45495) (punctuation 45492 . 45493) (symbol 45490 . 45491) (OPERATOR 45481 . 45489) (punctuation 45479 . 45480) (symbol 45478 . 45479) (TYPENAME 45469 . 45477) (punctuation 45468 . 45469) (TEMPLATE 45459 . 45467) (semantic-list 44234 . 44297) (symbol 44215 . 44234) (string 44235 . 44296) (EXPLICIT 43922 . 43930) (semantic-list 43722 . 43791) (symbol 43703 . 43722) (string 43723 . 43790) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyCapsule_CheckExact" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "capsule" 1 . 5)))) 43636 . 43698) (symbol "PYBIND11_DEPRECATED" 43636 . 43698) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyCapsule_CheckExact" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "capsule" 1 . 5)))) 43636 . 43698) (symbol "PYBIND11_DEPRECATED" 43636 . 43698) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PySlice_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "slice" 1 . 5)))) 42871 . 42924) (symbol "PYBIND11_DEPRECATED" 42871 . 42924) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PySlice_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "slice" 1 . 5)))) 42871 . 42924) (symbol "PYBIND11_DEPRECATED" 42871 . 42924) (EXPLICIT 42619 . 42627) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyWeakref_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "weakref" 1 . 5)))) 42557 . 42614) (symbol "PYBIND11_DEPRECATED" 42557 . 42614) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyWeakref_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "weakref" 1 . 5)))) 42557 . 42614) (symbol "PYBIND11_DEPRECATED" 42557 . 42614) (semantic-list 42464 . 42508) (CONST 42458 . 42463) (semantic-list 42455 . 42457) (DOUBLE 42449 . 42455) (OPERATOR 42440 . 42448) (semantic-list 42392 . 42435) (CONST 42386 . 42391) (semantic-list 42383 . 42385) (FLOAT 42378 . 42383) (OPERATOR 42369 . 42377) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyFloat_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "float_" 1 . 5)))) 41920 . 41986) (symbol "PYBIND11_DEPRECATED" 41920 . 41986) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyFloat_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "float_" 1 . 5)))) 41920 . 41986) (symbol "PYBIND11_DEPRECATED" 41920 . 41986) (OPERATOR 41625 . 41633) (punctuation 41619 . 41620) (number 41618 . 41619) (punctuation 41616 . 41617) (punctuation 41614 . 41615) (INT 41611 . 41614) (punctuation 41609 . 41610) (symbol 41604 . 41609) (punctuation 41603 . 41604) (punctuation 41602 . 41603) (punctuation 41601 . 41602) (symbol 41600 . 41601) (punctuation 41599 . 41600) (symbol 41588 . 41599) (punctuation 41587 . 41588) (punctuation 41586 . 41587) (symbol 41583 . 41586) (punctuation 41582 . 41583) (symbol 41571 . 41582) (punctuation 41570 . 41571) (punctuation 41569 . 41570) (symbol 41563 . 41569) (punctuation 41547 . 41548) (symbol 41546 . 41547) (TYPENAME 41537 . 41545) (punctuation 41536 . 41537) (TEMPLATE 41527 . 41535) (punctuation 40967 . 40968) (number 40966 . 40967) (punctuation 40964 . 40965) (punctuation 40962 . 40963) (INT 40959 . 40962) (punctuation 40957 . 40958) (symbol 40952 . 40957) (punctuation 40951 . 40952) (punctuation 40950 . 40951) (punctuation 40949 . 40950) (symbol 40948 . 40949) (punctuation 40947 . 40948) (symbol 40936 . 40947) (punctuation 40935 . 40936) (punctuation 40934 . 40935) (symbol 40931 . 40934) (punctuation 40930 . 40931) (symbol 40919 . 40930) (punctuation 40918 . 40919) (punctuation 40917 . 40918) (symbol 40911 . 40917) (punctuation 40895 . 40896) (symbol 40894 . 40895) (TYPENAME 40885 . 40893) (punctuation 40884 . 40885) (TEMPLATE 40875 . 40883) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list 40636 . 40644) (symbol 40623 . 40636) (OPERATOR 41625 . 41633) (punctuation 41619 . 41620) (number 41618 . 41619) (punctuation 41616 . 41617) (punctuation 41614 . 41615) (INT 41611 . 41614) (punctuation 41609 . 41610) (symbol 41604 . 41609) (punctuation 41603 . 41604) (punctuation 41602 . 41603) (punctuation 41601 . 41602) (symbol 41600 . 41601) (punctuation 41599 . 41600) (symbol 41588 . 41599) (punctuation 41587 . 41588) (punctuation 41586 . 41587) (symbol 41583 . 41586) (punctuation 41582 . 41583) (symbol 41571 . 41582) (punctuation 41570 . 41571) (punctuation 41569 . 41570) (symbol 41563 . 41569) (punctuation 41547 . 41548) (symbol 41546 . 41547) (TYPENAME 41537 . 41545) (punctuation 41536 . 41537) (TEMPLATE 41527 . 41535) (punctuation 40967 . 40968) (number 40966 . 40967) (punctuation 40964 . 40965) (punctuation 40962 . 40963) (INT 40959 . 40962) (punctuation 40957 . 40958) (symbol 40952 . 40957) (punctuation 40951 . 40952) (punctuation 40950 . 40951) (punctuation 40949 . 40950) (symbol 40948 . 40949) (punctuation 40947 . 40948) (symbol 40936 . 40947) (punctuation 40935 . 40936) (punctuation 40934 . 40935) (symbol 40931 . 40934) (punctuation 40930 . 40931) (symbol 40919 . 40930) (punctuation 40918 . 40919) (punctuation 40917 . 40918) (symbol 40911 . 40917) (punctuation 40895 . 40896) (symbol 40894 . 40895) (TYPENAME 40885 . 40893) (punctuation 40884 . 40885) (TEMPLATE 40875 . 40883) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (OPERATOR 41625 . 41633) (punctuation 41619 . 41620) (number 41618 . 41619) (punctuation 41616 . 41617) (punctuation 41614 . 41615) (INT 41611 . 41614) (punctuation 41609 . 41610) (symbol 41604 . 41609) (punctuation 41603 . 41604) (punctuation 41602 . 41603) (punctuation 41601 . 41602) (symbol 41600 . 41601) (punctuation 41599 . 41600) (symbol 41588 . 41599) (punctuation 41587 . 41588) (punctuation 41586 . 41587) (symbol 41583 . 41586) (punctuation 41582 . 41583) (symbol 41571 . 41582) (punctuation 41570 . 41571) (punctuation 41569 . 41570) (symbol 41563 . 41569) (punctuation 41547 . 41548) (symbol 41546 . 41547) (TYPENAME 41537 . 41545) (punctuation 41536 . 41537) (TEMPLATE 41527 . 41535) (punctuation 40967 . 40968) (number 40966 . 40967) (punctuation 40964 . 40965) (punctuation 40962 . 40963) (INT 40959 . 40962) (punctuation 40957 . 40958) (symbol 40952 . 40957) (punctuation 40951 . 40952) (punctuation 40950 . 40951) (punctuation 40949 . 40950) (symbol 40948 . 40949) (punctuation 40947 . 40948) (symbol 40936 . 40947) (punctuation 40935 . 40936) (punctuation 40934 . 40935) (symbol 40931 . 40934) (punctuation 40930 . 40931) (symbol 40919 . 40930) (punctuation 40918 . 40919) (punctuation 40917 . 40918) (symbol 40911 . 40917) (punctuation 40895 . 40896) (symbol 40894 . 40895) (TYPENAME 40885 . 40893) (punctuation 40884 . 40885) (TEMPLATE 40875 . 40883) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list 39725 . 39733) (symbol 39710 . 39725) (semantic-list 39363 . 39409) (CONST 39357 . 39362) (semantic-list 39354 . 39356) (BOOL 39350 . 39354) (OPERATOR 39341 . 39349) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyBool_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bool_" 1 . 5)))) 39099 . 39157) (symbol "PYBIND11_DEPRECATED" 39099 . 39157) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyBool_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bool_" 1 . 5)))) 39099 . 39157) (symbol "PYBIND11_DEPRECATED" 39099 . 39157) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "none" 1 . 5)))) 38757 . 38808) (symbol "PYBIND11_DEPRECATED" 38757 . 38808) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "none" 1 . 5)))) 38757 . 38808) (symbol "PYBIND11_DEPRECATED" 38757 . 38808) (OPERATOR 37355 . 37363) (EXPLICIT 37310 . 37318) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_BYTES_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bytes" 1 . 5)))) 36752 . 36804) (symbol "PYBIND11_DEPRECATED" 36752 . 36804) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_BYTES_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bytes" 1 . 5)))) 36752 . 36804) (symbol "PYBIND11_DEPRECATED" 36752 . 36804) (string 36620 . 36622) (OPERATOR 36612 . 36620) (symbol 36608 . 36611) (INLINE 36601 . 36607) (INLINE 36516 . 36522) (punctuation 35966 . 35967) (punctuation 35965 . 35966) (punctuation 35964 . 35965) (punctuation 35963 . 35964) (punctuation 35940 . 35941) (symbol 35936 . 35940) (punctuation 35934 . 35935) (punctuation 35933 . 35934) (punctuation 35932 . 35933) (TYPENAME 35924 . 35932) (punctuation 35923 . 35924) (TEMPLATE 35914 . 35922) (OPERATOR 35353 . 35361) (EXPLICIT 35282 . 35290) (EXPLICIT 35102 . 35110) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "str" 1 . 5)))) 34466 . 34543) (symbol "PYBIND11_DEPRECATED" 34466 . 34543) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "str" 1 . 5)))) 34466 . 34543) (symbol "PYBIND11_DEPRECATED" 34466 . 34543) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterable" 1 . 5)))) 34340 . 34407) (symbol "PYBIND11_DEPRECATED" 34340 . 34407) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterable" 1 . 5)))) 34340 . 34407) (symbol "PYBIND11_DEPRECATED" 34340 . 34407) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyIter_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterator" 1 . 5)))) 32958 . 33013) (symbol "PYBIND11_DEPRECATED" 32958 . 33013) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyIter_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterator" 1 . 5)))) 32958 . 33013) (symbol "PYBIND11_DEPRECATED" 32958 . 33013) (punctuation 32951 . 32952) (punctuation 32950 . 32951) (symbol 32943 . 32949) (CONST 32937 . 32942) (punctuation 32935 . 32936) (symbol 32927 . 32934) (USING 32921 . 32926) (punctuation 32901 . 32902) (symbol 32891 . 32900) (USING 32885 . 32890) (USING 32854 . 32859) (USING 32817 . 32822) (punctuation 32786 . 32787) (symbol 32768 . 32785) (USING 32762 . 32767) (semantic-list 30308 . 30316) (symbol 30295 . 30308) (punctuation 30265 . 30266) (symbol 30246 . 30265) (punctuation 30245 . 30246) (punctuation 30244 . 30245) (symbol 30225 . 30244) (punctuation 30223 . 30224) (symbol 30216 . 30222) (symbol 30196 . 30215) (punctuation 30195 . 30196) (TEMPLATE 30186 . 30194) (punctuation 30160 . 30161) (symbol 30141 . 30160) (punctuation 30140 . 30141) (punctuation 30139 . 30140) (symbol 30120 . 30139) (punctuation 30118 . 30119) (symbol 30111 . 30117) (symbol 30091 . 30110) (punctuation 30090 . 30091) (TEMPLATE 30081 . 30089) (USING 29957 . 29962) (punctuation 29955 . 29956) (symbol 29954 . 29955) (TYPENAME 29945 . 29953) (punctuation 29944 . 29945) (TEMPLATE 29935 . 29943) (USING 29841 . 29846) (punctuation 29839 . 29840) (symbol 29838 . 29839) (TYPENAME 29829 . 29837) (punctuation 29828 . 29829) (TEMPLATE 29819 . 29827) (USING 29748 . 29753) (punctuation 29746 . 29747) (symbol 29745 . 29746) (TYPENAME 29736 . 29744) (punctuation 29735 . 29736) (TEMPLATE 29726 . 29734) (USING 29659 . 29664) (punctuation 29657 . 29658) (symbol 29656 . 29657) (TYPENAME 29647 . 29655) (punctuation 29646 . 29647) (TEMPLATE 29637 . 29645) (USING 29593 . 29598) (punctuation 29591 . 29592) (symbol 29590 . 29591) (TYPENAME 29581 . 29589) (punctuation 29580 . 29581) (TEMPLATE 29571 . 29579) (EXPLICIT 29401 . 29409) (EXPLICIT 29302 . 29310) (USING 28680 . 28685) (USING 28592 . 28597) (USING 28326 . 28331) (USING 28242 . 28247) (semantic-list 28194 . 28213) (symbol 28181 . 28194) (punctuation 27802 . 27803) (DEFAULT 27795 . 27802) (punctuation 27793 . 27794) (semantic-list 27790 . 27792) (symbol 27777 . 27790) (punctuation 27739 . 27740) (symbol 27731 . 27738) (USING 27725 . 27730) (punctuation 27701 . 27702) (symbol 27691 . 27700) (USING 27685 . 27690) (punctuation 27652 . 27653) (symbol 27641 . 27651) (USING 27635 . 27640) (punctuation 27602 . 27603) (symbol 27584 . 27601) (USING 27578 . 27583) (punctuation 26927 . 26928) (symbol 26919 . 26926) (USING 26913 . 26918) (USING 26872 . 26877) (USING 26841 . 26846) (punctuation 26802 . 26803) (symbol 26784 . 26801) (USING 26778 . 26783) (punctuation 26151 . 26152) (symbol 26143 . 26150) (USING 26137 . 26142) (punctuation 26117 . 26118) (symbol 26107 . 26116) (USING 26101 . 26106) (USING 26070 . 26075) (punctuation 26031 . 26032) (symbol 26013 . 26030) (USING 26007 . 26012) (punctuation 25783 . 25784) (semantic-list 25588 . 25607) (symbol 25573 . 25588) (punctuation 24069 . 24070) (DEFAULT 24062 . 24069) (punctuation 24060 . 24061) (semantic-list 24057 . 24059) (symbol 24041 . 24057) (punctuation 24008 . 24009) (symbol 24000 . 24007) (USING 23994 . 23999) (punctuation 23960 . 23961) (symbol 23950 . 23959) (USING 23944 . 23949) (punctuation 23909 . 23910) (symbol 23898 . 23908) (USING 23892 . 23897) (punctuation 23850 . 23851) (symbol 23832 . 23849) (USING 23826 . 23831) (USING 23789 . 23794) (USING 23747 . 23752) (semantic-list 23588 . 23607) (symbol 23575 . 23588) (USING 23035 . 23040) (USING 22473 . 22478) (USING 21903 . 21908) (USING 21459 . 21464) (punctuation 21257 . 21258) (punctuation 21256 . 21257) (CHAR 21251 . 21255) (CONST 21245 . 21250) (punctuation 21243 . 21244) (symbol 21234 . 21242) (USING 21228 . 21233) (USING 21017 . 21022) (semantic-list 20975 . 20994) (symbol 20960 . 20975) (USING 21017 . 21022) (USING 21017 . 21022) (OPERATOR 20573 . 20581) (OPERATOR 20434 . 20442) (EXPLICIT 20425 . 20433) (semantic-list 20349 . 20420) (symbol 20330 . 20349) (string 20350 . 20419) (punctuation 20324 . 20325) (symbol 20318 . 20324) (punctuation 20316 . 20317) (symbol 20314 . 20315) (TYPENAME 20305 . 20313) (punctuation 20304 . 20305) (TEMPLATE 20295 . 20303) (string 20350 . 20419) (semantic-list 20249 . 20290) (CONST 20243 . 20248) (semantic-list 20240 . 20242) (punctuation 20239 . 20240) (BOOL 20235 . 20239) (punctuation 20233 . 20234) (symbol 20228 . 20233) (punctuation 20227 . 20228) (punctuation 20226 . 20227) (punctuation 20225 . 20226) (symbol 20217 . 20225) (punctuation 20216 . 20217) (punctuation 20215 . 20216) (symbol 20198 . 20215) (punctuation 20196 . 20197) (symbol 20195 . 20196) (punctuation 20194 . 20195) (symbol 20187 . 20194) (punctuation 20186 . 20187) (punctuation 20185 . 20186) (symbol 20182 . 20185) (punctuation 20168 . 20169) (punctuation 20167 . 20168) (symbol 20161 . 20166) (punctuation 20160 . 20161) (punctuation 20159 . 20160) (punctuation 20158 . 20159) (symbol 20150 . 20158) (punctuation 20149 . 20150) (punctuation 20148 . 20149) (symbol 20131 . 20148) (punctuation 20129 . 20130) (symbol 20128 . 20129) (punctuation 20127 . 20128) (symbol 20120 . 20127) (punctuation 20119 . 20120) (punctuation 20118 . 20119) (symbol 20115 . 20118) (punctuation 20114 . 20115) (symbol 20103 . 20114) (OPERATOR 20094 . 20102) (EXPLICIT 20085 . 20093) (semantic-list 19994 . 20080) (symbol 19975 . 19994) (string 19995 . 20079) (punctuation 19969 . 19970) (symbol 19963 . 19969) (punctuation 19961 . 19962) (symbol 19959 . 19960) (TYPENAME 19950 . 19958) (punctuation 19949 . 19950) (TEMPLATE 19940 . 19948) (string 19995 . 20079) (semantic-list 19837 . 19934) (punctuation 19835 . 19836) (semantic-list 19823 . 19834) (punctuation 19822 . 19823) (OPERATOR 19814 . 19822) (punctuation 19827 . 19828) (VOID 19809 . 19813) (punctuation 19827 . 19828) (punctuation 19807 . 19808) (symbol 19806 . 19807) (TYPENAME 19797 . 19805) (punctuation 19796 . 19797) (TEMPLATE 19787 . 19795) (punctuation 19827 . 19828) (semantic-list 19704 . 19782) (punctuation 19702 . 19703) (punctuation 19701 . 19702) (semantic-list 19689 . 19700) (punctuation 19688 . 19689) (OPERATOR 19680 . 19688) (punctuation 19693 . 19694) (VOID 19675 . 19679) (punctuation 19693 . 19694) (punctuation 19673 . 19674) (symbol 19672 . 19673) (TYPENAME 19663 . 19671) (punctuation 19662 . 19663) (TEMPLATE 19653 . 19661) (punctuation 19693 . 19694) (semantic-list 19622 . 19647) (punctuation 19620 . 19621) (semantic-list 19600 . 19619) (punctuation 19599 . 19600) (OPERATOR 19591 . 19599) (VOID 19586 . 19590) (semantic-list 19539 . 19581) (punctuation 19537 . 19538) (punctuation 19536 . 19537) (semantic-list 19516 . 19535) (punctuation 19515 . 19516) (OPERATOR 19507 . 19515) (VOID 19502 . 19506) (punctuation 19335 . 19336) (DEFAULT 19328 . 19335) (punctuation 19326 . 19327) (semantic-list 19312 . 19325) (symbol 19304 . 19312) (punctuation 19323 . 19324) (punctuation 19298 . 19299) (DEFAULT 19291 . 19298) (punctuation 19289 . 19290) (semantic-list 19270 . 19288) (symbol 19262 . 19270) (punctuation 19145 . 19146) (symbol 19136 . 19144) (USING 19130 . 19135) (punctuation 18881 . 18882) (punctuation 18854 . 18855) (number 18853 . 18854) (punctuation 18851 . 18852) (punctuation 18849 . 18850) (INT 18846 . 18849) (punctuation 18844 . 18845) (symbol 18839 . 18844) (punctuation 18838 . 18839) (punctuation 18837 . 18838) (punctuation 18836 . 18837) (symbol 18835 . 18836) (punctuation 18834 . 18835) (symbol 18823 . 18834) (punctuation 18822 . 18823) (punctuation 18821 . 18822) (symbol 18810 . 18821) (punctuation 18808 . 18809) (symbol 18807 . 18808) (TYPENAME 18798 . 18806) (punctuation 18797 . 18798) (TEMPLATE 18788 . 18796) (semantic-list 18693 . 18696) (punctuation 18667 . 18668) (punctuation 18666 . 18667) (semantic-list 18658 . 18665) (symbol 18644 . 18658) (punctuation 18662 . 18663) (symbol 18639 . 18643) (punctuation 18662 . 18663) (punctuation 18637 . 18638) (number 18636 . 18637) (punctuation 18634 . 18635) (punctuation 18632 . 18633) (INT 18629 . 18632) (punctuation 18627 . 18628) (symbol 18622 . 18627) (punctuation 18621 . 18622) (punctuation 18620 . 18621) (punctuation 18619 . 18620) (symbol 18618 . 18619) (punctuation 18617 . 18618) (symbol 18606 . 18617) (punctuation 18605 . 18606) (symbol 18594 . 18605) (punctuation 18592 . 18593) (symbol 18591 . 18592) (TYPENAME 18582 . 18590) (punctuation 18581 . 18582) (TEMPLATE 18572 . 18580) (semantic-list 17957 . 17965) (symbol 17942 . 17957) (punctuation 15539 . 15540) (DELETE 15533 . 15539) (punctuation 15531 . 15532) (semantic-list 15518 . 15530) (punctuation 15517 . 15518) (symbol 15511 . 15517) (punctuation 15510 . 15511) (symbol 15500 . 15510) (BOOL 15495 . 15499) (INLINE 15488 . 15494) (punctuation 15486 . 15487) (punctuation 15485 . 15486) (TEMPLATE 15476 . 15484) (punctuation 15390 . 15391) (number 15389 . 15390) (punctuation 15387 . 15388) (punctuation 15385 . 15386) (INT 15382 . 15385) (punctuation 15380 . 15381) (symbol 15375 . 15380) (punctuation 15374 . 15375) (punctuation 15373 . 15374) (punctuation 15372 . 15373) (symbol 15371 . 15372) (punctuation 15369 . 15370) (symbol 15363 . 15369) (punctuation 15362 . 15363) (symbol 15352 . 15362) (punctuation 15351 . 15352) (punctuation 15350 . 15351) (symbol 15347 . 15350) (punctuation 15346 . 15347) (punctuation 15345 . 15346) (symbol 15334 . 15345) (punctuation 15333 . 15334) (punctuation 15332 . 15333) (symbol 15326 . 15332) (punctuation 15324 . 15325) (symbol 15323 . 15324) (TYPENAME 15314 . 15322) (punctuation 15313 . 15314) (TEMPLATE 15304 . 15312) (punctuation 15246 . 15247) (number 15245 . 15246) (punctuation 15243 . 15244) (punctuation 15241 . 15242) (INT 15238 . 15241) (punctuation 15236 . 15237) (symbol 15231 . 15236) (punctuation 15230 . 15231) (punctuation 15229 . 15230) (punctuation 15228 . 15229) (symbol 15227 . 15228) (punctuation 15225 . 15226) (symbol 15219 . 15225) (punctuation 15218 . 15219) (symbol 15208 . 15218) (punctuation 15207 . 15208) (punctuation 15206 . 15207) (symbol 15203 . 15206) (punctuation 15202 . 15203) (symbol 15191 . 15202) (punctuation 15190 . 15191) (punctuation 15189 . 15190) (symbol 15183 . 15189) (punctuation 15181 . 15182) (symbol 15180 . 15181) (TYPENAME 15171 . 15179) (punctuation 15170 . 15171) (TEMPLATE 15161 . 15169) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 13108 . 13116) (symbol 13095 . 13108) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 13051 . 13059) (symbol 13036 . 13051) (punctuation 11622 . 11623) (punctuation 11621 . 11622) (punctuation 11620 . 11621) (semantic-list 11617 . 11619) (symbol 11613 . 11617) (symbol 11611 . 11612) (punctuation 11609 . 11610) (symbol 11608 . 11609) (TYPENAME 11599 . 11607) (punctuation 11598 . 11599) (TEMPLATE 11589 . 11597) (punctuation 11509 . 11510) (punctuation 11508 . 11509) (CONST 11502 . 11507) (semantic-list 11499 . 11501) (symbol 11495 . 11499) (symbol 11493 . 11494) (punctuation 11491 . 11492) (symbol 11490 . 11491) (TYPENAME 11481 . 11489) (punctuation 11480 . 11481) (TEMPLATE 11471 . 11479) (semantic-list 11195 . 11392) (symbol 11186 . 11194) (semantic-list 11169 . 11185) (punctuation 11168 . 11169) (OPERATOR 11160 . 11168) (punctuation 11178 . 11179) (punctuation 11158 . 11159) (symbol 11152 . 11158) (punctuation 11178 . 11179) (semantic-list 10538 . 10585) (symbol 10529 . 10537) (semantic-list 10512 . 10528) (symbol 10506 . 10512) (punctuation 10521 . 10522) (semantic-list 10140 . 10207) (symbol 10121 . 10140) (string 10141 . 10206) (punctuation 10115 . 10116) (DEFAULT 10108 . 10115) (punctuation 10106 . 10107) (semantic-list 10103 . 10105) (symbol 10097 . 10103) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 7002 . 7010) (symbol 6989 . 7002) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 6510 . 6538) (symbol 6491 . 6510) (string 6511 . 6537) (punctuation 4598 . 4599) (punctuation 4597 . 4598) (punctuation 4596 . 4597) (punctuation 4595 . 4596) (semantic-list 4513 . 4569) (symbol 4494 . 4513) (string 4514 . 4568) (punctuation 4488 . 4489) (symbol 4484 . 4488) (punctuation 4482 . 4483) (punctuation 4481 . 4482) (punctuation 4480 . 4481) (TYPENAME 4472 . 4480) (punctuation 4470 . 4471) (symbol 4451 . 4470) (punctuation 4450 . 4451) (punctuation 4449 . 4450) (symbol 4430 . 4449) (punctuation 4428 . 4429) (symbol 4421 . 4427) (symbol 4401 . 4420) (punctuation 4400 . 4401) (TEMPLATE 4391 . 4399) (punctuation 4373 . 4374) (punctuation 4372 . 4373) (punctuation 4371 . 4372) (punctuation 4370 . 4371) (punctuation 4340 . 4341) (symbol 4336 . 4340) (punctuation 4334 . 4335) (punctuation 4333 . 4334) (punctuation 4332 . 4333) (TYPENAME 4324 . 4332) (punctuation 4322 . 4323) (symbol 4303 . 4322) (punctuation 4302 . 4303) (punctuation 4301 . 4302) (symbol 4282 . 4301) (punctuation 4280 . 4281) (symbol 4273 . 4279) (symbol 4253 . 4272) (punctuation 4252 . 4253) (TEMPLATE 4243 . 4251) (punctuation 3657 . 3658) (USING 1406 . 1411) (punctuation 1404 . 1405) (symbol 1403 . 1404) (TYPENAME 1394 . 1402) (punctuation 1393 . 1394) (TEMPLATE 1384 . 1392) (USING 1218 . 1223) (USING 1156 . 1161) (USING 1086 . 1091) (USING 1021 . 1026) (USING 956 . 961) (USING 891 . 896) (semantic-list 547 . 555) (symbol 532 . 547) (semantic-list 395 . 415) (symbol 380 . 395) (symbol 279 . 283) (symbol 272 . 278) (punctuation 271 . 272) (punctuation 47033 . 47034) (punctuation 47032 . 47033) (punctuation 47031 . 47032) (punctuation 47030 . 47031) (EXPLICIT 47010 . 47018) (punctuation 47004 . 47005) (punctuation 47003 . 47004) (punctuation 47002 . 47003) (punctuation 47001 . 47002) (punctuation 47000 . 47001) (symbol 46996 . 47000) (punctuation 46994 . 46995) (punctuation 46993 . 46994) (punctuation 46992 . 46993) (symbol 46973 . 46992) (punctuation 46972 . 46973) (punctuation 46971 . 46972) (symbol 46965 . 46971) (punctuation 46964 . 46965) (symbol 46954 . 46964) (punctuation 46953 . 46954) (punctuation 46952 . 46953) (symbol 46946 . 46952) (punctuation 46944 . 46945) (symbol 46934 . 46943) (TYPENAME 46925 . 46933) (punctuation 46808 . 46809) (punctuation 46807 . 46808) (symbol 46802 . 46807) (punctuation 46801 . 46802) (punctuation 46800 . 46801) (punctuation 46799 . 46800) (punctuation 46798 . 46799) (punctuation 46797 . 46798) (punctuation 46796 . 46797) (punctuation 46795 . 46796) (symbol 46791 . 46795) (punctuation 46790 . 46791) (symbol 46774 . 46790) (punctuation 46773 . 46774) (punctuation 46772 . 46773) (symbol 46766 . 46772) (punctuation 46765 . 46766) (symbol 46759 . 46765) (punctuation 46758 . 46759) (punctuation 46757 . 46758) (symbol 46751 . 46757) (punctuation 46750 . 46751) (symbol 46739 . 46750) (punctuation 46738 . 46739) (punctuation 46737 . 46738) (symbol 46731 . 46737) (punctuation 46729 . 46730) (TYPENAME 46720 . 46728) (punctuation 46704 . 46705) (symbol 46700 . 46704) (punctuation 46698 . 46699) (punctuation 46697 . 46698) (punctuation 46696 . 46697) (TYPENAME 46688 . 46696) (punctuation 46687 . 46688) (TEMPLATE 46678 . 46686) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyDict_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "dict" 1 . 5)))) 46492 . 46549) (symbol "PYBIND11_DEPRECATED" 46492 . 46549) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyDict_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "dict" 1 . 5)))) 46492 . 46549) (symbol "PYBIND11_DEPRECATED" 46492 . 46549) (EXPLICIT 45901 . 45909) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyTuple_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "tuple" 1 . 5)))) 45829 . 45896) (symbol "PYBIND11_DEPRECATED" 45829 . 45896) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyTuple_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "tuple" 1 . 5)))) 45829 . 45896) (symbol "PYBIND11_DEPRECATED" 45829 . 45896) (semantic-list 45502 . 45715) (CONST 45496 . 45501) (semantic-list 45493 . 45495) (punctuation 45492 . 45493) (symbol 45490 . 45491) (OPERATOR 45481 . 45489) (punctuation 45479 . 45480) (symbol 45478 . 45479) (TYPENAME 45469 . 45477) (punctuation 45468 . 45469) (TEMPLATE 45459 . 45467) (semantic-list 44234 . 44297) (symbol 44215 . 44234) (string 44235 . 44296) (EXPLICIT 43922 . 43930) (semantic-list 43722 . 43791) (symbol 43703 . 43722) (string 43723 . 43790) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyCapsule_CheckExact" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "capsule" 1 . 5)))) 43636 . 43698) (symbol "PYBIND11_DEPRECATED" 43636 . 43698) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyCapsule_CheckExact" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "capsule" 1 . 5)))) 43636 . 43698) (symbol "PYBIND11_DEPRECATED" 43636 . 43698) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PySlice_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "slice" 1 . 5)))) 42871 . 42924) (symbol "PYBIND11_DEPRECATED" 42871 . 42924) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PySlice_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "slice" 1 . 5)))) 42871 . 42924) (symbol "PYBIND11_DEPRECATED" 42871 . 42924) (EXPLICIT 42619 . 42627) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyWeakref_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "weakref" 1 . 5)))) 42557 . 42614) (symbol "PYBIND11_DEPRECATED" 42557 . 42614) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyWeakref_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "weakref" 1 . 5)))) 42557 . 42614) (symbol "PYBIND11_DEPRECATED" 42557 . 42614) (semantic-list 42464 . 42508) (CONST 42458 . 42463) (semantic-list 42455 . 42457) (DOUBLE 42449 . 42455) (OPERATOR 42440 . 42448) (semantic-list 42392 . 42435) (CONST 42386 . 42391) (semantic-list 42383 . 42385) (FLOAT 42378 . 42383) (OPERATOR 42369 . 42377) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyFloat_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "float_" 1 . 5)))) 41920 . 41986) (symbol "PYBIND11_DEPRECATED" 41920 . 41986) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyFloat_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "float_" 1 . 5)))) 41920 . 41986) (symbol "PYBIND11_DEPRECATED" 41920 . 41986) (OPERATOR 41625 . 41633) (punctuation 41619 . 41620) (number 41618 . 41619) (punctuation 41616 . 41617) (punctuation 41614 . 41615) (INT 41611 . 41614) (punctuation 41609 . 41610) (symbol 41604 . 41609) (punctuation 41603 . 41604) (punctuation 41602 . 41603) (punctuation 41601 . 41602) (symbol 41600 . 41601) (punctuation 41599 . 41600) (symbol 41588 . 41599) (punctuation 41587 . 41588) (punctuation 41586 . 41587) (symbol 41583 . 41586) (punctuation 41582 . 41583) (symbol 41571 . 41582) (punctuation 41570 . 41571) (punctuation 41569 . 41570) (symbol 41563 . 41569) (punctuation 41547 . 41548) (symbol 41546 . 41547) (TYPENAME 41537 . 41545) (punctuation 41536 . 41537) (TEMPLATE 41527 . 41535) (punctuation 40967 . 40968) (number 40966 . 40967) (punctuation 40964 . 40965) (punctuation 40962 . 40963) (INT 40959 . 40962) (punctuation 40957 . 40958) (symbol 40952 . 40957) (punctuation 40951 . 40952) (punctuation 40950 . 40951) (punctuation 40949 . 40950) (symbol 40948 . 40949) (punctuation 40947 . 40948) (symbol 40936 . 40947) (punctuation 40935 . 40936) (punctuation 40934 . 40935) (symbol 40931 . 40934) (punctuation 40930 . 40931) (symbol 40919 . 40930) (punctuation 40918 . 40919) (punctuation 40917 . 40918) (symbol 40911 . 40917) (punctuation 40895 . 40896) (symbol 40894 . 40895) (TYPENAME 40885 . 40893) (punctuation 40884 . 40885) (TEMPLATE 40875 . 40883) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list 40636 . 40644) (symbol 40623 . 40636) (OPERATOR 41625 . 41633) (punctuation 41619 . 41620) (number 41618 . 41619) (punctuation 41616 . 41617) (punctuation 41614 . 41615) (INT 41611 . 41614) (punctuation 41609 . 41610) (symbol 41604 . 41609) (punctuation 41603 . 41604) (punctuation 41602 . 41603) (punctuation 41601 . 41602) (symbol 41600 . 41601) (punctuation 41599 . 41600) (symbol 41588 . 41599) (punctuation 41587 . 41588) (punctuation 41586 . 41587) (symbol 41583 . 41586) (punctuation 41582 . 41583) (symbol 41571 . 41582) (punctuation 41570 . 41571) (punctuation 41569 . 41570) (symbol 41563 . 41569) (punctuation 41547 . 41548) (symbol 41546 . 41547) (TYPENAME 41537 . 41545) (punctuation 41536 . 41537) (TEMPLATE 41527 . 41535) (punctuation 40967 . 40968) (number 40966 . 40967) (punctuation 40964 . 40965) (punctuation 40962 . 40963) (INT 40959 . 40962) (punctuation 40957 . 40958) (symbol 40952 . 40957) (punctuation 40951 . 40952) (punctuation 40950 . 40951) (punctuation 40949 . 40950) (symbol 40948 . 40949) (punctuation 40947 . 40948) (symbol 40936 . 40947) (punctuation 40935 . 40936) (punctuation 40934 . 40935) (symbol 40931 . 40934) (punctuation 40930 . 40931) (symbol 40919 . 40930) (punctuation 40918 . 40919) (punctuation 40917 . 40918) (symbol 40911 . 40917) (punctuation 40895 . 40896) (symbol 40894 . 40895) (TYPENAME 40885 . 40893) (punctuation 40884 . 40885) (TEMPLATE 40875 . 40883) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (OPERATOR 41625 . 41633) (punctuation 41619 . 41620) (number 41618 . 41619) (punctuation 41616 . 41617) (punctuation 41614 . 41615) (INT 41611 . 41614) (punctuation 41609 . 41610) (symbol 41604 . 41609) (punctuation 41603 . 41604) (punctuation 41602 . 41603) (punctuation 41601 . 41602) (symbol 41600 . 41601) (punctuation 41599 . 41600) (symbol 41588 . 41599) (punctuation 41587 . 41588) (punctuation 41586 . 41587) (symbol 41583 . 41586) (punctuation 41582 . 41583) (symbol 41571 . 41582) (punctuation 41570 . 41571) (punctuation 41569 . 41570) (symbol 41563 . 41569) (punctuation 41547 . 41548) (symbol 41546 . 41547) (TYPENAME 41537 . 41545) (punctuation 41536 . 41537) (TEMPLATE 41527 . 41535) (punctuation 40967 . 40968) (number 40966 . 40967) (punctuation 40964 . 40965) (punctuation 40962 . 40963) (INT 40959 . 40962) (punctuation 40957 . 40958) (symbol 40952 . 40957) (punctuation 40951 . 40952) (punctuation 40950 . 40951) (punctuation 40949 . 40950) (symbol 40948 . 40949) (punctuation 40947 . 40948) (symbol 40936 . 40947) (punctuation 40935 . 40936) (punctuation 40934 . 40935) (symbol 40931 . 40934) (punctuation 40930 . 40931) (symbol 40919 . 40930) (punctuation 40918 . 40919) (punctuation 40917 . 40918) (symbol 40911 . 40917) (punctuation 40895 . 40896) (symbol 40894 . 40895) (TYPENAME 40885 . 40893) (punctuation 40884 . 40885) (TEMPLATE 40875 . 40883) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_LONG_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "int_" 1 . 5)))) 40687 . 40756) (symbol "PYBIND11_DEPRECATED" 40687 . 40756) (semantic-list 39725 . 39733) (symbol 39710 . 39725) (semantic-list 39363 . 39409) (CONST 39357 . 39362) (semantic-list 39354 . 39356) (BOOL 39350 . 39354) (OPERATOR 39341 . 39349) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyBool_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bool_" 1 . 5)))) 39099 . 39157) (symbol "PYBIND11_DEPRECATED" 39099 . 39157) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyBool_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bool_" 1 . 5)))) 39099 . 39157) (symbol "PYBIND11_DEPRECATED" 39099 . 39157) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "none" 1 . 5)))) 38757 . 38808) (symbol "PYBIND11_DEPRECATED" 38757 . 38808) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "none" 1 . 5)))) 38757 . 38808) (symbol "PYBIND11_DEPRECATED" 38757 . 38808) (OPERATOR 37355 . 37363) (EXPLICIT 37310 . 37318) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_BYTES_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bytes" 1 . 5)))) 36752 . 36804) (symbol "PYBIND11_DEPRECATED" 36752 . 36804) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PYBIND11_BYTES_CHECK" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "bytes" 1 . 5)))) 36752 . 36804) (symbol "PYBIND11_DEPRECATED" 36752 . 36804) (string 36620 . 36622) (OPERATOR 36612 . 36620) (symbol 36608 . 36611) (INLINE 36601 . 36607) (INLINE 36516 . 36522) (punctuation 35966 . 35967) (punctuation 35965 . 35966) (punctuation 35964 . 35965) (punctuation 35963 . 35964) (punctuation 35940 . 35941) (symbol 35936 . 35940) (punctuation 35934 . 35935) (punctuation 35933 . 35934) (punctuation 35932 . 35933) (TYPENAME 35924 . 35932) (punctuation 35923 . 35924) (TEMPLATE 35914 . 35922) (OPERATOR 35353 . 35361) (EXPLICIT 35282 . 35290) (EXPLICIT 35102 . 35110) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "str" 1 . 5)))) 34466 . 34543) (symbol "PYBIND11_DEPRECATED" 34466 . 34543) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "str" 1 . 5)))) 34466 . 34543) (symbol "PYBIND11_DEPRECATED" 34466 . 34543) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterable" 1 . 5)))) 34340 . 34407) (symbol "PYBIND11_DEPRECATED" 34340 . 34407) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterable" 1 . 5)))) 34340 . 34407) (symbol "PYBIND11_DEPRECATED" 34340 . 34407) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyIter_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterator" 1 . 5)))) 32958 . 33013) (symbol "PYBIND11_DEPRECATED" 32958 . 33013) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyIter_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterator" 1 . 5)))) 32958 . 33013) (symbol "PYBIND11_DEPRECATED" 32958 . 33013) (punctuation 32951 . 32952) (punctuation 32950 . 32951) (symbol 32943 . 32949) (CONST 32937 . 32942) (punctuation 32935 . 32936) (symbol 32927 . 32934) (USING 32921 . 32926) (punctuation 32901 . 32902) (symbol 32891 . 32900) (USING 32885 . 32890) (USING 32854 . 32859) (USING 32817 . 32822) (punctuation 32786 . 32787) (symbol 32768 . 32785) (USING 32762 . 32767) (semantic-list 30308 . 30316) (symbol 30295 . 30308) (punctuation 30265 . 30266) (symbol 30246 . 30265) (punctuation 30245 . 30246) (punctuation 30244 . 30245) (symbol 30225 . 30244) (punctuation 30223 . 30224) (symbol 30216 . 30222) (symbol 30196 . 30215) (punctuation 30195 . 30196) (TEMPLATE 30186 . 30194) (punctuation 30160 . 30161) (symbol 30141 . 30160) (punctuation 30140 . 30141) (punctuation 30139 . 30140) (symbol 30120 . 30139) (punctuation 30118 . 30119) (symbol 30111 . 30117) (symbol 30091 . 30110) (punctuation 30090 . 30091) (TEMPLATE 30081 . 30089) (USING 29957 . 29962) (punctuation 29955 . 29956) (symbol 29954 . 29955) (TYPENAME 29945 . 29953) (punctuation 29944 . 29945) (TEMPLATE 29935 . 29943) (USING 29841 . 29846) (punctuation 29839 . 29840) (symbol 29838 . 29839) (TYPENAME 29829 . 29837) (punctuation 29828 . 29829) (TEMPLATE 29819 . 29827) (USING 29748 . 29753) (punctuation 29746 . 29747) (symbol 29745 . 29746) (TYPENAME 29736 . 29744) (punctuation 29735 . 29736) (TEMPLATE 29726 . 29734) (USING 29659 . 29664) (punctuation 29657 . 29658) (symbol 29656 . 29657) (TYPENAME 29647 . 29655) (punctuation 29646 . 29647) (TEMPLATE 29637 . 29645) (USING 29593 . 29598) (punctuation 29591 . 29592) (symbol 29590 . 29591) (TYPENAME 29581 . 29589) (punctuation 29580 . 29581) (TEMPLATE 29571 . 29579) (EXPLICIT 29401 . 29409) (EXPLICIT 29302 . 29310) (USING 28680 . 28685) (USING 28592 . 28597) (USING 28326 . 28331) (USING 28242 . 28247) (semantic-list 28194 . 28213) (symbol 28181 . 28194) (punctuation 27802 . 27803) (DEFAULT 27795 . 27802) (punctuation 27793 . 27794) (semantic-list 27790 . 27792) (symbol 27777 . 27790) (punctuation 27739 . 27740) (symbol 27731 . 27738) (USING 27725 . 27730) (punctuation 27701 . 27702) (symbol 27691 . 27700) (USING 27685 . 27690) (punctuation 27652 . 27653) (symbol 27641 . 27651) (USING 27635 . 27640) (punctuation 27602 . 27603) (symbol 27584 . 27601) (USING 27578 . 27583) (punctuation 26927 . 26928) (symbol 26919 . 26926) (USING 26913 . 26918) (USING 26872 . 26877) (USING 26841 . 26846) (punctuation 26802 . 26803) (symbol 26784 . 26801) (USING 26778 . 26783) (punctuation 26151 . 26152) (symbol 26143 . 26150) (USING 26137 . 26142) (punctuation 26117 . 26118) (symbol 26107 . 26116) (USING 26101 . 26106) (USING 26070 . 26075) (punctuation 26031 . 26032) (symbol 26013 . 26030) (USING 26007 . 26012) (punctuation 25783 . 25784) (semantic-list 25588 . 25607) (symbol 25573 . 25588) (punctuation 24069 . 24070) (DEFAULT 24062 . 24069) (punctuation 24060 . 24061) (semantic-list 24057 . 24059) (symbol 24041 . 24057) (punctuation 24008 . 24009) (symbol 24000 . 24007) (USING 23994 . 23999) (punctuation 23960 . 23961) (symbol 23950 . 23959) (USING 23944 . 23949) (punctuation 23909 . 23910) (symbol 23898 . 23908) (USING 23892 . 23897) (punctuation 23850 . 23851) (symbol 23832 . 23849) (USING 23826 . 23831) (USING 23789 . 23794) (USING 23747 . 23752) (semantic-list 23588 . 23607) (symbol 23575 . 23588) (USING 23035 . 23040) (USING 22473 . 22478) (USING 21903 . 21908) (USING 21459 . 21464) (punctuation 21257 . 21258) (punctuation 21256 . 21257) (CHAR 21251 . 21255) (CONST 21245 . 21250) (punctuation 21243 . 21244) (symbol 21234 . 21242) (USING 21228 . 21233) (USING 21017 . 21022) (semantic-list 20975 . 20994) (symbol 20960 . 20975) (USING 21017 . 21022) (USING 21017 . 21022) (OPERATOR 20573 . 20581) (OPERATOR 20434 . 20442) (EXPLICIT 20425 . 20433) (semantic-list 20349 . 20420) (symbol 20330 . 20349) (string 20350 . 20419) (punctuation 20324 . 20325) (symbol 20318 . 20324) (punctuation 20316 . 20317) (symbol 20314 . 20315) (TYPENAME 20305 . 20313) (punctuation 20304 . 20305) (TEMPLATE 20295 . 20303) (string 20350 . 20419) (semantic-list 20249 . 20290) (CONST 20243 . 20248) (semantic-list 20240 . 20242) (punctuation 20239 . 20240) (BOOL 20235 . 20239) (punctuation 20233 . 20234) (symbol 20228 . 20233) (punctuation 20227 . 20228) (punctuation 20226 . 20227) (punctuation 20225 . 20226) (symbol 20217 . 20225) (punctuation 20216 . 20217) (punctuation 20215 . 20216) (symbol 20198 . 20215) (punctuation 20196 . 20197) (symbol 20195 . 20196) (punctuation 20194 . 20195) (symbol 20187 . 20194) (punctuation 20186 . 20187) (punctuation 20185 . 20186) (symbol 20182 . 20185) (punctuation 20168 . 20169) (punctuation 20167 . 20168) (symbol 20161 . 20166) (punctuation 20160 . 20161) (punctuation 20159 . 20160) (punctuation 20158 . 20159) (symbol 20150 . 20158) (punctuation 20149 . 20150) (punctuation 20148 . 20149) (symbol 20131 . 20148) (punctuation 20129 . 20130) (symbol 20128 . 20129) (punctuation 20127 . 20128) (symbol 20120 . 20127) (punctuation 20119 . 20120) (punctuation 20118 . 20119) (symbol 20115 . 20118) (punctuation 20114 . 20115) (symbol 20103 . 20114) (OPERATOR 20094 . 20102) (EXPLICIT 20085 . 20093) (semantic-list 19994 . 20080) (symbol 19975 . 19994) (string 19995 . 20079) (punctuation 19969 . 19970) (symbol 19963 . 19969) (punctuation 19961 . 19962) (symbol 19959 . 19960) (TYPENAME 19950 . 19958) (punctuation 19949 . 19950) (TEMPLATE 19940 . 19948) (string 19995 . 20079) (semantic-list 19837 . 19934) (punctuation 19835 . 19836) (semantic-list 19823 . 19834) (punctuation 19822 . 19823) (OPERATOR 19814 . 19822) (punctuation 19827 . 19828) (VOID 19809 . 19813) (punctuation 19827 . 19828) (punctuation 19807 . 19808) (symbol 19806 . 19807) (TYPENAME 19797 . 19805) (punctuation 19796 . 19797) (TEMPLATE 19787 . 19795) (punctuation 19827 . 19828) (semantic-list 19704 . 19782) (punctuation 19702 . 19703) (punctuation 19701 . 19702) (semantic-list 19689 . 19700) (punctuation 19688 . 19689) (OPERATOR 19680 . 19688) (punctuation 19693 . 19694) (VOID 19675 . 19679) (punctuation 19693 . 19694) (punctuation 19673 . 19674) (symbol 19672 . 19673) (TYPENAME 19663 . 19671) (punctuation 19662 . 19663) (TEMPLATE 19653 . 19661) (punctuation 19693 . 19694) (semantic-list 19622 . 19647) (punctuation 19620 . 19621) (semantic-list 19600 . 19619) (punctuation 19599 . 19600) (OPERATOR 19591 . 19599) (VOID 19586 . 19590) (semantic-list 19539 . 19581) (punctuation 19537 . 19538) (punctuation 19536 . 19537) (semantic-list 19516 . 19535) (punctuation 19515 . 19516) (OPERATOR 19507 . 19515) (VOID 19502 . 19506) (punctuation 19335 . 19336) (DEFAULT 19328 . 19335) (punctuation 19326 . 19327) (semantic-list 19312 . 19325) (symbol 19304 . 19312) (punctuation 19323 . 19324) (punctuation 19298 . 19299) (DEFAULT 19291 . 19298) (punctuation 19289 . 19290) (semantic-list 19270 . 19288) (symbol 19262 . 19270) (punctuation 19145 . 19146) (symbol 19136 . 19144) (USING 19130 . 19135) (punctuation 18881 . 18882) (punctuation 18854 . 18855) (number 18853 . 18854) (punctuation 18851 . 18852) (punctuation 18849 . 18850) (INT 18846 . 18849) (punctuation 18844 . 18845) (symbol 18839 . 18844) (punctuation 18838 . 18839) (punctuation 18837 . 18838) (punctuation 18836 . 18837) (symbol 18835 . 18836) (punctuation 18834 . 18835) (symbol 18823 . 18834) (punctuation 18822 . 18823) (punctuation 18821 . 18822) (symbol 18810 . 18821) (punctuation 18808 . 18809) (symbol 18807 . 18808) (TYPENAME 18798 . 18806) (punctuation 18797 . 18798) (TEMPLATE 18788 . 18796) (semantic-list 18693 . 18696) (punctuation 18667 . 18668) (punctuation 18666 . 18667) (semantic-list 18658 . 18665) (symbol 18644 . 18658) (punctuation 18662 . 18663) (symbol 18639 . 18643) (punctuation 18662 . 18663) (punctuation 18637 . 18638) (number 18636 . 18637) (punctuation 18634 . 18635) (punctuation 18632 . 18633) (INT 18629 . 18632) (punctuation 18627 . 18628) (symbol 18622 . 18627) (punctuation 18621 . 18622) (punctuation 18620 . 18621) (punctuation 18619 . 18620) (symbol 18618 . 18619) (punctuation 18617 . 18618) (symbol 18606 . 18617) (punctuation 18605 . 18606) (symbol 18594 . 18605) (punctuation 18592 . 18593) (symbol 18591 . 18592) (TYPENAME 18582 . 18590) (punctuation 18581 . 18582) (TEMPLATE 18572 . 18580) (semantic-list 17957 . 17965) (symbol 17942 . 17957) (punctuation 15539 . 15540) (DELETE 15533 . 15539) (punctuation 15531 . 15532) (semantic-list 15518 . 15530) (punctuation 15517 . 15518) (symbol 15511 . 15517) (punctuation 15510 . 15511) (symbol 15500 . 15510) (BOOL 15495 . 15499) (INLINE 15488 . 15494) (punctuation 15486 . 15487) (punctuation 15485 . 15486) (TEMPLATE 15476 . 15484) (punctuation 15390 . 15391) (number 15389 . 15390) (punctuation 15387 . 15388) (punctuation 15385 . 15386) (INT 15382 . 15385) (punctuation 15380 . 15381) (symbol 15375 . 15380) (punctuation 15374 . 15375) (punctuation 15373 . 15374) (punctuation 15372 . 15373) (symbol 15371 . 15372) (punctuation 15369 . 15370) (symbol 15363 . 15369) (punctuation 15362 . 15363) (symbol 15352 . 15362) (punctuation 15351 . 15352) (punctuation 15350 . 15351) (symbol 15347 . 15350) (punctuation 15346 . 15347) (punctuation 15345 . 15346) (symbol 15334 . 15345) (punctuation 15333 . 15334) (punctuation 15332 . 15333) (symbol 15326 . 15332) (punctuation 15324 . 15325) (symbol 15323 . 15324) (TYPENAME 15314 . 15322) (punctuation 15313 . 15314) (TEMPLATE 15304 . 15312) (punctuation 15246 . 15247) (number 15245 . 15246) (punctuation 15243 . 15244) (punctuation 15241 . 15242) (INT 15238 . 15241) (punctuation 15236 . 15237) (symbol 15231 . 15236) (punctuation 15230 . 15231) (punctuation 15229 . 15230) (punctuation 15228 . 15229) (symbol 15227 . 15228) (punctuation 15225 . 15226) (symbol 15219 . 15225) (punctuation 15218 . 15219) (symbol 15208 . 15218) (punctuation 15207 . 15208) (punctuation 15206 . 15207) (symbol 15203 . 15206) (punctuation 15202 . 15203) (symbol 15191 . 15202) (punctuation 15190 . 15191) (punctuation 15189 . 15190) (symbol 15183 . 15189) (punctuation 15181 . 15182) (symbol 15180 . 15181) (TYPENAME 15171 . 15179) (punctuation 15170 . 15171) (TEMPLATE 15161 . 15169) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 13108 . 13116) (symbol 13095 . 13108) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 13051 . 13059) (symbol 13036 . 13051) (punctuation 11622 . 11623) (punctuation 11621 . 11622) (punctuation 11620 . 11621) (semantic-list 11617 . 11619) (symbol 11613 . 11617) (symbol 11611 . 11612) (punctuation 11609 . 11610) (symbol 11608 . 11609) (TYPENAME 11599 . 11607) (punctuation 11598 . 11599) (TEMPLATE 11589 . 11597) (punctuation 11509 . 11510) (punctuation 11508 . 11509) (CONST 11502 . 11507) (semantic-list 11499 . 11501) (symbol 11495 . 11499) (symbol 11493 . 11494) (punctuation 11491 . 11492) (symbol 11490 . 11491) (TYPENAME 11481 . 11489) (punctuation 11480 . 11481) (TEMPLATE 11471 . 11479) (semantic-list 11195 . 11392) (symbol 11186 . 11194) (semantic-list 11169 . 11185) (punctuation 11168 . 11169) (OPERATOR 11160 . 11168) (punctuation 11178 . 11179) (punctuation 11158 . 11159) (symbol 11152 . 11158) (punctuation 11178 . 11179) (semantic-list 10538 . 10585) (symbol 10529 . 10537) (semantic-list 10512 . 10528) (symbol 10506 . 10512) (punctuation 10521 . 10522) (semantic-list 10140 . 10207) (symbol 10121 . 10140) (string 10141 . 10206) (punctuation 10115 . 10116) (DEFAULT 10108 . 10115) (punctuation 10106 . 10107) (semantic-list 10103 . 10105) (symbol 10097 . 10103) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 7002 . 7010) (symbol 6989 . 7002) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 6510 . 6538) (symbol 6491 . 6510) (string 6511 . 6537) (punctuation 4598 . 4599) (punctuation 4597 . 4598) (punctuation 4596 . 4597) (punctuation 4595 . 4596) (semantic-list 4513 . 4569) (symbol 4494 . 4513) (string 4514 . 4568) (punctuation 4488 . 4489) (symbol 4484 . 4488) (punctuation 4482 . 4483) (punctuation 4481 . 4482) (punctuation 4480 . 4481) (TYPENAME 4472 . 4480) (punctuation 4470 . 4471) (symbol 4451 . 4470) (punctuation 4450 . 4451) (punctuation 4449 . 4450) (symbol 4430 . 4449) (punctuation 4428 . 4429) (symbol 4421 . 4427) (symbol 4401 . 4420) (punctuation 4400 . 4401) (TEMPLATE 4391 . 4399) (punctuation 4373 . 4374) (punctuation 4372 . 4373) (punctuation 4371 . 4372) (punctuation 4370 . 4371) (punctuation 4340 . 4341) (symbol 4336 . 4340) (punctuation 4334 . 4335) (punctuation 4333 . 4334) (punctuation 4332 . 4333) (TYPENAME 4324 . 4332) (punctuation 4322 . 4323) (symbol 4303 . 4322) (punctuation 4302 . 4303) (punctuation 4301 . 4302) (symbol 4282 . 4301) (punctuation 4280 . 4281) (symbol 4273 . 4279) (symbol 4253 . 4272) (punctuation 4252 . 4253) (TEMPLATE 4243 . 4251) (punctuation 3657 . 3658) (USING 1406 . 1411) (punctuation 1404 . 1405) (symbol 1403 . 1404) (TYPENAME 1394 . 1402) (punctuation 1393 . 1394) (TEMPLATE 1384 . 1392) (USING 1218 . 1223) (USING 1156 . 1161) (USING 1086 . 1091) (USING 1021 . 1026) (USING 956 . 961) (USING 891 . 896) (semantic-list 547 . 555) (symbol 532 . 547) (semantic-list 395 . 415) (symbol 380 . 395) (symbol 279 . 283) (symbol 272 . 278) (punctuation 271 . 272) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "str" 1 . 5)))) 34466 . 34543) (symbol "PYBIND11_DEPRECATED" 34466 . 34543) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterable" 1 . 5)))) 34340 . 34407) (symbol "PYBIND11_DEPRECATED" 34340 . 34407) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "detail" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterable" 1 . 5)))) 34340 . 34407) (symbol "PYBIND11_DEPRECATED" 34340 . 34407) (semantic-list #("(\"Use py::isinstance<py::python_type>(obj) instead\")" 0 1 (macros (("CheckFun" symbol "PyIter_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterator" 1 . 5)))) 32958 . 33013) (symbol "PYBIND11_DEPRECATED" 32958 . 33013) (semantic-list #("(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 0 1 (macros (("CheckFun" symbol "PyIter_Check" 15 . 23) ("Parent" symbol "object" 7 . 13) ("Name" symbol "iterator" 1 . 5)))) 32958 . 33013) (symbol "PYBIND11_DEPRECATED" 32958 . 33013) (punctuation 32951 . 32952) (punctuation 32950 . 32951) (symbol 32943 . 32949) (CONST 32937 . 32942) (punctuation 32935 . 32936) (symbol 32927 . 32934) (USING 32921 . 32926) (punctuation 32901 . 32902) (symbol 32891 . 32900) (USING 32885 . 32890) (USING 32854 . 32859) (USING 32817 . 32822) (punctuation 32786 . 32787) (symbol 32768 . 32785) (USING 32762 . 32767) (semantic-list 30308 . 30316) (symbol 30295 . 30308) (punctuation 30265 . 30266) (symbol 30246 . 30265) (punctuation 30245 . 30246) (punctuation 30244 . 30245) (symbol 30225 . 30244) (punctuation 30223 . 30224) (symbol 30216 . 30222) (symbol 30196 . 30215) (punctuation 30195 . 30196) (TEMPLATE 30186 . 30194) (punctuation 30160 . 30161) (symbol 30141 . 30160) (punctuation 30140 . 30141) (punctuation 30139 . 30140) (symbol 30120 . 30139) (punctuation 30118 . 30119) (symbol 30111 . 30117) (symbol 30091 . 30110) (punctuation 30090 . 30091) (TEMPLATE 30081 . 30089) (USING 29957 . 29962) (punctuation 29955 . 29956) (symbol 29954 . 29955) (TYPENAME 29945 . 29953) (punctuation 29944 . 29945) (TEMPLATE 29935 . 29943) (USING 29841 . 29846) (punctuation 29839 . 29840) (symbol 29838 . 29839) (TYPENAME 29829 . 29837) (punctuation 29828 . 29829) (TEMPLATE 29819 . 29827) (USING 29748 . 29753) (punctuation 29746 . 29747) (symbol 29745 . 29746) (TYPENAME 29736 . 29744) (punctuation 29735 . 29736) (TEMPLATE 29726 . 29734) (USING 29659 . 29664) (punctuation 29657 . 29658) (symbol 29656 . 29657) (TYPENAME 29647 . 29655) (punctuation 29646 . 29647) (TEMPLATE 29637 . 29645) (USING 29593 . 29598) (punctuation 29591 . 29592) (symbol 29590 . 29591) (TYPENAME 29581 . 29589) (punctuation 29580 . 29581) (TEMPLATE 29571 . 29579) (EXPLICIT 29401 . 29409) (EXPLICIT 29302 . 29310) (USING 28680 . 28685) (USING 28592 . 28597) (USING 28326 . 28331) (USING 28242 . 28247) (semantic-list 28194 . 28213) (symbol 28181 . 28194) (punctuation 27802 . 27803) (DEFAULT 27795 . 27802) (punctuation 27793 . 27794) (semantic-list 27790 . 27792) (symbol 27777 . 27790) (punctuation 27739 . 27740) (symbol 27731 . 27738) (USING 27725 . 27730) (punctuation 27701 . 27702) (symbol 27691 . 27700) (USING 27685 . 27690) (punctuation 27652 . 27653) (symbol 27641 . 27651) (USING 27635 . 27640) (punctuation 27602 . 27603) (symbol 27584 . 27601) (USING 27578 . 27583) (punctuation 26927 . 26928) (symbol 26919 . 26926) (USING 26913 . 26918) (USING 26872 . 26877) (USING 26841 . 26846) (punctuation 26802 . 26803) (symbol 26784 . 26801) (USING 26778 . 26783) (punctuation 26151 . 26152) (symbol 26143 . 26150) (USING 26137 . 26142) (punctuation 26117 . 26118) (symbol 26107 . 26116) (USING 26101 . 26106) (USING 26070 . 26075) (punctuation 26031 . 26032) (symbol 26013 . 26030) (USING 26007 . 26012) (punctuation 25783 . 25784) (semantic-list 25588 . 25607) (symbol 25573 . 25588) (punctuation 24069 . 24070) (DEFAULT 24062 . 24069) (punctuation 24060 . 24061) (semantic-list 24057 . 24059) (symbol 24041 . 24057) (punctuation 24008 . 24009) (symbol 24000 . 24007) (USING 23994 . 23999) (punctuation 23960 . 23961) (symbol 23950 . 23959) (USING 23944 . 23949) (punctuation 23909 . 23910) (symbol 23898 . 23908) (USING 23892 . 23897) (punctuation 23850 . 23851) (symbol 23832 . 23849) (USING 23826 . 23831) (USING 23789 . 23794) (USING 23747 . 23752) (semantic-list 23588 . 23607) (symbol 23575 . 23588) (USING 23035 . 23040) (USING 22473 . 22478) (USING 21903 . 21908) (USING 21459 . 21464) (punctuation 21257 . 21258) (punctuation 21256 . 21257) (CHAR 21251 . 21255) (CONST 21245 . 21250) (punctuation 21243 . 21244) (symbol 21234 . 21242) (USING 21228 . 21233) (USING 21017 . 21022) (semantic-list 20975 . 20994) (symbol 20960 . 20975) (USING 21017 . 21022) (USING 21017 . 21022) (OPERATOR 20573 . 20581) (OPERATOR 20434 . 20442) (EXPLICIT 20425 . 20433) (semantic-list 20349 . 20420) (symbol 20330 . 20349) (string 20350 . 20419) (punctuation 20324 . 20325) (symbol 20318 . 20324) (punctuation 20316 . 20317) (symbol 20314 . 20315) (TYPENAME 20305 . 20313) (punctuation 20304 . 20305) (TEMPLATE 20295 . 20303) (string 20350 . 20419) (semantic-list 20249 . 20290) (CONST 20243 . 20248) (semantic-list 20240 . 20242) (punctuation 20239 . 20240) (BOOL 20235 . 20239) (punctuation 20233 . 20234) (symbol 20228 . 20233) (punctuation 20227 . 20228) (punctuation 20226 . 20227) (punctuation 20225 . 20226) (symbol 20217 . 20225) (punctuation 20216 . 20217) (punctuation 20215 . 20216) (symbol 20198 . 20215) (punctuation 20196 . 20197) (symbol 20195 . 20196) (punctuation 20194 . 20195) (symbol 20187 . 20194) (punctuation 20186 . 20187) (punctuation 20185 . 20186) (symbol 20182 . 20185) (punctuation 20168 . 20169) (punctuation 20167 . 20168) (symbol 20161 . 20166) (punctuation 20160 . 20161) (punctuation 20159 . 20160) (punctuation 20158 . 20159) (symbol 20150 . 20158) (punctuation 20149 . 20150) (punctuation 20148 . 20149) (symbol 20131 . 20148) (punctuation 20129 . 20130) (symbol 20128 . 20129) (punctuation 20127 . 20128) (symbol 20120 . 20127) (punctuation 20119 . 20120) (punctuation 20118 . 20119) (symbol 20115 . 20118) (punctuation 20114 . 20115) (symbol 20103 . 20114) (OPERATOR 20094 . 20102) (EXPLICIT 20085 . 20093) (semantic-list 19994 . 20080) (symbol 19975 . 19994) (string 19995 . 20079) (punctuation 19969 . 19970) (symbol 19963 . 19969) (punctuation 19961 . 19962) (symbol 19959 . 19960) (TYPENAME 19950 . 19958) (punctuation 19949 . 19950) (TEMPLATE 19940 . 19948) (string 19995 . 20079) (semantic-list 19837 . 19934) (punctuation 19835 . 19836) (semantic-list 19823 . 19834) (punctuation 19822 . 19823) (OPERATOR 19814 . 19822) (punctuation 19827 . 19828) (VOID 19809 . 19813) (punctuation 19827 . 19828) (punctuation 19807 . 19808) (symbol 19806 . 19807) (TYPENAME 19797 . 19805) (punctuation 19796 . 19797) (TEMPLATE 19787 . 19795) (punctuation 19827 . 19828) (semantic-list 19704 . 19782) (punctuation 19702 . 19703) (punctuation 19701 . 19702) (semantic-list 19689 . 19700) (punctuation 19688 . 19689) (OPERATOR 19680 . 19688) (punctuation 19693 . 19694) (VOID 19675 . 19679) (punctuation 19693 . 19694) (punctuation 19673 . 19674) (symbol 19672 . 19673) (TYPENAME 19663 . 19671) (punctuation 19662 . 19663) (TEMPLATE 19653 . 19661) (punctuation 19693 . 19694) (semantic-list 19622 . 19647) (punctuation 19620 . 19621) (semantic-list 19600 . 19619) (punctuation 19599 . 19600) (OPERATOR 19591 . 19599) (VOID 19586 . 19590) (semantic-list 19539 . 19581) (punctuation 19537 . 19538) (punctuation 19536 . 19537) (semantic-list 19516 . 19535) (punctuation 19515 . 19516) (OPERATOR 19507 . 19515) (VOID 19502 . 19506) (punctuation 19335 . 19336) (DEFAULT 19328 . 19335) (punctuation 19326 . 19327) (semantic-list 19312 . 19325) (symbol 19304 . 19312) (punctuation 19323 . 19324) (punctuation 19298 . 19299) (DEFAULT 19291 . 19298) (punctuation 19289 . 19290) (semantic-list 19270 . 19288) (symbol 19262 . 19270) (punctuation 19145 . 19146) (symbol 19136 . 19144) (USING 19130 . 19135) (punctuation 18881 . 18882) (punctuation 18854 . 18855) (number 18853 . 18854) (punctuation 18851 . 18852) (punctuation 18849 . 18850) (INT 18846 . 18849) (punctuation 18844 . 18845) (symbol 18839 . 18844) (punctuation 18838 . 18839) (punctuation 18837 . 18838) (punctuation 18836 . 18837) (symbol 18835 . 18836) (punctuation 18834 . 18835) (symbol 18823 . 18834) (punctuation 18822 . 18823) (punctuation 18821 . 18822) (symbol 18810 . 18821) (punctuation 18808 . 18809) (symbol 18807 . 18808) (TYPENAME 18798 . 18806) (punctuation 18797 . 18798) (TEMPLATE 18788 . 18796) (semantic-list 18693 . 18696) (punctuation 18667 . 18668) (punctuation 18666 . 18667) (semantic-list 18658 . 18665) (symbol 18644 . 18658) (punctuation 18662 . 18663) (symbol 18639 . 18643) (punctuation 18662 . 18663) (punctuation 18637 . 18638) (number 18636 . 18637) (punctuation 18634 . 18635) (punctuation 18632 . 18633) (INT 18629 . 18632) (punctuation 18627 . 18628) (symbol 18622 . 18627) (punctuation 18621 . 18622) (punctuation 18620 . 18621) (punctuation 18619 . 18620) (symbol 18618 . 18619) (punctuation 18617 . 18618) (symbol 18606 . 18617) (punctuation 18605 . 18606) (symbol 18594 . 18605) (punctuation 18592 . 18593) (symbol 18591 . 18592) (TYPENAME 18582 . 18590) (punctuation 18581 . 18582) (TEMPLATE 18572 . 18580) (semantic-list 17957 . 17965) (symbol 17942 . 17957) (punctuation 15539 . 15540) (DELETE 15533 . 15539) (punctuation 15531 . 15532) (semantic-list 15518 . 15530) (punctuation 15517 . 15518) (symbol 15511 . 15517) (punctuation 15510 . 15511) (symbol 15500 . 15510) (BOOL 15495 . 15499) (INLINE 15488 . 15494) (punctuation 15486 . 15487) (punctuation 15485 . 15486) (TEMPLATE 15476 . 15484) (punctuation 15390 . 15391) (number 15389 . 15390) (punctuation 15387 . 15388) (punctuation 15385 . 15386) (INT 15382 . 15385) (punctuation 15380 . 15381) (symbol 15375 . 15380) (punctuation 15374 . 15375) (punctuation 15373 . 15374) (punctuation 15372 . 15373) (symbol 15371 . 15372) (punctuation 15369 . 15370) (symbol 15363 . 15369) (punctuation 15362 . 15363) (symbol 15352 . 15362) (punctuation 15351 . 15352) (punctuation 15350 . 15351) (symbol 15347 . 15350) (punctuation 15346 . 15347) (punctuation 15345 . 15346) (symbol 15334 . 15345) (punctuation 15333 . 15334) (punctuation 15332 . 15333) (symbol 15326 . 15332) (punctuation 15324 . 15325) (symbol 15323 . 15324) (TYPENAME 15314 . 15322) (punctuation 15313 . 15314) (TEMPLATE 15304 . 15312) (punctuation 15246 . 15247) (number 15245 . 15246) (punctuation 15243 . 15244) (punctuation 15241 . 15242) (INT 15238 . 15241) (punctuation 15236 . 15237) (symbol 15231 . 15236) (punctuation 15230 . 15231) (punctuation 15229 . 15230) (punctuation 15228 . 15229) (symbol 15227 . 15228) (punctuation 15225 . 15226) (symbol 15219 . 15225) (punctuation 15218 . 15219) (symbol 15208 . 15218) (punctuation 15207 . 15208) (punctuation 15206 . 15207) (symbol 15203 . 15206) (punctuation 15202 . 15203) (symbol 15191 . 15202) (punctuation 15190 . 15191) (punctuation 15189 . 15190) (symbol 15183 . 15189) (punctuation 15181 . 15182) (symbol 15180 . 15181) (TYPENAME 15171 . 15179) (punctuation 15170 . 15171) (TEMPLATE 15161 . 15169) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 13108 . 13116) (symbol 13095 . 13108) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 14374 . 14424) (symbol 14355 . 14374) (string 14375 . 14423) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 13051 . 13059) (symbol 13036 . 13051) (punctuation 11622 . 11623) (punctuation 11621 . 11622) (punctuation 11620 . 11621) (semantic-list 11617 . 11619) (symbol 11613 . 11617) (symbol 11611 . 11612) (punctuation 11609 . 11610) (symbol 11608 . 11609) (TYPENAME 11599 . 11607) (punctuation 11598 . 11599) (TEMPLATE 11589 . 11597) (punctuation 11509 . 11510) (punctuation 11508 . 11509) (CONST 11502 . 11507) (semantic-list 11499 . 11501) (symbol 11495 . 11499) (symbol 11493 . 11494) (punctuation 11491 . 11492) (symbol 11490 . 11491) (TYPENAME 11481 . 11489) (punctuation 11480 . 11481) (TEMPLATE 11471 . 11479) (semantic-list 11195 . 11392) (symbol 11186 . 11194) (semantic-list 11169 . 11185) (punctuation 11168 . 11169) (OPERATOR 11160 . 11168) (punctuation 11178 . 11179) (punctuation 11158 . 11159) (symbol 11152 . 11158) (punctuation 11178 . 11179) (semantic-list 10538 . 10585) (symbol 10529 . 10537) (semantic-list 10512 . 10528) (symbol 10506 . 10512) (punctuation 10521 . 10522) (semantic-list 10140 . 10207) (symbol 10121 . 10140) (string 10141 . 10206) (punctuation 10115 . 10116) (DEFAULT 10108 . 10115) (punctuation 10106 . 10107) (semantic-list 10103 . 10105) (symbol 10097 . 10103) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 7002 . 7010) (symbol 6989 . 7002) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 6510 . 6538) (symbol 6491 . 6510) (string 6511 . 6537) (punctuation 4598 . 4599) (punctuation 4597 . 4598) (punctuation 4596 . 4597) (punctuation 4595 . 4596) (semantic-list 4513 . 4569) (symbol 4494 . 4513) (string 4514 . 4568) (punctuation 4488 . 4489) (symbol 4484 . 4488) (punctuation 4482 . 4483) (punctuation 4481 . 4482) (punctuation 4480 . 4481) (TYPENAME 4472 . 4480) (punctuation 4470 . 4471) (symbol 4451 . 4470) (punctuation 4450 . 4451) (punctuation 4449 . 4450) (symbol 4430 . 4449) (punctuation 4428 . 4429) (symbol 4421 . 4427) (symbol 4401 . 4420) (punctuation 4400 . 4401) (TEMPLATE 4391 . 4399) (punctuation 4373 . 4374) (punctuation 4372 . 4373) (punctuation 4371 . 4372) (punctuation 4370 . 4371) (punctuation 4340 . 4341) (symbol 4336 . 4340) (punctuation 4334 . 4335) (punctuation 4333 . 4334) (punctuation 4332 . 4333) (TYPENAME 4324 . 4332) (punctuation 4322 . 4323) (symbol 4303 . 4322) (punctuation 4302 . 4303) (punctuation 4301 . 4302) (symbol 4282 . 4301) (punctuation 4280 . 4281) (symbol 4273 . 4279) (symbol 4253 . 4272) (punctuation 4252 . 4253) (TEMPLATE 4243 . 4251) (punctuation 3657 . 3658) (USING 1406 . 1411) (punctuation 1404 . 1405) (symbol 1403 . 1404) (TYPENAME 1394 . 1402) (punctuation 1393 . 1394) (TEMPLATE 1384 . 1392) (USING 1218 . 1223) (USING 1156 . 1161) (USING 1086 . 1091) (USING 1021 . 1026) (USING 956 . 961) (USING 891 . 896) (semantic-list 547 . 555) (symbol 532 . 547) (semantic-list 395 . 415) (symbol 380 . 395) (symbol 279 . 283) (symbol 272 . 278) (punctuation 271 . 272) (punctuation 13878 . 13879) (DEFAULT 13871 . 13878) (punctuation 13869 . 13870) (semantic-list 13846 . 13868) (symbol 13829 . 13846) (punctuation 13866 . 13867) (punctuation 13823 . 13824) (DEFAULT 13816 . 13823) (punctuation 13814 . 13815) (semantic-list 13786 . 13813) (symbol 13769 . 13786) (semantic-list 13051 . 13059) (symbol 13036 . 13051) (punctuation 11622 . 11623) (punctuation 11621 . 11622) (punctuation 11620 . 11621) (semantic-list 11617 . 11619) (symbol 11613 . 11617) (symbol 11611 . 11612) (punctuation 11609 . 11610) (symbol 11608 . 11609) (TYPENAME 11599 . 11607) (punctuation 11598 . 11599) (TEMPLATE 11589 . 11597) (punctuation 11509 . 11510) (punctuation 11508 . 11509) (CONST 11502 . 11507) (semantic-list 11499 . 11501) (symbol 11495 . 11499) (symbol 11493 . 11494) (punctuation 11491 . 11492) (symbol 11490 . 11491) (TYPENAME 11481 . 11489) (punctuation 11480 . 11481) (TEMPLATE 11471 . 11479) (semantic-list 11195 . 11392) (symbol 11186 . 11194) (semantic-list 11169 . 11185) (punctuation 11168 . 11169) (OPERATOR 11160 . 11168) (punctuation 11178 . 11179) (punctuation 11158 . 11159) (symbol 11152 . 11158) (punctuation 11178 . 11179) (semantic-list 10538 . 10585) (symbol 10529 . 10537) (semantic-list 10512 . 10528) (symbol 10506 . 10512) (punctuation 10521 . 10522) (semantic-list 10140 . 10207) (symbol 10121 . 10140) (string 10141 . 10206) (punctuation 10115 . 10116) (DEFAULT 10108 . 10115) (punctuation 10106 . 10107) (semantic-list 10103 . 10105) (symbol 10097 . 10103) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 7002 . 7010) (symbol 6989 . 7002) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 9352 . 9391) (symbol 9333 . 9352) (string 9353 . 9390) (semantic-list 9226 . 9256) (symbol 9207 . 9226) (string 9227 . 9255) (semantic-list 9101 . 9130) (symbol 9082 . 9101) (string 9102 . 9129) (semantic-list 8902 . 8930) (CONST 8896 . 8901) (semantic-list 8893 . 8895) (BOOL 8889 . 8893) (OPERATOR 8880 . 8888) (EXPLICIT 8871 . 8879) (semantic-list 8571 . 8607) (punctuation 8569 . 8570) (CONST 8563 . 8568) (semantic-list 8560 . 8562) (symbol 8553 . 8560) (punctuation 8551 . 8552) (symbol 8545 . 8551) (CONST 8539 . 8544) (semantic-list 8235 . 8271) (punctuation 8233 . 8234) (CONST 8227 . 8232) (semantic-list 8224 . 8226) (symbol 8217 . 8224) (punctuation 8215 . 8216) (symbol 8209 . 8215) (CONST 8203 . 8208) (punctuation 7911 . 7912) (punctuation 7910 . 7911) (symbol 7901 . 7909) (punctuation 7640 . 7641) (DEFAULT 7633 . 7640) (punctuation 7631 . 7632) (semantic-list 7628 . 7630) (symbol 7622 . 7628) (semantic-list 6510 . 6538) (symbol 6491 . 6510) (string 6511 . 6537) (punctuation 4598 . 4599) (punctuation 4597 . 4598) (punctuation 4596 . 4597) (punctuation 4595 . 4596) (semantic-list 4513 . 4569) (symbol 4494 . 4513) (string 4514 . 4568) (punctuation 4488 . 4489) (symbol 4484 . 4488) (punctuation 4482 . 4483) (punctuation 4481 . 4482) (punctuation 4480 . 4481) (TYPENAME 4472 . 4480) (punctuation 4470 . 4471) (symbol 4451 . 4470) (punctuation 4450 . 4451) (punctuation 4449 . 4450) (symbol 4430 . 4449) (punctuation 4428 . 4429) (symbol 4421 . 4427) (symbol 4401 . 4420) (punctuation 4400 . 4401) (TEMPLATE 4391 . 4399) (punctuation 4373 . 4374) (punctuation 4372 . 4373) (punctuation 4371 . 4372) (punctuation 4370 . 4371) (punctuation 4340 . 4341) (symbol 4336 . 4340) (punctuation 4334 . 4335) (punctuation 4333 . 4334) (punctuation 4332 . 4333) (TYPENAME 4324 . 4332) (punctuation 4322 . 4323) (symbol 4303 . 4322) (punctuation 4302 . 4303) (punctuation 4301 . 4302) (symbol 4282 . 4301) (punctuation 4280 . 4281) (symbol 4273 . 4279) (symbol 4253 . 4272) (punctuation 4252 . 4253) (TEMPLATE 4243 . 4251) (punctuation 3657 . 3658) (USING 1406 . 1411) (punctuation 1404 . 1405) (symbol 1403 . 1404) (TYPENAME 1394 . 1402) (punctuation 1393 . 1394) (TEMPLATE 1384 . 1392) (USING 1218 . 1223) (USING 1156 . 1161) (USING 1086 . 1091) (USING 1021 . 1026) (USING 956 . 961) (USING 891 . 896) (semantic-list 547 . 555) (symbol 532 . 547) (semantic-list 395 . 415) (symbol 380 . 395) (symbol 279 . 283) (symbol 272 . 278) (punctuation 271 . 272))
      :lexical-table 
        '(("PYBIND11_OBJECT_COMMON" (spp-arg-list ("Name" "Parent" "CheckFun") 30638 . 30662) . 
              ((PUBLIC "public" 30669 . 30675) (punctuation ":" 30675 . 30676) (symbol "PYBIND11_DEPRECATED" 30687 . 30706) (semantic-list "(\"Use reinterpret_borrow<\"#Name\">() or reinterpret_steal<\"#Name\">()\")" 30706 . 30775) (symbol "Name" 30786 . 30790) (semantic-list "(handle h, bool is_borrowed)" 30790 . 30818) (punctuation ":" 30819 . 30820) (symbol "Parent" 30821 . 30827) (semantic-list "(is_borrowed ? Parent(h, borrowed_t{}) : Parent(h, stolen_t{}))" 30827 . 30890) (semantic-list "{ }" 30891 . 30894) (symbol "Name" 30905 . 30909) (semantic-list "(handle h, borrowed_t)" 30909 . 30931) (punctuation ":" 30932 . 30933) (symbol "Parent" 30934 . 30940) (semantic-list "(h, borrowed_t{})" 30940 . 30957) (semantic-list "{ }" 30958 . 30961) (symbol "Name" 30972 . 30976) (semantic-list "(handle h, stolen_t)" 30976 . 30996) (punctuation ":" 30997 . 30998) (symbol "Parent" 30999 . 31005) (semantic-list "(h, stolen_t{})" 31005 . 31020) (semantic-list "{ }" 31021 . 31024) (symbol "PYBIND11_DEPRECATED" 31035 . 31054) (semantic-list "(\"Use py::isinstance<py::python_type>(obj) instead\")" 31054 . 31106) (BOOL "bool" 31117 . 31121) (symbol "check" 31122 . 31127) (semantic-list "()" 31127 . 31129) (CONST "const" 31130 . 31135) (semantic-list "{ return m_ptr != nullptr && (bool) CheckFun(m_ptr); }" 31136 . 31190) (STATIC "static" 31201 . 31207) (BOOL "bool" 31208 . 31212) (symbol "check_" 31213 . 31219) (semantic-list "(handle h)" 31219 . 31229) (semantic-list "{ return h.ptr() != nullptr && CheckFun(h.ptr()); }" 31230 . 31281)))
          ("PYBIND11_OBJECT_CVT" (spp-arg-list ("Name" "Parent" "CheckFun" "ConvertFun") 31310 . 31346) . 
              ((symbol "PYBIND11_OBJECT_COMMON" 31353 . 31375) (semantic-list "(Name, Parent, CheckFun)" 31375 . 31399) (symbol "Name" 31496 . 31500) (semantic-list "(const object &o)" 31500 . 31517) (punctuation ":" 31524 . 31525) (symbol "Parent" 31526 . 31532) (semantic-list "(check_(o) ? o.inc_ref().ptr() : ConvertFun(o.ptr()), stolen_t{})" 31532 . 31597) (semantic-list "{ if (!m_ptr) throw error_already_set(); }" 31604 . 31646) (symbol "Name" 31653 . 31657) (semantic-list "(object &&o)" 31657 . 31669) (punctuation ":" 31676 . 31677) (symbol "Parent" 31678 . 31684) (semantic-list "(check_(o) ? o.release().ptr() : ConvertFun(o.ptr()), stolen_t{})" 31684 . 31749) (semantic-list "{ if (!m_ptr) throw error_already_set(); }" 31756 . 31798) (TEMPLATE "template" 31805 . 31813) (punctuation "<" 31814 . 31815) (TYPENAME "typename" 31815 . 31823) (symbol "Policy_" 31824 . 31831) (punctuation ">" 31831 . 31832) (symbol "Name" 31839 . 31843) (semantic-list "(const ::pybind11::detail::accessor<Policy_> &a)" 31843 . 31891) (punctuation ":" 31892 . 31893) (symbol "Name" 31894 . 31898) (semantic-list "(object(a))" 31898 . 31909) (semantic-list "{ }" 31910 . 31913)))
          ("PYBIND11_OBJECT" (spp-arg-list ("Name" "Parent" "CheckFun") 31938 . 31962) . 
              ((symbol "PYBIND11_OBJECT_COMMON" 31969 . 31991) (semantic-list "(Name, Parent, CheckFun)" 31991 . 32015) (symbol "Name" 32112 . 32116) (semantic-list "(const object &o)" 32116 . 32133) (punctuation ":" 32134 . 32135) (symbol "Parent" 32136 . 32142) (semantic-list "(o)" 32142 . 32145) (semantic-list "{ }" 32146 . 32149) (symbol "Name" 32156 . 32160) (semantic-list "(object &&o)" 32160 . 32172) (punctuation ":" 32173 . 32174) (symbol "Parent" 32175 . 32181) (semantic-list "(std::move(o))" 32181 . 32195) (semantic-list "{ }" 32196 . 32199)))
          ("PYBIND11_OBJECT_DEFAULT" (spp-arg-list ("Name" "Parent" "CheckFun") 32232 . 32256) . 
              ((symbol "PYBIND11_OBJECT" 32263 . 32278) (semantic-list "(Name, Parent, CheckFun)" 32278 . 32302) (symbol "Name" 32309 . 32313) (semantic-list "()" 32313 . 32315) (punctuation ":" 32316 . 32317) (symbol "Parent" 32318 . 32324) (semantic-list "()" 32324 . 32326) (semantic-list "{ }" 32327 . 32330)))
          )
)
    (semanticdb-table "buffer_info.h"
      :file "buffer_info.h"
      :fsize 4326
      :lastmodtime '(23303 46019 692562 529000)))
  :file "!home!rvbust!Rvbust!Sources!Pybind11!include!pybind11!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
