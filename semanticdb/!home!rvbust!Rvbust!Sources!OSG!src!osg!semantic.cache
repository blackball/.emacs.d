;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("osg/Group" include (:system-flag t) nil [631 651])
            ("osg/BoundingBox" include (:system-flag t) nil [652 678])
            ("osg/Transform" include (:system-flag t) nil [679 703])
            ("osg/OccluderNode" include (:system-flag t) nil [704 731])
            ("osg/Geometry" include (:system-flag t) nil [732 755])
            ("osg/Notify" include (:system-flag t) nil [756 777])
            ("stdio.h" include (:system-flag t) nil [779 797])
            ("math.h" include (:system-flag t) nil [798 815])
            ("algorithm" include (:system-flag t) nil [817 837])
            ("osg" using (:type ("osg" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [839 859])
            ("Group" function
               (:constructor-flag t
                :parent "Group"
                :type ("Group" type (:type "class") nil nil))
                nil [861 879])
            ("Group" function
               (:constructor-flag t
                :parent "Group"
                :arguments 
                  ( ("group" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Group" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [894 913])
                    ("copyop" variable
                       (:reference 1
                        :constant-flag t
                        :type ("CopyOp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [913 934]))                  
                :type ("Group" type (:type "class") nil nil))
                nil [881 1165])
            ("Group" function
               (:destructor-flag t
                :parent "Group"
                :type "void")
                nil [1167 1392])
            ("traverse" function
               (:parent "Group"
                :arguments 
                  ( ("nv" variable
                       (:reference 1
                        :type ("NodeVisitor" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1416 1432]))                  
                :type "void")
                nil [1395 1571])
            ("addChild" function
               (:parent "Group"
                :arguments 
                  ( ("child" variable
                       (:pointer 1
                        :type ("Node" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1596 1609]))                  
                :type "bool")
                nil [1574 1671])
            ("insertChild" function
               (:parent "Group"
                :arguments 
                  ( ("index" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [1698 1717])
                    ("child" variable
                       (:pointer 1
                        :type ("Node" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1718 1731]))                  
                :type "bool")
                nil [1673 3983])
            ("getNumChildren" function
               (:parent "Group"
                :type "unsigned int")
                nil [3985 4087])
            ("removeChild" function
               (:parent "Group"
                :arguments 
                  ( ("child" variable
                       (:pointer 1
                        :type ("Node" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4115 4128]))                  
                :type "bool")
                nil [4090 4260])
            ("removeChildren" function
               (:parent "Group"
                :arguments 
                  ( ("pos" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [4290 4307])
                    ("numChildrenToRemove" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [4307 4340]))                  
                :type "bool")
                nil [4263 6689])
            ("replaceChild" function
               (:parent "Group"
                :arguments 
                  ( ("origNode" variable
                       (:pointer 1
                        :type ("Node" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6718 6733])
                    ("newNode" variable
                       (:pointer 1
                        :type ("Node" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6734 6749]))                  
                :type "bool")
                nil [6692 6958])
            ("setChild" function
               (:parent "Group"
                :arguments 
                  ( ("i" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [6983 6999])
                    ("newNode" variable
                       (:pointer 1
                        :type ("Node" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7000 7015]))                  
                :type "bool")
                nil [6961 10687])
            ("computeBound" function
               (:parent "Group"
                :type ("BoundingSphere" type (:type "class") nil nil))
                nil [10689 12309])
            ("setThreadSafeRefUnref" function
               (:parent "Group"
                :arguments 
                  ( ("threadSafe" variable (:type "bool") (reparse-symbol arg-sub-list) [12345 12361]))                  
                :type "void")
                nil [12311 12575])
            ("resizeGLObjectBuffers" function
               (:parent "Group"
                :arguments 
                  ( ("maxSize" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [12611 12632]))                  
                :type "void")
                nil [12577 12840])
            ("releaseGLObjects" function
               (:parent "Group"
                :arguments 
                  ( ("state" variable
                       (:pointer 1
                        :type ("osg::State" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12871 12889]))                  
                :type "void")
                nil [12842 13089]))          
      :file "Group.cpp"
      :pointmax 13090
      :fsize 13089
      :lastmodtime '(24040 25687 432592 320000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("osg/PositionAttitudeTransform" include (:system-flag t) nil [630 670])
            ("osg" using (:type ("osg" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [672 692])
            ("PositionAttitudeTransform" function
               (:constructor-flag t
                :parent "PositionAttitudeTransform"
                :type ("PositionAttitudeTransform" type (:type "class") nil nil))
                nil [694 777])
            ("computeLocalToWorldMatrix" function
               (:parent "PositionAttitudeTransform"
                :arguments 
                  ( ("matrix" variable
                       (:reference 1
                        :type ("Matrix" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [837 852])
                    ("" variable
                       (:pointer 1
                        :type ("NodeVisitor" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [852 865]))                  
                :type "bool")
                nil [779 1311])
            ("computeWorldToLocalMatrix" function
               (:parent "PositionAttitudeTransform"
                :arguments 
                  ( ("matrix" variable
                       (:reference 1
                        :type ("Matrix" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1372 1387])
                    ("" variable
                       (:pointer 1
                        :type ("NodeVisitor" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1387 1400]))                  
                :type "bool")
                nil [1314 2057]))          
      :file "PositionAttitudeTransform.cpp"
      :pointmax 2058
      :fsize 2057
      :lastmodtime '(23936 42023 834329 234000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("osg/Matrixf" include (:system-flag t) nil [631 653])
            ("osg/Matrixd" include (:system-flag t) nil [654 676])
            ("Matrix_implementation" variable (:constant-flag t) nil [737 758])
            ("Matrixf" function
               (:parent "osg::Matrixf"
                :arguments 
                  ( ("mat" variable
                       (:reference 1
                        :constant-flag t
                        :type ("osg::Matrixd" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [791 816]))                  
                :type "int")
                nil [768 840])
            ("=" function
               (:operator-flag t
                :parent "osg::Matrixf"
                :arguments 
                  ( ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("osg::Matrixd" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [882 906]))                  
                :type ("osg::Matrixf" type (:type "class") nil nil))
                nil [842 948])
            ("set" function
               (:parent "osg::Matrixf"
                :arguments 
                  ( ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("osg::Matrixd" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [973 997]))                  
                :type "void")
                nil [950 1021])
            ("Matrix_implementation.cpp" include nil nil [1074 1110]))          
      :file "Matrixf.cpp"
      :pointmax 1111
      :fsize 1110
      :lastmodtime '(23936 42023 834329 234000)
      :unmatched-syntax nil
      :lexical-table 
        '(("Matrix_implementation" . ((symbol "Matrixf" 759 . 766)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("osg/Quat" include (:system-flag t) nil [631 650])
            ("osg/Notify" include (:system-flag t) nil [651 672])
            ("osg/Math" include (:system-flag t) nil [673 692])
            ("osg/Timer" include (:system-flag t) nil [693 713])
            ("osg/GL" include (:system-flag t) nil [715 732])
            ("limits" include (:system-flag t) nil [734 751])
            ("stdlib.h" include (:system-flag t) nil [752 771])
            ("float.h" include (:system-flag t) nil [772 790])
            ("osg" using (:type ("osg" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [792 812])
            ("SET_ROW" variable (:constant-flag t) nil [822 829])
            ("INNER_PRODUCT" variable (:constant-flag t) nil [980 993])
            ("Matrix_implementation" function
               (:constructor-flag t
                :parent "Matrix_implementation"
                :arguments 
                  ( ("a00" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1215 1230])
                    ("a01" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1231 1246])
                    ("a02" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1247 1262])
                    ("a03" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1263 1278])
                    ("a10" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1297 1312])
                    ("a11" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1313 1328])
                    ("a12" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1329 1344])
                    ("a13" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1345 1360])
                    ("a20" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1379 1394])
                    ("a21" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1395 1410])
                    ("a22" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1411 1426])
                    ("a23" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1427 1442])
                    ("a30" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1461 1476])
                    ("a31" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1477 1492])
                    ("a32" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1493 1508])
                    ("a33" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1509 1524]))                  
                :type ("Matrix_implementation" type (:type "class") nil nil))
                nil [1169 1672])
            ("set" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("a00" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1707 1722])
                    ("a01" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1723 1738])
                    ("a02" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1739 1754])
                    ("a03" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1755 1770])
                    ("a10" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1790 1805])
                    ("a11" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1806 1821])
                    ("a12" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1822 1837])
                    ("a13" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1838 1853])
                    ("a20" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1873 1888])
                    ("a21" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1889 1904])
                    ("a22" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1905 1920])
                    ("a23" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1921 1936])
                    ("a30" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1956 1971])
                    ("a31" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1972 1987])
                    ("a32" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1988 2003])
                    ("a33" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2004 2019]))                  
                :type "void")
                nil [1674 2167])
            ("QX" variable (:constant-flag t) nil [2177 2179])
            ("QY" variable (:constant-flag t) nil [2197 2199])
            ("QZ" variable (:constant-flag t) nil [2217 2219])
            ("QW" variable (:constant-flag t) nil [2237 2239])
            ("setRotate" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("q" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Quat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2288 2302]))                  
                :type "void")
                nil [2250 4337])
            ("COMPILE_getRotate_David_Spillings_Mk1" variable (:constant-flag t) nil [4347 4384])
            ("getRotate" function
               (:parent "Matrix_implementation"
                :type ("Quat" type (:type "class") nil nil))
                nil [4555 5836])
            ("compare" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("m" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Matrix_implementation" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8314 8345]))                  
                :type "int")
                nil [8279 8786])
            ("setTrans" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("tx" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8826 8840])
                    ("ty" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8841 8855])
                    ("tz" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8856 8871]))                  
                :type "void")
                nil [8788 8938])
            ("setTrans" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("v" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Vec3f" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8979 8995]))                  
                :type "void")
                nil [8941 9068])
            ("setTrans" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("v" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Vec3d" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9107 9123]))                  
                :type "void")
                nil [9069 9196])
            ("makeIdentity" function
               (:parent "Matrix_implementation"
                :type "void")
                nil [9198 9368])
            ("makeScale" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("v" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Vec3f" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9409 9425]))                  
                :type "void")
                nil [9370 9463])
            ("makeScale" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("v" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Vec3d" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9504 9520]))                  
                :type "void")
                nil [9465 9558])
            ("makeScale" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("x" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9599 9612])
                    ("y" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9613 9626])
                    ("z" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9627 9641]))                  
                :type "void")
                nil [9560 9769])
            ("makeTranslate" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("v" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Vec3f" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9814 9830]))                  
                :type "void")
                nil [9771 9873])
            ("makeTranslate" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("v" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Vec3d" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9918 9934]))                  
                :type "void")
                nil [9875 9977])
            ("makeTranslate" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("x" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10022 10035])
                    ("y" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10036 10049])
                    ("z" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10050 10064]))                  
                :type "void")
                nil [9979 10192])
            ("makeRotate" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("from" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Vec3f" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10234 10252])
                    ("to" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Vec3f" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10253 10270]))                  
                :type "void")
                nil [10194 10361])
            ("makeRotate" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("from" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Vec3d" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10402 10420])
                    ("to" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Vec3d" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10421 10438]))                  
                :type "void")
                nil [10362 10529])
            ("makeRotate" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("angle" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10571 10588])
                    ("axis" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Vec3f" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10589 10608]))                  
                :type "void")
                nil [10531 10704])
            ("makeRotate" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("angle" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10745 10762])
                    ("axis" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Vec3d" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10763 10782]))                  
                :type "void")
                nil [10705 10878])
            ("makeRotate" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("angle" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10920 10937])
                    ("x" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10938 10951])
                    ("y" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10952 10965])
                    ("z" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10966 10980]))                  
                :type "void")
                nil [10880 11079])
            ("makeRotate" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("quat" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Quat" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11121 11139]))                  
                :type "void")
                nil [11081 11185])
            ("makeRotate" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("angle1" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11227 11245])
                    ("axis1" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Vec3f" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11246 11265])
                    ("angle2" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11291 11309])
                    ("axis2" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Vec3f" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11310 11329])
                    ("angle3" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11355 11373])
                    ("axis3" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Vec3f" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11374 11393]))                  
                :type "void")
                nil [11187 11560])
            ("makeRotate" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("angle1" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11602 11620])
                    ("axis1" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Vec3d" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11621 11640])
                    ("angle2" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11666 11684])
                    ("axis2" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Vec3d" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11685 11704])
                    ("angle3" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11730 11748])
                    ("axis3" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Vec3d" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11749 11768]))                  
                :type "void")
                nil [11562 11935])
            ("mult" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("lhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Matrix_implementation" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11971 12004])
                    ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Matrix_implementation" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12005 12039]))                  
                :type "void")
                nil [11937 13056])
            ("preMult" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("other" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Matrix_implementation" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13095 13131]))                  
                :type "void")
                nil [13058 13718])
            ("postMult" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("other" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Matrix_implementation" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13758 13794]))                  
                :type "void")
                nil [13720 14315])
            ("orthoNormalize" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Matrix_implementation" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14424 14457]))                  
                :type "void")
                nil [14381 16267])
            ("invert_4x3" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("mat" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Matrix_implementation" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17491 17525]))                  
                :type "bool")
                nil [17451 21226])
            ("SGL_ABS" function
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type ("T" type (:type "class") nil nil)
                :arguments 
                  ( ("a" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21265 21269]))                  
                :typemodifiers ("inline"))
                nil [21229 21302])
            ("SGL_SWAP" variable (:constant-flag t) nil [21329 21337])
            ("transpose" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("mat" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Matrix_implementation" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21426 21458]))                  
                :type "bool")
                nil [21388 21945])
            ("transpose3x3" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("mat" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Matrix_implementation" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21988 22020]))                  
                :type "bool")
                nil [21947 22325])
            ("invert_4x4" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("mat" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Matrix_implementation" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [22367 22401]))                  
                :type "bool")
                nil [22327 24212])
            ("makeOrtho" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("left" variable (:type "double") (reparse-symbol arg-sub-list) [24252 24264])
                    ("right" variable (:type "double") (reparse-symbol arg-sub-list) [24265 24278])
                    ("bottom" variable (:type "double") (reparse-symbol arg-sub-list) [24302 24316])
                    ("top" variable (:type "double") (reparse-symbol arg-sub-list) [24317 24328])
                    ("zNear" variable (:type "double") (reparse-symbol arg-sub-list) [24352 24365])
                    ("zFar" variable (:type "double") (reparse-symbol arg-sub-list) [24366 24378]))                  
                :type "void")
                nil [24214 24953])
            ("getOrtho" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("left" variable
                       (:reference 1
                        :type ("Matrix_implementation::value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24992 25032])
                    ("right" variable
                       (:reference 1
                        :type ("Matrix_implementation::value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25033 25074])
                    ("bottom" variable
                       (:reference 1
                        :type ("Matrix_implementation::value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25112 25154])
                    ("top" variable
                       (:reference 1
                        :type ("Matrix_implementation::value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25155 25194])
                    ("zNear" variable
                       (:reference 1
                        :type ("Matrix_implementation::value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25232 25273])
                    ("zFar" variable
                       (:reference 1
                        :type ("Matrix_implementation::value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25274 25314]))                  
                :type "bool")
                nil [24955 25698])
            ("getOrtho" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("left" variable
                       (:reference 1
                        :type ("Matrix_implementation::other_value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25737 25783])
                    ("right" variable
                       (:reference 1
                        :type ("Matrix_implementation::other_value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25784 25831])
                    ("bottom" variable
                       (:reference 1
                        :type ("Matrix_implementation::other_value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25869 25917])
                    ("top" variable
                       (:reference 1
                        :type ("Matrix_implementation::other_value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25918 25963])
                    ("zNear" variable
                       (:reference 1
                        :type ("Matrix_implementation::other_value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26001 26048])
                    ("zFar" variable
                       (:reference 1
                        :type ("Matrix_implementation::other_value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26049 26095]))                  
                :type "bool")
                nil [25700 26537])
            ("makeFrustum" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("left" variable (:type "double") (reparse-symbol arg-sub-list) [26579 26591])
                    ("right" variable (:type "double") (reparse-symbol arg-sub-list) [26592 26605])
                    ("bottom" variable (:type "double") (reparse-symbol arg-sub-list) [26631 26645])
                    ("top" variable (:type "double") (reparse-symbol arg-sub-list) [26646 26657])
                    ("zNear" variable (:type "double") (reparse-symbol arg-sub-list) [26683 26696])
                    ("zFar" variable (:type "double") (reparse-symbol arg-sub-list) [26697 26709]))                  
                :type "void")
                nil [26539 27378])
            ("getFrustum" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("left" variable
                       (:reference 1
                        :type ("Matrix_implementation::value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27419 27459])
                    ("right" variable
                       (:reference 1
                        :type ("Matrix_implementation::value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27460 27501])
                    ("bottom" variable
                       (:reference 1
                        :type ("Matrix_implementation::value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27541 27583])
                    ("top" variable
                       (:reference 1
                        :type ("Matrix_implementation::value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27584 27623])
                    ("zNear" variable
                       (:reference 1
                        :type ("Matrix_implementation::value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27663 27704])
                    ("zFar" variable
                       (:reference 1
                        :type ("Matrix_implementation::value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27705 27745]))                  
                :type "bool")
                nil [27380 28475])
            ("getFrustum" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("left" variable
                       (:reference 1
                        :type ("Matrix_implementation::other_value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28516 28562])
                    ("right" variable
                       (:reference 1
                        :type ("Matrix_implementation::other_value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28563 28610])
                    ("bottom" variable
                       (:reference 1
                        :type ("Matrix_implementation::other_value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28650 28698])
                    ("top" variable
                       (:reference 1
                        :type ("Matrix_implementation::other_value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28699 28744])
                    ("zNear" variable
                       (:reference 1
                        :type ("Matrix_implementation::other_value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28784 28831])
                    ("zFar" variable
                       (:reference 1
                        :type ("Matrix_implementation::other_value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28832 28878]))                  
                :type "bool")
                nil [28477 29322])
            ("makePerspective" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("fovy" variable (:type "double") (reparse-symbol arg-sub-list) [29368 29380])
                    ("aspectRatio" variable (:type "double") (reparse-symbol arg-sub-list) [29380 29399])
                    ("zNear" variable (:type "double") (reparse-symbol arg-sub-list) [29444 29457])
                    ("zFar" variable (:type "double") (reparse-symbol arg-sub-list) [29458 29470]))                  
                :type "void")
                nil [29324 29777])
            ("getPerspective" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("fovy" variable
                       (:reference 1
                        :type ("Matrix_implementation::value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29822 29862])
                    ("aspectRatio" variable
                       (:reference 1
                        :type ("Matrix_implementation::value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29863 29910])
                    ("zNear" variable
                       (:reference 1
                        :type ("Matrix_implementation::value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29954 29995])
                    ("zFar" variable
                       (:reference 1
                        :type ("Matrix_implementation::value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29996 30036]))                  
                :type "bool")
                nil [29779 30859])
            ("getPerspective" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("fovy" variable
                       (:reference 1
                        :type ("Matrix_implementation::other_value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [30904 30950])
                    ("aspectRatio" variable
                       (:reference 1
                        :type ("Matrix_implementation::other_value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [30951 31004])
                    ("zNear" variable
                       (:reference 1
                        :type ("Matrix_implementation::other_value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [31048 31095])
                    ("zFar" variable
                       (:reference 1
                        :type ("Matrix_implementation::other_value_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [31096 31142]))                  
                :type "bool")
                nil [30861 31514])
            ("makeLookAt" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("eye" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Vec3d" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [31555 31572])
                    ("center" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Vec3d" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [31572 31592])
                    ("up" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Vec3d" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [31592 31608]))                  
                :type "void")
                nil [31516 31944])
            ("getLookAt" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("eye" variable
                       (:reference 1
                        :type ("Vec3f" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [31985 31996])
                    ("center" variable
                       (:reference 1
                        :type ("Vec3f" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [31996 32010])
                    ("up" variable
                       (:reference 1
                        :type ("Vec3f" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [32010 32020])
                    ("lookDistance" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32020 32044]))                  
                :type "void")
                nil [31947 32542])
            ("getLookAt" function
               (:parent "Matrix_implementation"
                :arguments 
                  ( ("eye" variable
                       (:reference 1
                        :type ("Vec3d" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [32582 32593])
                    ("center" variable
                       (:reference 1
                        :type ("Vec3d" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [32593 32607])
                    ("up" variable
                       (:reference 1
                        :type ("Vec3d" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [32607 32617])
                    ("lookDistance" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32617 32641]))                  
                :type "void")
                nil [32544 33139]))          
      :file "Matrix_implementation.cpp"
      :pointmax 33156
      :fsize 33372
      :lastmodtime '(24127 41146 533064 285000)
      :unmatched-syntax nil
      :lexical-table 
        '(("COMPILE_getRotate_David_Spillings_Mk1")
          ("QW" . 
              ((symbol "q" 2241 . 2242) (punctuation "." 2242 . 2243) (symbol "_v" 2243 . 2245) (semantic-list "[3]" 2245 . 2248)))
          ("QX" . 
              ((symbol "q" 2181 . 2182) (punctuation "." 2182 . 2183) (symbol "_v" 2183 . 2185) (semantic-list "[0]" 2185 . 2188)))
          ("QY" . 
              ((symbol "q" 2201 . 2202) (punctuation "." 2202 . 2203) (symbol "_v" 2203 . 2205) (semantic-list "[1]" 2205 . 2208)))
          ("QZ" . 
              ((symbol "q" 2221 . 2222) (punctuation "." 2222 . 2223) (symbol "_v" 2223 . 2225) (semantic-list "[2]" 2225 . 2228)))
          ("SGL_SWAP" (spp-arg-list ("a" "b" "temp") 21337 . 21347) . ((semantic-list "((temp)=(a),(a)=(b),(b)=(temp))" 21348 . 21379)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("osg/Matrixd" include (:system-flag t) nil [631 653])
            ("osg/Matrixf" include (:system-flag t) nil [654 676])
            ("Matrix_implementation" variable (:constant-flag t) nil [737 758])
            ("Matrixd" function
               (:parent "osg::Matrixd"
                :arguments 
                  ( ("mat" variable
                       (:reference 1
                        :constant-flag t
                        :type ("osg::Matrixf" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [791 816]))                  
                :type "int")
                nil [768 840])
            ("=" function
               (:operator-flag t
                :parent "osg::Matrixd"
                :arguments 
                  ( ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("osg::Matrixf" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [882 906]))                  
                :type ("osg::Matrixd" type (:type "class") nil nil))
                nil [842 948])
            ("set" function
               (:parent "osg::Matrixd"
                :arguments 
                  ( ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("osg::Matrixf" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [973 997]))                  
                :type "void")
                nil [950 1021])
            ("Matrix_implementation.cpp" include nil nil [1074 1110]))          
      :file "Matrixd.cpp"
      :pointmax 1112
      :fsize 1111
      :lastmodtime '(23936 42023 834329 234000)
      :unmatched-syntax nil
      :lexical-table 
        '(("Matrix_implementation" . ((symbol "Matrixd" 759 . 766)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("osg/Array" include (:system-flag t) nil [630 650])
            ("osg/Notify" include (:system-flag t) nil [651 672])
            ("osg" using (:type ("osg" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [674 694])
            ("s_ArrayNames" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "{
    \"Array\",        // 0
    \"ByteArray\",    // 1
    \"ShortArray\",   // 2
    \"IntArray\",     // 3

    \"UByteArray\",   // 4
    \"UShortArray\",  // 5
    \"UIntArray\",    // 6

    \"FloatArray\",   // 7
    \"DoubleArray\",  // 8

    \"Vec2bArray\",   // 9
    \"Vec3bArray\",   //10
    \"Vec4bArray\",   //11

    \"Vec2sArray\",   //12
    \"Vec3sArray\",   //13
    \"Vec4sArray\",   //14

    \"Vec2iArray\",   //15
    \"Vec3iArray\",   //16
    \"Vec4iArray\",   //17

    \"Vec2ubArray\",  //18
    \"Vec3ubArray\",  //19
    \"Vec4ubArray\",  //20

    \"Vec2usArray\",  //21
    \"Vec3usArray\",  //22
    \"Vec4usArray\",  //23

    \"Vec2uiArray\",  //24
    \"Vec3uiArray\",  //25
    \"Vec4uiArray\",  //26

    \"Vec2Array\",    //27
    \"Vec3Array\",    //28
    \"Vec4Array\",    //29

    \"Vec2dArray\",   //30
    \"Vec3dArray\",   //31
    \"Vec4dArray\",   //32

    \"MatrixArray\",  //33
    \"MatrixdArray\", //34

    \"QuatArray\",    //35

    \"UInt64Array\",  //36
    \"Int64Array\",   //37
}"
                :type "char")
                nil [696 1699])
            ("className" function
               (:methodconst-flag t
                :pointer 1
                :parent "Array"
                :constant-flag t
                :type "char")
                nil [1701 1981]))          
      :file "Array.cpp"
      :pointmax 1983
      :fsize 1982
      :lastmodtime '(23936 42023 826329 125000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("osg/Object" include (:system-flag t) nil [630 651])
            ("osg/UserDataContainer" include (:system-flag t) nil [652 684])
            ("osg" type
               (:members 
                  ( ("Object" function
                       (:constructor-flag t
                        :parent "Object"
                        :arguments 
                          ( ("obj" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Object" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [834 852])
                            ("copyop" variable
                               (:reference 1
                                :constant-flag t
                                :type ("CopyOp" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [852 873]))                          
                        :type ("Object" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [819 1281])
                    ("Object" function
                       (:destructor-flag t
                        :parent "Object"
                        :type "void")
                        (reparse-symbol namespacesubparts) [1283 1361])
                    ("setThreadSafeRefUnref" function
                       (:parent "Object"
                        :arguments 
                          ( ("threadSafe" variable (:type "bool") (reparse-symbol arg-sub-list) [1399 1415]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [1364 1553])
                    ("setUserDataContainer" function
                       (:parent "Object"
                        :arguments 
                          ( ("udc" variable
                               (:pointer 1
                                :type ("osg::UserDataContainer" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1589 1617]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [1555 1809])
                    ("getOrCreateUserDataContainer" function
                       (:pointer 1
                        :parent "Object"
                        :type ("osg::UserDataContainer" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1811 1991])
                    ("setUserData" function
                       (:parent "Object"
                        :arguments 
                          ( ("obj" variable
                               (:pointer 1
                                :type ("Referenced" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2018 2034]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [1993 2129])
                    ("getUserData" function
                       (:pointer 1
                        :parent "Object"
                        :type ("Referenced" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2131 2239])
                    ("getUserData" function
                       (:methodconst-flag t
                        :pointer 1
                        :parent "Object"
                        :constant-flag t
                        :type ("Referenced" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2241 2361]))                  
                :type "namespace")
                nil [686 2364]))          
      :file "Object.cpp"
      :pointmax 2389
      :fsize 2388
      :lastmodtime '(23936 42023 834329 234000)
      :unmatched-syntax nil))
  :file "!home!rvbust!Rvbust!Sources!OSG!src!osg!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
