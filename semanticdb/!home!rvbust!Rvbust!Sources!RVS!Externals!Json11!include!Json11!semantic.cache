;; Object Json11/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "Json11/"
  :tables
  (list
    (semanticdb-table "json.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("INCLUDE_NLOHMANN_JSON_HPP_" variable (:constant-flag t) nil [1449 1475])
            ("NLOHMANN_JSON_VERSION_MAJOR" variable (:constant-flag t) nil [1485 1512])
            ("NLOHMANN_JSON_VERSION_MINOR" variable (:constant-flag t) nil [1523 1550])
            ("NLOHMANN_JSON_VERSION_PATCH" variable (:constant-flag t) nil [1561 1588])
            ("algorithm" include (:system-flag t) nil [1592 1612])
            ("cassert" include (:system-flag t) nil [1639 1657])
            ("ciso646" include (:system-flag t) nil [1668 1686])
            ("cstddef" include (:system-flag t) nil [1703 1721])
            ("functional" include (:system-flag t) nil [1754 1775])
            ("initializer_list" include (:system-flag t) nil [1790 1817])
            ("iosfwd" include (:system-flag t) nil [1838 1855])
            ("iterator" include (:system-flag t) nil [1876 1895])
            ("memory" include (:system-flag t) nil [1926 1943])
            ("numeric" include (:system-flag t) nil [1958 1976])
            ("string" include (:system-flag t) nil [1991 2008])
            ("utility" include (:system-flag t) nil [2036 2054])
            ("vector" include (:system-flag t) nil [2093 2110])
            ("utility" include (:system-flag t) nil [2166 2184])
            ("algorithm" include (:system-flag t) nil [2244 2264])
            ("array" include (:system-flag t) nil [2278 2294])
            ("ciso646" include (:system-flag t) nil [2304 2322])
            ("forward_list" include (:system-flag t) nil [2335 2358])
            ("iterator" include (:system-flag t) nil [2375 2394])
            ("map" include (:system-flag t) nil [2428 2442])
            ("string" include (:system-flag t) nil [2450 2467])
            ("tuple" include (:system-flag t) nil [2478 2494])
            ("type_traits" include (:system-flag t) nil [2516 2538])
            ("unordered_map" include (:system-flag t) nil [2607 2631])
            ("utility" include (:system-flag t) nil [2649 2667])
            ("valarray" include (:system-flag t) nil [2685 2704])
            ("exception" include (:system-flag t) nil [2765 2785])
            ("stdexcept" include (:system-flag t) nil [2799 2819])
            ("string" include (:system-flag t) nil [2837 2854])
            ("cstddef" include (:system-flag t) nil [2922 2940])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("position_t" type
                               (:members 
                                  ( ("chars_read_total" variable
                                       (:default-value "0"
                                        :type ("std::size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3122 3155])
                                    ("chars_read_current_line" variable
                                       (:default-value "0"
                                        :type ("std::size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3218 3258])
                                    ("lines_read" variable
                                       (:default-value "0"
                                        :type ("std::size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3296 3323])
                                    ("size_t" function (:type "int") (reparse-symbol classsubparts) [3403 3462]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [3054 3465]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [2973 3468]))                  
                :type "namespace")
                nil [2952 3490])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("exception" type
                               (:superclasses 
                                  ( ("std::exception" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [4755 4762])
                                    ("id" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol classsubparts) [4923 4936])
                                    ("protected" label nil (reparse-symbol classsubparts) [4940 4950])
                                    ("exception" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("id_" variable (:type "int") (reparse-symbol arg-sub-list) [4965 4973])
                                            ("what_arg" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [4974 4995]))                                          
                                        :type ("exception" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [4955 5021])
                                    ("name" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("ename" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5051 5076])
                                            ("id_" variable (:type "int") (reparse-symbol arg-sub-list) [5077 5085]))                                          
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [5027 5175])
                                    ("private" label nil (reparse-symbol classsubparts) [5179 5187])
                                    ("m" variable (:type ("std::runtime_error" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5250 5271]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [4711 5274])
                            ("parse_error" type
                               (:superclasses 
                                  ( ("exception" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [9350 9357])
                                    ("create" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("id_" variable (:type "int") (reparse-symbol arg-sub-list) [9752 9760])
                                            ("pos" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("position_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [9761 9783])
                                            ("what_arg" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [9784 9812]))                                          
                                        :type ("parse_error" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [9726 10032])
                                    ("create" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("id_" variable (:type "int") (reparse-symbol arg-sub-list) [10064 10072])
                                            ("byte_" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10073 10091])
                                            ("what_arg" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [10092 10120]))                                          
                                        :type ("parse_error" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [10038 10386])
                                    ("byte" variable
                                       (:constant-flag t
                                        :type ("std::size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [10751 10774])
                                    ("private" label nil (reparse-symbol classsubparts) [10778 10786])
                                    ("parse_error" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("id_" variable (:type "int") (reparse-symbol arg-sub-list) [10803 10811])
                                            ("byte_" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10812 10830])
                                            ("what_arg" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [10831 10852]))                                          
                                        :type ("parse_error" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [10791 10903])
                                    ("position_string" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("pos" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("position_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [10944 10966]))                                          
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [10909 11118]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [9309 11121])
                            ("invalid_iterator" type
                               (:superclasses 
                                  ( ("exception" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [15387 15394])
                                    ("create" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("id_" variable (:type "int") (reparse-symbol arg-sub-list) [15430 15438])
                                            ("what_arg" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [15439 15467]))                                          
                                        :type ("invalid_iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [15399 15605])
                                    ("private" label nil (reparse-symbol classsubparts) [15609 15617])
                                    ("invalid_iterator" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("id_" variable (:type "int") (reparse-symbol arg-sub-list) [15639 15647])
                                            ("what_arg" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [15648 15669]))                                          
                                        :type ("invalid_iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [15622 15707]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [15341 15710])
                            ("type_error" type
                               (:superclasses 
                                  ( ("exception" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [19908 19915])
                                    ("create" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("id_" variable (:type "int") (reparse-symbol arg-sub-list) [19945 19953])
                                            ("what_arg" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [19954 19982]))                                          
                                        :type ("type_error" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [19920 20108])
                                    ("private" label nil (reparse-symbol classsubparts) [20112 20120])
                                    ("type_error" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("id_" variable (:type "int") (reparse-symbol arg-sub-list) [20136 20144])
                                            ("what_arg" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [20145 20166]))                                          
                                        :type ("type_error" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [20125 20196]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [19868 20199])
                            ("out_of_range" type
                               (:superclasses 
                                  ( ("exception" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [22660 22667])
                                    ("create" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("id_" variable (:type "int") (reparse-symbol arg-sub-list) [22699 22707])
                                            ("what_arg" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [22708 22736]))                                          
                                        :type ("out_of_range" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [22672 22866])
                                    ("private" label nil (reparse-symbol classsubparts) [22870 22878])
                                    ("out_of_range" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("id_" variable (:type "int") (reparse-symbol arg-sub-list) [22896 22904])
                                            ("what_arg" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [22905 22926]))                                          
                                        :type ("out_of_range" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [22883 22956]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [22618 22959])
                            ("other_error" type
                               (:superclasses 
                                  ( ("exception" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [24023 24030])
                                    ("create" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("id_" variable (:type "int") (reparse-symbol arg-sub-list) [24061 24069])
                                            ("what_arg" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24070 24098]))                                          
                                        :type ("other_error" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [24035 24226])
                                    ("private" label nil (reparse-symbol classsubparts) [24230 24238])
                                    ("other_error" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("id_" variable (:type "int") (reparse-symbol arg-sub-list) [24255 24263])
                                            ("what_arg" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [24264 24285]))                                          
                                        :type ("other_error" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [24243 24315]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [23982 24318]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [3536 24320]))                  
                :type "namespace")
                nil [3515 24343])
            ("utility" include (:system-flag t) nil [24416 24434])
            ("JSON_DEPRECATED" variable (:constant-flag t) nil [25685 25700])
            ("JSON_DEPRECATED" variable (:constant-flag t) nil [25822 25837])
            ("JSON_NODISCARD" variable (:constant-flag t) nil [26188 26202])
            ("JSON_THROW" variable (:constant-flag t) nil [26364 26374])
            ("JSON_TRY" variable (:constant-flag t) nil [26414 26422])
            ("JSON_CATCH" variable (:constant-flag t) nil [26439 26449])
            ("JSON_INTERNAL_CATCH" variable (:constant-flag t) nil [26490 26509])
            ("JSON_LIKELY" variable (:constant-flag t) nil [27379 27390])
            ("JSON_UNLIKELY" variable (:constant-flag t) nil [27434 27447])
            ("NLOHMANN_JSON_SERIALIZE_ENUM" variable (:constant-flag t) nil [28040 28068])
            ("NLOHMANN_BASIC_JSON_TPL_DECLARATION" variable (:constant-flag t) nil [30510 30545])
            ("NLOHMANN_BASIC_JSON_TPL" variable (:constant-flag t) nil [31044 31067])
            ("ciso646" include (:system-flag t) nil [31355 31373])
            ("cstddef" include (:system-flag t) nil [31381 31399])
            ("type_traits" include (:system-flag t) nil [31410 31432])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("std::enable_if::type" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol namespacesubparts) [31708 31744])
                            ("type" variable (:type "int") (reparse-symbol namespacesubparts) [31851 31856])
                            ("index_sequence" type
                               (:members 
                                  ( ("type" variable
                                       (:default-value "index_sequence"
                                        :type "int")
                                        (reparse-symbol classsubparts) [32027 32049])
                                    ("std::size_t" variable (:type "int") (reparse-symbol classsubparts) [32073 32085]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [31993 32181])
                            ("merge_and_renumber" type
                               (:template 
                                  ( ("Sequence1" type (:type "class") nil nil)
                                    ("Sequence2" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [32183 32252])
                            ("make_index_sequence" type
                               (:type "struct"
                                :superclasses 
                                  ( ("index_sequence" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier (("0")))
                                (reparse-symbol namespacesubparts) [32624 32687])
                            ("make_index_sequence" type
                               (:type "struct"
                                :superclasses 
                                  ( ("index_sequence" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier (("1")))
                                (reparse-symbol namespacesubparts) [32688 32752])
                            ("priority_tag" type
                               (:type "struct"
                                :template-specifier (("0")))
                                (reparse-symbol namespacesubparts) [32956 32993])
                            ("static_const" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [33083 33093]))                                  )
                                (reparse-symbol namespacesubparts) [33019 33096])
                            ("static_const::value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [33129 33154]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [31592 33156]))                  
                :type "namespace")
                nil [31571 33179])
            ("ciso646" include (:system-flag t) nil [33257 33275])
            ("limits" include (:system-flag t) nil [33283 33300])
            ("type_traits" include (:system-flag t) nil [33319 33341])
            ("utility" include (:system-flag t) nil [33407 33425])
            ("iterator" include (:system-flag t) nil [33500 33519])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("make_void" type (:type "struct") (reparse-symbol namespacesubparts) [33665 33709])
                            ("type" variable (:type "int") (reparse-symbol namespacesubparts) [33778 33783]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [33620 33785]))                  
                :type "namespace")
                nil [33599 33807])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("iterator_types" type (:type "struct") (reparse-symbol namespacesubparts) [33964 33989])
                            ("iterator_traits" type (:type "struct") (reparse-symbol namespacesubparts) [34659 34686])
                            ("iterator_types" variable (:type "int") (reparse-symbol namespacesubparts) [34796 34818])
                            ("iterator_traits" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("std::random_access_iterator_tag" variable (:type "int") (reparse-symbol classsubparts) [34940 34972])
                                    ("value_type" variable
                                       (:default-value "T"
                                        :type "int")
                                        (reparse-symbol classsubparts) [34983 34998])
                                    ("difference_type" variable
                                       (:default-value "ptrdiff_t"
                                        :type "int")
                                        (reparse-symbol classsubparts) [35009 35037]))                                  
                                :template-specifier 
                                  ( ("T" type (:pointer 1) nil nil)
                                    ("enable_if_t" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [34820 35090]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [33905 35092]))                  
                :type "namespace")
                nil [33884 35114])
            ("type_traits" include (:system-flag t) nil [35286 35308])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("nonesuch" type (:type "struct") (reparse-symbol namespacesubparts) [35459 35698])
                            ("detector" type
                               (:members 
                                  ( ("std::false_type" variable (:type "int") (reparse-symbol classsubparts) [35856 35872])
                                    ("type" variable
                                       (:default-value "Default"
                                        :type "int")
                                        (reparse-symbol classsubparts) [35883 35898]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [35818 35901])
                            ("value_t" variable (:type "int") (reparse-symbol namespacesubparts) [36227 36235])
                            ("type" variable (:type "int") (reparse-symbol namespacesubparts) [36359 36364])
                            ("type" variable (:type "int") (reparse-symbol namespacesubparts) [36631 36636]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [35440 36937]))                  
                :type "namespace")
                nil [35419 36960])
            ("INCLUDE_NLOHMANN_JSON_FWD_HPP_" variable (:constant-flag t) nil [37068 37098])
            ("cstdint" include (:system-flag t) nil [37100 37118])
            ("map" include (:system-flag t) nil [37140 37154])
            ("memory" include (:system-flag t) nil [37162 37179])
            ("string" include (:system-flag t) nil [37193 37210])
            ("vector" include (:system-flag t) nil [37221 37238])
            ("nlohmann" type
               (:members 
                  ( ("adl_serializer" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [37632 37654])
                    ("basic_json" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [38211 38228])
                    ("json_pointer" type
                       (:template 
                          ( ("BasicJsonType" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [38540 38592])
                    ("basic_json" variable (:type "int") (reparse-symbol namespacesubparts) [38772 38785]))                  
                :type "namespace")
                nil [37346 38787])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("is_basic_json" type
                               (:superclasses 
                                  ( ("std::false_type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [39550 39592])
                            ("is_basic_json" type
                               (:template-specifier 
                                  ( ("NLOHMANN_BASIC_JSON_TPL" type nil nil nil))                                  
                                :superclasses 
                                  ( ("std::true_type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [39630 39696])
                            ("T::mapped_type" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol namespacesubparts) [39824 39848])
                            ("T::key_type" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol namespacesubparts) [39891 39912])
                            ("T::value_type" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol namespacesubparts) [39957 39980])
                            ("T::difference_type" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol namespacesubparts) [40030 40058])
                            ("T::pointer" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol namespacesubparts) [40100 40120])
                            ("T::reference" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol namespacesubparts) [40164 40186])
                            ("T::iterator_category" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol namespacesubparts) [40238 40268])
                            ("T::iterator" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol namespacesubparts) [40311 40332])
                            ("to_json_function" variable
                               (:default-value "decltype(T::to_json(std::declval<Args>()...))"
                                :type "int")
                                (reparse-symbol namespacesubparts) [40380 40445])
                            ("from_json_function" variable
                               (:default-value "decltype(T::from_json(std::declval<Args>()...))"
                                :type "int")
                                (reparse-symbol namespacesubparts) [40493 40562])
                            ("get_template_function" variable
                               (:default-value "decltype(std::declval<T>().template get<U>())"
                                :type "int")
                                (reparse-symbol namespacesubparts) [40604 40674])
                            ("has_from_json" type
                               (:superclasses 
                                  ( ("std::false_type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [40815 40857])
                            ("has_from_json" type
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil)
                                    ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("json_serializer" variable (:type "int") (reparse-symbol classsubparts) [41055 41080])
                                    ("is_detected_exact::value" variable (:type "int") (reparse-symbol classsubparts) [41124 41221]))                                  
                                :template-specifier 
                                  ( ("BasicJsonType" type nil nil nil)
                                    ("T" type nil nil nil)
                                    ("enable_if_t" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [40859 41224])
                            ("has_non_default_from_json" type
                               (:superclasses 
                                  ( ("std::false_type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [41436 41490])
                            ("has_non_default_from_json" type
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil)
                                    ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("json_serializer" variable (:type "int") (reparse-symbol classsubparts) [41688 41713])
                                    ("is_detected_exact::value" variable (:type "int") (reparse-symbol classsubparts) [41757 41847]))                                  
                                :template-specifier 
                                  ( ("BasicJsonType" type nil nil nil)
                                    ("T" type nil nil nil)
                                    ("enable_if_t" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [41492 41850])
                            ("has_to_json" type
                               (:superclasses 
                                  ( ("std::false_type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [42099 42139])
                            ("has_to_json" type
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil)
                                    ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("json_serializer" variable (:type "int") (reparse-symbol classsubparts) [42324 42349])
                                    ("is_detected_exact::value" variable (:type "int") (reparse-symbol classsubparts) [42393 42481]))                                  
                                :template-specifier 
                                  ( ("BasicJsonType" type nil nil nil)
                                    ("T" type nil nil nil)
                                    ("enable_if_t" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [42141 42484])
                            ("is_iterator_traits" type
                               (:superclasses 
                                  ( ("std::false_type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [42587 42634])
                            ("is_iterator_traits" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("private" label nil (reparse-symbol classsubparts) [42708 42716])
                                    ("iterator_traits" variable (:type "int") (reparse-symbol classsubparts) [42736 42755])
                                    ("public" label nil (reparse-symbol classsubparts) [42759 42766])
                                    ("is_detected::value" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol classsubparts) [43009 43066]))                                  
                                :template-specifier 
                                  ( ("iterator_traits" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [42636 43069])
                            ("is_complete_type" type
                               (:superclasses 
                                  ( ("std::false_type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [43167 43212])
                            ("std::true_type" variable (:type "int") (reparse-symbol namespacesubparts) [43292 43310])
                            ("is_compatible_object_type_impl" type
                               (:superclasses 
                                  ( ("std::false_type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [43404 43463])
                            ("is_compatible_object_type" type
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil)
                                    ("CompatibleObjectType" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("is_compatible_object_type_impl" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [44153 44328])
                            ("is_constructible_object_type_impl" type
                               (:superclasses 
                                  ( ("std::false_type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [44425 44487])
                            ("is_constructible_object_type" type
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil)
                                    ("ConstructibleObjectType" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("is_constructible_object_type_impl" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [45311 45504])
                            ("is_compatible_string_type_impl" type
                               (:superclasses 
                                  ( ("std::false_type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [45598 45657])
                            ("is_compatible_string_type" type
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil)
                                    ("ConstructibleStringType" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("is_compatible_string_type_impl" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [46069 46250])
                            ("is_constructible_string_type_impl" type
                               (:superclasses 
                                  ( ("std::false_type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [46347 46409])
                            ("is_constructible_string_type" type
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil)
                                    ("ConstructibleStringType" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("is_constructible_string_type_impl" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [46844 47031])
                            ("is_compatible_array_type_impl" type
                               (:superclasses 
                                  ( ("std::false_type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [47114 47172])
                            ("is_compatible_array_type" type
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil)
                                    ("CompatibleArrayType" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("is_compatible_array_type_impl" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [47855 48026])
                            ("is_constructible_array_type_impl" type
                               (:superclasses 
                                  ( ("std::false_type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [48112 48173])
                            ("std::true_type" variable (:type "int") (reparse-symbol namespacesubparts) [48444 48462])
                            ("is_constructible_array_type" type
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil)
                                    ("ConstructibleArrayType" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("is_constructible_array_type_impl" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [49723 49906])
                            ("is_compatible_integer_type_impl" type
                               (:superclasses 
                                  ( ("std::false_type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [50009 50069])
                            ("is_compatible_integer_type" type
                               (:template 
                                  ( ("RealIntegerType" type (:type "class") nil nil)
                                    ("CompatibleNumberIntegerType" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("is_compatible_integer_type_impl" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [50853 51054])
                            ("is_compatible_type_impl" type
                               (:superclasses 
                                  ( ("std::false_type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [51132 51183])
                            ("is_compatible_type" type
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil)
                                    ("CompatibleType" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("is_compatible_type_impl" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [51470 51619]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [39103 51621]))                  
                :type "namespace")
                nil [38856 51644])
            ("array" include (:system-flag t) nil [51713 51729])
            ("ciso646" include (:system-flag t) nil [51739 51757])
            ("cstddef" include (:system-flag t) nil [51765 51783])
            ("cstdint" include (:system-flag t) nil [51794 51812])
            ("string" include (:system-flag t) nil [51824 51841])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("value_t" type
                               (:superclasses 
                                  ( ("std::uint8_t" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [53155 53687]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [51874 54470]))                  
                :type "namespace")
                nil [51853 54493])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("from_json" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [54607 54630])
                                    ("n" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :type ("std::nullptr_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [54631 54658]))                                  )
                                (reparse-symbol namespacesubparts) [54559 54835])
                            ("get_arithmetic_value" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [55164 55187])
                                    ("val" variable
                                       (:reference 1
                                        :type ("ArithmeticType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [55188 55208]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [55138 55975])
                            ("from_json" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [56025 56048])
                                    ("b" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :type ("BasicJsonType::boolean_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [56049 56086]))                                  )
                                (reparse-symbol namespacesubparts) [55977 56325])
                            ("from_json" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [56375 56398])
                                    ("s" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :type ("BasicJsonType::string_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [56399 56435]))                                  )
                                (reparse-symbol namespacesubparts) [56327 56671])
                            ("from_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57004 57027])
                                    ("s" variable
                                       (:reference 1
                                        :type ("ConstructibleStringType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57028 57055]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [56989 57292])
                            ("from_json" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57342 57365])
                                    ("val" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :type ("BasicJsonType::number_float_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57366 57410]))                                  )
                                (reparse-symbol namespacesubparts) [57294 57448])
                            ("from_json" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57498 57521])
                                    ("val" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :type ("BasicJsonType::number_unsigned_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57522 57569]))                                  )
                                (reparse-symbol namespacesubparts) [57450 57607])
                            ("from_json" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57657 57680])
                                    ("val" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :type ("BasicJsonType::number_integer_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57681 57727]))                                  )
                                (reparse-symbol namespacesubparts) [57609 57765])
                            ("from_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57896 57919])
                                    ("e" variable
                                       (:reference 1
                                        :type ("EnumType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57920 57932]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [57881 58061])
                            ("from_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [58266 58289])
                                    ("l" variable
                                       (:reference 1
                                        :type ("std::forward_list" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil)
                                                  ("Allocator" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [58290 58325]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [58251 58649])
                            ("from_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [58830 58853])
                                    ("l" variable
                                       (:reference 1
                                        :type ("std::valarray" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [58854 58874]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [58815 59140])
                            ("from_json_array_impl" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [59201 59224])
                                    ("arr" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :type ("BasicJsonType::array_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [59225 59262])
                                    ("" variable (:type ("priority_tag" type
                                         (:template-specifier (("3"))
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [59263 59290]))                                  )
                                (reparse-symbol namespacesubparts) [59142 59367])
                            ("decltype" function
                               (:arguments 
                                  ( ("" variable (:type ("j" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59569 59571])
                                    ("" variable (:type ("get" type
                                         (:template-specifier 
                                            ( ("T" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [59580 59588])
                                    ("" variable (:type "void") (reparse-symbol arg-sub-list) [59590 59596]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [59560 59697])
                            ("decltype" function
                               (:arguments 
                                  ( ("" variable (:type ("arr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59889 59893])
                                    ("" variable (:type ("reserve" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59893 59960])
                                    ("" variable (:type ("j" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59966 59968])
                                    ("" variable (:type ("get" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59977 59981])
                                    ("" variable
                                       (:typemodifiers ("typename")
                                        :type ("ConstructibleArrayType::value_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [59981 60025])
                                    ("" variable (:type "void") (reparse-symbol arg-sub-list) [60033 60039]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [59875 60426])
                            ("from_json_array_impl" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil)
                                    ("ConstructibleArrayType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [60521 60544])
                                    ("arr" variable
                                       (:reference 1
                                        :type ("ConstructibleArrayType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [60545 60573])
                                    ("" variable (:type ("priority_tag" type
                                         (:template-specifier (("0"))
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [60600 60627]))                                  )
                                (reparse-symbol namespacesubparts) [60428 60984])
                            ("decltype" function
                               (:arguments 
                                  ( ("" variable (:type ("from_json_array_impl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61534 61582])
                                    ("" variable (:type ("j" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61584 61586])
                                    ("" variable (:type ("get" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61595 61599])
                                    ("" variable
                                       (:typemodifiers ("typename")
                                        :type ("ConstructibleArrayType::value_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [61599 61643])
                                    ("" variable (:type "void") (reparse-symbol arg-sub-list) [61647 61653]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [61525 61909])
                            ("from_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [62101 62124])
                                    ("obj" variable
                                       (:reference 1
                                        :type ("ConstructibleObjectType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [62125 62154]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [62086 62777])
                            ("from_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [63595 63618])
                                    ("val" variable
                                       (:reference 1
                                        :type ("ArithmeticType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [63619 63639]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [63580 64588])
                            ("from_json" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil)
                                    ("A1" type (:type "class") nil nil)
                                    ("A2" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [64664 64687])
                                    ("p" variable
                                       (:reference 1
                                        :type ("std::pair" type
                                             (:template-specifier 
                                                ( ("A1" type nil nil nil)
                                                  ("A2" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [64688 64709]))                                  )
                                (reparse-symbol namespacesubparts) [64590 64779])
                            ("from_json_tuple_impl" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [64876 64899])
                                    ("t" variable
                                       (:reference 1
                                        :type ("Tuple" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [64900 64909])
                                    ("" variable (:type ("index_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64910 64925])
                                    ("" variable (:type ("Idx" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64925 64929]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [64850 65049])
                            ("from_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [65117 65140])
                                    ("" variable (:type ("std::tuple" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [65141 65152])
                                    ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [65152 65157])
                                    ("" variable (:type ("t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [65162 65164]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [65102 65232])
                            ("from_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [65496 65519])
                                    ("m" variable
                                       (:reference 1
                                        :type ("std::map" type
                                             (:template-specifier 
                                                ( ("Key" type nil nil nil)
                                                  ("Value" type nil nil nil)
                                                  ("Compare" type nil nil nil)
                                                  ("Allocator" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [65520 65564]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [65481 66019])
                            ("from_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [66299 66322])
                                    ("m" variable
                                       (:reference 1
                                        :type ("std::unordered_map" type
                                             (:template-specifier 
                                                ( ("Key" type nil nil nil)
                                                  ("Value" type nil nil nil)
                                                  ("Hash" type nil nil nil)
                                                  ("KeyEqual" type nil nil nil)
                                                  ("Allocator" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [66323 66384]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [66284 66839])
                            ("from_json_fn" type
                               (:members 
                                  ( ("decltype" function
                                       (:arguments 
                                          ( ("" variable (:type ("from_json" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67028 67045])
                                            ("" variable (:type "void") (reparse-symbol arg-sub-list) [67047 67053]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [67019 67100]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [66841 67103]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [54540 67105])
                    ("unnamed" type
                       (:members 
                          ( ("detail::static_const::value" variable (:type "int") (reparse-symbol namespacesubparts) [67329 67379]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [67283 67381]))                  
                :type "namespace")
                nil [54519 67396])
            ("algorithm" include (:system-flag t) nil [67477 67497])
            ("ciso646" include (:system-flag t) nil [67506 67524])
            ("iterator" include (:system-flag t) nil [67541 67560])
            ("string" include (:system-flag t) nil [67575 67592])
            ("tuple" include (:system-flag t) nil [67603 67619])
            ("type_traits" include (:system-flag t) nil [67634 67656])
            ("utility" include (:system-flag t) nil [67731 67749])
            ("valarray" include (:system-flag t) nil [67782 67801])
            ("vector" include (:system-flag t) nil [67814 67831])
            ("cstddef" include (:system-flag t) nil [67905 67923])
            ("iterator" include (:system-flag t) nil [67934 67953])
            ("string" include (:system-flag t) nil [67976 67993])
            ("tuple" include (:system-flag t) nil [68015 68031])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("iteration_proxy_value" type
                               (:template 
                                  ( ("IteratorType" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [68268 68275])
                                    ("std::ptrdiff_t" variable (:type "int") (reparse-symbol classsubparts) [68304 68319])
                                    ("value_type" variable
                                       (:default-value "iteration_proxy_value"
                                        :type "int")
                                        (reparse-symbol classsubparts) [68330 68365])
                                    ("std::input_iterator_tag" variable (:type "int") (reparse-symbol classsubparts) [68468 68492])
                                    ("private" label nil (reparse-symbol classsubparts) [68496 68504])
                                    ("anchor" variable (:type ("IteratorType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [68530 68550])
                                    ("array_index" variable
                                       (:default-value "0"
                                        :type ("std::size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [68610 68638])
                                    ("array_index_last" variable
                                       (:typemodifiers ("mutable")
                                        :default-value "0"
                                        :type ("std::size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [68680 68721])
                                    ("array_index_str" variable
                                       (:typemodifiers ("mutable")
                                        :default-value "\"0\""
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [68777 68819])
                                    ("empty_str" variable
                                       (:constant-flag t
                                        :default-value "\"\""
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [68893 68926])
                                    ("public" label nil (reparse-symbol classsubparts) [68930 68937])
                                    ("anchor" function
                                       (:arguments 
                                          ( ("" variable (:type ("it" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [69008 69011]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [69001 69014])
                                    ("" function
                                       (:operator-flag t
                                        :function-pointer t
                                        :type ("iteration_proxy_value" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [69078 69146])
                                    ("++" function
                                       (:operator-flag t
                                        :type ("iteration_proxy_value" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [69208 69319])
                                    ("==" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("o" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("iteration_proxy_value" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [69394 69425]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [69378 69478])
                                    ("!=" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("o" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("iteration_proxy_value" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [69557 69588]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [69541 69641])
                                    ("key" function
                                       (:constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [69682 70408])
                                    ("value" function
                                       (:typemodifiers ("typename")
                                        :type ("IteratorType::reference" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [70451 70540]))                                  )
                                (reparse-symbol namespacesubparts) [68203 70543])
                            ("iteration_proxy" type
                               (:template 
                                  ( ("IteratorType" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("private" label nil (reparse-symbol classsubparts) [70644 70652])
                                    ("container" variable
                                       (:typemodifiers ("typename")
                                        :type ("IteratorType::reference" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [70690 70733])
                                    ("public" label nil (reparse-symbol classsubparts) [70737 70744])
                                    ("container" function
                                       (:arguments 
                                          ( ("" variable (:type ("cont" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70893 70898]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [70883 70901]))                                  )
                                (reparse-symbol namespacesubparts) [70586 71298])
                            ("decltype" function
                               (:arguments 
                                  ( ("" variable (:type ("i" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71626 71628])
                                    ("" variable (:type ("key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71628 71633]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [71617 71658])
                            ("decltype" function
                               (:arguments 
                                  ( ("" variable (:type ("i" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71986 71988])
                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71988 71995]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [71977 72022]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [68184 72024]))                  
                :type "namespace")
                nil [68163 72047])
            ("std" type
               (:members 
                  ( ("std::integral_constant" variable (:type "int") (reparse-symbol namespacesubparts) [72649 72691]))                  
                :type "namespace")
                nil [72327 73063])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("external_constructor" type
                               (:template 
                                  ( ("value_t" type nil nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [73327 73373])
                            ("external_constructor" type
                               (:type "struct"
                                :template-specifier 
                                  ( ("value_t::boolean" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [73375 73665])
                            ("external_constructor" type
                               (:type "struct"
                                :members 
                                  ( ("construct" function
                                       (:template 
                                          ( ("BasicJsonType" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [73788 73805])
                                            ("s" variable
                                               (:reference 1
                                                :typemodifiers ("typename")
                                                :constant-flag t
                                                :type ("BasicJsonType::string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [73806 73848]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [73729 73949])
                                    ("construct" function
                                       (:template 
                                          ( ("BasicJsonType" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [74014 74031])
                                            ("" variable
                                               (:reference 1
                                                :typemodifiers ("typename")
                                                :type ("BasicJsonType::string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [74032 74066])
                                            ("" variable (:type ("s" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [74067 74069]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [73955 74181])
                                    ("construct" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [74418 74435])
                                            ("str" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("CompatibleStringType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [74436 74468]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [74396 74631]))                                  
                                :template-specifier 
                                  ( ("value_t::string" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [73667 74634])
                            ("external_constructor" type
                               (:type "struct"
                                :template-specifier 
                                  ( ("value_t::number_float" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [74636 74945])
                            ("external_constructor" type
                               (:type "struct"
                                :template-specifier 
                                  ( ("value_t::number_unsigned" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [74947 75265])
                            ("external_constructor" type
                               (:type "struct"
                                :template-specifier 
                                  ( ("value_t::number_integer" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [75267 75582])
                            ("external_constructor" type
                               (:type "struct"
                                :members 
                                  ( ("construct" function
                                       (:template 
                                          ( ("BasicJsonType" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [75704 75721])
                                            ("arr" variable
                                               (:reference 1
                                                :typemodifiers ("typename")
                                                :constant-flag t
                                                :type ("BasicJsonType::array_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [75722 75765]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [75645 75867])
                                    ("construct" function
                                       (:template 
                                          ( ("BasicJsonType" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [75932 75949])
                                            ("" variable
                                               (:reference 1
                                                :typemodifiers ("typename")
                                                :type ("BasicJsonType::array_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [75950 75983])
                                            ("" variable (:type ("arr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75984 75988]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [75873 76101])
                                    ("construct" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [76335 76352])
                                            ("arr" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("CompatibleArrayType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [76353 76384]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [76313 76611])
                                    ("construct" function
                                       (:template 
                                          ( ("BasicJsonType" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [76676 76693])
                                            ("arr" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("bool" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [76694 76723]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [76617 76978])
                                    ("construct" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [77136 77153])
                                            ("arr" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::valarray" type
                                                     (:template-specifier 
                                                        ( ("T" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [77154 77182]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [77114 77417]))                                  
                                :template-specifier 
                                  ( ("value_t::array" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [75584 77420])
                            ("external_constructor" type
                               (:type "struct"
                                :members 
                                  ( ("construct" function
                                       (:template 
                                          ( ("BasicJsonType" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [77543 77560])
                                            ("obj" variable
                                               (:reference 1
                                                :typemodifiers ("typename")
                                                :constant-flag t
                                                :type ("BasicJsonType::object_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [77561 77605]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [77484 77708])
                                    ("construct" function
                                       (:template 
                                          ( ("BasicJsonType" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [77773 77790])
                                            ("" variable
                                               (:reference 1
                                                :typemodifiers ("typename")
                                                :type ("BasicJsonType::object_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [77791 77825])
                                            ("" variable (:type ("obj" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [77826 77830]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [77714 77944])
                                    ("construct" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [78156 78173])
                                            ("obj" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("CompatibleObjectType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [78174 78206]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [78134 78437]))                                  
                                :template-specifier 
                                  ( ("value_t::object" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [77422 78440])
                            ("to_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [78917 78934])
                                    ("s" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("CompatibleString" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [78935 78961]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [78904 79025])
                            ("to_json" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [79073 79090])
                                    ("" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :type ("BasicJsonType::string_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [79091 79125])
                                    ("" variable (:type ("s" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [79126 79128]))                                  )
                                (reparse-symbol namespacesubparts) [79027 79203])
                            ("to_json" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [80730 80747])
                                    ("e" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::vector" type
                                             (:template-specifier 
                                                ( ("bool" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [80748 80775]))                                  )
                                (reparse-symbol namespacesubparts) [80684 80838])
                            ("to_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [81359 81376])
                                    ("arr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("CompatibleArrayType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [81377 81408]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [81346 81473])
                            ("to_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [81610 81627])
                                    ("arr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::valarray" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [81628 81656]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [81597 81732])
                            ("to_json" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [81780 81797])
                                    ("" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :type ("BasicJsonType::array_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [81798 81831])
                                    ("" variable (:type ("arr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81832 81836]))                                  )
                                (reparse-symbol namespacesubparts) [81734 81912])
                            ("to_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [82144 82161])
                                    ("obj" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("CompatibleObjectType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [82162 82194]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [82131 82260])
                            ("to_json" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [82308 82325])
                                    ("" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :type ("BasicJsonType::object_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [82326 82360])
                                    ("" variable (:type ("obj" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82361 82365]))                                  )
                                (reparse-symbol namespacesubparts) [82262 82442])
                            ("T" function
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol namespacesubparts) [82602 82615])
                            ("to_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [82665 82682])
                                    ("" variable
                                       (:constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [82683 82696]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [82652 82765])
                            ("to_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [82831 82848])
                                    ("" variable
                                       (:constant-flag t
                                        :type ("std::pair" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [82849 82865])
                                    ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82865 82870])
                                    ("" variable (:type ("p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [82875 82877]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [82818 82912])
                            ("to_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [83138 83155])
                                    ("b" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [83156 83167]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [83125 83205])
                            ("to_json_tuple_impl" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [83300 83317])
                                    ("t" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Tuple" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [83318 83333])
                                    ("" variable (:type ("index_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83334 83349])
                                    ("" variable (:type ("Idx" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83349 83353]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [83276 83405])
                            ("to_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [83471 83488])
                                    ("" variable
                                       (:constant-flag t
                                        :type ("std::tuple" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [83489 83506])
                                    ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83506 83511])
                                    ("" variable (:type ("t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83516 83518]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [83458 83584])
                            ("to_json_fn" type
                               (:members 
                                  ( ("decltype" function
                                       (:arguments 
                                          ( ("" variable (:type ("to_json" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [83777 83809])
                                            ("" variable (:type "void") (reparse-symbol arg-sub-list) [83811 83817]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [83768 83879]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [83586 83882]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [73250 83884])
                    ("unnamed" type
                       (:members 
                          ( ("detail::static_const::value" variable (:type "int") (reparse-symbol namespacesubparts) [84000 84048]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [83956 84050]))                  
                :type "namespace")
                nil [73229 84065])
            ("nlohmann" type
               (:members 
                  ( ("adl_serializer" type
                       (:members 
                          ( ("decltype" function
                               (:arguments 
                                  ( ("" variable (:type ("nlohmann::from_json" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [84687 84743])
                                    ("" variable (:type "void") (reparse-symbol arg-sub-list) [84745 84751]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [84676 84832])
                            ("decltype" function
                               (:arguments 
                                  ( ("" variable (:type ("nlohmann::to_json" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [85294 85344])
                                    ("" variable (:type "void") (reparse-symbol arg-sub-list) [85346 85352]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [85283 85427]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [84142 85430]))                  
                :type "namespace")
                nil [84091 85433])
            ("algorithm" include (:system-flag t) nil [85672 85692])
            ("array" include (:system-flag t) nil [85707 85723])
            ("cassert" include (:system-flag t) nil [85733 85751])
            ("cmath" include (:system-flag t) nil [85762 85778])
            ("cstddef" include (:system-flag t) nil [85788 85806])
            ("cstdint" include (:system-flag t) nil [85817 85835])
            ("cstdio" include (:system-flag t) nil [85877 85894])
            ("cstring" include (:system-flag t) nil [85907 85925])
            ("iterator" include (:system-flag t) nil [85936 85955])
            ("limits" include (:system-flag t) nil [85973 85990])
            ("string" include (:system-flag t) nil [86009 86026])
            ("utility" include (:system-flag t) nil [86050 86068])
            ("array" include (:system-flag t) nil [86192 86208])
            ("cassert" include (:system-flag t) nil [86218 86236])
            ("cstddef" include (:system-flag t) nil [86247 86265])
            ("cstdio" include (:system-flag t) nil [86276 86293])
            ("cstring" include (:system-flag t) nil [86303 86321])
            ("istream" include (:system-flag t) nil [86332 86350])
            ("iterator" include (:system-flag t) nil [86362 86381])
            ("memory" include (:system-flag t) nil [86457 86474])
            ("numeric" include (:system-flag t) nil [86513 86531])
            ("string" include (:system-flag t) nil [86546 86563])
            ("type_traits" include (:system-flag t) nil [86587 86609])
            ("utility" include (:system-flag t) nil [86676 86694])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("input_format_t" type (:type "class") (reparse-symbol namespacesubparts) [86899 86958])
                            ("input_adapter_protocol" type
                               (:members 
                                  ( ("get_character" function
                                       (:pure-virtual-flag t
                                        :prototype-flag t
                                        :typemodifiers ("virtual")
                                        :type ("std::char_traits::int_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [87680 87741]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [87578 87793])
                            ("std::shared_ptr" variable (:type "int") (reparse-symbol namespacesubparts) [87853 87893])
                            ("file_input_adapter" type
                               (:superclasses 
                                  ( ("input_adapter_protocol" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [88100 88107])
                                    ("m_file" function
                                       (:arguments 
                                          ( ("" variable (:type ("f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [88181 88183]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [88174 88190])
                                    ("private" label nil (reparse-symbol classsubparts) [88642 88650])
                                    ("m_file" variable
                                       (:pointer 1
                                        :type ("std::FILE" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [88693 88711]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [88039 88714])
                            ("input_stream_adapter" type
                               (:superclasses 
                                  ( ("input_adapter_protocol" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [89284 89291])
                                    ("input_stream_adapter" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("i" variable
                                               (:reference 1
                                                :type ("std::istream" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [89545 89561]))                                          
                                        :type ("input_stream_adapter" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [89524 89600])
                                    ("private" label nil (reparse-symbol classsubparts) [90409 90417])
                                    ("is" variable (:type ("std::istream" type (:type "class") nil nil)) (reparse-symbol classsubparts) [90458 90475])
                                    ("sb" variable (:type ("std::streambuf" type (:type "class") nil nil)) (reparse-symbol classsubparts) [90480 90499]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [89221 90502])
                            ("input_buffer_adapter" type
                               (:superclasses 
                                  ( ("input_adapter_protocol" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [90602 90609])
                                    ("cursor" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable (:type ("b" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [90697 90699]))                                          
                                        :type ("input_buffer_adapter" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [90690 90720])
                                    ("private" label nil (reparse-symbol classsubparts) [91337 91345])
                                    ("cursor" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol classsubparts) [91391 91410])
                                    ("limit" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol classsubparts) [91455 91479]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [90539 91482])
                            ("wide_string_input_helper" type
                               (:template 
                                  ( ("WideStringType" type (:type "class") nil nil)
                                    ("size_t" type nil nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("fill_buffer" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("str" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("WideStringType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [91604 91630])
                                            ("current_wchar" variable
                                               (:reference 1
                                                :type ("size_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [91659 91681])
                                            ("utf8_bytes" variable
                                               (:reference 1
                                                :type ("std::array" type
                                                     (:template-specifier 
                                                        ( ("std::char_traits::int_type" type nil nil nil)
                                                          ("4"))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [91710 91770])
                                            ("utf8_bytes_index" variable
                                               (:reference 1
                                                :type ("size_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [91799 91824])
                                            ("utf8_bytes_filled" variable
                                               (:reference 1
                                                :type ("size_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [91853 91879]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [91580 93917]))                                  )
                                (reparse-symbol namespacesubparts) [91484 93920])
                            ("wide_string_input_helper" type
                               (:template 
                                  ( ("WideStringType" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("fill_buffer" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("str" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("WideStringType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [94051 94077])
                                            ("current_wchar" variable
                                               (:reference 1
                                                :type ("size_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [94106 94128])
                                            ("utf8_bytes" variable
                                               (:reference 1
                                                :type ("std::array" type
                                                     (:template-specifier 
                                                        ( ("std::char_traits::int_type" type nil nil nil)
                                                          ("4"))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [94157 94217])
                                            ("utf8_bytes_index" variable
                                               (:reference 1
                                                :type ("size_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [94246 94271])
                                            ("utf8_bytes_filled" variable
                                               (:reference 1
                                                :type ("size_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [94300 94326]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [94027 96704]))                                  
                                :template-specifier 
                                  ( ("WideStringType" type nil nil nil)
                                    ("2"))                                  )
                                (reparse-symbol namespacesubparts) [93922 96707])
                            ("wide_string_input_adapter" type
                               (:template 
                                  ( ("WideStringType" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [96811 96818])
                                    ("str" function
                                       (:arguments 
                                          ( ("" variable (:type ("w" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [96906 96908]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [96902 96915])
                                    ("private" label nil (reparse-symbol classsubparts) [97442 97450])
                                    ("fill_buffer" function
                                       (:template 
                                          ( ("size_t" type nil nil nil))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [97455 97643])
                                    ("str" variable
                                       (:constant-flag t
                                        :type ("WideStringType" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [97680 97706])
                                    ("current_wchar" variable
                                       (:default-value "0"
                                        :type ("std::size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [97754 97784])
                                    ("utf8_bytes" variable
                                       (:default-value "{{0, 0, 0, 0}}"
                                        :type ("std::array" type
                                             (:template-specifier 
                                                ( ("std::char_traits::int_type" type nil nil nil)
                                                  ("4"))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [97823 97899])
                                    ("utf8_bytes_index" variable
                                       (:default-value "0"
                                        :type ("std::size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [97967 98000])
                                    ("utf8_bytes_filled" variable
                                       (:default-value "0"
                                        :type ("std::size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [98059 98093]))                                  
                                :superclasses 
                                  ( ("input_adapter_protocol" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [96709 98096])
                            ("input_adapter" type
                               (:members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [98122 98129])
                                    ("input_adapter" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("file" variable
                                               (:pointer 1
                                                :type ("std::FILE" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [98170 98186]))                                          
                                        :type ("input_adapter" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [98156 98246])
                                    ("input_adapter" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("i" variable
                                               (:reference 1
                                                :type ("std::istream" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [98304 98320]))                                          
                                        :type ("input_adapter" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [98290 98379])
                                    ("input_adapter" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("std::istream" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [98438 98452])
                                            ("" variable (:type ("i" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [98453 98455]))                                          
                                        :type ("input_adapter" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [98424 98514])
                                    ("input_adapter" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("ws" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::wstring" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [98534 98557]))                                          
                                        :type ("input_adapter" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [98520 98636])
                                    ("input_adapter" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("ws" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::u16string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [98656 98681]))                                          
                                        :type ("input_adapter" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [98642 98762])
                                    ("input_adapter" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("ws" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::u32string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [98782 98807]))                                          
                                        :type ("input_adapter" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [98768 98888])
                                    ("input_adapter" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("b" variable (:type ("CharT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [99253 99261])
                                            ("l" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [99262 99276]))                                          
                                        :type ("input_adapter" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [99239 99369])
                                    ("input_adapter" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("b" variable (:type ("CharT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [99766 99774]))                                          
                                        :type ("input_adapter" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [99752 99906])
                                    ("input_adapter" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("first" variable (:type ("IteratorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [100225 100244])
                                            ("last" variable (:type ("IteratorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [100245 100263]))                                          
                                        :type ("input_adapter" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [100211 101567])
                                    ("input_adapter" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("std::size_t" type nil nil nil))                                          
                                        :type ("input_adapter" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [101656 101666]))                                          
                                        :constructor-flag t)
                                        (reparse-symbol classsubparts) [101605 101733])
                                    ("input_adapter" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("c" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("ContiguousContainer" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [102168 102197]))                                          
                                        :type ("input_adapter" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [102154 102252])
                                    ("input_adapter_t" function (:type "int") (reparse-symbol classsubparts) [102267 102315])
                                    ("private" label nil (reparse-symbol classsubparts) [102319 102327])
                                    ("ia" variable
                                       (:default-value "nullptr"
                                        :type ("input_adapter_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [102359 102388]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [98098 102391]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [86843 102393]))                  
                :type "namespace")
                nil [86822 102416])
            ("cassert" include (:system-flag t) nil [102492 102510])
            ("cstddef" include (:system-flag t) nil [102521 102539])
            ("string" include (:system-flag t) nil [102540 102557])
            ("utility" include (:system-flag t) nil [102568 102586])
            ("vector" include (:system-flag t) nil [102595 102612])
            ("nlohmann" type
               (:members 
                  ( ("json_sax" type
                       (:template 
                          ( ("BasicJsonType" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("BasicJsonType::number_integer_t" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [103124 103165])
                            ("BasicJsonType::number_unsigned_t" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [103231 103273])
                            ("BasicJsonType::number_float_t" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [103341 103380])
                            ("BasicJsonType::string_t" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [103427 103460])
                            ("null" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [103557 103581])
                            ("boolean" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("val" variable (:type "bool") (reparse-symbol arg-sub-list) [103736 103745]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [103715 103750])
                            ("number_integer" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("val" variable (:type ("number_integer_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [103914 103935]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [103886 103940])
                            ("number_unsigned" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("val" variable (:type ("number_unsigned_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [104123 104145]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [104094 104150])
                            ("number_float" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("val" variable (:type ("number_float_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [104362 104381])
                                    ("s" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [104382 104400]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [104336 104405])
                            ("string" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("val" variable
                                       (:reference 1
                                        :type ("string_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [104599 104613]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [104579 104618])
                            ("start_object" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("elements" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [104882 104903]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [104856 104908])
                            ("key" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("val" variable
                                       (:reference 1
                                        :type ("string_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [105102 105116]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [105085 105121])
                            ("end_object" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [105226 105256])
                            ("start_array" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("elements" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [105517 105538]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [105492 105543])
                            ("end_array" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [105647 105676])
                            ("parse_error" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("position" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [106010 106031])
                                    ("last_token" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [106061 106091])
                                    ("ex" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("detail::exception" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [106121 106149]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [105985 106154]))                          )
                        (reparse-symbol namespacesubparts) [103009 106193])
                    ("detail" type
                       (:members 
                          ( ("json_sax_dom_parser" type
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [106807 106814])
                                    ("BasicJsonType::number_integer_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [106844 106885])
                                    ("BasicJsonType::number_unsigned_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [106916 106958])
                                    ("BasicJsonType::number_float_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [106986 107025])
                                    ("BasicJsonType::string_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [107047 107080])
                                    ("json_sax_dom_parser" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("r" variable
                                               (:reference 1
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [107308 107325])
                                            ("allow_exceptions_" variable
                                               (:constant-flag t
                                                :default-value "true"
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [107326 107361]))                                          
                                        :type ("json_sax_dom_parser" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [107288 107424])
                                    ("null" function (:type "bool") (reparse-symbol classsubparts) [107759 107834])
                                    ("boolean" function
                                       (:arguments 
                                          ( ("val" variable (:type "bool") (reparse-symbol arg-sub-list) [107853 107862]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [107840 107922])
                                    ("number_integer" function
                                       (:arguments 
                                          ( ("val" variable (:type ("number_integer_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [107948 107969]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [107928 108029])
                                    ("number_unsigned" function
                                       (:arguments 
                                          ( ("val" variable (:type ("number_unsigned_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [108056 108078]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [108035 108138])
                                    ("number_float" function
                                       (:arguments 
                                          ( ("val" variable (:type ("number_float_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [108162 108181])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [108182 108209]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [108144 108269])
                                    ("string" function
                                       (:arguments 
                                          ( ("val" variable
                                               (:reference 1
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [108287 108301]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [108275 108361])
                                    ("start_object" function
                                       (:arguments 
                                          ( ("len" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [108385 108401]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [108367 108765])
                                    ("key" function
                                       (:arguments 
                                          ( ("val" variable
                                               (:reference 1
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [108780 108794]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [108771 108973])
                                    ("end_object" function (:type "bool") (reparse-symbol classsubparts) [108979 109059])
                                    ("start_array" function
                                       (:arguments 
                                          ( ("len" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [109082 109098]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [109065 109460])
                                    ("end_array" function (:type "bool") (reparse-symbol classsubparts) [109466 109545])
                                    ("parse_error" function
                                       (:arguments 
                                          ( ("" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [109568 109591])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [109592 109622])
                                            ("ex" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("detail::exception" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [109644 109672]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [109551 110565])
                                    ("is_errored" function (:type "bool") (reparse-symbol classsubparts) [110581 110640])
                                    ("private" label nil (reparse-symbol classsubparts) [110644 110652])
                                    ("handle_value" function
                                       (:template 
                                          ( ("Value" type (:type "class") nil nil))                                          
                                        :type ("BasicJsonType" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Value" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [110957 110964])
                                            ("" variable (:type ("v" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [110965 110967]))                                          
                                        :pointer 1)
                                        (reparse-symbol classsubparts) [110900 111579])
                                    ("root" variable (:type ("BasicJsonType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [111615 111635])
                                    ("ref_stack" variable (:type ("std::vector" type
                                         (:template-specifier 
                                            ( ("BasicJsonType" type (:pointer 1) nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [111683 111724])
                                    ("object_element" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [111794 111834])
                                    ("errored" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol classsubparts) [111879 111900])
                                    ("allow_exceptions" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol classsubparts) [111959 111994]))                                  )
                                (reparse-symbol namespacesubparts) [106744 111997])
                            ("json_sax_dom_callback_parser" type
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [112071 112078])
                                    ("BasicJsonType::number_integer_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [112108 112149])
                                    ("BasicJsonType::number_unsigned_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [112180 112222])
                                    ("BasicJsonType::number_float_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [112250 112289])
                                    ("BasicJsonType::string_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [112311 112344])
                                    ("BasicJsonType::parser_callback_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [112375 112417])
                                    ("BasicJsonType::parse_event_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [112444 112482])
                                    ("json_sax_dom_callback_parser" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("r" variable
                                               (:reference 1
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [112517 112534])
                                            ("cb" variable
                                               (:constant-flag t
                                                :type ("parser_callback_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [112568 112595])
                                            ("allow_exceptions_" variable
                                               (:constant-flag t
                                                :default-value "true"
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [112629 112664]))                                          
                                        :type ("json_sax_dom_callback_parser" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [112488 112782])
                                    ("null" function (:type "bool") (reparse-symbol classsubparts) [113198 113273])
                                    ("boolean" function
                                       (:arguments 
                                          ( ("val" variable (:type "bool") (reparse-symbol arg-sub-list) [113292 113301]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [113279 113361])
                                    ("number_integer" function
                                       (:arguments 
                                          ( ("val" variable (:type ("number_integer_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [113387 113408]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [113367 113468])
                                    ("number_unsigned" function
                                       (:arguments 
                                          ( ("val" variable (:type ("number_unsigned_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [113495 113517]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [113474 113577])
                                    ("number_float" function
                                       (:arguments 
                                          ( ("val" variable (:type ("number_float_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [113601 113620])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [113621 113648]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [113583 113708])
                                    ("string" function
                                       (:arguments 
                                          ( ("val" variable
                                               (:reference 1
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [113726 113740]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [113714 113800])
                                    ("start_object" function
                                       (:arguments 
                                          ( ("len" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [113824 113840]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [113806 114440])
                                    ("key" function
                                       (:arguments 
                                          ( ("val" variable
                                               (:reference 1
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [114455 114469]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [114446 114952])
                                    ("end_object" function (:type "bool") (reparse-symbol classsubparts) [114958 115796])
                                    ("start_array" function
                                       (:arguments 
                                          ( ("len" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [115819 115835]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [115802 116388])
                                    ("end_array" function (:type "bool") (reparse-symbol classsubparts) [116394 117103])
                                    ("parse_error" function
                                       (:arguments 
                                          ( ("" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [117126 117149])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [117150 117180])
                                            ("ex" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("detail::exception" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [117202 117230]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [117109 118123])
                                    ("is_errored" function (:type "bool") (reparse-symbol classsubparts) [118139 118198])
                                    ("private" label nil (reparse-symbol classsubparts) [118202 118210])
                                    ("handle_value" function
                                       (:template 
                                          ( ("Value" type (:type "class") nil nil))                                          
                                        :type ("std::pair" type
                                             (:template-specifier 
                                                ( ("bool" type nil nil nil)
                                                  ("BasicJsonType" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Value" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [119056 119063])
                                            ("" variable (:type ("v" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [119064 119066])
                                            ("skip_callback" variable
                                               (:constant-flag t
                                                :default-value "false"
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [119067 119099]))                                          )
                                        (reparse-symbol classsubparts) [118982 120924])
                                    ("root" variable (:type ("BasicJsonType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [120960 120980])
                                    ("ref_stack" variable (:type ("std::vector" type
                                         (:template-specifier 
                                            ( ("BasicJsonType" type (:pointer 1) nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [121028 121069])
                                    ("keep_stack" variable (:type ("std::vector" type
                                         (:template-specifier 
                                            ( ("bool" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [121119 121151])
                                    ("key_keep_stack" variable (:type ("std::vector" type
                                         (:template-specifier 
                                            ( ("bool" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [121206 121242])
                                    ("object_element" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [121312 121352])
                                    ("errored" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol classsubparts) [121397 121418])
                                    ("callback" variable
                                       (:constant-flag t
                                        :default-value "nullptr"
                                        :type ("parser_callback_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [121449 121492])
                                    ("allow_exceptions" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol classsubparts) [121551 121586])
                                    ("BasicJsonType::value_t::discarded" variable (:type "int") (reparse-symbol classsubparts) [121660 121694]))                                  )
                                (reparse-symbol namespacesubparts) [111999 121697])
                            ("json_sax_acceptor" type
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [121760 121767])
                                    ("BasicJsonType::number_integer_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [121797 121838])
                                    ("BasicJsonType::number_unsigned_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [121869 121911])
                                    ("BasicJsonType::number_float_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [121939 121978])
                                    ("BasicJsonType::string_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [122000 122033])
                                    ("null" function (:type "bool") (reparse-symbol classsubparts) [122039 122083])
                                    ("boolean" function
                                       (:arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [122102 122118]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [122089 122151])
                                    ("number_integer" function
                                       (:arguments 
                                          ( ("" variable (:type ("number_integer_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [122177 122205]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [122157 122238])
                                    ("number_unsigned" function
                                       (:arguments 
                                          ( ("" variable (:type ("number_unsigned_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [122265 122294]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [122244 122327])
                                    ("number_float" function
                                       (:arguments 
                                          ( ("" variable (:type ("number_float_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [122351 122377])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [122378 122405]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [122333 122438])
                                    ("string" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [122456 122477]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [122444 122510])
                                    ("start_object" function
                                       (:arguments 
                                          ( ("" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [122534 122575]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [122516 122609])
                                    ("key" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [122624 122645]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [122615 122678])
                                    ("end_object" function (:type "bool") (reparse-symbol classsubparts) [122684 122734])
                                    ("start_array" function
                                       (:arguments 
                                          ( ("" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [122757 122798]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [122740 122832])
                                    ("end_array" function (:type "bool") (reparse-symbol classsubparts) [122838 122887])
                                    ("parse_error" function
                                       (:arguments 
                                          ( ("" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [122910 122933])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [122934 122964])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("detail::exception" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [122965 123001]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [122893 123035]))                                  )
                                (reparse-symbol namespacesubparts) [121699 123038]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [106196 123040]))                  
                :type "namespace")
                nil [102718 123064])
            ("cstdint" include (:system-flag t) nil [123184 123202])
            ("utility" include (:system-flag t) nil [123213 123231])
            ("string" include (:system-flag t) nil [123243 123260])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("null_function_t" variable
                               (:default-value "decltype(std::declval<T&>().null())"
                                :type "int")
                                (reparse-symbol namespacesubparts) [123442 123496])
                            ("boolean_function_t" variable
                               (:default-value "decltype(std::declval<T&>().boolean(std::declval<bool>()))"
                                :type "int")
                                (reparse-symbol namespacesubparts) [123526 123610])
                            ("number_integer_function_t" variable
                               (:default-value "decltype(std::declval<T&>().number_integer(std::declval<Integer>()))"
                                :type "int")
                                (reparse-symbol namespacesubparts) [123658 123759])
                            ("number_unsigned_function_t" variable
                               (:default-value "decltype(std::declval<T&>().number_unsigned(std::declval<Unsigned>()))"
                                :type "int")
                                (reparse-symbol namespacesubparts) [123808 123912])
                            ("number_float_function_t" variable
                               (:default-value "decltype(std::declval<T&>().number_float(
                                    std::declval<Float>(), std::declval<const String&>()))"
                                :type "int")
                                (reparse-symbol namespacesubparts) [123975 124134])
                            ("string_function_t" variable
                               (:default-value "decltype(std::declval<T&>().string(std::declval<String&>()))"
                                :type "int")
                                (reparse-symbol namespacesubparts) [124181 124266])
                            ("start_object_function_t" variable
                               (:default-value "decltype(std::declval<T&>().start_object(std::declval<std::size_t>()))"
                                :type "int")
                                (reparse-symbol namespacesubparts) [124296 124397])
                            ("key_function_t" variable
                               (:default-value "decltype(std::declval<T&>().key(std::declval<String&>()))"
                                :type "int")
                                (reparse-symbol namespacesubparts) [124444 124523])
                            ("end_object_function_t" variable
                               (:default-value "decltype(std::declval<T&>().end_object())"
                                :type "int")
                                (reparse-symbol namespacesubparts) [124553 124619])
                            ("start_array_function_t" variable
                               (:default-value "decltype(std::declval<T&>().start_array(std::declval<std::size_t>()))"
                                :type "int")
                                (reparse-symbol namespacesubparts) [124649 124748])
                            ("end_array_function_t" variable
                               (:default-value "decltype(std::declval<T&>().end_array())"
                                :type "int")
                                (reparse-symbol namespacesubparts) [124778 124842])
                            ("parse_error_function_t" variable
                               (:default-value "decltype(std::declval<T&>().parse_error(
        std::declval<std::size_t>(), std::declval<const std::string&>(),
        std::declval<const Exception&>()))"
                                :type "int")
                                (reparse-symbol namespacesubparts) [124892 125074])
                            ("is_sax" type
                               (:template 
                                  ( ("SAX" type (:type "class") nil nil)
                                    ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("private" label nil (reparse-symbol classsubparts) [125142 125150])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("is_basic_json" type
                                                 (:template-specifier 
                                                    ( ("BasicJsonType" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [125169 125198])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [125199 125205]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [125155 125273])
                                    ("BasicJsonType::number_integer_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [125304 125345])
                                    ("BasicJsonType::number_unsigned_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [125376 125418])
                                    ("BasicJsonType::number_float_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [125446 125485])
                                    ("BasicJsonType::string_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [125507 125540])
                                    ("BasicJsonType::exception" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [125565 125599])
                                    ("public" label nil (reparse-symbol classsubparts) [125603 125610])
                                    ("is_detected_exact::value" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol classsubparts) [126506 126596]))                                  )
                                (reparse-symbol namespacesubparts) [125076 126599])
                            ("is_sax_static_asserts" type
                               (:template 
                                  ( ("SAX" type (:type "class") nil nil)
                                    ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("private" label nil (reparse-symbol classsubparts) [126682 126690])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("is_basic_json" type
                                                 (:template-specifier 
                                                    ( ("BasicJsonType" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [126709 126738])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [126739 126745]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [126695 126813])
                                    ("BasicJsonType::number_integer_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [126844 126885])
                                    ("BasicJsonType::number_unsigned_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [126916 126958])
                                    ("BasicJsonType::number_float_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [126986 127025])
                                    ("BasicJsonType::string_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [127047 127080])
                                    ("BasicJsonType::exception" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [127105 127139])
                                    ("public" label nil (reparse-symbol classsubparts) [127143 127150])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("is_detected_exact" type
                                                 (:template-specifier 
                                                    ( ("bool" type nil nil nil)
                                                      ("null_function_t" type nil nil nil)
                                                      ("SAX" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [127169 127215])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [127216 127222]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [127155 127282])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("is_detected_exact" type
                                                 (:template-specifier 
                                                    ( ("bool" type nil nil nil)
                                                      ("boolean_function_t" type nil nil nil)
                                                      ("SAX" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [127301 127350])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [127351 127357]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [127287 127424])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("is_detected_exact" type
                                                 (:template-specifier 
                                                    ( ("bool" type nil nil nil)
                                                      ("boolean_function_t" type nil nil nil)
                                                      ("SAX" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [127443 127492])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [127493 127499]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [127429 127566])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("is_detected_exact" type
                                                 (:template-specifier 
                                                    ( ("bool" type nil nil nil)
                                                      ("number_integer_function_t" type nil nil nil)
                                                      ("SAX" type nil nil nil)
                                                      ("number_integer_t" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [127594 127676])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [127677 127683]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [127571 127759])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("is_detected_exact" type
                                                 (:template-specifier 
                                                    ( ("bool" type nil nil nil)
                                                      ("number_unsigned_function_t" type nil nil nil)
                                                      ("SAX" type nil nil nil)
                                                      ("number_unsigned_t" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [127787 127871])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [127872 127878]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [127764 127956])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("is_detected_exact" type
                                                 (:template-specifier 
                                                    ( ("bool" type nil nil nil)
                                                      ("number_float_function_t" type nil nil nil)
                                                      ("SAX" type nil nil nil)
                                                      ("number_float_t" type nil nil nil)
                                                      ("string_t" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [127975 128073])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [128074 128080]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [127961 128179])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("is_detected_exact" type
                                                 (:template-specifier 
                                                    ( ("bool" type nil nil nil)
                                                      ("string_function_t" type nil nil nil)
                                                      ("SAX" type nil nil nil)
                                                      ("string_t" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [128207 128265])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [128266 128272]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [128184 128333])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("is_detected_exact" type
                                                 (:template-specifier 
                                                    ( ("bool" type nil nil nil)
                                                      ("start_object_function_t" type nil nil nil)
                                                      ("SAX" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [128352 128406])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [128407 128413]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [128338 128492])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("is_detected_exact" type
                                                 (:template-specifier 
                                                    ( ("bool" type nil nil nil)
                                                      ("key_function_t" type nil nil nil)
                                                      ("SAX" type nil nil nil)
                                                      ("string_t" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [128511 128566])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [128567 128573]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [128497 128641])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("is_detected_exact" type
                                                 (:template-specifier 
                                                    ( ("bool" type nil nil nil)
                                                      ("end_object_function_t" type nil nil nil)
                                                      ("SAX" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [128660 128712])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [128713 128719]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [128646 128785])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("is_detected_exact" type
                                                 (:template-specifier 
                                                    ( ("bool" type nil nil nil)
                                                      ("start_array_function_t" type nil nil nil)
                                                      ("SAX" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [128804 128857])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [128858 128864]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [128790 128942])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("is_detected_exact" type
                                                 (:template-specifier 
                                                    ( ("bool" type nil nil nil)
                                                      ("end_array_function_t" type nil nil nil)
                                                      ("SAX" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [128961 129012])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [129013 129019]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [128947 129084])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("is_detected_exact" type
                                                 (:template-specifier 
                                                    ( ("bool" type nil nil nil)
                                                      ("parse_error_function_t" type nil nil nil)
                                                      ("SAX" type nil nil nil)
                                                      ("exception_t" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [129112 129178])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [129179 129185]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [129089 129302]))                                  )
                                (reparse-symbol namespacesubparts) [126601 129305]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [123395 129307]))                  
                :type "namespace")
                nil [123374 129330])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("binary_reader" type
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil)
                                    ("SAX" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("BasicJsonType::number_integer_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [129705 129746])
                                    ("BasicJsonType::number_unsigned_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [129777 129819])
                                    ("BasicJsonType::number_float_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [129847 129886])
                                    ("BasicJsonType::string_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [129908 129941])
                                    ("json_sax_t" variable
                                       (:default-value "SAX"
                                        :type "int")
                                        (reparse-symbol classsubparts) [129952 129969])
                                    ("public" label nil (reparse-symbol classsubparts) [129973 129980])
                                    ("binary_reader" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("adapter" variable (:type ("input_adapter_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [130109 130133]))                                          
                                        :type ("binary_reader" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [130095 130258])
                                    ("sax_parse" function
                                       (:arguments 
                                          ( ("format" variable
                                               (:constant-flag t
                                                :type ("input_format_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [130753 130781])
                                            ("sax_" variable
                                               (:pointer 1
                                                :type ("json_sax_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [130801 130818])
                                            ("strict" variable
                                               (:constant-flag t
                                                :default-value "true"
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [130838 130862]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [130738 132176])
                                    ("private" label nil (reparse-symbol classsubparts) [132492 132500])
                                    ("parse_bson_internal" function (:type "bool") (reparse-symbol classsubparts) [132701 133123])
                                    ("get_bson_cstr" function
                                       (:arguments 
                                          ( ("result" variable
                                               (:reference 1
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [133499 133516]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [133480 133936])
                                    ("get_bson_string" function
                                       (:template 
                                          ( ("NumberType" type (:type "class") nil nil))                                          
                                        :type "bool"
                                        :arguments 
                                          ( ("len" variable
                                               (:constant-flag t
                                                :type ("NumberType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [134476 134497])
                                            ("result" variable
                                               (:reference 1
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [134498 134515]))                                          )
                                        (reparse-symbol classsubparts) [134421 134981])
                                    ("parse_bson_element_internal" function
                                       (:arguments 
                                          ( ("element_type" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol arg-sub-list) [135581 135604])
                                            ("element_type_parse_position" variable
                                               (:constant-flag t
                                                :type ("std::size_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [135642 135688]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [135548 137540])
                                    ("parse_bson_element_list" function
                                       (:arguments 
                                          ( ("is_array" variable
                                               (:constant-flag t
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [138123 138143]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [138094 138936])
                                    ("parse_bson_array" function (:type "bool") (reparse-symbol classsubparts) [139104 139520])
                                    ("parse_cbor_internal" function
                                       (:arguments 
                                          ( ("get_char" variable
                                               (:constant-flag t
                                                :default-value "true"
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [139895 139921]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [139870 151659])
                                    ("get_cbor_string" function
                                       (:arguments 
                                          ( ("result" variable
                                               (:reference 1
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [152033 152050]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [152012 154735])
                                    ("get_cbor_array" function
                                       (:arguments 
                                          ( ("len" variable
                                               (:constant-flag t
                                                :type ("std::size_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [154936 154958]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [154916 155603])
                                    ("get_cbor_object" function
                                       (:arguments 
                                          ( ("len" variable
                                               (:constant-flag t
                                                :type ("std::size_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [155808 155830]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [155787 156881])
                                    ("parse_msgpack_internal" function (:type "bool") (reparse-symbol classsubparts) [157032 166718])
                                    ("get_msgpack_string" function
                                       (:arguments 
                                          ( ("result" variable
                                               (:reference 1
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [167030 167047]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [167006 169117])
                                    ("get_msgpack_array" function
                                       (:arguments 
                                          ( ("len" variable
                                               (:constant-flag t
                                                :type ("std::size_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [169250 169272]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [169227 169604])
                                    ("get_msgpack_object" function
                                       (:arguments 
                                          ( ("len" variable
                                               (:constant-flag t
                                                :type ("std::size_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [169740 169762]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [169716 170302])
                                    ("parse_ubjson_internal" function
                                       (:arguments 
                                          ( ("get_char" variable
                                               (:constant-flag t
                                                :default-value "true"
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [170687 170713]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [170660 170799])
                                    ("get_ubjson_string" function
                                       (:arguments 
                                          ( ("result" variable
                                               (:reference 1
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [171345 171362])
                                            ("get_char" variable
                                               (:constant-flag t
                                                :default-value "true"
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [171363 171389]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [171322 172990])
                                    ("get_ubjson_size_value" function
                                       (:arguments 
                                          ( ("result" variable
                                               (:reference 1
                                                :type ("std::size_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [173127 173147]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [173100 175207])
                                    ("get_ubjson_size_type" function
                                       (:arguments 
                                          ( ("result" variable
                                               (:reference 1
                                                :type ("std::pair" type
                                                     (:template-specifier 
                                                        ( ("std::size_t" type nil nil nil)
                                                          ("int" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [175528 175564]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [175502 176683])
                                    ("get_ubjson_value" function
                                       (:arguments 
                                          ( ("prefix" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol arg-sub-list) [176829 176846]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [176807 179934])
                                    ("get_ubjson_array" function (:type "bool") (reparse-symbol classsubparts) [180000 181594])
                                    ("get_ubjson_object" function (:type "bool") (reparse-symbol classsubparts) [181661 183759])
                                    ("get" function (:type "int") (reparse-symbol classsubparts) [184151 184240])
                                    ("get_ignore_noop" function (:type "int") (reparse-symbol classsubparts) [184334 184474])
                                    ("get_number" function
                                       (:template 
                                          ( ("NumberType" type (:type "class") nil nil)
                                            ("bool" type nil nil nil))                                          
                                        :type "bool"
                                        :arguments 
                                          ( ("format" variable
                                               (:constant-flag t
                                                :type ("input_format_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [185051 185079])
                                            ("result" variable
                                               (:reference 1
                                                :type ("NumberType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [185080 185099]))                                          )
                                        (reparse-symbol classsubparts) [184967 185973])
                                    ("get_string" function
                                       (:template 
                                          ( ("NumberType" type (:type "class") nil nil))                                          
                                        :type "bool"
                                        :arguments 
                                          ( ("format" variable
                                               (:constant-flag t
                                                :type ("input_format_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [186577 186605])
                                            ("len" variable
                                               (:constant-flag t
                                                :type ("NumberType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [186626 186647])
                                            ("result" variable
                                               (:reference 1
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [186668 186685]))                                          )
                                        (reparse-symbol classsubparts) [186527 187051])
                                    ("unexpect_eof" function
                                       (:arguments 
                                          ( ("format" variable
                                               (:constant-flag t
                                                :type ("input_format_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [187276 187304])
                                            ("context" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [187305 187325]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [187258 187656])
                                    ("get_token_string" function (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [187735 187952])
                                    ("exception_message" function
                                       (:arguments 
                                          ( ("format" variable
                                               (:constant-flag t
                                                :type ("input_format_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [188213 188241])
                                            ("detail" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [188276 188302])
                                            ("context" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [188337 188364]))                                          
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [188183 189063])
                                    ("private" label nil (reparse-symbol classsubparts) [189067 189075])
                                    ("ia" variable
                                       (:default-value "nullptr"
                                        :type ("input_adapter_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [189102 189131])
                                    ("current" variable
                                       (:default-value "std::char_traits<char>::eof()"
                                        :type "int")
                                        (reparse-symbol classsubparts) [189167 189211])
                                    ("chars_read" variable
                                       (:default-value "0"
                                        :type ("std::size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [189255 189282])
                                    ("is_little_endian" variable
                                       (:constant-flag t
                                        :default-value "little_endianess()"
                                        :type "bool")
                                        (reparse-symbol classsubparts) [189335 189384])
                                    ("sax" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type ("json_sax_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [189413 189439]))                                  )
                                (reparse-symbol namespacesubparts) [129570 189442]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [129420 189444]))                  
                :type "namespace")
                nil [129399 189467])
            ("array" include (:system-flag t) nil [189596 189612])
            ("clocale" include (:system-flag t) nil [189622 189640])
            ("cstddef" include (:system-flag t) nil [189655 189673])
            ("cstdio" include (:system-flag t) nil [189684 189701])
            ("cstdlib" include (:system-flag t) nil [189714 189732])
            ("initializer_list" include (:system-flag t) nil [189779 189806])
            ("string" include (:system-flag t) nil [189827 189844])
            ("utility" include (:system-flag t) nil [189868 189886])
            ("vector" include (:system-flag t) nil [189895 189912])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("lexer" type
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("BasicJsonType::number_integer_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [190336 190377])
                                    ("BasicJsonType::number_unsigned_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [190408 190450])
                                    ("BasicJsonType::number_float_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [190478 190517])
                                    ("BasicJsonType::string_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [190539 190572])
                                    ("public" label nil (reparse-symbol classsubparts) [190576 190583])
                                    ("token_type" type (:type "class") (reparse-symbol classsubparts) [190628 191826])
                                    ("lexer" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("detail::input_adapter_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [193498 193523])
                                            ("" variable (:type ("adapter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [193524 193532]))                                          
                                        :type ("lexer" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [193492 193609])
                                    ("private" label nil (reparse-symbol classsubparts) [193821 193829])
                                    ("get_codepoint" function (:type "int") (reparse-symbol classsubparts) [194882 195882])
                                    ("next_byte_in_range" function
                                       (:arguments 
                                          ( ("ranges" variable (:type ("std::initializer_list" type
                                                 (:template-specifier 
                                                    ( ("int" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [196560 196594]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [196536 197124])
                                    ("scan_string" function (:type ("token_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [197723 219903])
                                    ("scan_number" function (:type ("token_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [222567 230699])
                                    ("scan_literal" function
                                       (:arguments 
                                          ( ("literal_text" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [230932 230957])
                                            ("length" variable
                                               (:constant-flag t
                                                :type ("std::size_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [230958 230983])
                                            ("return_type" variable (:type ("token_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [231012 231035]))                                          
                                        :type ("token_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [230908 231372])
                                    ("get" function (:type ("std::char_traits::int_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [232051 232738])
                                    ("unget" function (:type "void") (reparse-symbol classsubparts) [233102 233705])
                                    ("add" function
                                       (:arguments 
                                          ( ("c" variable (:type "int") (reparse-symbol arg-sub-list) [233760 233766]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [233751 233851])
                                    ("public" label nil (reparse-symbol classsubparts) [233855 233862])
                                    ("get_string" function (:type ("string_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [234455 234518])
                                    ("get_token_string" function (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [234968 235585])
                                    ("skip_bom" function (:type "bool") (reparse-symbol classsubparts) [235936 236257])
                                    ("scan" function (:type ("token_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [236263 238299])
                                    ("private" label nil (reparse-symbol classsubparts) [238303 238311])
                                    ("ia" variable
                                       (:default-value "nullptr"
                                        :type ("detail::input_adapter_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [238338 238375])
                                    ("current" variable
                                       (:default-value "std::char_traits<char>::eof()"
                                        :type ("std::char_traits::int_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [238411 238484])
                                    ("next_unget" variable
                                       (:default-value "false"
                                        :type "bool")
                                        (reparse-symbol classsubparts) [238553 238577])
                                    ("position" variable (:type ("position_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [238631 238654])
                                    ("token_string" variable (:type ("std::vector" type
                                         (:template-specifier 
                                            ( ("char" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [238712 238746])
                                    ("token_buffer" variable (:type ("string_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [238813 238838])
                                    ("error_message" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "\"\""
                                        :type "char")
                                        (reparse-symbol classsubparts) [238891 238922])
                                    ("value_integer" variable
                                       (:default-value "0"
                                        :type ("number_integer_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [238949 238984])
                                    ("value_unsigned" variable
                                       (:default-value "0"
                                        :type ("number_unsigned_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [238989 239026])
                                    ("value_float" variable
                                       (:default-value "0"
                                        :type ("number_float_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [239031 239062])
                                    ("decimal_point_char" variable
                                       (:constant-flag t
                                        :default-value "'.'"
                                        :type "char")
                                        (reparse-symbol classsubparts) [239094 239130]))                                  )
                                (reparse-symbol namespacesubparts) [190260 239133]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [190101 239135]))                  
                :type "namespace")
                nil [190080 239158])
            ("cassert" include (:system-flag t) nil [239232 239250])
            ("cmath" include (:system-flag t) nil [239261 239277])
            ("cstdint" include (:system-flag t) nil [239290 239308])
            ("functional" include (:system-flag t) nil [239320 239341])
            ("string" include (:system-flag t) nil [239354 239371])
            ("utility" include (:system-flag t) nil [239382 239400])
            ("vector" include (:system-flag t) nil [239409 239426])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("parser" type
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("BasicJsonType::number_integer_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [240012 240053])
                                    ("BasicJsonType::number_unsigned_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [240084 240126])
                                    ("BasicJsonType::number_float_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [240154 240193])
                                    ("BasicJsonType::string_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [240215 240248])
                                    ("lexer" variable (:type "int") (reparse-symbol classsubparts) [240269 240290])
                                    ("lexer_t::token_type" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [240314 240343])
                                    ("public" label nil (reparse-symbol classsubparts) [240347 240354])
                                    ("parse_event_t" type
                                       (:superclasses 
                                          ( ("uint8_t" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :type "class")
                                        (reparse-symbol classsubparts) [240364 240902])
                                    ("parser" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("detail::input_adapter_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [241086 241111])
                                            ("" variable (:type ("adapter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [241112 241120])
                                            ("cb" variable
                                               (:constant-flag t
                                                :default-value "nullptr"
                                                :type ("parser_callback_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [241141 241177])
                                            ("allow_exceptions_" variable
                                               (:constant-flag t
                                                :default-value "true"
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [241199 241234]))                                          
                                        :type ("parser" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [241079 241385])
                                    ("parse" function
                                       (:arguments 
                                          ( ("strict" variable
                                               (:constant-flag t
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [241740 241758])
                                            ("result" variable
                                               (:reference 1
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [241759 241781]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [241729 243714])
                                    ("accept" function
                                       (:arguments 
                                          ( ("strict" variable
                                               (:constant-flag t
                                                :default-value "true"
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [243901 243925]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [243889 244042])
                                    ("sax_parse" function
                                       (:template 
                                          ( ("SAX" type (:type "class") nil nil))                                          
                                        :type "bool"
                                        :arguments 
                                          ( ("sax" variable
                                               (:pointer 1
                                                :type ("SAX" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [244091 244100])
                                            ("strict" variable
                                               (:constant-flag t
                                                :default-value "true"
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [244101 244125]))                                          )
                                        (reparse-symbol classsubparts) [244048 244736])
                                    ("private" label nil (reparse-symbol classsubparts) [244740 244748])
                                    ("sax_parse_internal" function
                                       (:template 
                                          ( ("SAX" type (:type "class") nil nil))                                          
                                        :type "bool"
                                        :arguments 
                                          ( ("sax" variable
                                               (:pointer 1
                                                :type ("SAX" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [244805 244814]))                                          )
                                        (reparse-symbol classsubparts) [244753 256307])
                                    ("get_token" function (:type ("token_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [256347 256425])
                                    ("exception_message" function
                                       (:arguments 
                                          ( ("expected" variable
                                               (:constant-flag t
                                                :type ("token_type" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [256461 256487])
                                            ("context" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [256488 256515]))                                          
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [256431 257249])
                                    ("private" label nil (reparse-symbol classsubparts) [257253 257261])
                                    ("callback" variable
                                       (:constant-flag t
                                        :default-value "nullptr"
                                        :type ("parser_callback_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [257292 257335])
                                    ("token_type::uninitialized" variable (:type "int") (reparse-symbol classsubparts) [257404 257430])
                                    ("m_lexer" variable (:type ("lexer_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [257453 257469])
                                    ("allow_exceptions" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol classsubparts) [257528 257563]))                                  )
                                (reparse-symbol namespacesubparts) [239935 257566]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [239796 257568]))                  
                :type "namespace")
                nil [239775 257591])
            ("cstddef" include (:system-flag t) nil [257745 257763])
            ("limits" include (:system-flag t) nil [257777 257794])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("primitive_iterator_t" type
                               (:members 
                                  ( ("private" label nil (reparse-symbol classsubparts) [258269 258277])
                                    ("std::ptrdiff_t" variable (:type "int") (reparse-symbol classsubparts) [258306 258321])
                                    ("begin_value" variable
                                       (:default-value "0"
                                        :type ("difference_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [258343 258375])
                                    ("end_value" variable
                                       (:default-value "begin_value + 1"
                                        :type ("difference_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [258397 258441])
                                    ("m_it" variable
                                       (:default-value "(std::numeric_limits<std::ptrdiff_t>::min)()"
                                        :type ("difference_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [258487 258555])
                                    ("public" label nil (reparse-symbol classsubparts) [258559 258566]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [258238 260484]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [257836 260486]))                  
                :type "namespace")
                nil [257815 260509])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("internal_iterator" type
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("object_iterator" variable
                                       (:typemodifiers ("typename")
                                        :type ("BasicJsonType::object_t::iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [260875 260937])
                                    ("array_iterator" variable
                                       (:typemodifiers ("typename")
                                        :type ("BasicJsonType::array_t::iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [260975 261035])
                                    ("primitive_iterator" variable (:type ("primitive_iterator_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [261085 261128]))                                  )
                                (reparse-symbol namespacesubparts) [260777 261131]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [260556 261133]))                  
                :type "namespace")
                nil [260535 261156])
            ("ciso646" include (:system-flag t) nil [261237 261255])
            ("iterator" include (:system-flag t) nil [261263 261282])
            ("type_traits" include (:system-flag t) nil [261366 261388])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("iteration_proxy" type
                               (:template 
                                  ( ("IteratorType" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [261889 261943])
                            ("iteration_proxy_value" type
                               (:template 
                                  ( ("IteratorType" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [261944 262004])
                            ("iter_impl" type
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("BasicJsonType" variable
                                       (:typemodifiers ("friend")
                                        :type "int")
                                        (reparse-symbol classsubparts) [263204 263225])
                                    ("iteration_proxy" variable
                                       (:typemodifiers ("friend")
                                        :type "int")
                                        (reparse-symbol classsubparts) [263230 263264])
                                    ("iteration_proxy_value" variable
                                       (:typemodifiers ("friend")
                                        :type "int")
                                        (reparse-symbol classsubparts) [263269 263309])
                                    ("BasicJsonType::object_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [263332 263365])
                                    ("BasicJsonType::array_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [263386 263418])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("is_basic_json" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [263502 263516])
                                            ("" variable
                                               (:typemodifiers ("typename")
                                                :type ("std::remove_const::type" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [263516 263564])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [263566 263572]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [263488 263636])
                                    ("public" label nil (reparse-symbol classsubparts) [263640 263647])
                                    ("std::bidirectional_iterator_tag" variable (:type "int") (reparse-symbol classsubparts) [264133 264165])
                                    ("BasicJsonType::value_type" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [264255 264290])
                                    ("BasicJsonType::difference_type" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [264377 264417])
                                    ("type" variable (:type "int") (reparse-symbol classsubparts) [264659 264664])
                                    ("type" variable (:type "int") (reparse-symbol classsubparts) [264918 264923])
                                    ("m_object" function
                                       (:arguments 
                                          ( ("" variable (:type ("object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [265264 265271]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [265255 265822])
                                    ("m_object" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [266541 266547])
                                            ("" variable (:type ("m_object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [266547 266556]))                                          
                                        :type ("iter_impl" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [266532 266577])
                                    ("private" label nil (reparse-symbol classsubparts) [266989 266997])
                                    ("public" label nil (reparse-symbol classsubparts) [268609 268616])
                                    ("" function
                                       (:operator-flag t
                                        :function-pointer t
                                        :type ("reference" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [268772 269670])
                                    ("->" function
                                       (:operator-flag t
                                        :type ("pointer" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [269793 270581])
                                    ("++" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [270728 270732]))                                          
                                        :type ("iter_impl" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [270701 270815])
                                    ("++" function
                                       (:operator-flag t
                                        :type ("iter_impl" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [270934 271479])
                                    ("--" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [271626 271630]))                                          
                                        :type ("iter_impl" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [271599 271713])
                                    ("--" function
                                       (:operator-flag t
                                        :type ("iter_impl" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [271832 272379])
                                    ("==" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("other" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("iter_impl" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [272512 272535]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [272496 273221])
                                    ("!=" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("other" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("iter_impl" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [273358 273381]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [273342 273437])
                                    ("<" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("other" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("iter_impl" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [273571 273594]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [273556 274304])
                                    ("<=" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("other" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("iter_impl" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [274450 274473]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [274434 274536])
                                    (">" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("other" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("iter_impl" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [274675 274698]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [274660 274754])
                                    (">=" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("other" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("iter_impl" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [274903 274926]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [274887 274981])
                                    ("+=" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("i" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [275118 275136]))                                          
                                        :type ("iter_impl" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [275096 275658])
                                    ("-=" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("i" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [275802 275820]))                                          
                                        :type ("iter_impl" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [275780 275863])
                                    ("+" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("i" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [275998 276016]))                                          
                                        :type ("iter_impl" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [275978 276107])
                                    ("+" function
                                       (:operator-flag t
                                        :typemodifiers ("friend")
                                        :arguments 
                                          ( ("i" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [276267 276285])
                                            ("it" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("iter_impl" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [276286 276306]))                                          
                                        :type ("iter_impl" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [276240 276388])
                                    ("-" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("i" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [276530 276548]))                                          
                                        :type ("iter_impl" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [276510 276639])
                                    ("-" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("other" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("iter_impl" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [276782 276805]))                                          
                                        :type ("difference_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [276756 277260])
                                    ("[]" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("n" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [277400 277418]))                                          
                                        :type ("reference" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [277379 278152])
                                    ("key" function
                                       (:typemodifiers ("typename")
                                        :constant-flag t
                                        :type ("object_t::key_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [278288 278597])
                                    ("value" function (:type ("reference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [278728 278791])
                                    ("private" label nil (reparse-symbol classsubparts) [278795 278803])
                                    ("m_object" variable
                                       (:default-value "nullptr"
                                        :type ("pointer" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [278841 278868])
                                    ("m_it" variable (:type "int") (reparse-symbol classsubparts) [278995 279003]))                                  )
                                (reparse-symbol namespacesubparts) [262936 279006]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [261817 279008]))                  
                :type "namespace")
                nil [261796 279031])
            ("cstddef" include (:system-flag t) nil [279184 279202])
            ("iterator" include (:system-flag t) nil [279216 279235])
            ("utility" include (:system-flag t) nil [279256 279274])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("json_reverse_iterator" type
                               (:template 
                                  ( ("Base" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [280181 280188])
                                    ("std::ptrdiff_t" variable (:type "int") (reparse-symbol classsubparts) [280217 280232])
                                    ("std::reverse_iterator" variable (:type "int") (reparse-symbol classsubparts) [280308 280336])
                                    ("Base::reference" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [280413 280438])
                                    ("base_iterator" function
                                       (:arguments 
                                          ( ("" variable (:type ("it" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [280603 280606]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [280589 280609])
                                    ("base_iterator" function
                                       (:arguments 
                                          ( ("" variable (:type ("it" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [280744 280747]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [280730 280750])
                                    ("++" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [280825 280829]))                                          
                                        :type ("json_reverse_iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [280786 280922])
                                    ("++" function
                                       (:operator-flag t
                                        :type ("json_reverse_iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [280957 281085])
                                    ("--" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [281160 281164]))                                          
                                        :type ("json_reverse_iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [281121 281257])
                                    ("--" function
                                       (:operator-flag t
                                        :type ("json_reverse_iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [281292 281420])
                                    ("+=" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("i" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [281484 281502]))                                          
                                        :type ("json_reverse_iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [281450 281596])
                                    ("+" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("i" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [281658 281676]))                                          
                                        :type ("json_reverse_iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [281626 281774])
                                    ("-" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("i" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [281843 281861]))                                          
                                        :type ("json_reverse_iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [281811 281959])
                                    ("-" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("other" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("json_reverse_iterator" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [282017 282052]))                                          
                                        :type ("difference_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [281991 282130])
                                    ("[]" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("n" variable (:type ("difference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [282185 282203]))                                          
                                        :type ("reference" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [282164 282259])
                                    ("decltype" function
                                       (:arguments 
                                          ( ("" variable (:type ("std::declval" type
                                                 (:template-specifier 
                                                    ( ("Base" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [282339 282359])
                                            ("" variable (:type ("key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [282360 282365]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [282330 282437])
                                    ("value" function (:type ("reference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [282483 282585]))                                  
                                :superclasses 
                                  ( ("std::reverse_iterator" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [280088 282588]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [279308 282590]))                  
                :type "namespace")
                nil [279287 282613])
            ("algorithm" include (:system-flag t) nil [282751 282771])
            ("cassert" include (:system-flag t) nil [282782 282800])
            ("numeric" include (:system-flag t) nil [282811 282829])
            ("string" include (:system-flag t) nil [282844 282861])
            ("utility" include (:system-flag t) nil [282872 282890])
            ("vector" include (:system-flag t) nil [282899 282916])
            ("nlohmann" type
               (:members 
                  ( ("json_pointer" type
                       (:template 
                          ( ("BasicJsonType" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("basic_json" friend nil (reparse-symbol classsubparts) [283234 283257])
                            ("public" label nil (reparse-symbol classsubparts) [283262 283269])
                            ("json_pointer" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("s" variable
                                       (:reference 1
                                        :constant-flag t
                                        :default-value "\"\""
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [284122 284147]))                                  
                                :type ("json_pointer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [284109 284192])
                            ("to_string" function (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [284573 284883])
                            ("string" function
                               (:parent "std"
                                :type "int")
                                (reparse-symbol classsubparts) [284927 284986])
                            ("/=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("ptr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("json_pointer" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [285574 285598]))                                  
                                :type ("json_pointer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [285549 285811])
                            ("/=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("token" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [286425 286443]))                                  
                                :type ("json_pointer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [286400 286514])
                            ("/=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("array_index" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [287099 287123]))                                  
                                :type ("json_pointer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [287074 287188])
                            ("/" function
                               (:operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("lhs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("json_pointer" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [287731 287755])
                                    ("rhs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("json_pointer" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [287790 287814]))                                  
                                :type ("json_pointer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [287701 287867])
                            ("/" function
                               (:operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("ptr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("json_pointer" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [288403 288427])
                                    ("token" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [288428 288446]))                                  
                                :type ("json_pointer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [288373 288512])
                            ("/" function
                               (:operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("ptr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("json_pointer" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [289045 289069])
                                    ("array_index" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [289070 289094]))                                  
                                :type ("json_pointer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [289015 289155])
                            ("parent_pointer" function (:type ("json_pointer" type (:type "class") nil nil)) (reparse-symbol classsubparts) [289563 289756])
                            ("pop_back" function (:type "void") (reparse-symbol classsubparts) [290037 290247])
                            ("back" function
                               (:constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [290553 290776])
                            ("push_back" function
                               (:arguments 
                                  ( ("token" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [291104 291129]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [291089 291184])
                            ("push_back" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [291252 291265])
                                    ("" variable (:type ("token" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [291266 291272]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [291237 291338])
                            ("private" label nil (reparse-symbol classsubparts) [291818 291826])
                            ("array_index" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("s" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [292064 292085]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [292041 292444])
                            ("top" function (:type ("json_pointer" type (:type "class") nil nil)) (reparse-symbol classsubparts) [292450 292749])
                            ("get_and_create" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [293040 293057]))                                  
                                :type ("BasicJsonType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [293010 295276])
                            ("get_unchecked" function
                               (:arguments 
                                  ( ("ptr" variable
                                       (:pointer 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [296101 296120]))                                  
                                :type ("BasicJsonType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [296072 298866])
                            ("get_checked" function
                               (:arguments 
                                  ( ("ptr" variable
                                       (:pointer 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [299170 299189]))                                  
                                :type ("BasicJsonType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [299143 301278])
                            ("get_unchecked" function
                               (:constant-flag t
                                :arguments 
                                  ( ("ptr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [301767 301792]))                                  
                                :type ("BasicJsonType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [301732 303924])
                            ("get_checked" function
                               (:constant-flag t
                                :arguments 
                                  ( ("ptr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [304234 304259]))                                  
                                :type ("BasicJsonType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [304201 306348])
                            ("split" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("reference_string" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [306738 306774]))                                  
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("std::string" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [306700 309301])
                            ("replace_substring" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("s" variable
                                       (:reference 1
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [309792 309807])
                                    ("f" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [309808 309829])
                                    ("t" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [309864 309885]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [309762 310246])
                            ("escape" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("s" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [310321 310335]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [310295 310447])
                            ("unescape" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("s" variable
                                       (:reference 1
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [310545 310560]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [310524 310654])
                            ("flatten" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("reference_string" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [310956 310992])
                                    ("value" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [311017 311044])
                                    ("result" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [311069 311091]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [310936 312669])
                            ("unflatten" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("value" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [313024 313051]))                                  
                                :type ("BasicJsonType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [312989 313973])
                            ("reference_tokens" variable (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("std::string" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [315037 315079]))                          )
                        (reparse-symbol namespacesubparts) [283086 315082]))                  
                :type "namespace")
                nil [283065 315084])
            ("initializer_list" include (:system-flag t) nil [315154 315181])
            ("utility" include (:system-flag t) nil [315182 315200])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("json_ref" type
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [315347 315354])
                                    ("value_type" variable
                                       (:default-value "BasicJsonType"
                                        :type "int")
                                        (reparse-symbol classsubparts) [315365 315392])
                                    ("json_ref" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("value_type" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [315407 315419])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [315420 315426]))                                          
                                        :type ("json_ref" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [315398 315515])
                                    ("json_ref" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("value" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("value_type" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [315530 315554]))                                          
                                        :type ("json_ref" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [315521 315632])
                                    ("json_ref" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("init" variable (:type ("std::initializer_list" type
                                                 (:template-specifier 
                                                    ( ("json_ref" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [315647 315684]))                                          
                                        :type ("json_ref" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [315638 315761])
                                    ("json_ref" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Args" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [315896 315903])
                                            ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [315908 315913]))                                          
                                        :type ("json_ref" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [315887 316019])
                                    ("moved_or_copied" function (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [316262 316420])
                                    ("" function
                                       (:operator-flag t
                                        :function-pointer t
                                        :type ("value_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [316426 316532])
                                    ("->" function
                                       (:operator-flag t
                                        :pointer 1
                                        :type ("value_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [316538 316644])
                                    ("private" label nil (reparse-symbol classsubparts) [316648 316656])
                                    ("owned_value" variable
                                       (:typemodifiers ("mutable")
                                        :default-value "nullptr"
                                        :type ("value_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [316661 316702])
                                    ("value_ref" variable
                                       (:pointer 1
                                        :default-value "nullptr"
                                        :type ("value_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [316707 316739])
                                    ("is_rvalue" variable
                                       (:constant-flag t
                                        :type "bool")
                                        (reparse-symbol classsubparts) [316744 316765]))                                  )
                                (reparse-symbol namespacesubparts) [315295 316768]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [315276 316770]))                  
                :type "namespace")
                nil [315255 316793])
            ("algorithm" include (:system-flag t) nil [317025 317045])
            ("array" include (:system-flag t) nil [317057 317073])
            ("cstdint" include (:system-flag t) nil [317083 317101])
            ("cstring" include (:system-flag t) nil [317143 317161])
            ("limits" include (:system-flag t) nil [317172 317189])
            ("string" include (:system-flag t) nil [317208 317225])
            ("algorithm" include (:system-flag t) nil [317351 317371])
            ("cstddef" include (:system-flag t) nil [317380 317398])
            ("ios" include (:system-flag t) nil [317409 317423])
            ("iterator" include (:system-flag t) nil [317438 317457])
            ("memory" include (:system-flag t) nil [317475 317492])
            ("ostream" include (:system-flag t) nil [317520 317538])
            ("string" include (:system-flag t) nil [317556 317573])
            ("vector" include (:system-flag t) nil [317590 317607])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("output_adapter_protocol" type
                               (:template 
                                  ( ("CharType" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("write_character" function
                                       (:pure-virtual-flag t
                                        :prototype-flag t
                                        :typemodifiers ("virtual")
                                        :arguments 
                                          ( ("c" variable (:type ("CharType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [317791 317802]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [317762 317807])
                                    ("write_characters" function
                                       (:pure-virtual-flag t
                                        :prototype-flag t
                                        :typemodifiers ("virtual")
                                        :arguments 
                                          ( ("s" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("CharType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [317842 317860])
                                            ("length" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [317861 317880]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [317812 317885]))                                  )
                                (reparse-symbol namespacesubparts) [317697 317938])
                            ("std::shared_ptr" variable (:type "int") (reparse-symbol namespacesubparts) [318027 318078])
                            ("output_vector_adapter" type
                               (:template 
                                  ( ("CharType" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [318219 318226])
                                    ("v" function
                                       (:arguments 
                                          ( ("" variable (:type ("vec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [318311 318315]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [318309 318322])
                                    ("private" label nil (reparse-symbol classsubparts) [318553 318561])
                                    ("v" variable (:type ("std::vector" type
                                         (:template-specifier 
                                            ( ("CharType" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [318566 318591]))                                  
                                :superclasses 
                                  ( ("output_adapter_protocol" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [318116 318594])
                            ("output_stream_adapter" type
                               (:template 
                                  ( ("CharType" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [318737 318744])
                                    ("stream" function
                                       (:arguments 
                                          ( ("" variable (:type ("s" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [318839 318841]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [318832 318848])
                                    ("private" label nil (reparse-symbol classsubparts) [319084 319092])
                                    ("stream" variable (:type ("std::basic_ostream" type
                                         (:template-specifier 
                                            ( ("CharType" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [319097 319134]))                                  
                                :superclasses 
                                  ( ("output_adapter_protocol" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [318634 319137])
                            ("output_string_adapter" type
                               (:superclasses 
                                  ( ("output_adapter_protocol" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [319329 319336])
                                    ("str" function
                                       (:arguments 
                                          ( ("" variable (:type ("s" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [319410 319412]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [319406 319419])
                                    ("private" label nil (reparse-symbol classsubparts) [319626 319634])
                                    ("str" variable (:type ("StringType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [319639 319655]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [319254 319658])
                            ("output_adapter" type
                               (:members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [319764 319771])
                                    ("output_adapter" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("vec" variable
                                               (:reference 1
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("CharType" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [319791 319818]))                                          
                                        :type ("output_adapter" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [319776 319890])
                                    ("output_adapter" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("s" variable
                                               (:reference 1
                                                :type ("std::basic_ostream" type
                                                     (:template-specifier 
                                                        ( ("CharType" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [319911 319943]))                                          
                                        :type ("output_adapter" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [319896 320013])
                                    ("output_adapter" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("s" variable
                                               (:reference 1
                                                :type ("StringType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [320034 320048]))                                          
                                        :type ("output_adapter" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [320019 320130])
                                    ("output_adapter_t" function
                                       (:template-specifier 
                                          ( ("CharType" type nil nil nil))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [320145 320204])
                                    ("private" label nil (reparse-symbol classsubparts) [320208 320216])
                                    ("oa" variable
                                       (:default-value "nullptr"
                                        :type ("output_adapter_t" type
                                             (:template-specifier 
                                                ( ("CharType" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [320221 320261]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [319739 320264]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [317640 320266]))                  
                :type "namespace")
                nil [317619 320289])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("binary_writer" type
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil)
                                    ("CharType" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("BasicJsonType::string_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [320570 320603])
                                    ("public" label nil (reparse-symbol classsubparts) [320607 320614])
                                    ("binary_writer" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("adapter" variable (:type ("output_adapter_t" type
                                                 (:template-specifier 
                                                    ( ("CharType" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [320743 320778]))                                          
                                        :type ("binary_writer" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [320729 320824])
                                    ("write_bson" function
                                       (:arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [320946 320969]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [320930 321362])
                                    ("write_cbor" function
                                       (:arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [321441 321464]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [321425 331507])
                                    ("write_msgpack" function
                                       (:arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [331589 331612]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [331570 341607])
                                    ("write_ubjson" function
                                       (:arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [341911 341934])
                                            ("use_count" variable
                                               (:constant-flag t
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [341935 341956])
                                            ("use_type" variable
                                               (:constant-flag t
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [341979 341999])
                                            ("add_prefix" variable
                                               (:constant-flag t
                                                :default-value "true"
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [342000 342028]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [341893 346997])
                                    ("private" label nil (reparse-symbol classsubparts) [347001 347009])
                                    ("calc_bson_entry_header_size" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("name" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [347263 347284]))                                          
                                        :type ("std::size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [347216 347705])
                                    ("write_bson_entry_header" function
                                       (:arguments 
                                          ( ("name" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [347833 347854])
                                            ("element_type" variable
                                               (:constant-flag t
                                                :type ("std::uint8_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [347888 347920]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [347804 348122])
                                    ("write_bson_boolean" function
                                       (:arguments 
                                          ( ("name" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [348244 348265])
                                            ("value" variable
                                               (:constant-flag t
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [348294 348311]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [348220 348446])
                                    ("write_bson_double" function
                                       (:arguments 
                                          ( ("name" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [348566 348587])
                                            ("value" variable
                                               (:constant-flag t
                                                :type "double")
                                                (reparse-symbol arg-sub-list) [348615 348634]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [348543 348734])
                                    ("calc_bson_string_size" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("value" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [348856 348878]))                                          
                                        :type ("std::size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [348815 348948])
                                    ("write_bson_string" function
                                       (:arguments 
                                          ( ("name" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [349068 349089])
                                            ("value" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [349117 349139]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [349045 349409])
                                    ("write_bson_null" function
                                       (:arguments 
                                          ( ("name" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [349516 349537]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [349495 349594])
                                    ("calc_bson_integer_size" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("value" variable
                                               (:constant-flag t
                                                :type ("std::int64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [349715 349740]))                                          
                                        :type ("std::size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [349673 349952])
                                    ("write_bson_integer" function
                                       (:arguments 
                                          ( ("name" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [350068 350089])
                                            ("value" variable
                                               (:constant-flag t
                                                :type ("std::int64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [350118 350143]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [350044 350605])
                                    ("write_bson_unsigned" function
                                       (:arguments 
                                          ( ("name" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [351084 351105])
                                            ("value" variable
                                               (:constant-flag t
                                                :type ("std::uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [351135 351161]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [351059 351873])
                                    ("write_bson_object_entry" function
                                       (:arguments 
                                          ( ("name" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [351993 352014])
                                            ("value" variable
                                               (:reference 1
                                                :typemodifiers ("typename")
                                                :constant-flag t
                                                :type ("BasicJsonType::object_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [352048 352094]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [351964 352195])
                                    ("calc_bson_array_size" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("value" variable
                                               (:reference 1
                                                :typemodifiers ("typename")
                                                :constant-flag t
                                                :type ("BasicJsonType::array_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [352312 352357]))                                          
                                        :type ("std::size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [352272 352682])
                                    ("write_bson_array" function
                                       (:arguments 
                                          ( ("name" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [352794 352815])
                                            ("value" variable
                                               (:reference 1
                                                :typemodifiers ("typename")
                                                :constant-flag t
                                                :type ("BasicJsonType::array_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [352842 352887]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [352772 353266])
                                    ("calc_bson_element_size" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("name" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [353513 353534])
                                            ("j" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [353547 353570]))                                          
                                        :type ("std::size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [353471 354679])
                                    ("write_bson_element" function
                                       (:arguments 
                                          ( ("name" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [354977 354998])
                                            ("j" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [355027 355050]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [354953 356093])
                                    ("calc_bson_object_size" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("value" variable
                                               (:reference 1
                                                :typemodifiers ("typename")
                                                :constant-flag t
                                                :type ("BasicJsonType::object_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [356339 356385]))                                          
                                        :type ("std::size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [356298 356749])
                                    ("write_bson_object" function
                                       (:arguments 
                                          ( ("value" variable
                                               (:reference 1
                                                :typemodifiers ("typename")
                                                :constant-flag t
                                                :type ("BasicJsonType::object_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [356878 356924]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [356855 357196])
                                    ("get_cbor_float_prefix" function
                                       (:arguments 
                                          ( ("" variable (:type "float") (reparse-symbol arg-sub-list) [357296 357313]))                                          
                                        :type ("CharType" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [357265 357387])
                                    ("get_cbor_float_prefix" function
                                       (:arguments 
                                          ( ("" variable (:type "double") (reparse-symbol arg-sub-list) [357441 357459]))                                          
                                        :type ("CharType" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [357410 357533])
                                    ("get_msgpack_float_prefix" function
                                       (:arguments 
                                          ( ("" variable (:type "float") (reparse-symbol arg-sub-list) [357645 357662]))                                          
                                        :type ("CharType" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [357611 357722])
                                    ("get_msgpack_float_prefix" function
                                       (:arguments 
                                          ( ("" variable (:type "double") (reparse-symbol arg-sub-list) [357779 357797]))                                          
                                        :type ("CharType" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [357745 357857])
                                    ("write_number_with_ubjson_prefix" function
                                       (:arguments 
                                          ( ("n" variable
                                               (:constant-flag t
                                                :type ("NumberType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [358132 358151])
                                            ("add_prefix" variable
                                               (:constant-flag t
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [358193 358215]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [358095 358357])
                                    ("write_number_with_ubjson_prefix" function
                                       (:arguments 
                                          ( ("n" variable
                                               (:constant-flag t
                                                :type ("NumberType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [358576 358595])
                                            ("add_prefix" variable
                                               (:constant-flag t
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [358637 358659]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [358539 360281])
                                    ("write_number_with_ubjson_prefix" function
                                       (:arguments 
                                          ( ("n" variable
                                               (:constant-flag t
                                                :type ("NumberType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [360563 360582])
                                            ("add_prefix" variable
                                               (:constant-flag t
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [360624 360646]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [360526 362521])
                                    ("get_ubjson_float_prefix" function
                                       (:arguments 
                                          ( ("" variable (:type "float") (reparse-symbol arg-sub-list) [365545 365562]))                                          
                                        :type ("CharType" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [365512 365607])
                                    ("get_ubjson_float_prefix" function
                                       (:arguments 
                                          ( ("" variable (:type "double") (reparse-symbol arg-sub-list) [365663 365681]))                                          
                                        :type ("CharType" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [365630 365726])
                                    ("write_number" function
                                       (:template 
                                          ( ("NumberType" type (:type "class") nil nil)
                                            ("bool" type nil nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("n" variable
                                               (:constant-flag t
                                                :type ("NumberType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [366407 366426]))                                          )
                                        (reparse-symbol classsubparts) [366320 366934])
                                    ("public" label nil (reparse-symbol classsubparts) [366938 366945])
                                    ("private" label nil (reparse-symbol classsubparts) [368619 368627])
                                    ("is_little_endian" variable
                                       (:constant-flag t
                                        :default-value "binary_reader<BasicJsonType>::little_endianess()"
                                        :type "bool")
                                        (reparse-symbol classsubparts) [368679 368758])
                                    ("oa" variable
                                       (:default-value "nullptr"
                                        :type ("output_adapter_t" type
                                             (:template-specifier 
                                                ( ("CharType" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [368783 368823]))                                  )
                                (reparse-symbol namespacesubparts) [320475 368826]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [320336 368828]))                  
                :type "namespace")
                nil [320315 368851])
            ("algorithm" include (:system-flag t) nil [368988 369008])
            ("array" include (:system-flag t) nil [369049 369065])
            ("cassert" include (:system-flag t) nil [369075 369093])
            ("ciso646" include (:system-flag t) nil [369104 369122])
            ("clocale" include (:system-flag t) nil [369134 369152])
            ("cmath" include (:system-flag t) nil [369174 369190])
            ("cstddef" include (:system-flag t) nil [369225 369243])
            ("cstdint" include (:system-flag t) nil [369265 369283])
            ("cstdio" include (:system-flag t) nil [369295 369312])
            ("limits" include (:system-flag t) nil [369325 369342])
            ("string" include (:system-flag t) nil [369361 369378])
            ("type_traits" include (:system-flag t) nil [369389 369411])
            ("utility" include (:system-flag t) nil [369423 369441])
            ("array" include (:system-flag t) nil [369508 369524])
            ("cassert" include (:system-flag t) nil [369534 369552])
            ("ciso646" include (:system-flag t) nil [369563 369581])
            ("cmath" include (:system-flag t) nil [369598 369614])
            ("cstdint" include (:system-flag t) nil [369638 369656])
            ("cstring" include (:system-flag t) nil [369676 369694])
            ("limits" include (:system-flag t) nil [369714 369731])
            ("type_traits" include (:system-flag t) nil [369750 369772])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("dtoa_impl" type
                               (:members 
                                  ( ("reinterpret_bits" function
                                       (:template 
                                          ( ("Target" type (:type "class") nil nil)
                                            ("Source" type (:type "class") nil nil))                                          
                                        :type ("Target" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("source" variable
                                               (:constant-flag t
                                                :type ("Source" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [370713 370733]))                                          )
                                        (reparse-symbol namespacesubparts) [370645 370897])
                                    ("diyfp" type
                                       (:members 
                                          ( ("kPrecision" variable
                                               (:default-value "64"
                                                :type "int")
                                                (reparse-symbol classsubparts) [370946 370966])
                                            ("f" variable
                                               (:default-value "0"
                                                :type ("std::uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [370979 370999])
                                            ("e" variable
                                               (:default-value "0"
                                                :type "int")
                                                (reparse-symbol classsubparts) [371004 371014])
                                            ("f" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("f_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [371075 371078]))                                                  
                                                :type ("diyfp" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [371073 371088]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [370899 374676])
                                    ("boundaries" type
                                       (:members 
                                          ( ("w" variable (:type ("diyfp" type (:type "class") nil nil)) (reparse-symbol classsubparts) [374702 374710])
                                            ("minus" variable (:type ("diyfp" type (:type "class") nil nil)) (reparse-symbol classsubparts) [374715 374727])
                                            ("plus" variable (:type ("diyfp" type (:type "class") nil nil)) (reparse-symbol classsubparts) [374732 374743]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [374678 374746])
                                    ("compute_boundaries" function
                                       (:template 
                                          ( ("FloatType" type (:type "class") nil nil))                                          
                                        :type ("boundaries" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("value" variable (:type ("FloatType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [374944 374960]))                                          )
                                        (reparse-symbol namespacesubparts) [374884 377740])
                                    ("kAlpha" variable
                                       (:default-value "-60"
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [379672 379689])
                                    ("kGamma" variable
                                       (:default-value "-32"
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [379700 379717])
                                    ("cached_power" type
                                       (:members 
                                          ( ("f" variable (:type ("std::uint64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [379768 379784])
                                            ("e" variable (:type "int") (reparse-symbol classsubparts) [379789 379795])
                                            ("k" variable (:type "int") (reparse-symbol classsubparts) [379800 379806]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [379719 379809])
                                    ("get_cached_power_for_binary_exponent" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("e" variable (:type "int") (reparse-symbol arg-sub-list) [380102 380108]))                                          
                                        :type ("cached_power" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [380045 386893])
                                    ("find_largest_pow10" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("n" variable
                                               (:constant-flag t
                                                :type ("std::uint32_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [387039 387061])
                                            ("pow10" variable
                                               (:reference 1
                                                :type ("std::uint32_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [387062 387083]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [387009 387914])
                                    ("grisu2_round" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("buf" variable
                                               (:pointer 1
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [387941 387951])
                                            ("len" variable (:type "int") (reparse-symbol arg-sub-list) [387952 387960])
                                            ("dist" variable (:type ("std::uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [387961 387980])
                                            ("delta" variable (:type ("std::uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [387981 388001])
                                            ("rest" variable (:type ("std::uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [388027 388046])
                                            ("ten_k" variable (:type ("std::uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [388047 388067]))                                          
                                        :type "void")
                                        (reparse-symbol namespacesubparts) [387916 389284])
                                    ("grisu2_digit_gen" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("buffer" variable
                                               (:pointer 1
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [389465 389478])
                                            ("length" variable
                                               (:reference 1
                                                :type "int")
                                                (reparse-symbol arg-sub-list) [389479 389491])
                                            ("decimal_exponent" variable
                                               (:reference 1
                                                :type "int")
                                                (reparse-symbol arg-sub-list) [389492 389514])
                                            ("M_minus" variable (:type ("diyfp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [389544 389558])
                                            ("w" variable (:type ("diyfp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [389559 389567])
                                            ("M_plus" variable (:type ("diyfp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [389568 389581]))                                          
                                        :type "void")
                                        (reparse-symbol namespacesubparts) [389436 397875])
                                    ("grisu2" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("buf" variable
                                               (:pointer 1
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [398047 398057])
                                            ("len" variable
                                               (:reference 1
                                                :type "int")
                                                (reparse-symbol arg-sub-list) [398058 398067])
                                            ("decimal_exponent" variable
                                               (:reference 1
                                                :type "int")
                                                (reparse-symbol arg-sub-list) [398068 398090])
                                            ("m_minus" variable (:type ("diyfp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [398110 398124])
                                            ("v" variable (:type ("diyfp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [398125 398133])
                                            ("m_plus" variable (:type ("diyfp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [398134 398147]))                                          
                                        :type "void")
                                        (reparse-symbol namespacesubparts) [398028 400249])
                                    ("grisu2" function
                                       (:template 
                                          ( ("FloatType" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("buf" variable
                                               (:pointer 1
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [400444 400454])
                                            ("len" variable
                                               (:reference 1
                                                :type "int")
                                                (reparse-symbol arg-sub-list) [400455 400464])
                                            ("decimal_exponent" variable
                                               (:reference 1
                                                :type "int")
                                                (reparse-symbol arg-sub-list) [400465 400487])
                                            ("value" variable (:type ("FloatType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [400488 400504]))                                          )
                                        (reparse-symbol namespacesubparts) [400402 402009])
                                    ("append_exponent" function
                                       (:pointer 1
                                        :typemodifiers ("inline")
                                        :arguments 
                                          ( ("buf" variable
                                               (:pointer 1
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [402178 402188])
                                            ("e" variable (:type "int") (reparse-symbol arg-sub-list) [402189 402195]))                                          
                                        :type "char")
                                        (reparse-symbol namespacesubparts) [402149 402976])
                                    ("format_buffer" function
                                       (:pointer 1
                                        :typemodifiers ("inline")
                                        :arguments 
                                          ( ("buf" variable
                                               (:pointer 1
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [403238 403248])
                                            ("len" variable (:type "int") (reparse-symbol arg-sub-list) [403249 403257])
                                            ("decimal_exponent" variable (:type "int") (reparse-symbol arg-sub-list) [403258 403279])
                                            ("min_exp" variable (:type "int") (reparse-symbol arg-sub-list) [403307 403319])
                                            ("max_exp" variable (:type "int") (reparse-symbol arg-sub-list) [403320 403332]))                                          
                                        :type "char")
                                        (reparse-symbol namespacesubparts) [403211 404864]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [370622 404867])
                            ("to_chars" function
                               (:template 
                                  ( ("FloatType" type (:type "class") nil nil))                                  
                                :type "char"
                                :arguments 
                                  ( ("first" variable
                                       (:pointer 1
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [405358 405370])
                                    ("last" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [405371 405388])
                                    ("value" variable (:type ("FloatType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [405389 405405]))                                  
                                :pointer 1)
                                (reparse-symbol namespacesubparts) [405313 406892]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [369810 406895]))                  
                :type "namespace")
                nil [369789 406917])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("error_handler_t" type (:type "class") (reparse-symbol namespacesubparts) [407382 407591])
                            ("serializer" type
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("BasicJsonType::string_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [407666 407699])
                                    ("BasicJsonType::number_float_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [407727 407766])
                                    ("BasicJsonType::number_integer_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [407796 407837])
                                    ("BasicJsonType::number_unsigned_t" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [407868 407910])
                                    ("UTF8_ACCEPT" variable
                                       (:default-value "0"
                                        :type ("std::uint8_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [407932 407961])
                                    ("UTF8_REJECT" variable
                                       (:default-value "1"
                                        :type ("std::uint8_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [407983 408012])
                                    ("public" label nil (reparse-symbol classsubparts) [408016 408023])
                                    ("serializer" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("s" variable (:type ("output_adapter_t" type
                                                 (:template-specifier 
                                                    ( ("char" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [408216 408241])
                                            ("ichar" variable
                                               (:constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [408242 408259])
                                            ("error_handler_" variable
                                               (:default-value "error_handler_t"
                                                :type ("error_handler_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [408275 408323])
                                            ("" variable (:type ("strict" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [408325 408332]))                                          
                                        :type ("serializer" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [408205 408683])
                                    ("dump" function
                                       (:arguments 
                                          ( ("val" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [409744 409769])
                                            ("pretty_print" variable
                                               (:constant-flag t
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [409770 409794])
                                            ("ensure_ascii" variable
                                               (:constant-flag t
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [409809 409833])
                                            ("indent_step" variable
                                               (:constant-flag t
                                                :type "unsigned int")
                                                (reparse-symbol arg-sub-list) [409848 409879])
                                            ("current_indent" variable
                                               (:constant-flag t
                                                :default-value "0"
                                                :type "unsigned int")
                                                (reparse-symbol arg-sub-list) [409894 409931]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [409734 416789])
                                    ("private" label nil (reparse-symbol classsubparts) [416793 416801])
                                    ("dump_escaped" function
                                       (:arguments 
                                          ( ("s" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [417376 417394])
                                            ("ensure_ascii" variable
                                               (:constant-flag t
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [417395 417419]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [417358 427745])
                                    ("dump_integer" function
                                       (:arguments 
                                          ( ("x" variable (:type ("NumberType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [429050 429063]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [429032 432665])
                                    ("dump_float" function
                                       (:arguments 
                                          ( ("x" variable (:type ("number_float_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [432898 432915]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [432882 433860])
                                    ("dump_float" function
                                       (:arguments 
                                          ( ("x" variable (:type ("number_float_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [433882 433899])
                                            ("" variable (:type ("std::true_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [433900 433944]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [433866 434161])
                                    ("dump_float" function
                                       (:arguments 
                                          ( ("x" variable (:type ("number_float_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [434183 434200])
                                            ("" variable (:type ("std::false_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [434201 434246]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [434167 435916])
                                    ("private" label nil (reparse-symbol classsubparts) [439010 439018])
                                    ("o" variable
                                       (:default-value "nullptr"
                                        :type ("output_adapter_t" type
                                             (:template-specifier 
                                                ( ("char" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [439060 439095])
                                    ("number_buffer" variable (:type ("std::array" type
                                         (:template-specifier 
                                            ( ("char" type nil nil nil)
                                              ("64"))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [439153 439192])
                                    ("loc" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "nullptr"
                                        :type ("std::lconv" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [439217 439249])
                                    ("thousands_sep" variable
                                       (:constant-flag t
                                        :default-value "'\\0'"
                                        :type "char")
                                        (reparse-symbol classsubparts) [439304 439336])
                                    ("decimal_point" variable
                                       (:constant-flag t
                                        :default-value "'\\0'"
                                        :type "char")
                                        (reparse-symbol classsubparts) [439386 439418])
                                    ("string_buffer" variable (:type ("std::array" type
                                         (:template-specifier 
                                            ( ("char" type nil nil nil)
                                              ("512"))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [439446 439486])
                                    ("indent_char" variable
                                       (:constant-flag t
                                        :type "char")
                                        (reparse-symbol classsubparts) [439526 439549])
                                    ("indent_string" variable (:type ("string_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [439585 439608])
                                    ("error_handler" variable
                                       (:constant-flag t
                                        :type ("error_handler_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [439668 439704]))                                  )
                                (reparse-symbol namespacesubparts) [407593 439707]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [407264 439709]))                  
                :type "namespace")
                nil [407243 439732])
            ("nlohmann" type
               (:members 
                  ( ("basic_json" type
                       (:members 
                          ( ("private" label nil (reparse-symbol classsubparts) [444068 444076])
                            ("external_constructor" type
                               (:template 
                                  ( ("detail::value_t" type nil nil nil))                                  
                                :type "struct"
                                :prototype t
                                :parent "detail")
                                (reparse-symbol classsubparts) [444081 444150])
                            ("nlohmann::json_pointer" variable (:type "int") (reparse-symbol classsubparts) [444164 444199])
                            ("nlohmann::detail::parser" variable (:type "int") (reparse-symbol classsubparts) [444213 444250])
                            ("nlohmann::detail::serializer" variable (:type "int") (reparse-symbol classsubparts) [444264 444305])
                            ("nlohmann::detail::iter_impl" variable (:type "int") (reparse-symbol classsubparts) [444362 444390])
                            ("nlohmann::detail::binary_writer" variable (:type "int") (reparse-symbol classsubparts) [444466 444498])
                            ("nlohmann::detail::binary_reader" variable (:type "int") (reparse-symbol classsubparts) [444569 444601])
                            ("nlohmann::detail::json_sax_dom_parser" variable (:type "int") (reparse-symbol classsubparts) [444658 444696])
                            ("nlohmann::detail::json_sax_dom_callback_parser" variable (:type "int") (reparse-symbol classsubparts) [444753 444800])
                            ("basic_json_t" variable
                               (:default-value "NLOHMANN_BASIC_JSON_TPL"
                                :type "int")
                                (reparse-symbol classsubparts) [444845 444884])
                            ("nlohmann::detail::lexer" variable (:type "int") (reparse-symbol classsubparts) [444973 445009])
                            ("nlohmann::detail::parser" variable (:type "int") (reparse-symbol classsubparts) [445031 445068])
                            ("nlohmann::detail::primitive_iterator_t" variable (:type "int") (reparse-symbol classsubparts) [445105 445144])
                            ("nlohmann::detail::internal_iterator" variable (:type "int") (reparse-symbol classsubparts) [445214 445265])
                            ("nlohmann::detail::iter_impl" variable (:type "int") (reparse-symbol classsubparts) [445327 445370])
                            ("nlohmann::detail::iteration_proxy" variable (:type "int") (reparse-symbol classsubparts) [445433 445477])
                            ("nlohmann::detail::json_reverse_iterator" variable (:type "int") (reparse-symbol classsubparts) [445538 445584])
                            ("nlohmann::detail::output_adapter_t" variable (:type "int") (reparse-symbol classsubparts) [445649 445694])
                            ("nlohmann::detail::binary_reader" variable (:type "int") (reparse-symbol classsubparts) [445724 445768])
                            ("nlohmann::detail::binary_writer" variable (:type "int") (reparse-symbol classsubparts) [445825 445879])
                            ("nlohmann::detail::serializer" variable (:type "int") (reparse-symbol classsubparts) [445906 445947])
                            ("public" label nil (reparse-symbol classsubparts) [445951 445958])
                            ("detail::value_t" variable (:type "int") (reparse-symbol classsubparts) [445979 445995])
                            ("nlohmann::json_pointer" variable (:type "int") (reparse-symbol classsubparts) [446077 446112])
                            ("JSONSerializer" variable (:type "int") (reparse-symbol classsubparts) [446183 446209])
                            ("detail::error_handler_t" variable (:type "int") (reparse-symbol classsubparts) [446275 446299])
                            ("std::initializer_list" variable (:type "int") (reparse-symbol classsubparts) [446394 446446])
                            ("detail::input_format_t" variable (:type "int") (reparse-symbol classsubparts) [446475 446498])
                            ("json_sax" variable (:type "int") (reparse-symbol classsubparts) [446578 446599])
                            ("detail::exception" variable (:type "int") (reparse-symbol classsubparts) [446813 446831])
                            ("detail::parse_error" variable (:type "int") (reparse-symbol classsubparts) [446893 446913])
                            ("detail::invalid_iterator" variable (:type "int") (reparse-symbol classsubparts) [446985 447010])
                            ("detail::type_error" variable (:type "int") (reparse-symbol classsubparts) [447070 447089])
                            ("detail::out_of_range" variable (:type "int") (reparse-symbol classsubparts) [447153 447174])
                            ("detail::other_error" variable (:type "int") (reparse-symbol classsubparts) [447236 447256])
                            ("value_type" variable
                               (:default-value "basic_json"
                                :type "int")
                                (reparse-symbol classsubparts) [447554 447578])
                            ("std::ptrdiff_t" variable (:type "int") (reparse-symbol classsubparts) [447837 447852])
                            ("std::size_t" variable (:type "int") (reparse-symbol classsubparts) [447919 447931])
                            ("AllocatorType" variable (:type "int") (reparse-symbol classsubparts) [447987 448013])
                            ("std::allocator_traits::pointer" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [448074 448130])
                            ("std::allocator_traits::const_pointer" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [448202 448264])
                            ("iter_impl" variable (:type "int") (reparse-symbol classsubparts) [448334 448356])
                            ("iter_impl" variable (:type "int") (reparse-symbol classsubparts) [448436 448464])
                            ("get_allocator" function
                               (:typemodifiers ("static")
                                :type ("allocator_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [448853 448935])
                            ("meta" function
                               (:typemodifiers ("static")
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [450338 452476])
                            ("std::less" variable (:type "int") (reparse-symbol classsubparts) [453032 453054])
                            ("ObjectType" variable (:type "int") (reparse-symbol classsubparts) [456608 456760])
                            ("ArrayType" variable (:type "int") (reparse-symbol classsubparts) [458216 458265])
                            ("string_t" variable
                               (:default-value "StringType"
                                :type "int")
                                (reparse-symbol classsubparts) [460196 460218])
                            ("boolean_t" variable
                               (:default-value "BooleanType"
                                :type "int")
                                (reparse-symbol classsubparts) [460827 460851])
                            ("number_integer_t" variable
                               (:default-value "NumberIntegerType"
                                :type "int")
                                (reparse-symbol classsubparts) [463896 463933])
                            ("number_unsigned_t" variable
                               (:default-value "NumberUnsignedType"
                                :type "int")
                                (reparse-symbol classsubparts) [467009 467048])
                            ("number_float_t" variable
                               (:default-value "NumberFloatType"
                                :type "int")
                                (reparse-symbol classsubparts) [469889 469922])
                            ("private" label nil (reparse-symbol classsubparts) [469938 469946])
                            ("create" function
                               (:pointer 1
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Args" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [470062 470068])
                                    ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [470073 470078]))                                  
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [470045 470569])
                            ("json_value" type
                               (:members 
                                  ( ("object" variable
                                       (:pointer 1
                                        :type ("object_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [471725 471742])
                                    ("array" variable
                                       (:pointer 1
                                        :type ("array_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [471807 471822])
                                    ("string" variable
                                       (:pointer 1
                                        :type ("string_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [471888 471905])
                                    ("boolean" variable (:type ("boolean_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [471934 471952])
                                    ("number_integer" variable (:type ("number_integer_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [471990 472022])
                                    ("number_unsigned" variable (:type ("number_unsigned_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [472069 472103])
                                    ("number_float" variable (:type ("number_float_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [472148 472176])
                                    ("boolean" function
                                       (:arguments 
                                          ( ("" variable (:type ("v" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [472348 472350]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [472340 472353])
                                    ("number_integer" function
                                       (:arguments 
                                          ( ("" variable (:type ("v" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [472465 472467]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [472450 472470])
                                    ("number_unsigned" function
                                       (:arguments 
                                          ( ("" variable (:type ("v" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [472585 472587]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [472569 472590])
                                    ("number_float" function
                                       (:arguments 
                                          ( ("" variable (:type ("v" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [472705 472707]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [472692 472710])
                                    ("json_value" function
                                       (:arguments 
                                          ( ("t" variable (:type ("value_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [472787 472797]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [472776 474531])
                                    ("json_value" function
                                       (:arguments 
                                          ( ("value" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [474588 474610]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [474577 474676])
                                    ("json_value" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [474740 474750])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [474751 474757]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [474729 474834])
                                    ("json_value" function
                                       (:arguments 
                                          ( ("value" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("object_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [474891 474913]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [474880 474979])
                                    ("json_value" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("object_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [475043 475053])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [475054 475060]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [475032 475137])
                                    ("json_value" function
                                       (:arguments 
                                          ( ("value" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("array_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [475193 475214]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [475182 475278])
                                    ("json_value" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("array_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [475341 475350])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [475351 475357]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [475330 475432]))                                  
                                :type "union")
                                (reparse-symbol classsubparts) [471637 476617])
                            ("public" label nil (reparse-symbol classsubparts) [477282 477289])
                            ("parser::parse_event_t" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [478094 478125])
                            ("parser::parser_callback_t" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [481037 481072])
                            ("basic_json" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("v" variable
                                       (:constant-flag t
                                        :type ("value_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [482182 482198]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [482171 482270])
                            ("basic_json" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("value_t::null" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [482919 482933]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [482908 482973])
                            ("noexcept" function
                               (:arguments 
                                  ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [486011 486173]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [486002 486292])
                            ("basic_json" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [487552 487577]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [487541 489661])
                            ("basic_json" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("init" variable (:type ("initializer_list_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [493117 493141])
                                    ("type_deduction" variable
                                       (:default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [493157 493183])
                                    ("manual_type" variable
                                       (:default-value "value_t"
                                        :type ("value_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [493200 493229])
                                    ("" variable (:type ("array" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [493231 493237]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [493106 495038])
                            ("array" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("init" variable
                                       (:default-value "{}"
                                        :type ("initializer_list_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [496539 496567]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [496515 496636])
                            ("object" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("init" variable
                                       (:default-value "{}"
                                        :type ("initializer_list_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [498269 498297]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [498244 498367])
                            ("basic_json" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("cnt" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [499096 499110])
                                    ("val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [499111 499133]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [499085 499257])
                            ("basic_json" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("first" variable (:type ("InputIT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [502262 502276])
                                    ("last" variable (:type ("InputIT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [502277 502290]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [502251 504967])
                            ("basic_json" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("ref" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("detail::json_ref" type
                                             (:template-specifier 
                                                ( ("basic_json" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [505135 505175]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [505124 505226])
                            ("basic_json" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [505948 505972]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [505937 507196])
                            ("m_type" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("std::move" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [508101 508124]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [508094 508386])
                            ("noexcept" function
                               (:arguments 
                                  ( ("and" variable (:type ("std::is_nothrow_move_constructible::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [509222 509288])
                                    ("and" variable (:type ("std::is_nothrow_move_assignable::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [509285 509348])
                                    ("and" variable (:type ("std::is_nothrow_move_constructible::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [509345 509414])
                                    ("" variable (:type ("std::is_nothrow_move_assignable::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [509411 509467]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [509203 509708])
                            ("public" label nil (reparse-symbol classsubparts) [510226 510233])
                            ("dump" function
                               (:arguments 
                                  ( ("indent" variable
                                       (:constant-flag t
                                        :default-value "-1"
                                        :type "int")
                                        (reparse-symbol arg-sub-list) [512294 512315])
                                    ("indent_char" variable
                                       (:constant-flag t
                                        :default-value "' '"
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [512335 512363])
                                    ("ensure_ascii" variable
                                       (:constant-flag t
                                        :default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [512383 512414])
                                    ("error_handler" variable
                                       (:constant-flag t
                                        :default-value "error_handler_t"
                                        :type ("error_handler_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [512434 512487])
                                    ("" variable (:type ("strict" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [512489 512496]))                                  
                                :type ("string_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [512280 512873])
                            ("private" label nil (reparse-symbol classsubparts) [523853 523861])
                            ("get_impl" function
                               (:arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("boolean_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [523988 524010]))                                  
                                :type ("boolean_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [523969 524229])
                            ("get_ref_impl" function
                               (:template 
                                  ( ("ReferenceType" type (:type "class") nil nil)
                                    ("ThisType" type (:type "class") nil nil))                                  
                                :type ("ReferenceType" type (:type "class") nil nil)
                                :arguments 
                                  ( ("obj" variable
                                       (:reference 1
                                        :type ("ThisType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [527514 527528]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [527424 527898])
                            ("public" label nil (reparse-symbol classsubparts) [527902 527909])
                            ("get" function (:type ("basic_json" type (:type "class") nil nil)) (reparse-symbol classsubparts) [528478 528534])
                            ("get" function (:type ("BasicJsonType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [529131 529190])
                            ("noexcept" function
                               (:constant-flag t
                                :arguments 
                                  ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [531205 531356]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [531190 531974])
                            ("noexcept" function
                               (:constant-flag t
                                :arguments 
                                  ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [533482 533607]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [533467 533848])
                            ("noexcept" function
                               (:constant-flag t
                                :arguments 
                                  ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [535345 535448]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [535330 535535])
                            ("decltype" function
                               (:arguments 
                                  ( ("" variable (:type ("std::declval" type
                                         (:template-specifier 
                                            ( ("basic_json_t" type (:reference 1) nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [536636 536665])
                                    ("" variable (:type ("get_impl_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [536666 536707]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [536627 536833])
                            ("decltype" function
                               (:arguments 
                                  ( ("" variable (:type ("std::declval" type
                                         (:template-specifier 
                                            ( ("basic_json_t" type
                                                 (:reference 1
                                                  :constant-flag t)
                                                  nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [537192 537227])
                                    ("" variable (:type ("get_impl_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [537228 537269]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [537183 537401])
                            ("decltype" function
                               (:arguments 
                                  ( ("" variable (:type ("std::declval" type
                                         (:template-specifier 
                                            ( ("basic_json_t" type (:reference 1) nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [538527 538556])
                                    ("" variable (:type ("get_ptr" type
                                         (:template-specifier 
                                            ( ("PointerType" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [538566 538588]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [538518 538680])
                            ("decltype" function
                               (:arguments 
                                  ( ("" variable (:type ("std::declval" type
                                         (:template-specifier 
                                            ( ("basic_json_t" type
                                                 (:reference 1
                                                  :constant-flag t)
                                                  nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [538940 538975])
                                    ("" variable (:type ("get_ptr" type
                                         (:template-specifier 
                                            ( ("PointerType" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [538985 539007]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [538931 539099])
                            ("get_ref" function (:type ("ReferenceType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [540120 540247])
                            ("get_ref" function (:type ("ReferenceType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [540566 540699])
                            ("ValueType" function (:type "int") (reparse-symbol classsubparts) [542904 543012])
                            ("at" function
                               (:arguments 
                                  ( ("idx" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [544096 544110]))                                  
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [544083 544686])
                            ("at" function
                               (:arguments 
                                  ( ("idx" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [545619 545633]))                                  
                                :type ("const_reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [545600 546215])
                            ("at" function
                               (:arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :constant-flag t
                                        :type ("object_t::key_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [547337 547376]))                                  
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [547324 547927])
                            ("at" function
                               (:arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :constant-flag t
                                        :type ("object_t::key_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [549062 549101]))                                  
                                :type ("const_reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [549043 549658])
                            ("[]" function
                               (:operator-flag t
                                :arguments 
                                  ( ("idx" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [550570 550584]))                                  
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [550549 551430])
                            ("[]" function
                               (:operator-flag t
                                :arguments 
                                  ( ("idx" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [552027 552041]))                                  
                                :type ("const_reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [552000 552345])
                            ("[]" function
                               (:operator-flag t
                                :arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :constant-flag t
                                        :type ("object_t::key_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [553357 553396]))                                  
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [553336 553913])
                            ("[]" function
                               (:operator-flag t
                                :arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :constant-flag t
                                        :type ("object_t::key_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [554951 554990]))                                  
                                :type ("const_reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [554924 555370])
                            ("[]" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("reference" type (:type "class") nil nil)
                                :arguments 
                                  ( ("key" variable
                                       (:pointer 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [556407 556414]))                                  
                                :operator-flag t)
                                (reparse-symbol classsubparts) [556361 556898])
                            ("[]" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("const_reference" type (:type "class") nil nil)
                                :arguments 
                                  ( ("key" variable
                                       (:pointer 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [557961 557968]))                                  
                                :operator-flag t)
                                (reparse-symbol classsubparts) [557909 558334])
                            ("value" function
                               (:arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :constant-flag t
                                        :type ("object_t::key_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [560297 560336])
                                    ("default_value" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ValueType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [560337 560368]))                                  
                                :type ("ValueType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [560281 560820])
                            ("value" function
                               (:arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :constant-flag t
                                        :type ("object_t::key_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [561007 561046])
                                    ("default_value" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [561047 561073]))                                  
                                :type ("string_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [560992 561143])
                            ("value" function
                               (:arguments 
                                  ( ("ptr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("json_pointer" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [562776 562800])
                                    ("default_value" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ValueType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [562801 562832]))                                  
                                :type ("ValueType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [562760 563330])
                            ("value" function
                               (:arguments 
                                  ( ("ptr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("json_pointer" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [563495 563519])
                                    ("default_value" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [563520 563546]))                                  
                                :type ("string_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [563480 563616])
                            ("front" function (:type ("reference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [564469 564523])
                            ("front" function (:type ("const_reference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [564577 564644])
                            ("back" function (:type ("reference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [565587 565677])
                            ("back" function (:type ("const_reference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [565730 565833])
                            ("erase" function
                               (:arguments 
                                  ( ("pos" variable (:type ("IteratorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [568015 568032]))                                  
                                :type ("IteratorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [567996 569737])
                            ("erase" function
                               (:arguments 
                                  ( ("first" variable (:type ("IteratorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [572055 572074])
                                    ("last" variable (:type ("IteratorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [572075 572093]))                                  
                                :type ("IteratorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [572036 574050])
                            ("erase" function
                               (:arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :constant-flag t
                                        :type ("object_t::key_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [575111 575150]))                                  
                                :type ("size_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [575095 575413])
                            ("erase" function
                               (:arguments 
                                  ( ("idx" variable
                                       (:constant-flag t
                                        :type ("size_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [576303 576323]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [576292 576856])
                            ("find" function
                               (:template 
                                  ( ("KeyT" type (:type "class") nil nil))                                  
                                :type ("iterator" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [577813 577819])
                                    ("" variable (:type ("key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [577820 577824]))                                  )
                                (reparse-symbol classsubparts) [577771 578024])
                            ("find" function
                               (:template 
                                  ( ("KeyT" type (:type "class") nil nil))                                  
                                :type ("const_iterator" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [578163 578169])
                                    ("" variable (:type ("key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [578170 578174]))                                  )
                                (reparse-symbol classsubparts) [578115 578381])
                            ("count" function
                               (:template 
                                  ( ("KeyT" type (:type "class") nil nil))                                  
                                :type ("size_type" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [579140 579146])
                                    ("" variable (:type ("key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [579147 579151]))                                  )
                                (reparse-symbol classsubparts) [579096 579294])
                            ("contains" function
                               (:template 
                                  ( ("KeyT" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [580162 580168])
                                    ("" variable (:type ("key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [580169 580173]))                                  )
                                (reparse-symbol classsubparts) [580120 580294])
                            ("public" label nil (reparse-symbol classsubparts) [588408 588415])
                            ("push_back" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [602207 602219])
                                    ("" variable (:type ("val" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [602220 602224]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [602192 602931])
                            ("+=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [603047 603059])
                                    ("" variable (:type ("val" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [603060 603064]))                                  
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [603026 603133])
                            ("push_back" function
                               (:arguments 
                                  ( ("val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [603243 603265]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [603228 603791])
                            ("+=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [603907 603929]))                                  
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [603886 603987])
                            ("push_back" function
                               (:arguments 
                                  ( ("val" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :constant-flag t
                                        :type ("object_t::value_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [604731 604772]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [604716 605301])
                            ("+=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("val" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :constant-flag t
                                        :type ("object_t::value_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [605442 605483]))                                  
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [605421 605541])
                            ("push_back" function
                               (:arguments 
                                  ( ("init" variable (:type ("initializer_list_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [606617 606641]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [606602 607047])
                            ("+=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("init" variable (:type ("initializer_list_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [607170 607194]))                                  
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [607149 607253])
                            ("emplace_back" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Args" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [608111 608117])
                                    ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [608122 608127]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [608093 608707])
                            ("emplace" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Args" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [609996 610002])
                                    ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [610007 610012]))                                  
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("iterator" type nil nil nil)
                                          ("bool" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [609962 610822])
                            ("insert_iterator" function
                               (:arguments 
                                  ( ("pos" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [611049 611068])
                                    ("" variable
                                       (:reference 1
                                        :type ("Args" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [611069 611075])
                                    ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [611080 611085]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [611024 611687])
                            ("insert" function
                               (:arguments 
                                  ( ("pos" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [612433 612452])
                                    ("val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [612453 612475]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [612417 613024])
                            ("insert" function
                               (:arguments 
                                  ( ("pos" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [613143 613162])
                                    ("" variable
                                       (:reference 1
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [613163 613175])
                                    ("" variable (:type ("val" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [613176 613180]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [613127 613225])
                            ("insert" function
                               (:arguments 
                                  ( ("pos" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [614085 614104])
                                    ("cnt" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [614105 614119])
                                    ("val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [614120 614142]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [614069 614696])
                            ("insert" function
                               (:arguments 
                                  ( ("pos" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [615934 615953])
                                    ("first" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [615954 615975])
                                    ("last" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [615976 615996]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [615918 616977])
                            ("insert" function
                               (:arguments 
                                  ( ("pos" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [617841 617860])
                                    ("ilist" variable (:type ("initializer_list_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [617861 617886]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [617825 618440])
                            ("insert" function
                               (:arguments 
                                  ( ("first" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [619305 619326])
                                    ("last" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [619327 619347]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [619293 620121])
                            ("update" function
                               (:arguments 
                                  ( ("j" variable (:type ("const_reference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [620747 620765]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [620735 621483])
                            ("update" function
                               (:arguments 
                                  ( ("first" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [622499 622520])
                                    ("last" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [622521 622541]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [622487 623601])
                            ("noexcept" function
                               (:arguments 
                                  ( ("and" variable (:type ("std::is_nothrow_move_constructible::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [624171 624237])
                                    ("and" variable (:type ("std::is_nothrow_move_assignable::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [624234 624297])
                                    ("and" variable (:type ("std::is_nothrow_move_constructible::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [624294 624363])
                                    ("" variable (:type ("std::is_nothrow_move_assignable::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [624360 624416]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [624152 624540])
                            ("swap" function
                               (:arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :type ("array_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [625167 625182]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [625157 625473])
                            ("swap" function
                               (:arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :type ("object_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [626105 626121]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [626095 626415])
                            ("swap" function
                               (:arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :type ("string_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [627047 627063]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [627037 627357])
                            ("public" label nil (reparse-symbol classsubparts) [627373 627380])
                            ("<<" function
                               (:operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("o" variable
                                       (:reference 1
                                        :type ("std::ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [644120 644136])
                                    ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [644137 644157]))                                  
                                :type ("std::ostream" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [644088 644645])
                            (">>" function
                               (:operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [645081 645101])
                                    ("o" variable
                                       (:reference 1
                                        :type ("std::ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [645102 645118]))                                  
                                :type ("std::ostream" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [645049 645153])
                            ("parse" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("detail::input_adapter" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [648226 648249])
                                    ("" variable (:type ("i" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [648250 648252])
                                    ("cb" variable
                                       (:constant-flag t
                                        :default-value "nullptr"
                                        :type ("parser_callback_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [648281 648317])
                                    ("allow_exceptions" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [648347 648381]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [648202 648505])
                            ("accept" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("detail::input_adapter" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [648530 648553])
                                    ("" variable (:type ("i" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [648554 648556]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [648511 648607])
                            ("sax_parse" function
                               (:template 
                                  ( ("SAX" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("detail::input_adapter" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [650960 650983])
                                    ("" variable (:type ("i" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [650984 650986])
                                    ("sax" variable
                                       (:pointer 1
                                        :type ("SAX" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [650987 650996])
                                    ("format" variable
                                       (:default-value "input_format_t"
                                        :type ("input_format_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [651023 651061])
                                    ("" variable (:type ("json" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [651063 651068])
                                    ("strict" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [651095 651119]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [650910 651362])
                            ("parse" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("first" variable (:type ("IteratorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [654035 654054])
                                    ("last" variable (:type ("IteratorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [654055 654073])
                                    ("cb" variable
                                       (:constant-flag t
                                        :default-value "nullptr"
                                        :type ("parser_callback_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [654102 654138])
                                    ("allow_exceptions" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [654168 654202]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [654011 654359])
                            ("accept" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("first" variable (:type ("IteratorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [654639 654658])
                                    ("last" variable (:type ("IteratorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [654659 654677]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [654620 654761])
                            ("sax_parse" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("first" variable (:type ("IteratorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [655055 655074])
                                    ("last" variable (:type ("IteratorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [655075 655093])
                                    ("sax" variable
                                       (:pointer 1
                                        :type ("SAX" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [655094 655103]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [655033 655189])
                            ("<<" function
                               (:operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [655624 655638])
                                    ("i" variable
                                       (:reference 1
                                        :type ("std::istream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [655639 655655]))                                  
                                :type ("std::istream" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [655592 655700])
                            (">>" function
                               (:operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("i" variable
                                       (:reference 1
                                        :type ("std::istream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [656609 656625])
                                    ("j" variable
                                       (:reference 1
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [656626 656640]))                                  
                                :type ("std::istream" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [656577 656728])
                            ("private" label nil (reparse-symbol classsubparts) [658543 658551])
                            ("value_t::null" variable (:type "int") (reparse-symbol classsubparts) [658695 658709])
                            ("m_value" variable
                               (:default-value "{}"
                                :type ("json_value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [658756 658780])
                            ("public" label nil (reparse-symbol classsubparts) [658997 659004])
                            ("to_cbor" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [665083 665103]))                                  
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("uint8_t" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [665047 665203])
                            ("to_cbor" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [665229 665249])
                                    ("o" variable (:type ("detail::output_adapter" type
                                         (:template-specifier 
                                            ( ("uint8_t" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [665250 665284]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [665209 665345])
                            ("to_cbor" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [665371 665391])
                                    ("o" variable (:type ("detail::output_adapter" type
                                         (:template-specifier 
                                            ( ("char" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [665392 665423]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [665351 665481])
                            ("to_msgpack" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [670064 670084]))                                  
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("uint8_t" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [670025 670187])
                            ("to_msgpack" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [670216 670236])
                                    ("o" variable (:type ("detail::output_adapter" type
                                         (:template-specifier 
                                            ( ("uint8_t" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [670237 670271]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [670193 670335])
                            ("to_msgpack" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [670364 670384])
                                    ("o" variable (:type ("detail::output_adapter" type
                                         (:template-specifier 
                                            ( ("char" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [670385 670416]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [670341 670477])
                            ("to_ubjson" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [674933 674953])
                                    ("use_size" variable
                                       (:constant-flag t
                                        :default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [674996 675023])
                                    ("use_type" variable
                                       (:constant-flag t
                                        :default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [675067 675094]))                                  
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("uint8_t" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [674895 675217])
                            ("to_ubjson" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [675245 675265])
                                    ("o" variable (:type ("detail::output_adapter" type
                                         (:template-specifier 
                                            ( ("uint8_t" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [675266 675300])
                                    ("use_size" variable
                                       (:constant-flag t
                                        :default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [675327 675354])
                                    ("use_type" variable
                                       (:constant-flag t
                                        :default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [675356 675383]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [675223 675467])
                            ("to_ubjson" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [675495 675515])
                                    ("o" variable (:type ("detail::output_adapter" type
                                         (:template-specifier 
                                            ( ("char" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [675516 675547])
                                    ("use_size" variable
                                       (:constant-flag t
                                        :default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [675574 675601])
                                    ("use_type" variable
                                       (:constant-flag t
                                        :default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [675603 675630]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [675473 675711])
                            ("to_bson" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [678608 678628]))                                  
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("uint8_t" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [678572 678728])
                            ("to_bson" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [679154 679174])
                                    ("o" variable (:type ("detail::output_adapter" type
                                         (:template-specifier 
                                            ( ("uint8_t" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [679175 679209]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [679134 679270])
                            ("to_bson" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [679384 679404])
                                    ("o" variable (:type ("detail::output_adapter" type
                                         (:template-specifier 
                                            ( ("char" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [679405 679436]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [679364 679494])
                            ("from_cbor" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("detail::input_adapter" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [684299 684322])
                                    ("" variable (:type ("i" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [684323 684325])
                                    ("strict" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [684358 684382])
                                    ("allow_exceptions" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [684416 684450]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [684271 684743])
                            ("from_cbor" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("A1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [685026 685031])
                                    ("" variable (:type ("a1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [685032 685035])
                                    ("" variable
                                       (:reference 1
                                        :type ("A2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [685036 685041])
                                    ("" variable (:type ("a2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [685042 685045])
                                    ("strict" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [685078 685102])
                                    ("allow_exceptions" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [685136 685170]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [684998 685504])
                            ("from_msgpack" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("detail::input_adapter" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [689318 689341])
                                    ("" variable (:type ("i" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [689342 689344])
                                    ("strict" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [689380 689404])
                                    ("allow_exceptions" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [689441 689475]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [689287 689771])
                            ("from_msgpack" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("A1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [690060 690065])
                                    ("" variable (:type ("a1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [690066 690069])
                                    ("" variable
                                       (:reference 1
                                        :type ("A2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [690070 690075])
                                    ("" variable (:type ("a2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [690076 690079])
                                    ("strict" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [690115 690139])
                                    ("allow_exceptions" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [690176 690210]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [690029 690547])
                            ("from_ubjson" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("detail::input_adapter" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [693546 693569])
                                    ("" variable (:type ("i" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [693570 693572])
                                    ("strict" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [693607 693631])
                                    ("allow_exceptions" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [693667 693701]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [693516 693996])
                            ("from_ubjson" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("A1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [694283 694288])
                                    ("" variable (:type ("a1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [694289 694292])
                                    ("" variable
                                       (:reference 1
                                        :type ("A2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [694293 694298])
                                    ("" variable (:type ("a2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [694299 694302])
                                    ("strict" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [694337 694361])
                                    ("allow_exceptions" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [694397 694431]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [694253 694767])
                            ("from_bson" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("detail::input_adapter" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [697618 697641])
                                    ("" variable (:type ("i" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [697642 697644])
                                    ("strict" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [697677 697701])
                                    ("allow_exceptions" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [697735 697769]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [697590 698062])
                            ("from_bson" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("A1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [698345 698350])
                                    ("" variable (:type ("a1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [698351 698354])
                                    ("" variable
                                       (:reference 1
                                        :type ("A2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [698355 698360])
                                    ("" variable (:type ("a2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [698361 698364])
                                    ("strict" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [698397 698421])
                                    ("allow_exceptions" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [698455 698489]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [698317 698823])
                            ("[]" function
                               (:operator-flag t
                                :arguments 
                                  ( ("ptr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("json_pointer" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [700279 700303]))                                  
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [700258 700355])
                            ("[]" function
                               (:operator-flag t
                                :arguments 
                                  ( ("ptr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("json_pointer" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [701232 701256]))                                  
                                :type ("const_reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [701205 701314])
                            ("at" function
                               (:arguments 
                                  ( ("ptr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("json_pointer" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [702674 702698]))                                  
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [702661 702748])
                            ("at" function
                               (:arguments 
                                  ( ("ptr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("json_pointer" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [704126 704150]))                                  
                                :type ("const_reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [704107 704206])
                            ("flatten" function (:type ("basic_json" type (:type "class") nil nil)) (reparse-symbol classsubparts) [704991 705146])
                            ("unflatten" function (:type ("basic_json" type (:type "class") nil nil)) (reparse-symbol classsubparts) [706307 706394])
                            ("patch" function
                               (:arguments 
                                  ( ("json_patch" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [708397 708426]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [708380 717718])
                            ("diff" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("source" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [718851 718876])
                                    ("target" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [718877 718902])
                                    ("path" variable
                                       (:reference 1
                                        :constant-flag t
                                        :default-value "\"\""
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [718930 718958]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [718828 723151])
                            ("merge_patch" function
                               (:arguments 
                                  ( ("apply_patch" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [724733 724763]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [724716 725338]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [444047 725353]))                  
                :type "namespace")
                nil [439934 725355])
            ("std" type
               (:members 
                  ( ("hash" type
                       (:type "struct"
                        :members 
                          ( ("()" function
                               (:operator-flag t
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("nlohmann::json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [725705 725729]))                                  
                                :type ("std::size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [725682 725890]))                          
                        :template-specifier 
                          ( ("nlohmann::json" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [725547 725893])
                    ("noexcept" function
                       (:arguments 
                          ( ("" variable (:type ("is_nothrow_move_constructible" type
                                 (:template-specifier 
                                    ( ("nlohmann::json" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [726540 726586])
                            ("and" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [726587 726627])
                            ("" variable (:type ("is_nothrow_move_assignable" type
                                 (:template-specifier 
                                    ( ("nlohmann::json" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [726601 726644])
                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [726645 726652]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [726526 726673]))                  
                :type "namespace")
                nil [725498 726676])
            ("_json" function
               (:arguments 
                  ( ("s" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [727116 727130])
                    ("n" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [727131 727145]))                  
                :type "int")
                nil [727110 727193])
            ("_json_pointer" function
               (:arguments 
                  ( ("s" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [727665 727679])
                    ("n" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [727680 727694]))                  
                :type "int")
                nil [727651 727758])
            ("Json11" type
               (:kind alias
                :members 
                  ( ("nlohmann" type (:type "namespace") nil nil))                  
                :type "namespace")
                nil [728360 728388]))          
      :file "json.hpp"
      :pointmax 728428
      :fsize 728427
      :lastmodtime '(23785 11546 530897 283000)
      :unmatched-syntax '((symbol 727943 . 727946) (symbol 727932 . 727942) (symbol 727928 . 727931) (symbol 727921 . 727927) (punctuation 727920 . 727921) (string 727648 . 727650) (OPERATOR 727639 . 727647) (symbol 727626 . 727638) (punctuation 727625 . 727626) (punctuation 727624 . 727625) (symbol 727620 . 727624) (punctuation 727619 . 727620) (punctuation 727618 . 727619) (symbol 727610 . 727618) (INLINE 727603 . 727609) (string 727107 . 727109) (OPERATOR 727098 . 727106) (symbol 727093 . 727097) (punctuation 727092 . 727093) (punctuation 727091 . 727092) (symbol 727083 . 727091) (INLINE 727076 . 727082) (punctuation 726644 . 726645) (punctuation 726643 . 726644) (punctuation 726586 . 726587) (punctuation 726585 . 726586) (semantic-list 726485 . 726525) (punctuation 726484 . 726485) (symbol 726480 . 726484) (punctuation 726479 . 726480) (punctuation 726478 . 726479) (symbol 726470 . 726478) (punctuation 726469 . 726470) (symbol 726465 . 726469) (VOID 726460 . 726464) (INLINE 726453 . 726459) (punctuation 726451 . 726452) (punctuation 726450 . 726451) (TEMPLATE 726442 . 726450) (punctuation 726362 . 726363) (semantic-list 726093 . 726362) (punctuation 726091 . 726092) (symbol 726084 . 726091) (punctuation 726083 . 726084) (punctuation 726082 . 726083) (symbol 726076 . 726082) (punctuation 726075 . 726076) (punctuation 726074 . 726075) (symbol 726066 . 726074) (punctuation 726065 . 726066) (punctuation 726064 . 726065) (punctuation 726062 . 726063) (symbol 726058 . 726062) (STRUCT 726051 . 726057) (punctuation 726049 . 726050) (punctuation 726048 . 726049) (TEMPLATE 726040 . 726048) (symbol 718809 . 718823) (punctuation 698359 . 698360) (punctuation 698349 . 698350) (symbol 698298 . 698312) (punctuation 698292 . 698293) (number 698291 . 698292) (punctuation 698289 . 698290) (punctuation 698287 . 698288) (INT 698284 . 698287) (punctuation 698282 . 698283) (symbol 698277 . 698282) (punctuation 698276 . 698277) (punctuation 698275 . 698276) (punctuation 698274 . 698275) (symbol 698272 . 698274) (punctuation 698270 . 698271) (symbol 698268 . 698270) (punctuation 698266 . 698267) (symbol 698253 . 698266) (punctuation 698252 . 698253) (punctuation 698251 . 698252) (symbol 698245 . 698251) (punctuation 698244 . 698245) (symbol 698228 . 698244) (punctuation 698227 . 698228) (punctuation 698226 . 698227) (symbol 698223 . 698226) (punctuation 698222 . 698223) (symbol 698211 . 698222) (punctuation 698210 . 698211) (punctuation 698209 . 698210) (symbol 698203 . 698209) (punctuation 698188 . 698189) (symbol 698186 . 698188) (TYPENAME 698177 . 698185) (punctuation 698175 . 698176) (symbol 698173 . 698175) (TYPENAME 698164 . 698172) (punctuation 698163 . 698164) (TEMPLATE 698155 . 698163) (punctuation 697640 . 697641) (symbol 697571 . 697585) (punctuation 694297 . 694298) (punctuation 694287 . 694288) (symbol 694234 . 694248) (punctuation 694228 . 694229) (number 694227 . 694228) (punctuation 694225 . 694226) (punctuation 694223 . 694224) (INT 694220 . 694223) (punctuation 694218 . 694219) (symbol 694213 . 694218) (punctuation 694212 . 694213) (punctuation 694211 . 694212) (punctuation 694210 . 694211) (symbol 694208 . 694210) (punctuation 694206 . 694207) (symbol 694204 . 694206) (punctuation 694202 . 694203) (symbol 694189 . 694202) (punctuation 694188 . 694189) (punctuation 694187 . 694188) (symbol 694181 . 694187) (punctuation 694180 . 694181) (symbol 694164 . 694180) (punctuation 694163 . 694164) (punctuation 694162 . 694163) (symbol 694159 . 694162) (punctuation 694158 . 694159) (symbol 694147 . 694158) (punctuation 694146 . 694147) (punctuation 694145 . 694146) (symbol 694139 . 694145) (punctuation 694124 . 694125) (symbol 694122 . 694124) (TYPENAME 694113 . 694121) (punctuation 694111 . 694112) (symbol 694109 . 694111) (TYPENAME 694100 . 694108) (punctuation 694099 . 694100) (TEMPLATE 694091 . 694099) (punctuation 693568 . 693569) (symbol 693497 . 693511) (punctuation 690074 . 690075) (punctuation 690064 . 690065) (symbol 690010 . 690024) (punctuation 690004 . 690005) (number 690003 . 690004) (punctuation 690001 . 690002) (punctuation 689999 . 690000) (INT 689996 . 689999) (punctuation 689994 . 689995) (symbol 689989 . 689994) (punctuation 689988 . 689989) (punctuation 689987 . 689988) (punctuation 689986 . 689987) (symbol 689984 . 689986) (punctuation 689982 . 689983) (symbol 689980 . 689982) (punctuation 689978 . 689979) (symbol 689965 . 689978) (punctuation 689964 . 689965) (punctuation 689963 . 689964) (symbol 689957 . 689963) (punctuation 689956 . 689957) (symbol 689940 . 689956) (punctuation 689939 . 689940) (punctuation 689938 . 689939) (symbol 689935 . 689938) (punctuation 689934 . 689935) (symbol 689923 . 689934) (punctuation 689922 . 689923) (punctuation 689921 . 689922) (symbol 689915 . 689921) (punctuation 689900 . 689901) (symbol 689898 . 689900) (TYPENAME 689889 . 689897) (punctuation 689887 . 689888) (symbol 689885 . 689887) (TYPENAME 689876 . 689884) (punctuation 689875 . 689876) (TEMPLATE 689867 . 689875) (punctuation 689340 . 689341) (symbol 689268 . 689282) (punctuation 685040 . 685041) (punctuation 685030 . 685031) (symbol 684979 . 684993) (punctuation 684973 . 684974) (number 684972 . 684973) (punctuation 684970 . 684971) (punctuation 684968 . 684969) (INT 684965 . 684968) (punctuation 684963 . 684964) (symbol 684958 . 684963) (punctuation 684957 . 684958) (punctuation 684956 . 684957) (punctuation 684955 . 684956) (symbol 684953 . 684955) (punctuation 684951 . 684952) (symbol 684949 . 684951) (punctuation 684947 . 684948) (symbol 684934 . 684947) (punctuation 684933 . 684934) (punctuation 684932 . 684933) (symbol 684926 . 684932) (punctuation 684925 . 684926) (symbol 684909 . 684925) (punctuation 684908 . 684909) (punctuation 684907 . 684908) (symbol 684904 . 684907) (punctuation 684903 . 684904) (symbol 684892 . 684903) (punctuation 684891 . 684892) (punctuation 684890 . 684891) (symbol 684884 . 684890) (punctuation 684869 . 684870) (symbol 684867 . 684869) (TYPENAME 684858 . 684866) (punctuation 684856 . 684857) (symbol 684854 . 684856) (TYPENAME 684845 . 684853) (punctuation 684844 . 684845) (TEMPLATE 684836 . 684844) (punctuation 684321 . 684322) (symbol 684252 . 684266) (punctuation 658693 . 658694) (symbol 658686 . 658692) (symbol 658678 . 658685) (semantic-list 657941 . 658538) (symbol 657928 . 657936) (CONST 657922 . 657927) (semantic-list 657919 . 657921) (symbol 657910 . 657919) (punctuation 657908 . 657909) (CHAR 657904 . 657908) (CONST 657898 . 657903) (symbol 655572 . 655587) (punctuation 655027 . 655028) (number 655026 . 655027) (punctuation 655024 . 655025) (symbol 655019 . 655023) (punctuation 655018 . 655019) (punctuation 655017 . 655018) (punctuation 655016 . 655017) (INT 655013 . 655016) (punctuation 655011 . 655012) (symbol 655006 . 655011) (punctuation 655005 . 655006) (punctuation 655004 . 655005) (punctuation 655003 . 655004) (symbol 654986 . 655003) (punctuation 654985 . 654986) (punctuation 654984 . 654985) (punctuation 654983 . 654984) (symbol 654971 . 654983) (punctuation 654970 . 654971) (symbol 654955 . 654970) (punctuation 654954 . 654955) (punctuation 654953 . 654954) (symbol 654950 . 654953) (TYPENAME 654941 . 654949) (punctuation 654918 . 654919) (symbol 654892 . 654918) (punctuation 654891 . 654892) (punctuation 654890 . 654891) (symbol 654887 . 654890) (punctuation 654864 . 654865) (symbol 654854 . 654864) (punctuation 654853 . 654854) (punctuation 654852 . 654853) (symbol 654849 . 654852) (punctuation 654830 . 654831) (symbol 654821 . 654830) (punctuation 654820 . 654821) (punctuation 654819 . 654820) (symbol 654816 . 654819) (TYPENAME 654807 . 654815) (punctuation 654805 . 654806) (symbol 654802 . 654805) (CLASS 654796 . 654801) (punctuation 654794 . 654795) (symbol 654782 . 654794) (CLASS 654776 . 654781) (punctuation 654775 . 654776) (TEMPLATE 654767 . 654775) (punctuation 654614 . 654615) (number 654613 . 654614) (punctuation 654611 . 654612) (symbol 654606 . 654610) (punctuation 654605 . 654606) (punctuation 654604 . 654605) (punctuation 654603 . 654604) (INT 654600 . 654603) (punctuation 654598 . 654599) (symbol 654593 . 654598) (punctuation 654592 . 654593) (punctuation 654591 . 654592) (punctuation 654590 . 654591) (symbol 654573 . 654590) (punctuation 654572 . 654573) (punctuation 654571 . 654572) (punctuation 654570 . 654571) (symbol 654558 . 654570) (punctuation 654557 . 654558) (symbol 654542 . 654557) (punctuation 654541 . 654542) (punctuation 654540 . 654541) (symbol 654537 . 654540) (TYPENAME 654528 . 654536) (punctuation 654505 . 654506) (symbol 654479 . 654505) (punctuation 654478 . 654479) (punctuation 654477 . 654478) (symbol 654474 . 654477) (punctuation 654451 . 654452) (symbol 654441 . 654451) (punctuation 654440 . 654441) (punctuation 654439 . 654440) (symbol 654436 . 654439) (punctuation 654417 . 654418) (symbol 654408 . 654417) (punctuation 654407 . 654408) (punctuation 654406 . 654407) (symbol 654403 . 654406) (TYPENAME 654394 . 654402) (punctuation 654392 . 654393) (symbol 654380 . 654392) (CLASS 654374 . 654379) (punctuation 654373 . 654374) (TEMPLATE 654365 . 654373) (punctuation 654005 . 654006) (number 654004 . 654005) (punctuation 654002 . 654003) (symbol 653997 . 654001) (punctuation 653996 . 653997) (punctuation 653995 . 653996) (punctuation 653994 . 653995) (INT 653991 . 653994) (punctuation 653989 . 653990) (symbol 653984 . 653989) (punctuation 653983 . 653984) (punctuation 653982 . 653983) (punctuation 653981 . 653982) (symbol 653964 . 653981) (punctuation 653963 . 653964) (punctuation 653962 . 653963) (punctuation 653961 . 653962) (symbol 653949 . 653961) (punctuation 653948 . 653949) (symbol 653933 . 653948) (punctuation 653932 . 653933) (punctuation 653931 . 653932) (symbol 653928 . 653931) (TYPENAME 653919 . 653927) (punctuation 653896 . 653897) (symbol 653870 . 653896) (punctuation 653869 . 653870) (punctuation 653868 . 653869) (symbol 653865 . 653868) (punctuation 653842 . 653843) (symbol 653832 . 653842) (punctuation 653831 . 653832) (punctuation 653830 . 653831) (symbol 653827 . 653830) (punctuation 653808 . 653809) (symbol 653799 . 653808) (punctuation 653798 . 653799) (punctuation 653797 . 653798) (symbol 653794 . 653797) (TYPENAME 653785 . 653793) (punctuation 653783 . 653784) (symbol 653771 . 653783) (CLASS 653765 . 653770) (punctuation 653764 . 653765) (TEMPLATE 653756 . 653764) (punctuation 651062 . 651063) (punctuation 651061 . 651062) (punctuation 650982 . 650983) (punctuation 648552 . 648553) (punctuation 648248 . 648249) (symbol 648183 . 648197) (symbol 645029 . 645044) (semantic-list 642689 . 642735) (symbol 642676 . 642684) (semantic-list 642632 . 642675) (punctuation 642631 . 642632) (punctuation 642630 . 642631) (OPERATOR 642622 . 642630) (BOOL 642617 . 642621) (FRIEND 642610 . 642616) (punctuation 642604 . 642605) (number 642603 . 642604) (punctuation 642601 . 642602) (symbol 642596 . 642600) (punctuation 642595 . 642596) (punctuation 642594 . 642595) (punctuation 642593 . 642594) (INT 642590 . 642593) (punctuation 642588 . 642589) (symbol 642583 . 642588) (punctuation 642582 . 642583) (punctuation 642581 . 642582) (punctuation 642580 . 642581) (symbol 642570 . 642580) (punctuation 642569 . 642570) (symbol 642560 . 642569) (punctuation 642559 . 642560) (punctuation 642558 . 642559) (symbol 642555 . 642558) (punctuation 642536 . 642537) (symbol 642527 . 642536) (punctuation 642526 . 642527) (punctuation 642525 . 642526) (symbol 642522 . 642525) (TYPENAME 642513 . 642521) (punctuation 642511 . 642512) (symbol 642501 . 642511) (TYPENAME 642492 . 642500) (punctuation 642491 . 642492) (TEMPLATE 642483 . 642491) (semantic-list 642313 . 642359) (symbol 642300 . 642308) (semantic-list 642256 . 642299) (punctuation 642255 . 642256) (punctuation 642254 . 642255) (OPERATOR 642246 . 642254) (BOOL 642241 . 642245) (FRIEND 642234 . 642240) (punctuation 642228 . 642229) (number 642227 . 642228) (punctuation 642225 . 642226) (symbol 642220 . 642224) (punctuation 642219 . 642220) (punctuation 642218 . 642219) (punctuation 642217 . 642218) (INT 642214 . 642217) (punctuation 642212 . 642213) (symbol 642207 . 642212) (punctuation 642206 . 642207) (punctuation 642205 . 642206) (punctuation 642204 . 642205) (symbol 642194 . 642204) (punctuation 642193 . 642194) (symbol 642184 . 642193) (punctuation 642183 . 642184) (punctuation 642182 . 642183) (symbol 642179 . 642182) (punctuation 642160 . 642161) (symbol 642151 . 642160) (punctuation 642150 . 642151) (punctuation 642149 . 642150) (symbol 642146 . 642149) (TYPENAME 642137 . 642145) (punctuation 642135 . 642136) (symbol 642125 . 642135) (TYPENAME 642116 . 642124) (punctuation 642115 . 642116) (TEMPLATE 642107 . 642115) (semantic-list 641944 . 641983) (symbol 641931 . 641939) (semantic-list 641888 . 641930) (punctuation 641887 . 641888) (punctuation 641886 . 641887) (OPERATOR 641878 . 641886) (BOOL 641873 . 641877) (FRIEND 641866 . 641872) (semantic-list 641231 . 641276) (symbol 641218 . 641226) (semantic-list 641174 . 641217) (punctuation 641173 . 641174) (OPERATOR 641165 . 641173) (BOOL 641160 . 641164) (FRIEND 641153 . 641159) (punctuation 641147 . 641148) (number 641146 . 641147) (punctuation 641144 . 641145) (symbol 641139 . 641143) (punctuation 641138 . 641139) (punctuation 641137 . 641138) (punctuation 641136 . 641137) (INT 641133 . 641136) (punctuation 641131 . 641132) (symbol 641126 . 641131) (punctuation 641125 . 641126) (punctuation 641124 . 641125) (punctuation 641123 . 641124) (symbol 641113 . 641123) (punctuation 641112 . 641113) (symbol 641103 . 641112) (punctuation 641102 . 641103) (punctuation 641101 . 641102) (symbol 641098 . 641101) (punctuation 641079 . 641080) (symbol 641070 . 641079) (punctuation 641069 . 641070) (punctuation 641068 . 641069) (symbol 641065 . 641068) (TYPENAME 641056 . 641064) (punctuation 641054 . 641055) (symbol 641044 . 641054) (TYPENAME 641035 . 641043) (punctuation 641034 . 641035) (TEMPLATE 641026 . 641034) (semantic-list 640867 . 640912) (symbol 640854 . 640862) (semantic-list 640810 . 640853) (punctuation 640809 . 640810) (OPERATOR 640801 . 640809) (BOOL 640796 . 640800) (FRIEND 640789 . 640795) (punctuation 640783 . 640784) (number 640782 . 640783) (punctuation 640780 . 640781) (symbol 640775 . 640779) (punctuation 640774 . 640775) (punctuation 640773 . 640774) (punctuation 640772 . 640773) (INT 640769 . 640772) (punctuation 640767 . 640768) (symbol 640762 . 640767) (punctuation 640761 . 640762) (punctuation 640760 . 640761) (punctuation 640759 . 640760) (symbol 640749 . 640759) (punctuation 640748 . 640749) (symbol 640739 . 640748) (punctuation 640738 . 640739) (punctuation 640737 . 640738) (symbol 640734 . 640737) (punctuation 640715 . 640716) (symbol 640706 . 640715) (punctuation 640705 . 640706) (punctuation 640704 . 640705) (symbol 640701 . 640704) (TYPENAME 640692 . 640700) (punctuation 640690 . 640691) (symbol 640680 . 640690) (TYPENAME 640671 . 640679) (punctuation 640670 . 640671) (TEMPLATE 640662 . 640670) (semantic-list 640508 . 640548) (symbol 640495 . 640503) (semantic-list 640452 . 640494) (punctuation 640451 . 640452) (OPERATOR 640443 . 640451) (BOOL 640438 . 640442) (FRIEND 640431 . 640437) (semantic-list 639827 . 639873) (symbol 639814 . 639822) (semantic-list 639770 . 639813) (punctuation 639769 . 639770) (punctuation 639768 . 639769) (OPERATOR 639760 . 639768) (BOOL 639755 . 639759) (FRIEND 639748 . 639754) (punctuation 639742 . 639743) (number 639741 . 639742) (punctuation 639739 . 639740) (symbol 639734 . 639738) (punctuation 639733 . 639734) (punctuation 639732 . 639733) (punctuation 639731 . 639732) (INT 639728 . 639731) (punctuation 639726 . 639727) (symbol 639721 . 639726) (punctuation 639720 . 639721) (punctuation 639719 . 639720) (punctuation 639718 . 639719) (symbol 639708 . 639718) (punctuation 639707 . 639708) (symbol 639698 . 639707) (punctuation 639697 . 639698) (punctuation 639696 . 639697) (symbol 639693 . 639696) (punctuation 639674 . 639675) (symbol 639665 . 639674) (punctuation 639664 . 639665) (punctuation 639663 . 639664) (symbol 639660 . 639663) (TYPENAME 639651 . 639659) (punctuation 639649 . 639650) (symbol 639639 . 639649) (TYPENAME 639630 . 639638) (punctuation 639629 . 639630) (TEMPLATE 639621 . 639629) (semantic-list 639454 . 639500) (symbol 639441 . 639449) (semantic-list 639397 . 639440) (punctuation 639396 . 639397) (punctuation 639395 . 639396) (OPERATOR 639387 . 639395) (BOOL 639382 . 639386) (FRIEND 639375 . 639381) (punctuation 639369 . 639370) (number 639368 . 639369) (punctuation 639366 . 639367) (symbol 639361 . 639365) (punctuation 639360 . 639361) (punctuation 639359 . 639360) (punctuation 639358 . 639359) (INT 639355 . 639358) (punctuation 639353 . 639354) (symbol 639348 . 639353) (punctuation 639347 . 639348) (punctuation 639346 . 639347) (punctuation 639345 . 639346) (symbol 639335 . 639345) (punctuation 639334 . 639335) (symbol 639325 . 639334) (punctuation 639324 . 639325) (punctuation 639323 . 639324) (symbol 639320 . 639323) (punctuation 639301 . 639302) (symbol 639292 . 639301) (punctuation 639291 . 639292) (punctuation 639290 . 639291) (symbol 639287 . 639290) (TYPENAME 639278 . 639286) (punctuation 639276 . 639277) (symbol 639266 . 639276) (TYPENAME 639257 . 639265) (punctuation 639256 . 639257) (TEMPLATE 639248 . 639256) (semantic-list 639088 . 639127) (symbol 639075 . 639083) (semantic-list 639032 . 639074) (punctuation 639031 . 639032) (punctuation 639030 . 639031) (OPERATOR 639022 . 639030) (BOOL 639017 . 639021) (FRIEND 639010 . 639016) (semantic-list 638389 . 638434) (symbol 638376 . 638384) (semantic-list 638332 . 638375) (punctuation 638331 . 638332) (OPERATOR 638323 . 638331) (BOOL 638318 . 638322) (FRIEND 638311 . 638317) (punctuation 638305 . 638306) (number 638304 . 638305) (punctuation 638302 . 638303) (symbol 638297 . 638301) (punctuation 638296 . 638297) (punctuation 638295 . 638296) (punctuation 638294 . 638295) (INT 638291 . 638294) (punctuation 638289 . 638290) (symbol 638284 . 638289) (punctuation 638283 . 638284) (punctuation 638282 . 638283) (punctuation 638281 . 638282) (symbol 638271 . 638281) (punctuation 638270 . 638271) (symbol 638261 . 638270) (punctuation 638260 . 638261) (punctuation 638259 . 638260) (symbol 638256 . 638259) (punctuation 638237 . 638238) (symbol 638228 . 638237) (punctuation 638227 . 638228) (punctuation 638226 . 638227) (symbol 638223 . 638226) (TYPENAME 638214 . 638222) (punctuation 638212 . 638213) (symbol 638202 . 638212) (TYPENAME 638193 . 638201) (punctuation 638192 . 638193) (TEMPLATE 638184 . 638192) (semantic-list 638028 . 638073) (symbol 638015 . 638023) (semantic-list 637971 . 638014) (punctuation 637970 . 637971) (OPERATOR 637962 . 637970) (BOOL 637957 . 637961) (FRIEND 637950 . 637956) (punctuation 637944 . 637945) (number 637943 . 637944) (punctuation 637941 . 637942) (symbol 637936 . 637940) (punctuation 637935 . 637936) (punctuation 637934 . 637935) (punctuation 637933 . 637934) (INT 637930 . 637933) (punctuation 637928 . 637929) (symbol 637923 . 637928) (punctuation 637922 . 637923) (punctuation 637921 . 637922) (punctuation 637920 . 637921) (symbol 637910 . 637920) (punctuation 637909 . 637910) (symbol 637900 . 637909) (punctuation 637899 . 637900) (punctuation 637898 . 637899) (symbol 637895 . 637898) (punctuation 637876 . 637877) (symbol 637867 . 637876) (punctuation 637866 . 637867) (punctuation 637865 . 637866) (symbol 637862 . 637865) (TYPENAME 637853 . 637861) (punctuation 637851 . 637852) (symbol 637841 . 637851) (TYPENAME 637832 . 637840) (punctuation 637831 . 637832) (TEMPLATE 637823 . 637831) (semantic-list 634865 . 637712) (symbol 634852 . 634860) (semantic-list 634809 . 634851) (punctuation 634808 . 634809) (OPERATOR 634800 . 634808) (BOOL 634795 . 634799) (FRIEND 634788 . 634794) (semantic-list 633812 . 633858) (symbol 633799 . 633807) (semantic-list 633755 . 633798) (punctuation 633754 . 633755) (punctuation 633753 . 633754) (OPERATOR 633745 . 633753) (BOOL 633740 . 633744) (FRIEND 633733 . 633739) (punctuation 633727 . 633728) (number 633726 . 633727) (punctuation 633724 . 633725) (symbol 633719 . 633723) (punctuation 633718 . 633719) (punctuation 633717 . 633718) (punctuation 633716 . 633717) (INT 633713 . 633716) (punctuation 633711 . 633712) (symbol 633706 . 633711) (punctuation 633705 . 633706) (punctuation 633704 . 633705) (punctuation 633703 . 633704) (symbol 633693 . 633703) (punctuation 633692 . 633693) (symbol 633683 . 633692) (punctuation 633682 . 633683) (punctuation 633681 . 633682) (symbol 633678 . 633681) (punctuation 633659 . 633660) (symbol 633650 . 633659) (punctuation 633649 . 633650) (punctuation 633648 . 633649) (symbol 633645 . 633648) (TYPENAME 633636 . 633644) (punctuation 633634 . 633635) (symbol 633624 . 633634) (TYPENAME 633615 . 633623) (punctuation 633614 . 633615) (TEMPLATE 633606 . 633614) (semantic-list 633448 . 633494) (symbol 633435 . 633443) (semantic-list 633391 . 633434) (punctuation 633390 . 633391) (punctuation 633389 . 633390) (OPERATOR 633381 . 633389) (BOOL 633376 . 633380) (FRIEND 633369 . 633375) (punctuation 633363 . 633364) (number 633362 . 633363) (punctuation 633360 . 633361) (symbol 633355 . 633359) (punctuation 633354 . 633355) (punctuation 633353 . 633354) (punctuation 633352 . 633353) (INT 633349 . 633352) (punctuation 633347 . 633348) (symbol 633342 . 633347) (punctuation 633341 . 633342) (punctuation 633340 . 633341) (punctuation 633339 . 633340) (symbol 633329 . 633339) (punctuation 633328 . 633329) (symbol 633319 . 633328) (punctuation 633318 . 633319) (punctuation 633317 . 633318) (symbol 633314 . 633317) (punctuation 633295 . 633296) (symbol 633286 . 633295) (punctuation 633285 . 633286) (punctuation 633284 . 633285) (symbol 633281 . 633284) (TYPENAME 633272 . 633280) (punctuation 633270 . 633271) (symbol 633260 . 633270) (TYPENAME 633251 . 633259) (punctuation 633250 . 633251) (TEMPLATE 633242 . 633250) (semantic-list 633090 . 633130) (symbol 633077 . 633085) (semantic-list 633034 . 633076) (punctuation 633033 . 633034) (punctuation 633032 . 633033) (OPERATOR 633024 . 633032) (BOOL 633019 . 633023) (FRIEND 633012 . 633018) (semantic-list 632440 . 632486) (symbol 632427 . 632435) (semantic-list 632383 . 632426) (punctuation 632382 . 632383) (punctuation 632381 . 632382) (OPERATOR 632373 . 632381) (BOOL 632368 . 632372) (FRIEND 632361 . 632367) (punctuation 632355 . 632356) (number 632354 . 632355) (punctuation 632352 . 632353) (symbol 632347 . 632351) (punctuation 632346 . 632347) (punctuation 632345 . 632346) (punctuation 632344 . 632345) (INT 632341 . 632344) (punctuation 632339 . 632340) (symbol 632334 . 632339) (punctuation 632333 . 632334) (punctuation 632332 . 632333) (punctuation 632331 . 632332) (symbol 632321 . 632331) (punctuation 632320 . 632321) (symbol 632311 . 632320) (punctuation 632310 . 632311) (punctuation 632309 . 632310) (symbol 632306 . 632309) (punctuation 632287 . 632288) (symbol 632278 . 632287) (punctuation 632277 . 632278) (punctuation 632276 . 632277) (symbol 632273 . 632276) (TYPENAME 632264 . 632272) (punctuation 632262 . 632263) (symbol 632252 . 632262) (TYPENAME 632243 . 632251) (punctuation 632242 . 632243) (TEMPLATE 632234 . 632242) (semantic-list 632080 . 632126) (symbol 632067 . 632075) (semantic-list 632023 . 632066) (punctuation 632022 . 632023) (punctuation 632021 . 632022) (OPERATOR 632013 . 632021) (BOOL 632008 . 632012) (FRIEND 632001 . 632007) (punctuation 631995 . 631996) (number 631994 . 631995) (punctuation 631992 . 631993) (symbol 631987 . 631991) (punctuation 631986 . 631987) (punctuation 631985 . 631986) (punctuation 631984 . 631985) (INT 631981 . 631984) (punctuation 631979 . 631980) (symbol 631974 . 631979) (punctuation 631973 . 631974) (punctuation 631972 . 631973) (punctuation 631971 . 631972) (symbol 631961 . 631971) (punctuation 631960 . 631961) (symbol 631951 . 631960) (punctuation 631950 . 631951) (punctuation 631949 . 631950) (symbol 631946 . 631949) (punctuation 631927 . 631928) (symbol 631918 . 631927) (punctuation 631917 . 631918) (punctuation 631916 . 631917) (symbol 631913 . 631916) (TYPENAME 631904 . 631912) (punctuation 631902 . 631903) (symbol 631892 . 631902) (TYPENAME 631883 . 631891) (punctuation 631882 . 631883) (TEMPLATE 631874 . 631882) (semantic-list 629263 . 631766) (symbol 629250 . 629258) (semantic-list 629207 . 629249) (punctuation 629206 . 629207) (punctuation 629205 . 629206) (OPERATOR 629197 . 629205) (BOOL 629192 . 629196) (FRIEND 629185 . 629191) (semantic-list 624134 . 624151) (symbol 624130 . 624134) (VOID 624125 . 624129) (punctuation 613174 . 613175) (punctuation 611078 . 611079) (punctuation 611077 . 611078) (punctuation 611076 . 611077) (punctuation 611074 . 611075) (punctuation 611018 . 611019) (symbol 611014 . 611018) (punctuation 611012 . 611013) (punctuation 611011 . 611012) (punctuation 611010 . 611011) (TYPENAME 611002 . 611010) (punctuation 611001 . 611002) (TEMPLATE 610993 . 611001) (punctuation 610005 . 610006) (punctuation 610004 . 610005) (punctuation 610003 . 610004) (punctuation 610001 . 610002) (punctuation 609956 . 609957) (symbol 609952 . 609956) (punctuation 609950 . 609951) (punctuation 609949 . 609950) (punctuation 609948 . 609949) (CLASS 609943 . 609948) (punctuation 609942 . 609943) (TEMPLATE 609934 . 609942) (punctuation 608120 . 608121) (punctuation 608119 . 608120) (punctuation 608118 . 608119) (punctuation 608116 . 608117) (punctuation 608087 . 608088) (symbol 608083 . 608087) (punctuation 608081 . 608082) (punctuation 608080 . 608081) (punctuation 608079 . 608080) (CLASS 608074 . 608079) (punctuation 608073 . 608074) (TEMPLATE 608065 . 608073) (punctuation 603058 . 603059) (punctuation 602218 . 602219) (semantic-list 600500 . 601516) (symbol 600487 . 600495) (semantic-list 600484 . 600486) (symbol 600479 . 600484) (VOID 600474 . 600478) (semantic-list 598787 . 599318) (symbol 598774 . 598782) (CONST 598768 . 598773) (semantic-list 598765 . 598767) (symbol 598757 . 598765) (symbol 598747 . 598756) (semantic-list 596547 . 597171) (symbol 596534 . 596542) (CONST 596528 . 596533) (semantic-list 596525 . 596527) (symbol 596521 . 596525) (symbol 596511 . 596520) (semantic-list 594383 . 595019) (symbol 594370 . 594378) (CONST 594364 . 594369) (semantic-list 594361 . 594363) (symbol 594356 . 594361) (BOOL 594351 . 594355) (semantic-list 592689 . 592751) (symbol 592676 . 592684) (CONST 592670 . 592675) (semantic-list 592667 . 592669) (symbol 592662 . 592667) (punctuation 592660 . 592661) (symbol 592646 . 592660) (punctuation 592645 . 592646) (symbol 592630 . 592645) (semantic-list 592532 . 592588) (symbol 592519 . 592527) (semantic-list 592516 . 592518) (symbol 592511 . 592516) (punctuation 592509 . 592510) (symbol 592501 . 592509) (punctuation 592500 . 592501) (symbol 592485 . 592500) (semantic-list 590550 . 590585) (symbol 590537 . 590545) (semantic-list 590515 . 590536) (symbol 590499 . 590515) (punctuation 590497 . 590498) (symbol 590483 . 590497) (punctuation 590482 . 590483) (symbol 590467 . 590482) (STATIC 590460 . 590466) (symbol 590440 . 590455) (semantic-list 590343 . 590378) (symbol 590330 . 590338) (semantic-list 590314 . 590329) (symbol 590298 . 590314) (punctuation 590296 . 590297) (symbol 590288 . 590296) (punctuation 590287 . 590288) (symbol 590272 . 590287) (STATIC 590265 . 590271) (symbol 590245 . 590260) (semantic-list 588348 . 588404) (symbol 588335 . 588343) (CONST 588329 . 588334) (semantic-list 588326 . 588328) (symbol 588321 . 588326) (symbol 588298 . 588320) (semantic-list 587359 . 587413) (symbol 587346 . 587354) (CONST 587340 . 587345) (semantic-list 587337 . 587339) (symbol 587330 . 587337) (symbol 587307 . 587329) (semantic-list 586411 . 586442) (symbol 586398 . 586406) (CONST 586392 . 586397) (semantic-list 586389 . 586391) (symbol 586385 . 586389) (symbol 586362 . 586384) (semantic-list 586259 . 586308) (symbol 586246 . 586254) (semantic-list 586243 . 586245) (symbol 586239 . 586243) (symbol 586222 . 586238) (semantic-list 585348 . 585381) (symbol 585335 . 585343) (CONST 585329 . 585334) (semantic-list 585326 . 585328) (symbol 585320 . 585326) (symbol 585297 . 585319) (semantic-list 585194 . 585241) (symbol 585181 . 585189) (semantic-list 585178 . 585180) (symbol 585172 . 585178) (symbol 585155 . 585171) (semantic-list 584231 . 584324) (symbol 584218 . 584226) (CONST 584212 . 584217) (semantic-list 584209 . 584211) (symbol 584205 . 584209) (symbol 584190 . 584204) (semantic-list 583315 . 583345) (symbol 583302 . 583310) (CONST 583296 . 583301) (semantic-list 583293 . 583295) (symbol 583290 . 583293) (symbol 583275 . 583289) (semantic-list 583135 . 583222) (symbol 583122 . 583130) (semantic-list 583119 . 583121) (symbol 583116 . 583119) (symbol 583107 . 583115) (semantic-list 582252 . 582347) (symbol 582239 . 582247) (CONST 582233 . 582238) (semantic-list 582230 . 582232) (symbol 582224 . 582230) (symbol 582209 . 582223) (semantic-list 581355 . 581387) (symbol 581342 . 581350) (CONST 581336 . 581341) (semantic-list 581333 . 581335) (symbol 581328 . 581333) (symbol 581313 . 581327) (semantic-list 581169 . 581258) (symbol 581156 . 581164) (semantic-list 581153 . 581155) (symbol 581148 . 581153) (symbol 581139 . 581147) (punctuation 580167 . 580168) (punctuation 579145 . 579146) (punctuation 578168 . 578169) (punctuation 577818 . 577819) (punctuation 572030 . 572031) (number 572029 . 572030) (punctuation 572027 . 572028) (symbol 572009 . 572013) (punctuation 572008 . 572009) (punctuation 572007 . 572008) (punctuation 572006 . 572007) (INT 572003 . 572006) (punctuation 572001 . 572002) (symbol 571996 . 572001) (punctuation 571995 . 571996) (punctuation 571994 . 571995) (punctuation 571993 . 571994) (symbol 571979 . 571993) (punctuation 571978 . 571979) (punctuation 571977 . 571978) (symbol 571965 . 571977) (TYPENAME 571956 . 571964) (punctuation 571954 . 571955) (symbol 571942 . 571954) (punctuation 571941 . 571942) (symbol 571934 . 571941) (punctuation 571933 . 571934) (punctuation 571932 . 571933) (symbol 571929 . 571932) (symbol 571909 . 571911) (symbol 571903 . 571908) (punctuation 571902 . 571903) (punctuation 571901 . 571902) (punctuation 571900 . 571901) (symbol 571892 . 571900) (punctuation 571891 . 571892) (punctuation 571890 . 571891) (symbol 571878 . 571890) (TYPENAME 571869 . 571877) (punctuation 571867 . 571868) (symbol 571855 . 571867) (punctuation 571854 . 571855) (symbol 571847 . 571854) (punctuation 571846 . 571847) (punctuation 571845 . 571846) (symbol 571842 . 571845) (punctuation 571823 . 571824) (symbol 571814 . 571823) (punctuation 571813 . 571814) (punctuation 571812 . 571813) (symbol 571809 . 571812) (TYPENAME 571800 . 571808) (punctuation 571798 . 571799) (symbol 571786 . 571798) (CLASS 571780 . 571785) (punctuation 571779 . 571780) (TEMPLATE 571771 . 571779) (punctuation 567990 . 567991) (number 567989 . 567990) (punctuation 567987 . 567988) (symbol 567969 . 567973) (punctuation 567968 . 567969) (punctuation 567967 . 567968) (punctuation 567966 . 567967) (INT 567963 . 567966) (punctuation 567961 . 567962) (symbol 567956 . 567961) (punctuation 567955 . 567956) (punctuation 567954 . 567955) (punctuation 567953 . 567954) (symbol 567939 . 567953) (punctuation 567938 . 567939) (punctuation 567937 . 567938) (symbol 567925 . 567937) (TYPENAME 567916 . 567924) (punctuation 567914 . 567915) (symbol 567902 . 567914) (punctuation 567901 . 567902) (symbol 567894 . 567901) (punctuation 567893 . 567894) (punctuation 567892 . 567893) (symbol 567889 . 567892) (symbol 567869 . 567871) (symbol 567863 . 567868) (punctuation 567862 . 567863) (punctuation 567861 . 567862) (punctuation 567860 . 567861) (symbol 567852 . 567860) (punctuation 567851 . 567852) (punctuation 567850 . 567851) (symbol 567838 . 567850) (TYPENAME 567829 . 567837) (punctuation 567827 . 567828) (symbol 567815 . 567827) (punctuation 567814 . 567815) (symbol 567807 . 567814) (punctuation 567806 . 567807) (punctuation 567805 . 567806) (symbol 567802 . 567805) (punctuation 567783 . 567784) (symbol 567774 . 567783) (punctuation 567773 . 567774) (punctuation 567772 . 567773) (symbol 567769 . 567772) (TYPENAME 567760 . 567768) (punctuation 567758 . 567759) (symbol 567746 . 567758) (CLASS 567740 . 567745) (punctuation 567739 . 567740) (TEMPLATE 567731 . 567739) (punctuation 562754 . 562755) (number 562753 . 562754) (punctuation 562751 . 562752) (symbol 562746 . 562750) (punctuation 562745 . 562746) (punctuation 562744 . 562745) (punctuation 562743 . 562744) (INT 562740 . 562743) (punctuation 562738 . 562739) (symbol 562733 . 562738) (punctuation 562732 . 562733) (punctuation 562731 . 562732) (punctuation 562730 . 562731) (symbol 562721 . 562730) (punctuation 562719 . 562720) (symbol 562707 . 562719) (punctuation 562706 . 562707) (symbol 562692 . 562706) (punctuation 562691 . 562692) (punctuation 562690 . 562691) (symbol 562687 . 562690) (punctuation 562668 . 562669) (symbol 562659 . 562668) (punctuation 562658 . 562659) (punctuation 562657 . 562658) (symbol 562654 . 562657) (TYPENAME 562645 . 562653) (punctuation 562643 . 562644) (symbol 562634 . 562643) (CLASS 562628 . 562633) (punctuation 562627 . 562628) (TEMPLATE 562619 . 562627) (punctuation 560275 . 560276) (number 560274 . 560275) (punctuation 560272 . 560273) (symbol 560267 . 560271) (punctuation 560266 . 560267) (punctuation 560265 . 560266) (punctuation 560264 . 560265) (INT 560261 . 560264) (punctuation 560259 . 560260) (symbol 560254 . 560259) (punctuation 560253 . 560254) (punctuation 560252 . 560253) (punctuation 560251 . 560252) (symbol 560242 . 560251) (punctuation 560240 . 560241) (symbol 560228 . 560240) (punctuation 560227 . 560228) (symbol 560213 . 560227) (punctuation 560212 . 560213) (punctuation 560211 . 560212) (symbol 560208 . 560211) (punctuation 560189 . 560190) (symbol 560180 . 560189) (punctuation 560179 . 560180) (punctuation 560178 . 560179) (symbol 560175 . 560178) (TYPENAME 560166 . 560174) (punctuation 560164 . 560165) (symbol 560155 . 560164) (CLASS 560149 . 560154) (punctuation 560148 . 560149) (TEMPLATE 560140 . 560148) (OPERATOR 542895 . 542903) (punctuation 542889 . 542890) (number 542887 . 542888) (punctuation 542885 . 542886) (symbol 542880 . 542884) (punctuation 542879 . 542880) (punctuation 542878 . 542879) (punctuation 542877 . 542878) (INT 542873 . 542876) (punctuation 542871 . 542872) (symbol 542846 . 542851) (punctuation 542845 . 542846) (punctuation 542844 . 542845) (punctuation 542843 . 542844) (symbol 542834 . 542843) (punctuation 542832 . 542833) (punctuation 542831 . 542832) (symbol 542819 . 542831) (CONST 542813 . 542818) (punctuation 542811 . 542812) (symbol 542790 . 542811) (punctuation 542789 . 542790) (punctuation 542788 . 542789) (symbol 542782 . 542788) (punctuation 542781 . 542782) (symbol 542770 . 542781) (punctuation 542769 . 542770) (punctuation 542768 . 542769) (symbol 542762 . 542768) (symbol 542758 . 542761) (symbol 542538 . 542543) (punctuation 542537 . 542538) (punctuation 542536 . 542537) (punctuation 542535 . 542536) (punctuation 542534 . 542535) (symbol 542524 . 542534) (punctuation 542523 . 542524) (punctuation 542522 . 542523) (symbol 542514 . 542522) (TYPENAME 542505 . 542513) (punctuation 542504 . 542505) (symbol 542488 . 542504) (punctuation 542487 . 542488) (punctuation 542486 . 542487) (symbol 542483 . 542486) (punctuation 542481 . 542482) (symbol 542472 . 542481) (punctuation 542471 . 542472) (symbol 542464 . 542471) (punctuation 542463 . 542464) (punctuation 542462 . 542463) (symbol 542459 . 542462) (symbol 542455 . 542458) (symbol 542451 . 542454) (symbol 542351 . 542356) (punctuation 542350 . 542351) (punctuation 542349 . 542350) (punctuation 542348 . 542349) (symbol 542339 . 542348) (punctuation 542338 . 542339) (symbol 542325 . 542338) (punctuation 542324 . 542325) (punctuation 542323 . 542324) (symbol 542317 . 542323) (symbol 542313 . 542316) (symbol 542290 . 542293) (symbol 542284 . 542289) (punctuation 542283 . 542284) (punctuation 542282 . 542283) (punctuation 542281 . 542282) (symbol 542271 . 542281) (punctuation 542270 . 542271) (punctuation 542269 . 542270) (symbol 542261 . 542269) (TYPENAME 542252 . 542260) (punctuation 542250 . 542251) (symbol 542241 . 542250) (punctuation 542240 . 542241) (symbol 542233 . 542240) (punctuation 542232 . 542233) (punctuation 542231 . 542232) (symbol 542228 . 542231) (symbol 542224 . 542227) (symbol 542201 . 542204) (symbol 542195 . 542200) (punctuation 542194 . 542195) (punctuation 542193 . 542194) (punctuation 542192 . 542193) (punctuation 542191 . 542192) (symbol 542181 . 542191) (punctuation 542180 . 542181) (symbol 542172 . 542180) (punctuation 542171 . 542172) (punctuation 542170 . 542171) (symbol 542164 . 542170) (punctuation 542162 . 542163) (symbol 542153 . 542162) (punctuation 542152 . 542153) (symbol 542145 . 542152) (punctuation 542144 . 542145) (punctuation 542143 . 542144) (symbol 542140 . 542143) (symbol 542136 . 542139) (symbol 542113 . 542116) (symbol 542107 . 542112) (punctuation 542106 . 542107) (punctuation 542105 . 542106) (punctuation 542104 . 542105) (symbol 542095 . 542104) (punctuation 542094 . 542095) (symbol 542084 . 542094) (punctuation 542083 . 542084) (punctuation 542082 . 542083) (symbol 542079 . 542082) (symbol 542075 . 542078) (punctuation 542054 . 542055) (symbol 542044 . 542053) (punctuation 542043 . 542044) (punctuation 542042 . 542043) (symbol 542039 . 542042) (TYPENAME 542030 . 542038) (punctuation 542028 . 542029) (symbol 542019 . 542028) (TYPENAME 542010 . 542018) (punctuation 542008 . 542009) (TEMPLATE 541999 . 542007) (punctuation 540560 . 540561) (number 540559 . 540560) (punctuation 540557 . 540558) (symbol 540552 . 540556) (punctuation 540551 . 540552) (punctuation 540550 . 540551) (punctuation 540549 . 540550) (INT 540546 . 540549) (punctuation 540544 . 540545) (symbol 540539 . 540544) (punctuation 540538 . 540539) (punctuation 540537 . 540538) (punctuation 540536 . 540537) (symbol 540532 . 540536) (punctuation 540531 . 540532) (punctuation 540530 . 540531) (punctuation 540529 . 540530) (symbol 540516 . 540529) (punctuation 540515 . 540516) (symbol 540499 . 540515) (punctuation 540498 . 540499) (punctuation 540497 . 540498) (symbol 540494 . 540497) (TYPENAME 540485 . 540493) (punctuation 540484 . 540485) (symbol 540476 . 540484) (punctuation 540475 . 540476) (punctuation 540474 . 540475) (symbol 540471 . 540474) (symbol 540450 . 540453) (symbol 540444 . 540449) (punctuation 540443 . 540444) (punctuation 540442 . 540443) (punctuation 540441 . 540442) (symbol 540428 . 540441) (punctuation 540427 . 540428) (symbol 540415 . 540427) (punctuation 540414 . 540415) (punctuation 540413 . 540414) (symbol 540410 . 540413) (punctuation 540391 . 540392) (symbol 540382 . 540391) (punctuation 540381 . 540382) (punctuation 540380 . 540381) (symbol 540377 . 540380) (TYPENAME 540368 . 540376) (punctuation 540366 . 540367) (symbol 540353 . 540366) (TYPENAME 540344 . 540352) (punctuation 540343 . 540344) (TEMPLATE 540335 . 540343) (punctuation 540114 . 540115) (number 540113 . 540114) (punctuation 540111 . 540112) (symbol 540106 . 540110) (punctuation 540105 . 540106) (punctuation 540104 . 540105) (punctuation 540103 . 540104) (INT 540100 . 540103) (punctuation 540098 . 540099) (symbol 540093 . 540098) (punctuation 540092 . 540093) (punctuation 540091 . 540092) (punctuation 540090 . 540091) (symbol 540077 . 540090) (punctuation 540076 . 540077) (symbol 540064 . 540076) (punctuation 540063 . 540064) (punctuation 540062 . 540063) (symbol 540059 . 540062) (punctuation 540040 . 540041) (symbol 540031 . 540040) (punctuation 540030 . 540031) (punctuation 540029 . 540030) (symbol 540026 . 540029) (TYPENAME 540017 . 540025) (punctuation 540015 . 540016) (symbol 540002 . 540015) (TYPENAME 539993 . 540001) (punctuation 539992 . 539993) (TEMPLATE 539984 . 539992) (semantic-list 539005 . 539007) (TEMPLATE 538976 . 538984) (punctuation 538975 . 538976) (semantic-list 538973 . 538975) (punctuation 538929 . 538930) (punctuation 538928 . 538929) (symbol 538919 . 538927) (CONST 538913 . 538918) (semantic-list 538910 . 538912) (symbol 538907 . 538910) (symbol 538902 . 538906) (symbol 538892 . 538901) (punctuation 538886 . 538887) (number 538885 . 538886) (punctuation 538883 . 538884) (symbol 538878 . 538882) (punctuation 538877 . 538878) (punctuation 538876 . 538877) (punctuation 538875 . 538876) (INT 538872 . 538875) (punctuation 538870 . 538871) (symbol 538865 . 538870) (punctuation 538864 . 538865) (punctuation 538863 . 538864) (punctuation 538862 . 538863) (symbol 538851 . 538862) (punctuation 538850 . 538851) (symbol 538840 . 538850) (punctuation 538839 . 538840) (punctuation 538838 . 538839) (symbol 538835 . 538838) (punctuation 538816 . 538817) (symbol 538807 . 538816) (punctuation 538806 . 538807) (punctuation 538805 . 538806) (symbol 538802 . 538805) (TYPENAME 538793 . 538801) (punctuation 538791 . 538792) (symbol 538780 . 538791) (TYPENAME 538771 . 538779) (punctuation 538770 . 538771) (TEMPLATE 538762 . 538770) (semantic-list 538586 . 538588) (TEMPLATE 538557 . 538565) (punctuation 538556 . 538557) (semantic-list 538554 . 538556) (punctuation 538516 . 538517) (punctuation 538515 . 538516) (symbol 538506 . 538514) (semantic-list 538503 . 538505) (symbol 538500 . 538503) (symbol 538495 . 538499) (punctuation 538489 . 538490) (number 538488 . 538489) (punctuation 538486 . 538487) (symbol 538481 . 538485) (punctuation 538480 . 538481) (punctuation 538479 . 538480) (punctuation 538478 . 538479) (INT 538475 . 538478) (punctuation 538473 . 538474) (symbol 538468 . 538473) (punctuation 538467 . 538468) (punctuation 538466 . 538467) (punctuation 538465 . 538466) (symbol 538454 . 538465) (punctuation 538453 . 538454) (symbol 538443 . 538453) (punctuation 538442 . 538443) (punctuation 538441 . 538442) (symbol 538438 . 538441) (punctuation 538419 . 538420) (symbol 538410 . 538419) (punctuation 538409 . 538410) (punctuation 538408 . 538409) (symbol 538405 . 538408) (TYPENAME 538396 . 538404) (punctuation 538394 . 538395) (symbol 538383 . 538394) (TYPENAME 538374 . 538382) (punctuation 538373 . 538374) (TEMPLATE 538365 . 538373) (semantic-list 537240 . 537269) (punctuation 537227 . 537228) (semantic-list 537225 . 537227) (punctuation 537181 . 537182) (punctuation 537180 . 537181) (symbol 537171 . 537179) (CONST 537165 . 537170) (semantic-list 537162 . 537164) (symbol 537155 . 537162) (symbol 537150 . 537154) (symbol 537140 . 537149) (punctuation 537134 . 537135) (number 537133 . 537134) (punctuation 537131 . 537132) (symbol 537126 . 537130) (punctuation 537125 . 537126) (punctuation 537124 . 537125) (punctuation 537123 . 537124) (INT 537120 . 537123) (punctuation 537118 . 537119) (symbol 537113 . 537118) (punctuation 537112 . 537113) (punctuation 537111 . 537112) (punctuation 537110 . 537111) (symbol 537106 . 537110) (punctuation 537105 . 537106) (punctuation 537104 . 537105) (punctuation 537103 . 537104) (symbol 537092 . 537103) (punctuation 537091 . 537092) (symbol 537077 . 537091) (punctuation 537076 . 537077) (punctuation 537075 . 537076) (symbol 537072 . 537075) (TYPENAME 537063 . 537071) (punctuation 537062 . 537063) (symbol 537054 . 537062) (punctuation 537053 . 537054) (punctuation 537052 . 537053) (symbol 537049 . 537052) (symbol 537028 . 537031) (symbol 537022 . 537027) (punctuation 537021 . 537022) (punctuation 537020 . 537021) (punctuation 537019 . 537020) (symbol 537008 . 537019) (punctuation 537007 . 537008) (symbol 536997 . 537007) (punctuation 536996 . 536997) (punctuation 536995 . 536996) (symbol 536992 . 536995) (punctuation 536973 . 536974) (symbol 536964 . 536973) (punctuation 536963 . 536964) (punctuation 536962 . 536963) (symbol 536959 . 536962) (TYPENAME 536950 . 536958) (punctuation 536948 . 536949) (symbol 536937 . 536948) (TYPENAME 536928 . 536936) (punctuation 536927 . 536928) (TEMPLATE 536919 . 536927) (semantic-list 536678 . 536707) (punctuation 536665 . 536666) (semantic-list 536663 . 536665) (punctuation 536625 . 536626) (punctuation 536624 . 536625) (symbol 536615 . 536623) (semantic-list 536612 . 536614) (symbol 536605 . 536612) (symbol 536600 . 536604) (punctuation 536594 . 536595) (number 536593 . 536594) (punctuation 536591 . 536592) (symbol 536586 . 536590) (punctuation 536585 . 536586) (punctuation 536584 . 536585) (punctuation 536583 . 536584) (INT 536580 . 536583) (punctuation 536578 . 536579) (symbol 536573 . 536578) (punctuation 536572 . 536573) (punctuation 536571 . 536572) (punctuation 536570 . 536571) (symbol 536559 . 536570) (punctuation 536558 . 536559) (symbol 536548 . 536558) (punctuation 536547 . 536548) (punctuation 536546 . 536547) (symbol 536543 . 536546) (punctuation 536524 . 536525) (symbol 536515 . 536524) (punctuation 536514 . 536515) (punctuation 536513 . 536514) (symbol 536510 . 536513) (TYPENAME 536501 . 536509) (punctuation 536499 . 536500) (symbol 536488 . 536499) (TYPENAME 536479 . 536487) (punctuation 536478 . 536479) (TEMPLATE 536470 . 536478) (semantic-list 535353 . 535448) (semantic-list 535315 . 535329) (symbol 535309 . 535315) (punctuation 535307 . 535308) (symbol 535297 . 535306) (punctuation 535291 . 535292) (number 535290 . 535291) (punctuation 535288 . 535289) (punctuation 535286 . 535287) (INT 535283 . 535286) (punctuation 535264 . 535265) (symbol 535259 . 535264) (punctuation 535258 . 535259) (punctuation 535257 . 535258) (punctuation 535256 . 535257) (symbol 535247 . 535256) (punctuation 535245 . 535246) (symbol 535233 . 535245) (punctuation 535232 . 535233) (symbol 535219 . 535232) (punctuation 535218 . 535219) (punctuation 535217 . 535218) (symbol 535211 . 535217) (symbol 535190 . 535193) (symbol 535184 . 535189) (punctuation 535183 . 535184) (punctuation 535182 . 535183) (punctuation 535181 . 535182) (symbol 535172 . 535181) (punctuation 535171 . 535172) (symbol 535158 . 535171) (punctuation 535157 . 535158) (punctuation 535156 . 535157) (symbol 535150 . 535156) (symbol 535146 . 535149) (punctuation 535127 . 535128) (symbol 535115 . 535126) (punctuation 535114 . 535115) (punctuation 535113 . 535114) (symbol 535107 . 535113) (punctuation 535092 . 535093) (symbol 535083 . 535092) (TYPENAME 535074 . 535082) (punctuation 535073 . 535074) (TEMPLATE 535065 . 535073) (semantic-list 533490 . 533607) (semantic-list 533464 . 533466) (symbol 533461 . 533464) (symbol 533451 . 533460) (punctuation 533445 . 533446) (number 533444 . 533445) (punctuation 533442 . 533443) (punctuation 533440 . 533441) (INT 533437 . 533440) (punctuation 533402 . 533403) (symbol 533397 . 533402) (punctuation 533396 . 533397) (punctuation 533395 . 533396) (punctuation 533394 . 533395) (symbol 533385 . 533394) (punctuation 533383 . 533384) (symbol 533371 . 533383) (punctuation 533370 . 533371) (symbol 533345 . 533370) (punctuation 533344 . 533345) (punctuation 533343 . 533344) (symbol 533337 . 533343) (symbol 533300 . 533303) (symbol 533294 . 533299) (punctuation 533293 . 533294) (punctuation 533292 . 533293) (punctuation 533291 . 533292) (symbol 533282 . 533291) (punctuation 533280 . 533281) (symbol 533268 . 533280) (punctuation 533267 . 533268) (symbol 533260 . 533267) (punctuation 533259 . 533260) (punctuation 533258 . 533259) (symbol 533255 . 533258) (symbol 533251 . 533254) (punctuation 533250 . 533251) (symbol 533239 . 533250) (punctuation 533238 . 533239) (punctuation 533237 . 533238) (symbol 533231 . 533237) (punctuation 533216 . 533217) (punctuation 533215 . 533216) (symbol 533204 . 533215) (punctuation 533203 . 533204) (symbol 533194 . 533203) (punctuation 533193 . 533194) (punctuation 533192 . 533193) (symbol 533186 . 533192) (punctuation 533184 . 533185) (symbol 533174 . 533183) (TYPENAME 533165 . 533173) (punctuation 533163 . 533164) (symbol 533152 . 533163) (TYPENAME 533143 . 533151) (punctuation 533142 . 533143) (TEMPLATE 533134 . 533142) (semantic-list 531213 . 531356) (semantic-list 531187 . 531189) (symbol 531184 . 531187) (symbol 531174 . 531183) (punctuation 531168 . 531169) (number 531167 . 531168) (punctuation 531165 . 531166) (punctuation 531163 . 531164) (INT 531160 . 531163) (punctuation 531141 . 531142) (symbol 531136 . 531141) (punctuation 531135 . 531136) (punctuation 531134 . 531135) (punctuation 531133 . 531134) (symbol 531124 . 531133) (punctuation 531122 . 531123) (symbol 531110 . 531122) (punctuation 531109 . 531110) (symbol 531084 . 531109) (punctuation 531083 . 531084) (punctuation 531082 . 531083) (symbol 531076 . 531082) (symbol 531072 . 531075) (symbol 531051 . 531054) (symbol 531045 . 531050) (punctuation 531044 . 531045) (punctuation 531043 . 531044) (punctuation 531042 . 531043) (symbol 531033 . 531042) (punctuation 531031 . 531032) (symbol 531019 . 531031) (punctuation 531018 . 531019) (symbol 531005 . 531018) (punctuation 531004 . 531005) (punctuation 531003 . 531004) (symbol 530997 . 531003) (symbol 530976 . 530979) (symbol 530970 . 530975) (punctuation 530969 . 530970) (punctuation 530968 . 530969) (punctuation 530967 . 530968) (symbol 530958 . 530967) (punctuation 530957 . 530958) (symbol 530944 . 530957) (punctuation 530943 . 530944) (punctuation 530942 . 530943) (symbol 530936 . 530942) (symbol 530932 . 530935) (punctuation 530913 . 530914) (symbol 530901 . 530912) (punctuation 530900 . 530901) (punctuation 530899 . 530900) (symbol 530893 . 530899) (punctuation 530878 . 530879) (punctuation 530877 . 530878) (symbol 530866 . 530877) (punctuation 530865 . 530866) (symbol 530856 . 530865) (punctuation 530855 . 530856) (punctuation 530854 . 530855) (symbol 530848 . 530854) (punctuation 530846 . 530847) (symbol 530836 . 530845) (TYPENAME 530827 . 530835) (punctuation 530825 . 530826) (symbol 530814 . 530825) (TYPENAME 530805 . 530813) (punctuation 530804 . 530805) (TEMPLATE 530796 . 530804) (punctuation 529125 . 529126) (number 529124 . 529125) (punctuation 529122 . 529123) (punctuation 529120 . 529121) (INT 529117 . 529120) (punctuation 529115 . 529116) (symbol 529110 . 529115) (punctuation 529109 . 529110) (punctuation 529108 . 529109) (punctuation 529107 . 529108) (symbol 529094 . 529107) (punctuation 529093 . 529094) (symbol 529080 . 529093) (punctuation 529079 . 529080) (punctuation 529078 . 529079) (symbol 529072 . 529078) (symbol 529051 . 529054) (symbol 529045 . 529050) (punctuation 529044 . 529045) (punctuation 529043 . 529044) (punctuation 529042 . 529043) (symbol 529032 . 529042) (punctuation 529030 . 529031) (symbol 529017 . 529030) (punctuation 529016 . 529017) (symbol 529009 . 529016) (punctuation 529008 . 529009) (punctuation 529007 . 529008) (symbol 529004 . 529007) (symbol 529000 . 529003) (punctuation 528981 . 528982) (symbol 528970 . 528981) (punctuation 528969 . 528970) (punctuation 528968 . 528969) (symbol 528962 . 528968) (punctuation 528960 . 528961) (symbol 528947 . 528960) (TYPENAME 528938 . 528946) (punctuation 528937 . 528938) (TEMPLATE 528929 . 528937) (punctuation 528472 . 528473) (number 528471 . 528472) (punctuation 528469 . 528470) (punctuation 528467 . 528468) (INT 528464 . 528467) (punctuation 528445 . 528446) (symbol 528440 . 528445) (punctuation 528439 . 528440) (punctuation 528438 . 528439) (punctuation 528437 . 528438) (symbol 528425 . 528437) (punctuation 528423 . 528424) (symbol 528419 . 528423) (punctuation 528418 . 528419) (punctuation 528417 . 528418) (punctuation 528416 . 528417) (symbol 528403 . 528416) (punctuation 528402 . 528403) (symbol 528390 . 528402) (punctuation 528389 . 528390) (punctuation 528388 . 528389) (symbol 528385 . 528388) (TYPENAME 528376 . 528384) (punctuation 528375 . 528376) (symbol 528368 . 528375) (punctuation 528367 . 528368) (punctuation 528366 . 528367) (symbol 528363 . 528366) (punctuation 528344 . 528345) (symbol 528333 . 528344) (punctuation 528332 . 528333) (punctuation 528331 . 528332) (symbol 528325 . 528331) (punctuation 528323 . 528324) (symbol 528310 . 528323) (TYPENAME 528301 . 528309) (punctuation 528300 . 528301) (TEMPLATE 528292 . 528300) (semantic-list 526986 . 527061) (symbol 526973 . 526981) (CONST 526967 . 526972) (semantic-list 526932 . 526966) (symbol 526920 . 526932) (punctuation 526918 . 526919) (symbol 526904 . 526918) (CONST 526898 . 526903) (symbol 526888 . 526897) (semantic-list 526748 . 526823) (symbol 526735 . 526743) (semantic-list 526706 . 526734) (symbol 526694 . 526706) (punctuation 526692 . 526693) (symbol 526678 . 526692) (semantic-list 526532 . 526613) (symbol 526519 . 526527) (CONST 526513 . 526518) (semantic-list 526475 . 526512) (symbol 526463 . 526475) (punctuation 526461 . 526462) (symbol 526444 . 526461) (CONST 526438 . 526443) (symbol 526428 . 526437) (semantic-list 526288 . 526369) (symbol 526275 . 526283) (semantic-list 526243 . 526274) (symbol 526231 . 526243) (punctuation 526229 . 526230) (symbol 526212 . 526229) (semantic-list 526074 . 526153) (symbol 526061 . 526069) (CONST 526055 . 526060) (semantic-list 526018 . 526054) (symbol 526006 . 526018) (punctuation 526004 . 526005) (symbol 525988 . 526004) (CONST 525982 . 525987) (symbol 525972 . 525981) (semantic-list 525835 . 525914) (symbol 525822 . 525830) (semantic-list 525791 . 525821) (symbol 525779 . 525791) (punctuation 525777 . 525778) (symbol 525761 . 525777) (semantic-list 525638 . 525703) (symbol 525625 . 525633) (CONST 525619 . 525624) (semantic-list 525589 . 525618) (symbol 525577 . 525589) (punctuation 525575 . 525576) (symbol 525566 . 525575) (CONST 525560 . 525565) (symbol 525550 . 525559) (semantic-list 525434 . 525499) (symbol 525421 . 525429) (semantic-list 525397 . 525420) (symbol 525385 . 525397) (punctuation 525383 . 525384) (symbol 525374 . 525383) (semantic-list 525261 . 525323) (symbol 525248 . 525256) (CONST 525242 . 525247) (semantic-list 525213 . 525241) (symbol 525201 . 525213) (punctuation 525199 . 525200) (symbol 525191 . 525199) (CONST 525185 . 525190) (symbol 525175 . 525184) (semantic-list 525063 . 525125) (symbol 525050 . 525058) (semantic-list 525027 . 525049) (symbol 525015 . 525027) (punctuation 525013 . 525014) (symbol 525005 . 525013) (semantic-list 524895 . 524955) (symbol 524882 . 524890) (CONST 524876 . 524881) (semantic-list 524848 . 524875) (symbol 524836 . 524848) (punctuation 524834 . 524835) (symbol 524827 . 524834) (CONST 524821 . 524826) (symbol 524811 . 524820) (semantic-list 524702 . 524762) (symbol 524689 . 524697) (semantic-list 524667 . 524688) (symbol 524655 . 524667) (punctuation 524653 . 524654) (symbol 524646 . 524653) (semantic-list 524535 . 524597) (symbol 524522 . 524530) (CONST 524516 . 524521) (semantic-list 524487 . 524515) (symbol 524475 . 524487) (punctuation 524473 . 524474) (symbol 524465 . 524473) (CONST 524459 . 524464) (symbol 524449 . 524458) (semantic-list 524337 . 524399) (symbol 524324 . 524332) (semantic-list 524301 . 524323) (symbol 524289 . 524301) (punctuation 524287 . 524288) (symbol 524279 . 524287) (semantic-list 523807 . 523837) (symbol 523794 . 523802) (CONST 523788 . 523793) (semantic-list 523785 . 523787) (symbol 523778 . 523785) (OPERATOR 523769 . 523777) (symbol 523759 . 523768) (semantic-list 523104 . 523156) (symbol 523091 . 523099) (CONST 523085 . 523090) (semantic-list 523082 . 523084) (symbol 523070 . 523082) (BOOL 523065 . 523069) (symbol 523055 . 523064) (semantic-list 522249 . 522298) (symbol 522236 . 522244) (CONST 522230 . 522235) (semantic-list 522227 . 522229) (symbol 522218 . 522227) (BOOL 522213 . 522217) (symbol 522203 . 522212) (semantic-list 521714 . 521762) (symbol 521701 . 521709) (CONST 521695 . 521700) (semantic-list 521692 . 521694) (symbol 521684 . 521692) (BOOL 521679 . 521683) (symbol 521669 . 521678) (semantic-list 521182 . 521231) (symbol 521169 . 521177) (CONST 521163 . 521168) (semantic-list 521160 . 521162) (symbol 521151 . 521160) (BOOL 521146 . 521150) (symbol 521136 . 521145) (semantic-list 520638 . 520693) (symbol 520625 . 520633) (CONST 520619 . 520624) (semantic-list 520616 . 520618) (symbol 520601 . 520616) (BOOL 520596 . 520600) (symbol 520586 . 520595) (semantic-list 519762 . 519820) (symbol 519749 . 519757) (CONST 519743 . 519748) (semantic-list 519740 . 519742) (symbol 519722 . 519740) (BOOL 519717 . 519721) (symbol 519707 . 519716) (semantic-list 518809 . 518904) (symbol 518796 . 518804) (CONST 518790 . 518795) (semantic-list 518787 . 518789) (symbol 518770 . 518787) (BOOL 518765 . 518769) (symbol 518755 . 518764) (semantic-list 517904 . 517968) (symbol 517891 . 517899) (CONST 517885 . 517890) (semantic-list 517882 . 517884) (symbol 517873 . 517882) (BOOL 517868 . 517872) (symbol 517858 . 517867) (semantic-list 516960 . 517010) (symbol 516947 . 516955) (CONST 516941 . 516946) (semantic-list 516938 . 516940) (symbol 516928 . 516938) (BOOL 516923 . 516927) (symbol 516913 . 516922) (semantic-list 516420 . 516467) (symbol 516407 . 516415) (CONST 516401 . 516406) (semantic-list 516398 . 516400) (symbol 516391 . 516398) (BOOL 516386 . 516390) (symbol 516376 . 516385) (semantic-list 515900 . 515949) (symbol 515887 . 515895) (CONST 515881 . 515886) (semantic-list 515878 . 515880) (symbol 515865 . 515878) (BOOL 515860 . 515864) (symbol 515850 . 515859) (semantic-list 515085 . 515164) (symbol 515072 . 515080) (CONST 515066 . 515071) (semantic-list 515063 . 515065) (symbol 515051 . 515063) (BOOL 515046 . 515050) (symbol 515036 . 515045) (semantic-list 514138 . 514168) (symbol 514125 . 514133) (CONST 514119 . 514124) (semantic-list 514116 . 514118) (symbol 514112 . 514116) (symbol 514104 . 514111) (symbol 514094 . 514103) (punctuation 512488 . 512489) (punctuation 512487 . 512488) (semantic-list 510142 . 510210) (symbol 510129 . 510137) (semantic-list 510126 . 510128) (symbol 510116 . 510126) (punctuation 510115 . 510116) (semantic-list 509184 . 509202) (punctuation 509183 . 509184) (OPERATOR 509175 . 509183) (punctuation 509173 . 509174) (symbol 509163 . 509173) (semantic-list 508110 . 508124) (punctuation 508092 . 508093) (symbol 508075 . 508083) (semantic-list 508054 . 508074) (symbol 508044 . 508054) (punctuation 508066 . 508067) (punctuation 502245 . 502246) (number 502244 . 502245) (punctuation 502242 . 502243) (symbol 502237 . 502241) (punctuation 502236 . 502237) (punctuation 502235 . 502236) (punctuation 502234 . 502235) (INT 502231 . 502234) (punctuation 502229 . 502230) (symbol 502224 . 502229) (punctuation 502223 . 502224) (punctuation 502222 . 502223) (punctuation 502221 . 502222) (symbol 502207 . 502221) (punctuation 502206 . 502207) (punctuation 502205 . 502206) (symbol 502193 . 502205) (TYPENAME 502184 . 502192) (punctuation 502182 . 502183) (symbol 502175 . 502182) (punctuation 502174 . 502175) (symbol 502167 . 502174) (punctuation 502166 . 502167) (punctuation 502165 . 502166) (symbol 502162 . 502165) (symbol 502142 . 502144) (symbol 502136 . 502141) (punctuation 502135 . 502136) (punctuation 502134 . 502135) (punctuation 502133 . 502134) (symbol 502125 . 502133) (punctuation 502124 . 502125) (punctuation 502123 . 502124) (symbol 502111 . 502123) (TYPENAME 502102 . 502110) (punctuation 502100 . 502101) (symbol 502093 . 502100) (punctuation 502092 . 502093) (symbol 502085 . 502092) (punctuation 502084 . 502085) (punctuation 502083 . 502084) (symbol 502080 . 502083) (punctuation 502061 . 502062) (symbol 502052 . 502061) (punctuation 502051 . 502052) (punctuation 502050 . 502051) (symbol 502047 . 502050) (TYPENAME 502038 . 502046) (punctuation 502036 . 502037) (symbol 502029 . 502036) (CLASS 502023 . 502028) (punctuation 502022 . 502023) (TEMPLATE 502014 . 502022) (symbol 498225 . 498239) (symbol 496496 . 496510) (punctuation 493230 . 493231) (punctuation 493229 . 493230) (punctuation 487535 . 487536) (number 487534 . 487535) (punctuation 487532 . 487533) (punctuation 487530 . 487531) (INT 487527 . 487530) (punctuation 487525 . 487526) (symbol 487520 . 487525) (punctuation 487519 . 487520) (punctuation 487518 . 487519) (punctuation 487517 . 487518) (symbol 487504 . 487517) (punctuation 487502 . 487503) (symbol 487492 . 487502) (punctuation 487491 . 487492) (symbol 487484 . 487491) (punctuation 487483 . 487484) (punctuation 487482 . 487483) (symbol 487479 . 487482) (symbol 487475 . 487478) (symbol 487471 . 487474) (symbol 487465 . 487470) (punctuation 487464 . 487465) (punctuation 487463 . 487464) (punctuation 487462 . 487463) (symbol 487449 . 487462) (punctuation 487448 . 487449) (symbol 487435 . 487448) (punctuation 487434 . 487435) (punctuation 487433 . 487434) (symbol 487427 . 487433) (punctuation 487407 . 487408) (symbol 487396 . 487407) (punctuation 487395 . 487396) (punctuation 487394 . 487395) (symbol 487388 . 487394) (punctuation 487372 . 487373) (symbol 487359 . 487372) (TYPENAME 487350 . 487358) (punctuation 487349 . 487350) (TEMPLATE 487340 . 487348) (semantic-list 486019 . 486173) (semantic-list 485978 . 486001) (symbol 485968 . 485978) (punctuation 485995 . 485996) (punctuation 485962 . 485963) (number 485961 . 485962) (punctuation 485959 . 485960) (punctuation 485957 . 485958) (INT 485954 . 485957) (punctuation 485952 . 485953) (symbol 485947 . 485952) (punctuation 485946 . 485947) (punctuation 485945 . 485946) (punctuation 485944 . 485945) (symbol 485943 . 485944) (punctuation 485941 . 485942) (symbol 485929 . 485941) (punctuation 485928 . 485929) (symbol 485910 . 485928) (punctuation 485909 . 485910) (punctuation 485908 . 485909) (symbol 485902 . 485908) (symbol 485898 . 485901) (symbol 485892 . 485897) (punctuation 485891 . 485892) (punctuation 485890 . 485891) (punctuation 485889 . 485890) (symbol 485888 . 485889) (punctuation 485887 . 485888) (symbol 485874 . 485887) (punctuation 485873 . 485874) (punctuation 485872 . 485873) (symbol 485866 . 485872) (symbol 485862 . 485865) (punctuation 485842 . 485843) (symbol 485831 . 485842) (punctuation 485830 . 485831) (punctuation 485829 . 485830) (symbol 485823 . 485829) (punctuation 485807 . 485808) (punctuation 485806 . 485807) (symbol 485792 . 485806) (punctuation 485791 . 485792) (symbol 485782 . 485791) (punctuation 485781 . 485782) (punctuation 485780 . 485781) (symbol 485774 . 485780) (punctuation 485772 . 485773) (symbol 485770 . 485771) (TYPENAME 485761 . 485769) (punctuation 485745 . 485746) (symbol 485731 . 485745) (TYPENAME 485722 . 485730) (punctuation 485721 . 485722) (TEMPLATE 485712 . 485720) (punctuation 482906 . 482907) (symbol 482889 . 482897) (semantic-list 482862 . 482888) (symbol 482852 . 482862) (punctuation 481035 . 481036) (symbol 481017 . 481034) (USING 481011 . 481016) (punctuation 478092 . 478093) (symbol 478078 . 478091) (USING 478072 . 478077) (semantic-list 477057 . 477278) (symbol 477044 . 477052) (CONST 477038 . 477043) (semantic-list 477035 . 477037) (symbol 477019 . 477035) (VOID 477014 . 477018) (semantic-list 475483 . 476610) (symbol 475466 . 475474) (semantic-list 475454 . 475465) (symbol 475447 . 475454) (VOID 475442 . 475446) (punctuation 475349 . 475350) (punctuation 475052 . 475053) (punctuation 474749 . 474750) (punctuation 472690 . 472691) (symbol 472681 . 472689) (semantic-list 472662 . 472680) (symbol 472652 . 472662) (punctuation 472567 . 472568) (symbol 472558 . 472566) (semantic-list 472536 . 472557) (symbol 472526 . 472536) (punctuation 472448 . 472449) (symbol 472439 . 472447) (semantic-list 472418 . 472438) (symbol 472408 . 472418) (punctuation 472338 . 472339) (symbol 472329 . 472337) (semantic-list 472315 . 472328) (symbol 472305 . 472315) (punctuation 472258 . 472259) (DEFAULT 472251 . 472258) (punctuation 472249 . 472250) (semantic-list 472246 . 472248) (symbol 472236 . 472246) (semantic-list 475483 . 476610) (symbol 475466 . 475474) (semantic-list 475454 . 475465) (symbol 475447 . 475454) (VOID 475442 . 475446) (punctuation 475349 . 475350) (punctuation 475052 . 475053) (punctuation 474749 . 474750) (punctuation 472690 . 472691) (symbol 472681 . 472689) (semantic-list 472662 . 472680) (symbol 472652 . 472662) (punctuation 472567 . 472568) (symbol 472558 . 472566) (semantic-list 472536 . 472557) (symbol 472526 . 472536) (punctuation 472448 . 472449) (symbol 472439 . 472447) (semantic-list 472418 . 472438) (symbol 472408 . 472418) (punctuation 472338 . 472339) (symbol 472329 . 472337) (semantic-list 472315 . 472328) (symbol 472305 . 472315) (punctuation 472258 . 472259) (DEFAULT 472251 . 472258) (punctuation 472249 . 472250) (semantic-list 472246 . 472248) (symbol 472236 . 472246) (punctuation 470071 . 470072) (punctuation 470070 . 470071) (punctuation 470069 . 470070) (punctuation 470067 . 470068) (punctuation 470039 . 470040) (symbol 470035 . 470039) (punctuation 470033 . 470034) (punctuation 470032 . 470033) (punctuation 470031 . 470032) (TYPENAME 470023 . 470031) (punctuation 470021 . 470022) (symbol 470020 . 470021) (TYPENAME 470011 . 470019) (punctuation 470010 . 470011) (TEMPLATE 470002 . 470010) (USING 469883 . 469888) (USING 467003 . 467008) (USING 463890 . 463895) (USING 460821 . 460826) (USING 460190 . 460195) (punctuation 458214 . 458215) (symbol 458206 . 458213) (USING 458200 . 458205) (punctuation 456606 . 456607) (symbol 456597 . 456605) (USING 456591 . 456596) (punctuation 453030 . 453031) (symbol 453010 . 453029) (USING 453004 . 453009) (symbol 450319 . 450333) (punctuation 448755 . 448756) (punctuation 448754 . 448755) (symbol 448740 . 448754) (punctuation 448739 . 448740) (punctuation 448738 . 448739) (symbol 448728 . 448738) (TYPENAME 448719 . 448727) (punctuation 448718 . 448719) (symbol 448697 . 448718) (punctuation 448695 . 448696) (symbol 448672 . 448694) (USING 448666 . 448671) (punctuation 448600 . 448601) (punctuation 448599 . 448600) (symbol 448591 . 448599) (punctuation 448590 . 448591) (punctuation 448589 . 448590) (symbol 448579 . 448589) (TYPENAME 448570 . 448578) (punctuation 448569 . 448570) (symbol 448548 . 448569) (punctuation 448546 . 448547) (symbol 448529 . 448545) (USING 448523 . 448528) (punctuation 448434 . 448435) (symbol 448419 . 448433) (USING 448413 . 448418) (punctuation 448332 . 448333) (symbol 448323 . 448331) (USING 448317 . 448322) (punctuation 448200 . 448201) (symbol 448186 . 448199) (USING 448180 . 448185) (punctuation 448072 . 448073) (symbol 448064 . 448071) (USING 448058 . 448063) (punctuation 447985 . 447986) (symbol 447970 . 447984) (USING 447964 . 447969) (punctuation 447917 . 447918) (symbol 447907 . 447916) (USING 447901 . 447906) (punctuation 447835 . 447836) (symbol 447819 . 447834) (USING 447813 . 447818) (punctuation 447748 . 447749) (punctuation 447747 . 447748) (symbol 447737 . 447747) (CONST 447731 . 447736) (punctuation 447729 . 447730) (symbol 447713 . 447728) (USING 447707 . 447712) (punctuation 447654 . 447655) (punctuation 447653 . 447654) (symbol 447643 . 447653) (punctuation 447641 . 447642) (symbol 447631 . 447640) (USING 447625 . 447630) (USING 447548 . 447553) (punctuation 447234 . 447235) (symbol 447222 . 447233) (USING 447216 . 447221) (punctuation 447151 . 447152) (symbol 447138 . 447150) (USING 447132 . 447137) (punctuation 447068 . 447069) (symbol 447057 . 447067) (USING 447051 . 447056) (punctuation 446983 . 446984) (symbol 446966 . 446982) (USING 446960 . 446965) (punctuation 446891 . 446892) (symbol 446879 . 446890) (USING 446873 . 446878) (punctuation 446811 . 446812) (symbol 446801 . 446810) (USING 446795 . 446800) (punctuation 446576 . 446577) (symbol 446565 . 446575) (USING 446559 . 446564) (punctuation 446473 . 446474) (symbol 446458 . 446472) (USING 446452 . 446457) (punctuation 446392 . 446393) (symbol 446373 . 446391) (USING 446367 . 446372) (punctuation 446273 . 446274) (symbol 446257 . 446272) (USING 446251 . 446256) (punctuation 446181 . 446182) (symbol 446165 . 446180) (USING 446159 . 446164) (punctuation 446153 . 446154) (symbol 446147 . 446153) (TYPENAME 446138 . 446146) (punctuation 446136 . 446137) (symbol 446135 . 446136) (TYPENAME 446126 . 446134) (punctuation 446125 . 446126) (TEMPLATE 446117 . 446125) (punctuation 446076 . 446077) (punctuation 446075 . 446076) (punctuation 446073 . 446074) (symbol 446060 . 446072) (USING 446054 . 446059) (punctuation 445977 . 445978) (symbol 445969 . 445976) (USING 445963 . 445968) (punctuation 445905 . 445906) (punctuation 445904 . 445905) (punctuation 445902 . 445903) (symbol 445891 . 445901) (USING 445885 . 445890) (punctuation 445824 . 445825) (punctuation 445823 . 445824) (punctuation 445821 . 445822) (symbol 445807 . 445820) (USING 445801 . 445806) (punctuation 445799 . 445800) (symbol 445791 . 445799) (TYPENAME 445782 . 445790) (punctuation 445781 . 445782) (TEMPLATE 445773 . 445781) (punctuation 445723 . 445724) (punctuation 445722 . 445723) (punctuation 445720 . 445721) (symbol 445706 . 445719) (USING 445700 . 445705) (punctuation 445648 . 445649) (punctuation 445647 . 445648) (punctuation 445645 . 445646) (symbol 445628 . 445644) (USING 445622 . 445627) (punctuation 445616 . 445617) (symbol 445608 . 445616) (TYPENAME 445599 . 445607) (punctuation 445598 . 445599) (TEMPLATE 445590 . 445598) (punctuation 445537 . 445538) (punctuation 445536 . 445537) (punctuation 445534 . 445535) (symbol 445512 . 445533) (USING 445506 . 445511) (punctuation 445504 . 445505) (symbol 445500 . 445504) (TYPENAME 445491 . 445499) (punctuation 445490 . 445491) (TEMPLATE 445482 . 445490) (punctuation 445432 . 445433) (punctuation 445431 . 445432) (punctuation 445429 . 445430) (symbol 445413 . 445428) (USING 445407 . 445412) (punctuation 445401 . 445402) (symbol 445393 . 445401) (TYPENAME 445384 . 445392) (punctuation 445383 . 445384) (TEMPLATE 445375 . 445383) (punctuation 445326 . 445327) (punctuation 445325 . 445326) (punctuation 445323 . 445324) (symbol 445313 . 445322) (USING 445307 . 445312) (punctuation 445301 . 445302) (symbol 445288 . 445301) (TYPENAME 445279 . 445287) (punctuation 445278 . 445279) (TEMPLATE 445270 . 445278) (punctuation 445213 . 445214) (punctuation 445212 . 445213) (punctuation 445210 . 445211) (symbol 445192 . 445209) (USING 445186 . 445191) (punctuation 445180 . 445181) (symbol 445167 . 445180) (TYPENAME 445158 . 445166) (punctuation 445157 . 445158) (TEMPLATE 445149 . 445157) (punctuation 445104 . 445105) (punctuation 445103 . 445104) (punctuation 445101 . 445102) (symbol 445080 . 445100) (USING 445074 . 445079) (punctuation 445030 . 445031) (punctuation 445029 . 445030) (punctuation 445027 . 445028) (symbol 445020 . 445026) (USING 445014 . 445019) (punctuation 444972 . 444973) (punctuation 444971 . 444972) (punctuation 444969 . 444970) (symbol 444963 . 444968) (USING 444957 . 444962) (USING 444839 . 444844) (punctuation 444752 . 444753) (punctuation 444751 . 444752) (CLASS 444745 . 444750) (FRIEND 444738 . 444744) (punctuation 444732 . 444733) (symbol 444719 . 444732) (TYPENAME 444710 . 444718) (punctuation 444709 . 444710) (TEMPLATE 444701 . 444709) (punctuation 444657 . 444658) (punctuation 444656 . 444657) (CLASS 444650 . 444655) (FRIEND 444643 . 444649) (punctuation 444637 . 444638) (symbol 444624 . 444637) (TYPENAME 444615 . 444623) (punctuation 444614 . 444615) (TEMPLATE 444606 . 444614) (punctuation 444568 . 444569) (punctuation 444567 . 444568) (CLASS 444561 . 444566) (FRIEND 444554 . 444560) (punctuation 444548 . 444549) (symbol 444545 . 444548) (TYPENAME 444536 . 444544) (punctuation 444534 . 444535) (symbol 444521 . 444534) (TYPENAME 444512 . 444520) (punctuation 444511 . 444512) (TEMPLATE 444503 . 444511) (punctuation 444465 . 444466) (punctuation 444464 . 444465) (CLASS 444458 . 444463) (FRIEND 444451 . 444457) (punctuation 444445 . 444446) (symbol 444437 . 444445) (TYPENAME 444428 . 444436) (punctuation 444426 . 444427) (symbol 444413 . 444426) (TYPENAME 444404 . 444412) (punctuation 444403 . 444404) (TEMPLATE 444395 . 444403) (punctuation 444361 . 444362) (punctuation 444360 . 444361) (CLASS 444354 . 444359) (FRIEND 444347 . 444353) (punctuation 444341 . 444342) (symbol 444328 . 444341) (TYPENAME 444319 . 444327) (punctuation 444318 . 444319) (TEMPLATE 444310 . 444318) (punctuation 444263 . 444264) (punctuation 444262 . 444263) (FRIEND 444255 . 444261) (punctuation 444212 . 444213) (punctuation 444211 . 444212) (FRIEND 444204 . 444210) (punctuation 444163 . 444164) (punctuation 444162 . 444163) (FRIEND 444155 . 444161) (symbol 444011 . 444046) (semantic-list 436978 . 439006) (symbol 436965 . 436973) (semantic-list 436896 . 436964) (symbol 436890 . 436896) (symbol 436882 . 436889) (punctuation 436881 . 436882) (punctuation 436880 . 436881) (symbol 436877 . 436880) (STATIC 436870 . 436876) (punctuation 429026 . 429027) (number 429025 . 429026) (punctuation 429023 . 429024) (punctuation 429021 . 429022) (INT 429018 . 429021) (punctuation 428999 . 429000) (symbol 428994 . 428999) (punctuation 428993 . 428994) (punctuation 428992 . 428993) (punctuation 428991 . 428992) (symbol 428975 . 428991) (punctuation 428973 . 428974) (symbol 428963 . 428973) (punctuation 428962 . 428963) (symbol 428955 . 428962) (punctuation 428954 . 428955) (punctuation 428953 . 428954) (symbol 428950 . 428953) (symbol 428930 . 428932) (symbol 428924 . 428929) (punctuation 428923 . 428924) (punctuation 428922 . 428923) (punctuation 428921 . 428922) (symbol 428904 . 428921) (punctuation 428902 . 428903) (symbol 428892 . 428902) (punctuation 428891 . 428892) (symbol 428884 . 428891) (punctuation 428883 . 428884) (punctuation 428882 . 428883) (symbol 428879 . 428882) (punctuation 428860 . 428861) (symbol 428849 . 428860) (punctuation 428848 . 428849) (punctuation 428847 . 428848) (symbol 428841 . 428847) (punctuation 428839 . 428840) (symbol 428829 . 428839) (TYPENAME 428820 . 428828) (punctuation 428819 . 428820) (TEMPLATE 428811 . 428819) (semantic-list 428041 . 428533) (symbol 428028 . 428036) (semantic-list 428006 . 428027) (symbol 427994 . 428006) (INT 427990 . 427993) (UNSIGNED 427981 . 427989) (INLINE 427974 . 427980) (punctuation 408941 . 408942) (DEFAULT 408934 . 408941) (punctuation 408932 . 408933) (semantic-list 408929 . 408931) (symbol 408919 . 408929) (punctuation 408918 . 408919) (punctuation 408912 . 408913) (DELETE 408906 . 408912) (punctuation 408904 . 408905) (semantic-list 408889 . 408903) (punctuation 408888 . 408889) (OPERATOR 408880 . 408888) (punctuation 408901 . 408902) (punctuation 408878 . 408879) (symbol 408868 . 408878) (punctuation 408901 . 408902) (punctuation 408862 . 408863) (DELETE 408856 . 408862) (punctuation 408854 . 408855) (semantic-list 408839 . 408853) (symbol 408829 . 408839) (punctuation 408851 . 408852) (punctuation 408823 . 408824) (DELETE 408817 . 408823) (punctuation 408815 . 408816) (semantic-list 408795 . 408814) (punctuation 408794 . 408795) (OPERATOR 408786 . 408794) (punctuation 408784 . 408785) (symbol 408774 . 408784) (punctuation 408768 . 408769) (DELETE 408762 . 408768) (punctuation 408760 . 408761) (semantic-list 408740 . 408759) (symbol 408730 . 408740) (punctuation 408324 . 408325) (punctuation 408323 . 408324) (symbol 407973 . 407982) (STATIC 407966 . 407972) (symbol 407922 . 407931) (STATIC 407915 . 407921) (punctuation 407866 . 407867) (symbol 407848 . 407865) (USING 407842 . 407847) (punctuation 407794 . 407795) (symbol 407777 . 407793) (USING 407771 . 407776) (punctuation 407725 . 407726) (symbol 407710 . 407724) (USING 407704 . 407709) (punctuation 407664 . 407665) (symbol 407655 . 407663) (USING 407649 . 407654) (symbol 407544 . 407550) (punctuation 407489 . 407490) (symbol 407482 . 407489) (punctuation 407416 . 407417) (symbol 407410 . 407416) (ENUM 407377 . 407381) (symbol 379690 . 379699) (symbol 379662 . 379671) (semantic-list 374489 . 374673) (symbol 374476 . 374484) (semantic-list 374432 . 374475) (symbol 374420 . 374432) (symbol 374414 . 374419) (STATIC 374407 . 374413) (semantic-list 374107 . 374257) (symbol 374094 . 374102) (semantic-list 374084 . 374093) (symbol 374075 . 374084) (symbol 374069 . 374074) (STATIC 374062 . 374068) (semantic-list 371507 . 373960) (symbol 371494 . 371502) (semantic-list 371461 . 371493) (symbol 371458 . 371461) (symbol 371452 . 371457) (STATIC 371445 . 371451) (semantic-list 371231 . 371328) (symbol 371218 . 371226) (semantic-list 371185 . 371217) (symbol 371182 . 371185) (symbol 371176 . 371181) (STATIC 371169 . 371175) (punctuation 371071 . 371072) (symbol 371062 . 371070) (semantic-list 371035 . 371061) (symbol 371030 . 371035) (symbol 371020 . 371029) (symbol 370936 . 370945) (STATIC 370929 . 370935) (semantic-list 368590 . 368615) (symbol 368577 . 368585) (semantic-list 368559 . 368576) (symbol 368547 . 368559) (symbol 368538 . 368546) (symbol 368528 . 368537) (STATIC 368521 . 368527) (punctuation 368515 . 368516) (symbol 368507 . 368514) (punctuation 368505 . 368506) (punctuation 368503 . 368504) (punctuation 368501 . 368502) (symbol 368476 . 368481) (punctuation 368475 . 368476) (punctuation 368474 . 368475) (punctuation 368473 . 368474) (symbol 368469 . 368473) (punctuation 368468 . 368469) (punctuation 368467 . 368468) (punctuation 368466 . 368467) (symbol 368453 . 368466) (punctuation 368452 . 368453) (symbol 368443 . 368452) (punctuation 368442 . 368443) (punctuation 368441 . 368442) (symbol 368438 . 368441) (TYPENAME 368429 . 368437) (punctuation 368427 . 368428) (CHAR 368423 . 368427) (punctuation 368422 . 368423) (symbol 368415 . 368422) (punctuation 368414 . 368415) (punctuation 368413 . 368414) (symbol 368410 . 368413) (symbol 368387 . 368390) (symbol 368381 . 368386) (punctuation 368380 . 368381) (punctuation 368379 . 368380) (punctuation 368378 . 368379) (CHAR 368374 . 368378) (punctuation 368373 . 368374) (symbol 368364 . 368373) (punctuation 368363 . 368364) (punctuation 368362 . 368363) (symbol 368359 . 368362) (symbol 368336 . 368339) (symbol 368330 . 368335) (punctuation 368329 . 368330) (punctuation 368328 . 368329) (punctuation 368327 . 368328) (symbol 368326 . 368327) (punctuation 368325 . 368326) (symbol 368316 . 368325) (punctuation 368315 . 368316) (punctuation 368314 . 368315) (symbol 368311 . 368314) (punctuation 368290 . 368291) (symbol 368278 . 368289) (punctuation 368261 . 368262) (symbol 368253 . 368261) (punctuation 368251 . 368252) (symbol 368249 . 368250) (TYPENAME 368240 . 368248) (punctuation 368238 . 368239) (symbol 368225 . 368238) (TYPENAME 368216 . 368224) (punctuation 368214 . 368215) (TEMPLATE 368205 . 368213) (semantic-list 368174 . 368199) (symbol 368161 . 368169) (semantic-list 368144 . 368160) (symbol 368132 . 368144) (symbol 368123 . 368131) (symbol 368113 . 368122) (STATIC 368106 . 368112) (punctuation 368100 . 368101) (symbol 368093 . 368100) (punctuation 368091 . 368092) (punctuation 368089 . 368090) (punctuation 368088 . 368089) (symbol 368083 . 368088) (punctuation 368082 . 368083) (punctuation 368081 . 368082) (punctuation 368080 . 368081) (symbol 368079 . 368080) (punctuation 368078 . 368079) (symbol 368067 . 368078) (punctuation 368066 . 368067) (punctuation 368065 . 368066) (symbol 368062 . 368065) (punctuation 368061 . 368062) (symbol 368050 . 368061) (punctuation 368035 . 368036) (symbol 368027 . 368035) (punctuation 368025 . 368026) (symbol 368023 . 368024) (TYPENAME 368014 . 368022) (punctuation 368013 . 368014) (TEMPLATE 368005 . 368013) (semantic-list 367707 . 367999) (symbol 367694 . 367702) (semantic-list 367677 . 367693) (symbol 367665 . 367677) (symbol 367656 . 367664) (STATIC 367649 . 367655) (punctuation 367643 . 367644) (symbol 367635 . 367642) (punctuation 367633 . 367634) (punctuation 367631 . 367632) (punctuation 367629 . 367630) (symbol 367623 . 367628) (punctuation 367622 . 367623) (punctuation 367621 . 367622) (punctuation 367620 . 367621) (CHAR 367616 . 367620) (punctuation 367615 . 367616) (symbol 367604 . 367615) (punctuation 367603 . 367604) (punctuation 367602 . 367603) (symbol 367599 . 367602) (symbol 367595 . 367598) (symbol 367589 . 367594) (punctuation 367588 . 367589) (punctuation 367587 . 367588) (punctuation 367586 . 367587) (symbol 367585 . 367586) (punctuation 367584 . 367585) (symbol 367575 . 367584) (punctuation 367574 . 367575) (punctuation 367573 . 367574) (symbol 367570 . 367573) (punctuation 367568 . 367569) (symbol 367556 . 367567) (punctuation 367539 . 367540) (symbol 367531 . 367539) (punctuation 367529 . 367530) (symbol 367527 . 367528) (TYPENAME 367518 . 367526) (punctuation 367516 . 367517) (TEMPLATE 367507 . 367515) (semantic-list 367449 . 367501) (symbol 367436 . 367444) (semantic-list 367419 . 367435) (symbol 367407 . 367419) (symbol 367398 . 367406) (symbol 367388 . 367397) (STATIC 367381 . 367387) (punctuation 367375 . 367376) (symbol 367367 . 367374) (punctuation 367365 . 367366) (punctuation 367363 . 367364) (punctuation 367361 . 367362) (symbol 367355 . 367360) (punctuation 367354 . 367355) (punctuation 367353 . 367354) (punctuation 367352 . 367353) (CHAR 367348 . 367352) (punctuation 367347 . 367348) (symbol 367338 . 367347) (punctuation 367337 . 367338) (punctuation 367336 . 367337) (symbol 367333 . 367336) (symbol 367329 . 367332) (symbol 367323 . 367328) (punctuation 367322 . 367323) (punctuation 367321 . 367322) (punctuation 367320 . 367321) (symbol 367319 . 367320) (punctuation 367318 . 367319) (symbol 367309 . 367318) (punctuation 367308 . 367309) (punctuation 367307 . 367308) (symbol 367304 . 367307) (punctuation 367302 . 367303) (symbol 367290 . 367301) (punctuation 367273 . 367274) (symbol 367265 . 367273) (punctuation 367263 . 367264) (symbol 367261 . 367262) (TYPENAME 367252 . 367260) (punctuation 367250 . 367251) (TEMPLATE 367241 . 367249) (symbol 365620 . 365629) (STATIC 365613 . 365619) (symbol 365502 . 365511) (STATIC 365495 . 365501) (semantic-list 363006 . 365489) (symbol 362993 . 363001) (CONST 362987 . 362992) (semantic-list 362962 . 362986) (symbol 362949 . 362962) (symbol 362940 . 362948) (punctuation 360520 . 360521) (number 360519 . 360520) (punctuation 360517 . 360518) (symbol 360512 . 360516) (punctuation 360511 . 360512) (punctuation 360510 . 360511) (punctuation 360509 . 360510) (INT 360506 . 360509) (punctuation 360504 . 360505) (symbol 360499 . 360504) (punctuation 360498 . 360499) (punctuation 360497 . 360498) (punctuation 360496 . 360497) (symbol 360486 . 360496) (punctuation 360485 . 360486) (symbol 360468 . 360485) (punctuation 360467 . 360468) (punctuation 360466 . 360467) (symbol 360463 . 360466) (symbol 360459 . 360462) (symbol 360438 . 360441) (symbol 360432 . 360437) (punctuation 360431 . 360432) (punctuation 360430 . 360431) (punctuation 360429 . 360430) (symbol 360419 . 360429) (punctuation 360418 . 360419) (symbol 360409 . 360418) (punctuation 360408 . 360409) (punctuation 360407 . 360408) (symbol 360404 . 360407) (punctuation 360385 . 360386) (symbol 360376 . 360385) (punctuation 360375 . 360376) (punctuation 360374 . 360375) (symbol 360371 . 360374) (TYPENAME 360362 . 360370) (punctuation 360360 . 360361) (symbol 360350 . 360360) (TYPENAME 360341 . 360349) (punctuation 360340 . 360341) (TEMPLATE 360332 . 360340) (punctuation 358533 . 358534) (number 358532 . 358533) (punctuation 358530 . 358531) (symbol 358525 . 358529) (punctuation 358524 . 358525) (punctuation 358523 . 358524) (punctuation 358522 . 358523) (INT 358519 . 358522) (punctuation 358517 . 358518) (symbol 358512 . 358517) (punctuation 358511 . 358512) (punctuation 358510 . 358511) (punctuation 358509 . 358510) (symbol 358499 . 358509) (punctuation 358498 . 358499) (symbol 358487 . 358498) (punctuation 358486 . 358487) (punctuation 358485 . 358486) (symbol 358482 . 358485) (punctuation 358463 . 358464) (symbol 358454 . 358463) (punctuation 358453 . 358454) (punctuation 358452 . 358453) (symbol 358449 . 358452) (TYPENAME 358440 . 358448) (punctuation 358438 . 358439) (symbol 358428 . 358438) (TYPENAME 358419 . 358427) (punctuation 358418 . 358419) (TEMPLATE 358410 . 358418) (punctuation 358089 . 358090) (number 358088 . 358089) (punctuation 358086 . 358087) (symbol 358081 . 358085) (punctuation 358080 . 358081) (punctuation 358079 . 358080) (punctuation 358078 . 358079) (INT 358075 . 358078) (punctuation 358073 . 358074) (symbol 358068 . 358073) (punctuation 358067 . 358068) (punctuation 358066 . 358067) (punctuation 358065 . 358066) (symbol 358055 . 358065) (punctuation 358054 . 358055) (symbol 358037 . 358054) (punctuation 358036 . 358037) (punctuation 358035 . 358036) (symbol 358032 . 358035) (punctuation 358013 . 358014) (symbol 358004 . 358013) (punctuation 358003 . 358004) (punctuation 358002 . 358003) (symbol 357999 . 358002) (TYPENAME 357990 . 357998) (punctuation 357988 . 357989) (symbol 357978 . 357988) (TYPENAME 357969 . 357977) (punctuation 357968 . 357969) (TEMPLATE 357960 . 357968) (symbol 357735 . 357744) (STATIC 357728 . 357734) (symbol 357601 . 357610) (STATIC 357594 . 357600) (symbol 357400 . 357409) (STATIC 357393 . 357399) (symbol 357255 . 357264) (STATIC 357248 . 357254) (semantic-list 350785 . 350966) (symbol 350772 . 350780) (semantic-list 350744 . 350771) (symbol 350721 . 350744) (symbol 350714 . 350720) (punctuation 350713 . 350714) (punctuation 350712 . 350713) (symbol 350709 . 350712) (symbol 350699 . 350708) (STATIC 350692 . 350698) (EXPLICIT 320720 . 320728) (punctuation 320568 . 320569) (symbol 320559 . 320567) (USING 320553 . 320558) (OPERATOR 320136 . 320144) (punctuation 319737 . 319738) (punctuation 319736 . 319737) (symbol 319728 . 319736) (punctuation 319727 . 319728) (symbol 319715 . 319727) (punctuation 319714 . 319715) (punctuation 319713 . 319714) (symbol 319710 . 319713) (punctuation 319708 . 319709) (symbol 319697 . 319707) (TYPENAME 319688 . 319696) (punctuation 319686 . 319687) (symbol 319678 . 319686) (TYPENAME 319669 . 319677) (punctuation 319668 . 319669) (TEMPLATE 319660 . 319668) (semantic-list 319584 . 319622) (symbol 319571 . 319579) (semantic-list 319531 . 319570) (symbol 319515 . 319531) (VOID 319510 . 319514) (semantic-list 319471 . 319504) (symbol 319458 . 319466) (semantic-list 319445 . 319457) (symbol 319430 . 319445) (VOID 319425 . 319429) (punctuation 319404 . 319405) (symbol 319387 . 319395) (semantic-list 319371 . 319386) (symbol 319350 . 319371) (EXPLICIT 319341 . 319349) (punctuation 319252 . 319253) (punctuation 319251 . 319252) (symbol 319243 . 319251) (punctuation 319242 . 319243) (symbol 319230 . 319242) (punctuation 319229 . 319230) (punctuation 319228 . 319229) (symbol 319225 . 319228) (punctuation 319223 . 319224) (symbol 319212 . 319222) (TYPENAME 319203 . 319211) (punctuation 319201 . 319202) (symbol 319193 . 319201) (TYPENAME 319184 . 319192) (punctuation 319183 . 319184) (TEMPLATE 319175 . 319183) (semantic-list 319010 . 319080) (symbol 318997 . 319005) (semantic-list 318957 . 318996) (symbol 318941 . 318957) (VOID 318936 . 318940) (semantic-list 318900 . 318930) (symbol 318887 . 318895) (semantic-list 318874 . 318886) (symbol 318859 . 318874) (VOID 318854 . 318858) (punctuation 318830 . 318831) (symbol 318813 . 318821) (semantic-list 318779 . 318812) (symbol 318758 . 318779) (EXPLICIT 318749 . 318757) (semantic-list 318485 . 318549) (symbol 318472 . 318480) (semantic-list 318432 . 318471) (symbol 318416 . 318432) (VOID 318411 . 318415) (semantic-list 318374 . 318405) (symbol 318361 . 318369) (semantic-list 318348 . 318360) (symbol 318333 . 318348) (VOID 318328 . 318332) (punctuation 318307 . 318308) (symbol 318290 . 318298) (semantic-list 318261 . 318289) (symbol 318240 . 318261) (EXPLICIT 318231 . 318239) (punctuation 318025 . 318026) (symbol 318008 . 318024) (USING 318002 . 318007) (punctuation 318000 . 318001) (symbol 317992 . 318000) (TYPENAME 317983 . 317991) (punctuation 317982 . 317983) (TEMPLATE 317974 . 317982) (punctuation 317934 . 317935) (DEFAULT 317927 . 317934) (punctuation 317925 . 317926) (semantic-list 317922 . 317924) (symbol 317899 . 317922) (punctuation 317898 . 317899) (VIRTUAL 317890 . 317897) (punctuation 316255 . 316256) (DEFAULT 316248 . 316255) (punctuation 316246 . 316247) (semantic-list 316243 . 316245) (symbol 316235 . 316243) (punctuation 316234 . 316235) (punctuation 316228 . 316229) (DELETE 316222 . 316228) (punctuation 316220 . 316221) (semantic-list 316207 . 316219) (punctuation 316206 . 316207) (OPERATOR 316198 . 316206) (punctuation 316217 . 316218) (punctuation 316196 . 316197) (symbol 316188 . 316196) (punctuation 316217 . 316218) (punctuation 316182 . 316183) (DELETE 316176 . 316182) (punctuation 316174 . 316175) (semantic-list 316156 . 316173) (punctuation 316155 . 316156) (OPERATOR 316147 . 316155) (punctuation 316145 . 316146) (symbol 316137 . 316145) (punctuation 316131 . 316132) (DELETE 316125 . 316131) (punctuation 316123 . 316124) (semantic-list 316105 . 316122) (symbol 316097 . 316105) (punctuation 316091 . 316092) (DEFAULT 316084 . 316091) (punctuation 316082 . 316083) (semantic-list 316069 . 316081) (symbol 316061 . 316069) (punctuation 316079 . 316080) (punctuation 315906 . 315907) (punctuation 315905 . 315906) (punctuation 315904 . 315905) (punctuation 315902 . 315903) (punctuation 315881 . 315882) (number 315879 . 315880) (punctuation 315877 . 315878) (punctuation 315875 . 315876) (INT 315872 . 315875) (punctuation 315870 . 315871) (symbol 315865 . 315870) (punctuation 315864 . 315865) (punctuation 315863 . 315864) (punctuation 315862 . 315863) (punctuation 315861 . 315862) (punctuation 315860 . 315861) (punctuation 315859 . 315860) (symbol 315855 . 315859) (punctuation 315853 . 315854) (symbol 315843 . 315853) (punctuation 315842 . 315843) (symbol 315826 . 315842) (punctuation 315825 . 315826) (punctuation 315824 . 315825) (symbol 315821 . 315824) (punctuation 315820 . 315821) (symbol 315809 . 315820) (punctuation 315799 . 315800) (symbol 315795 . 315799) (punctuation 315793 . 315794) (punctuation 315792 . 315793) (punctuation 315791 . 315792) (CLASS 315786 . 315791) (punctuation 315776 . 315777) (TEMPLATE 315767 . 315775) (punctuation 315418 . 315419) (USING 315359 . 315364) (semantic-list 314962 . 315002) (symbol 314949 . 314957) (semantic-list 314871 . 314948) (punctuation 314870 . 314871) (punctuation 314869 . 314870) (OPERATOR 314861 . 314869) (BOOL 314856 . 314860) (FRIEND 314849 . 314855) (semantic-list 314432 . 314500) (symbol 314419 . 314427) (semantic-list 314341 . 314418) (punctuation 314340 . 314341) (punctuation 314339 . 314340) (OPERATOR 314331 . 314339) (BOOL 314326 . 314330) (FRIEND 314319 . 314325) (semantic-list 291766 . 291814) (symbol 291753 . 291761) (CONST 291747 . 291752) (semantic-list 291744 . 291746) (symbol 291739 . 291744) (BOOL 291734 . 291738) (punctuation 291264 . 291265) (OPERATOR 284918 . 284926) (EXPLICIT 284100 . 284108) (punctuation 283257 . 283258) (symbol 283194 . 283229) (semantic-list 282363 . 282365) (punctuation 282359 . 282360) (semantic-list 282357 . 282359) (punctuation 282328 . 282329) (punctuation 282327 . 282328) (CONST 282321 . 282326) (semantic-list 282318 . 282320) (symbol 282315 . 282318) (symbol 282310 . 282314) (punctuation 280728 . 280729) (symbol 280719 . 280727) (semantic-list 280693 . 280718) (symbol 280672 . 280693) (EXPLICIT 280663 . 280671) (punctuation 280587 . 280588) (symbol 280570 . 280578) (semantic-list 280520 . 280569) (symbol 280499 . 280520) (EXPLICIT 280490 . 280498) (punctuation 280411 . 280412) (symbol 280401 . 280410) (USING 280395 . 280400) (punctuation 280306 . 280307) (symbol 280292 . 280305) (USING 280286 . 280291) (punctuation 280215 . 280216) (symbol 280199 . 280214) (USING 280193 . 280198) (punctuation 278993 . 278994) (symbol 278989 . 278993) (punctuation 278988 . 278989) (punctuation 278987 . 278988) (punctuation 278986 . 278987) (symbol 278973 . 278986) (punctuation 278972 . 278973) (symbol 278960 . 278972) (punctuation 278959 . 278960) (punctuation 278958 . 278959) (symbol 278955 . 278958) (TYPENAME 278946 . 278954) (punctuation 278945 . 278946) (symbol 278928 . 278945) (semantic-list 268070 . 268605) (symbol 268057 . 268065) (semantic-list 268054 . 268056) (symbol 268047 . 268054) (VOID 268042 . 268046) (semantic-list 267160 . 267907) (symbol 267147 . 267155) (semantic-list 267144 . 267146) (symbol 267135 . 267144) (VOID 267130 . 267134) (semantic-list 266894 . 266985) (symbol 266881 . 266889) (semantic-list 266807 . 266880) (punctuation 266806 . 266807) (OPERATOR 266798 . 266806) (punctuation 266872 . 266873) (punctuation 266871 . 266872) (punctuation 266823 . 266824) (punctuation 266796 . 266797) (symbol 266787 . 266796) (punctuation 266872 . 266873) (punctuation 266871 . 266872) (punctuation 266823 . 266824) (punctuation 266546 . 266547) (punctuation 266530 . 266531) (symbol 266513 . 266521) (semantic-list 266439 . 266512) (symbol 266430 . 266439) (punctuation 266504 . 266505) (punctuation 266503 . 266504) (punctuation 266455 . 266456) (punctuation 265253 . 265254) (symbol 265244 . 265252) (semantic-list 265227 . 265243) (symbol 265218 . 265227) (EXPLICIT 265209 . 265217) (punctuation 264978 . 264979) (DEFAULT 264971 . 264978) (punctuation 264969 . 264970) (semantic-list 264966 . 264968) (symbol 264957 . 264966) (punctuation 264917 . 264918) (punctuation 264916 . 264917) (punctuation 264915 . 264916) (symbol 264906 . 264915) (punctuation 264905 . 264906) (punctuation 264904 . 264905) (symbol 264891 . 264904) (TYPENAME 264882 . 264890) (punctuation 264872 . 264873) (symbol 264857 . 264872) (punctuation 264856 . 264857) (punctuation 264855 . 264856) (symbol 264842 . 264855) (TYPENAME 264833 . 264841) (punctuation 264823 . 264824) (symbol 264818 . 264823) (punctuation 264817 . 264818) (punctuation 264816 . 264817) (punctuation 264815 . 264816) (symbol 264802 . 264815) (punctuation 264801 . 264802) (symbol 264793 . 264801) (punctuation 264792 . 264793) (punctuation 264791 . 264792) (symbol 264788 . 264791) (punctuation 264787 . 264788) (symbol 264776 . 264787) (punctuation 264775 . 264776) (punctuation 264774 . 264775) (symbol 264771 . 264774) (TYPENAME 264762 . 264770) (punctuation 264752 . 264753) (symbol 264742 . 264751) (USING 264736 . 264741) (punctuation 264658 . 264659) (punctuation 264657 . 264658) (punctuation 264656 . 264657) (symbol 264649 . 264656) (punctuation 264648 . 264649) (punctuation 264647 . 264648) (symbol 264634 . 264647) (TYPENAME 264625 . 264633) (punctuation 264613 . 264614) (symbol 264600 . 264613) (punctuation 264599 . 264600) (punctuation 264598 . 264599) (symbol 264585 . 264598) (TYPENAME 264576 . 264584) (punctuation 264564 . 264565) (symbol 264559 . 264564) (punctuation 264558 . 264559) (punctuation 264557 . 264558) (punctuation 264556 . 264557) (symbol 264543 . 264556) (punctuation 264542 . 264543) (symbol 264534 . 264542) (punctuation 264533 . 264534) (punctuation 264532 . 264533) (symbol 264529 . 264532) (punctuation 264528 . 264529) (symbol 264517 . 264528) (punctuation 264516 . 264517) (punctuation 264515 . 264516) (symbol 264512 . 264515) (TYPENAME 264503 . 264511) (punctuation 264501 . 264502) (symbol 264493 . 264500) (USING 264487 . 264492) (punctuation 264375 . 264376) (symbol 264359 . 264374) (USING 264353 . 264358) (punctuation 264253 . 264254) (symbol 264242 . 264252) (USING 264236 . 264241) (punctuation 264131 . 264132) (symbol 264113 . 264130) (USING 264107 . 264112) (string 263591 . 263634) (punctuation 263565 . 263566) (punctuation 263564 . 263565) (punctuation 263563 . 263564) (punctuation 263515 . 263516) (punctuation 263384 . 263385) (symbol 263376 . 263383) (USING 263370 . 263375) (punctuation 263330 . 263331) (symbol 263321 . 263329) (USING 263315 . 263320) (punctuation 263198 . 263199) (punctuation 263197 . 263198) (symbol 263193 . 263197) (punctuation 263192 . 263193) (punctuation 263191 . 263192) (punctuation 263190 . 263191) (symbol 263177 . 263190) (CONST 263171 . 263176) (punctuation 263169 . 263170) (symbol 263165 . 263169) (punctuation 263164 . 263165) (punctuation 263163 . 263164) (punctuation 263162 . 263163) (symbol 263149 . 263162) (punctuation 263148 . 263149) (symbol 263136 . 263148) (punctuation 263135 . 263136) (punctuation 263134 . 263135) (symbol 263131 . 263134) (TYPENAME 263122 . 263130) (punctuation 263120 . 263121) (symbol 263115 . 263120) (punctuation 263114 . 263115) (punctuation 263113 . 263114) (punctuation 263112 . 263113) (symbol 263099 . 263112) (punctuation 263098 . 263099) (symbol 263090 . 263098) (punctuation 263089 . 263090) (punctuation 263088 . 263089) (symbol 263085 . 263088) (punctuation 263084 . 263085) (symbol 263073 . 263084) (punctuation 263072 . 263073) (punctuation 263071 . 263072) (symbol 263068 . 263071) (TYPENAME 263059 . 263067) (punctuation 263058 . 263059) (symbol 263049 . 263058) (FRIEND 263042 . 263048) (semantic-list 260433 . 260481) (symbol 260420 . 260428) (semantic-list 260400 . 260419) (punctuation 260399 . 260400) (punctuation 260398 . 260399) (OPERATOR 260390 . 260398) (punctuation 260388 . 260389) (symbol 260368 . 260388) (semantic-list 260314 . 260362) (symbol 260301 . 260309) (semantic-list 260281 . 260300) (punctuation 260280 . 260281) (punctuation 260279 . 260280) (OPERATOR 260271 . 260279) (punctuation 260269 . 260270) (symbol 260249 . 260269) (semantic-list 260168 . 260243) (symbol 260155 . 260163) (semantic-list 260149 . 260154) (punctuation 260148 . 260149) (punctuation 260147 . 260148) (OPERATOR 260139 . 260147) (CONST 260133 . 260138) (symbol 260112 . 260132) (semantic-list 260061 . 260106) (symbol 260048 . 260056) (semantic-list 260045 . 260047) (punctuation 260044 . 260045) (punctuation 260043 . 260044) (OPERATOR 260035 . 260043) (punctuation 260033 . 260034) (symbol 260013 . 260033) (semantic-list 259932 . 260007) (symbol 259919 . 259927) (semantic-list 259913 . 259918) (punctuation 259912 . 259913) (punctuation 259911 . 259912) (OPERATOR 259903 . 259911) (CONST 259897 . 259902) (symbol 259876 . 259896) (semantic-list 259825 . 259870) (symbol 259812 . 259820) (semantic-list 259809 . 259811) (punctuation 259808 . 259809) (punctuation 259807 . 259808) (OPERATOR 259799 . 259807) (punctuation 259797 . 259798) (symbol 259777 . 259797) (semantic-list 259728 . 259771) (symbol 259715 . 259723) (semantic-list 259662 . 259714) (punctuation 259661 . 259662) (OPERATOR 259653 . 259661) (symbol 259637 . 259652) (symbol 259627 . 259636) (FRIEND 259620 . 259626) (semantic-list 259534 . 259614) (symbol 259521 . 259529) (semantic-list 259501 . 259520) (punctuation 259500 . 259501) (OPERATOR 259492 . 259500) (symbol 259471 . 259491) (semantic-list 259422 . 259465) (symbol 259409 . 259417) (semantic-list 259356 . 259408) (punctuation 259355 . 259356) (OPERATOR 259347 . 259355) (BOOL 259342 . 259346) (symbol 259332 . 259341) (FRIEND 259325 . 259331) (semantic-list 259275 . 259319) (symbol 259262 . 259270) (semantic-list 259209 . 259261) (punctuation 259208 . 259209) (punctuation 259207 . 259208) (OPERATOR 259199 . 259207) (BOOL 259194 . 259198) (symbol 259184 . 259193) (FRIEND 259177 . 259183) (semantic-list 259130 . 259171) (symbol 259117 . 259125) (CONST 259111 . 259116) (semantic-list 259108 . 259110) (symbol 259102 . 259108) (BOOL 259097 . 259101) (symbol 259087 . 259096) (semantic-list 258992 . 259035) (symbol 258979 . 258987) (CONST 258973 . 258978) (semantic-list 258970 . 258972) (symbol 258962 . 258970) (BOOL 258957 . 258961) (symbol 258947 . 258956) (semantic-list 258852 . 258885) (symbol 258839 . 258847) (semantic-list 258836 . 258838) (symbol 258829 . 258836) (VOID 258824 . 258828) (semantic-list 258736 . 258771) (symbol 258723 . 258731) (semantic-list 258720 . 258722) (symbol 258711 . 258720) (VOID 258706 . 258710) (semantic-list 258628 . 258656) (symbol 258615 . 258623) (CONST 258609 . 258614) (semantic-list 258606 . 258608) (symbol 258597 . 258606) (symbol 258581 . 258596) (symbol 258571 . 258580) (symbol 258387 . 258396) (STATIC 258380 . 258386) (symbol 258333 . 258342) (STATIC 258326 . 258332) (punctuation 258304 . 258305) (symbol 258288 . 258303) (USING 258282 . 258287) (punctuation 257402 . 257403) (symbol 257391 . 257401) (symbol 257380 . 257390) (punctuation 241110 . 241111) (EXPLICIT 241070 . 241078) (punctuation 241016 . 241017) (punctuation 241015 . 241016) (semantic-list 240960 . 241015) (BOOL 240956 . 240960) (punctuation 240955 . 240956) (symbol 240947 . 240955) (punctuation 240946 . 240947) (punctuation 240945 . 240946) (symbol 240942 . 240945) (punctuation 240932 . 240933) (symbol 240914 . 240931) (USING 240908 . 240913) (symbol 240890 . 240895) (punctuation 240827 . 240828) (symbol 240824 . 240827) (punctuation 240756 . 240757) (symbol 240747 . 240756) (punctuation 240668 . 240669) (symbol 240657 . 240668) (punctuation 240579 . 240580) (symbol 240569 . 240579) (punctuation 240489 . 240490) (symbol 240477 . 240489) (symbol 240890 . 240895) (punctuation 240827 . 240828) (symbol 240824 . 240827) (punctuation 240756 . 240757) (symbol 240747 . 240756) (punctuation 240668 . 240669) (symbol 240657 . 240668) (punctuation 240579 . 240580) (symbol 240569 . 240579) (punctuation 240489 . 240490) (symbol 240477 . 240489) (ENUM 240359 . 240363) (punctuation 240312 . 240313) (symbol 240301 . 240311) (USING 240295 . 240300) (punctuation 240267 . 240268) (symbol 240259 . 240266) (USING 240253 . 240258) (punctuation 240213 . 240214) (symbol 240204 . 240212) (USING 240198 . 240203) (punctuation 240152 . 240153) (symbol 240137 . 240151) (USING 240131 . 240136) (punctuation 240082 . 240083) (symbol 240064 . 240081) (USING 240058 . 240063) (punctuation 240010 . 240011) (symbol 239993 . 240009) (USING 239987 . 239992) (semantic-list 235688 . 235725) (symbol 235675 . 235683) (CONST 235669 . 235674) (semantic-list 235666 . 235668) (symbol 235649 . 235666) (punctuation 235647 . 235648) (CHAR 235643 . 235647) (CONST 235637 . 235642) (symbol 235627 . 235636) (semantic-list 234694 . 234726) (symbol 234681 . 234689) (CONST 234675 . 234680) (semantic-list 234672 . 234674) (symbol 234660 . 234672) (symbol 234649 . 234659) (symbol 234639 . 234648) (semantic-list 234330 . 234365) (symbol 234317 . 234325) (CONST 234311 . 234316) (semantic-list 234308 . 234310) (symbol 234292 . 234308) (symbol 234277 . 234291) (symbol 234267 . 234276) (semantic-list 234187 . 234225) (symbol 234174 . 234182) (CONST 234168 . 234173) (semantic-list 234165 . 234167) (symbol 234146 . 234165) (symbol 234128 . 234145) (symbol 234118 . 234127) (semantic-list 234037 . 234074) (symbol 234024 . 234032) (CONST 234018 . 234023) (semantic-list 234015 . 234017) (symbol 233997 . 234015) (symbol 233980 . 233996) (symbol 233970 . 233979) (semantic-list 231549 . 231695) (symbol 231536 . 231544) (semantic-list 231533 . 231535) (symbol 231528 . 231533) (VOID 231523 . 231527) (semantic-list 220240 . 220286) (symbol 220227 . 220235) (semantic-list 220178 . 220226) (symbol 220172 . 220178) (VOID 220167 . 220171) (STATIC 220160 . 220166) (semantic-list 220109 . 220154) (symbol 220096 . 220104) (semantic-list 220052 . 220095) (symbol 220046 . 220052) (VOID 220041 . 220045) (STATIC 220034 . 220040) (semantic-list 219983 . 220028) (symbol 219970 . 219978) (semantic-list 219927 . 219969) (symbol 219921 . 219927) (VOID 219916 . 219920) (STATIC 219909 . 219915) (semantic-list 193997 . 194153) (symbol 193984 . 193992) (semantic-list 193981 . 193983) (symbol 193964 . 193981) (CHAR 193959 . 193963) (STATIC 193952 . 193958) (punctuation 193816 . 193817) (DEFAULT 193809 . 193816) (punctuation 193807 . 193808) (semantic-list 193804 . 193806) (symbol 193799 . 193804) (punctuation 193798 . 193799) (punctuation 193792 . 193793) (DELETE 193786 . 193792) (punctuation 193784 . 193785) (semantic-list 193774 . 193783) (punctuation 193773 . 193774) (OPERATOR 193765 . 193773) (punctuation 193781 . 193782) (punctuation 193763 . 193764) (symbol 193758 . 193763) (punctuation 193781 . 193782) (punctuation 193752 . 193753) (DELETE 193746 . 193752) (punctuation 193744 . 193745) (semantic-list 193735 . 193743) (punctuation 193734 . 193735) (OPERATOR 193726 . 193734) (punctuation 193724 . 193725) (symbol 193719 . 193724) (punctuation 193713 . 193714) (DELETE 193707 . 193713) (punctuation 193705 . 193706) (semantic-list 193695 . 193704) (symbol 193690 . 193695) (punctuation 193702 . 193703) (punctuation 193684 . 193685) (DELETE 193678 . 193684) (punctuation 193676 . 193677) (semantic-list 193661 . 193675) (symbol 193656 . 193661) (punctuation 193522 . 193523) (EXPLICIT 193483 . 193491) (semantic-list 191972 . 193477) (symbol 191959 . 191967) (semantic-list 191938 . 191958) (symbol 191923 . 191938) (punctuation 191921 . 191922) (CHAR 191917 . 191921) (CONST 191911 . 191916) (STATIC 191904 . 191910) (symbol 191740 . 191756) (punctuation 191682 . 191683) (symbol 191670 . 191682) (punctuation 191625 . 191626) (symbol 191614 . 191625) (punctuation 191574 . 191575) (symbol 191559 . 191574) (punctuation 191519 . 191520) (symbol 191505 . 191519) (punctuation 191451 . 191452) (symbol 191441 . 191451) (punctuation 191387 . 191388) (symbol 191378 . 191387) (punctuation 191324 . 191325) (symbol 191312 . 191324) (punctuation 191258 . 191259) (symbol 191247 . 191258) (punctuation 191159 . 191160) (symbol 191148 . 191159) (punctuation 191068 . 191069) (symbol 191055 . 191068) (punctuation 190972 . 190973) (symbol 190958 . 190972) (punctuation 190893 . 190894) (symbol 190881 . 190893) (punctuation 190843 . 190844) (symbol 190831 . 190843) (punctuation 190793 . 190794) (symbol 190780 . 190793) (punctuation 190742 . 190743) (symbol 190730 . 190742) (punctuation 190672 . 190673) (symbol 190659 . 190672) (symbol 191740 . 191756) (punctuation 191682 . 191683) (symbol 191670 . 191682) (punctuation 191625 . 191626) (symbol 191614 . 191625) (punctuation 191574 . 191575) (symbol 191559 . 191574) (punctuation 191519 . 191520) (symbol 191505 . 191519) (punctuation 191451 . 191452) (symbol 191441 . 191451) (punctuation 191387 . 191388) (symbol 191378 . 191387) (punctuation 191324 . 191325) (symbol 191312 . 191324) (punctuation 191258 . 191259) (symbol 191247 . 191258) (punctuation 191159 . 191160) (symbol 191148 . 191159) (punctuation 191068 . 191069) (symbol 191055 . 191068) (punctuation 190972 . 190973) (symbol 190958 . 190972) (punctuation 190893 . 190894) (symbol 190881 . 190893) (punctuation 190843 . 190844) (symbol 190831 . 190843) (punctuation 190793 . 190794) (symbol 190780 . 190793) (punctuation 190742 . 190743) (symbol 190730 . 190742) (punctuation 190672 . 190673) (symbol 190659 . 190672) (ENUM 190623 . 190627) (punctuation 190537 . 190538) (symbol 190528 . 190536) (USING 190522 . 190527) (punctuation 190476 . 190477) (symbol 190461 . 190475) (USING 190455 . 190460) (punctuation 190406 . 190407) (symbol 190388 . 190405) (USING 190382 . 190387) (punctuation 190334 . 190335) (symbol 190317 . 190333) (USING 190311 . 190316) (semantic-list 132429 . 132488) (symbol 132416 . 132424) (semantic-list 132402 . 132415) (symbol 132386 . 132402) (BOOL 132381 . 132385) (symbol 132371 . 132380) (STATIC 132364 . 132370) (punctuation 130532 . 130533) (DEFAULT 130525 . 130532) (punctuation 130523 . 130524) (semantic-list 130520 . 130522) (symbol 130507 . 130520) (punctuation 130506 . 130507) (punctuation 130500 . 130501) (DEFAULT 130493 . 130500) (punctuation 130491 . 130492) (semantic-list 130473 . 130490) (punctuation 130472 . 130473) (OPERATOR 130464 . 130472) (punctuation 130488 . 130489) (punctuation 130462 . 130463) (symbol 130449 . 130462) (punctuation 130488 . 130489) (punctuation 130443 . 130444) (DELETE 130437 . 130443) (punctuation 130435 . 130436) (semantic-list 130412 . 130434) (punctuation 130411 . 130412) (OPERATOR 130403 . 130411) (punctuation 130401 . 130402) (symbol 130388 . 130401) (punctuation 130382 . 130383) (DEFAULT 130375 . 130382) (punctuation 130373 . 130374) (semantic-list 130355 . 130372) (symbol 130342 . 130355) (punctuation 130370 . 130371) (punctuation 130336 . 130337) (DELETE 130330 . 130336) (punctuation 130328 . 130329) (semantic-list 130305 . 130327) (symbol 130292 . 130305) (EXPLICIT 130086 . 130094) (USING 129946 . 129951) (punctuation 129906 . 129907) (symbol 129897 . 129905) (USING 129891 . 129896) (punctuation 129845 . 129846) (symbol 129830 . 129844) (USING 129824 . 129829) (punctuation 129775 . 129776) (symbol 129757 . 129774) (USING 129751 . 129756) (punctuation 129703 . 129704) (symbol 129686 . 129702) (USING 129680 . 129685) (string 129267 . 129300) (string 129194 . 129258) (punctuation 129178 . 129179) (punctuation 129177 . 129178) (string 129038 . 129082) (punctuation 129012 . 129013) (punctuation 129011 . 129012) (string 128883 . 128940) (punctuation 128857 . 128858) (punctuation 128856 . 128857) (string 128738 . 128783) (punctuation 128712 . 128713) (punctuation 128711 . 128712) (string 128592 . 128639) (punctuation 128566 . 128567) (punctuation 128565 . 128566) (string 128432 . 128490) (punctuation 128406 . 128407) (punctuation 128405 . 128406) (string 128281 . 128331) (punctuation 128265 . 128266) (punctuation 128264 . 128265) (string 128099 . 128177) (punctuation 128073 . 128074) (punctuation 128072 . 128073) (string 127887 . 127954) (punctuation 127871 . 127872) (punctuation 127870 . 127871) (string 127692 . 127757) (punctuation 127676 . 127677) (punctuation 127675 . 127676) (string 127518 . 127564) (punctuation 127492 . 127493) (punctuation 127491 . 127492) (string 127376 . 127422) (punctuation 127350 . 127351) (punctuation 127349 . 127350) (string 127241 . 127280) (punctuation 127215 . 127216) (punctuation 127214 . 127215) (punctuation 127103 . 127104) (symbol 127091 . 127102) (USING 127085 . 127090) (punctuation 127045 . 127046) (symbol 127036 . 127044) (USING 127030 . 127035) (punctuation 126984 . 126985) (symbol 126969 . 126983) (USING 126963 . 126968) (punctuation 126914 . 126915) (symbol 126896 . 126913) (USING 126890 . 126895) (punctuation 126842 . 126843) (symbol 126825 . 126841) (USING 126819 . 126824) (string 126764 . 126811) (punctuation 126738 . 126739) (punctuation 126737 . 126738) (punctuation 126505 . 126506) (punctuation 126504 . 126505) (punctuation 126503 . 126504) (symbol 126500 . 126503) (punctuation 126498 . 126499) (symbol 126478 . 126498) (punctuation 126476 . 126477) (BOOL 126472 . 126476) (punctuation 126471 . 126472) (symbol 126454 . 126471) (punctuation 126444 . 126445) (punctuation 126443 . 126444) (symbol 126437 . 126442) (punctuation 126436 . 126437) (punctuation 126435 . 126436) (punctuation 126434 . 126435) (symbol 126431 . 126434) (punctuation 126429 . 126430) (symbol 126407 . 126429) (punctuation 126405 . 126406) (BOOL 126401 . 126405) (punctuation 126400 . 126401) (symbol 126383 . 126400) (punctuation 126373 . 126374) (punctuation 126372 . 126373) (symbol 126366 . 126371) (punctuation 126365 . 126366) (punctuation 126364 . 126365) (punctuation 126363 . 126364) (symbol 126360 . 126363) (punctuation 126358 . 126359) (symbol 126337 . 126358) (punctuation 126335 . 126336) (BOOL 126331 . 126335) (punctuation 126330 . 126331) (symbol 126313 . 126330) (punctuation 126303 . 126304) (punctuation 126302 . 126303) (symbol 126296 . 126301) (punctuation 126295 . 126296) (punctuation 126294 . 126295) (punctuation 126293 . 126294) (symbol 126285 . 126293) (punctuation 126283 . 126284) (symbol 126280 . 126283) (punctuation 126278 . 126279) (symbol 126264 . 126278) (punctuation 126262 . 126263) (BOOL 126258 . 126262) (punctuation 126257 . 126258) (symbol 126240 . 126257) (punctuation 126230 . 126231) (punctuation 126229 . 126230) (symbol 126223 . 126228) (punctuation 126222 . 126223) (punctuation 126221 . 126222) (punctuation 126220 . 126221) (symbol 126217 . 126220) (punctuation 126215 . 126216) (symbol 126192 . 126215) (punctuation 126190 . 126191) (BOOL 126186 . 126190) (punctuation 126185 . 126186) (symbol 126168 . 126185) (punctuation 126158 . 126159) (punctuation 126157 . 126158) (symbol 126151 . 126156) (punctuation 126150 . 126151) (punctuation 126149 . 126150) (punctuation 126148 . 126149) (symbol 126140 . 126148) (punctuation 126138 . 126139) (symbol 126135 . 126138) (punctuation 126133 . 126134) (symbol 126116 . 126133) (punctuation 126114 . 126115) (BOOL 126110 . 126114) (punctuation 126109 . 126110) (symbol 126092 . 126109) (punctuation 126082 . 126083) (punctuation 126081 . 126082) (symbol 126075 . 126080) (punctuation 126074 . 126075) (punctuation 126073 . 126074) (punctuation 126072 . 126073) (symbol 126064 . 126072) (punctuation 126054 . 126055) (symbol 126040 . 126054) (punctuation 126038 . 126039) (symbol 126035 . 126038) (punctuation 126033 . 126034) (symbol 126010 . 126033) (punctuation 126008 . 126009) (BOOL 126004 . 126008) (punctuation 126003 . 126004) (symbol 125986 . 126003) (punctuation 125976 . 125977) (punctuation 125975 . 125976) (symbol 125969 . 125974) (punctuation 125968 . 125969) (punctuation 125967 . 125968) (punctuation 125966 . 125967) (symbol 125949 . 125966) (punctuation 125939 . 125940) (symbol 125936 . 125939) (punctuation 125934 . 125935) (symbol 125908 . 125934) (punctuation 125906 . 125907) (BOOL 125902 . 125906) (punctuation 125901 . 125902) (symbol 125884 . 125901) (punctuation 125874 . 125875) (punctuation 125873 . 125874) (symbol 125867 . 125872) (punctuation 125866 . 125867) (punctuation 125865 . 125866) (punctuation 125864 . 125865) (symbol 125848 . 125864) (punctuation 125838 . 125839) (symbol 125835 . 125838) (punctuation 125833 . 125834) (symbol 125808 . 125833) (punctuation 125806 . 125807) (BOOL 125802 . 125806) (punctuation 125801 . 125802) (symbol 125784 . 125801) (punctuation 125774 . 125775) (punctuation 125773 . 125774) (symbol 125767 . 125772) (punctuation 125766 . 125767) (punctuation 125765 . 125766) (punctuation 125764 . 125765) (symbol 125761 . 125764) (punctuation 125759 . 125760) (symbol 125741 . 125759) (punctuation 125739 . 125740) (BOOL 125735 . 125739) (punctuation 125734 . 125735) (symbol 125717 . 125734) (punctuation 125707 . 125708) (punctuation 125706 . 125707) (symbol 125700 . 125705) (punctuation 125699 . 125700) (punctuation 125698 . 125699) (punctuation 125697 . 125698) (symbol 125694 . 125697) (punctuation 125692 . 125693) (symbol 125677 . 125692) (punctuation 125675 . 125676) (BOOL 125671 . 125675) (punctuation 125670 . 125671) (symbol 125653 . 125670) (punctuation 125643 . 125644) (symbol 125637 . 125642) (BOOL 125632 . 125636) (symbol 125622 . 125631) (STATIC 125615 . 125621) (punctuation 125563 . 125564) (symbol 125551 . 125562) (USING 125545 . 125550) (punctuation 125505 . 125506) (symbol 125496 . 125504) (USING 125490 . 125495) (punctuation 125444 . 125445) (symbol 125429 . 125443) (USING 125423 . 125428) (punctuation 125374 . 125375) (symbol 125356 . 125373) (USING 125350 . 125355) (punctuation 125302 . 125303) (symbol 125285 . 125301) (USING 125279 . 125284) (string 125224 . 125271) (punctuation 125198 . 125199) (punctuation 125197 . 125198) (USING 124886 . 124891) (punctuation 124884 . 124885) (symbol 124875 . 124884) (TYPENAME 124866 . 124874) (punctuation 124864 . 124865) (symbol 124863 . 124864) (TYPENAME 124854 . 124862) (punctuation 124853 . 124854) (TEMPLATE 124844 . 124852) (USING 124772 . 124777) (punctuation 124770 . 124771) (symbol 124769 . 124770) (TYPENAME 124760 . 124768) (punctuation 124759 . 124760) (TEMPLATE 124750 . 124758) (USING 124643 . 124648) (punctuation 124641 . 124642) (symbol 124640 . 124641) (TYPENAME 124631 . 124639) (punctuation 124630 . 124631) (TEMPLATE 124621 . 124629) (USING 124547 . 124552) (punctuation 124545 . 124546) (symbol 124544 . 124545) (TYPENAME 124535 . 124543) (punctuation 124534 . 124535) (TEMPLATE 124525 . 124533) (USING 124438 . 124443) (punctuation 124436 . 124437) (symbol 124430 . 124436) (TYPENAME 124421 . 124429) (punctuation 124419 . 124420) (symbol 124418 . 124419) (TYPENAME 124409 . 124417) (punctuation 124408 . 124409) (TEMPLATE 124399 . 124407) (USING 124290 . 124295) (punctuation 124288 . 124289) (symbol 124287 . 124288) (TYPENAME 124278 . 124286) (punctuation 124277 . 124278) (TEMPLATE 124268 . 124276) (USING 124175 . 124180) (punctuation 124173 . 124174) (symbol 124167 . 124173) (TYPENAME 124158 . 124166) (punctuation 124156 . 124157) (symbol 124155 . 124156) (TYPENAME 124146 . 124154) (punctuation 124145 . 124146) (TEMPLATE 124136 . 124144) (USING 123969 . 123974) (punctuation 123967 . 123968) (symbol 123961 . 123967) (TYPENAME 123952 . 123960) (punctuation 123950 . 123951) (symbol 123945 . 123950) (TYPENAME 123936 . 123944) (punctuation 123934 . 123935) (symbol 123933 . 123934) (TYPENAME 123924 . 123932) (punctuation 123923 . 123924) (TEMPLATE 123914 . 123922) (USING 123802 . 123807) (punctuation 123800 . 123801) (symbol 123792 . 123800) (TYPENAME 123783 . 123791) (punctuation 123781 . 123782) (symbol 123780 . 123781) (TYPENAME 123771 . 123779) (punctuation 123770 . 123771) (TEMPLATE 123761 . 123769) (USING 123652 . 123657) (punctuation 123650 . 123651) (symbol 123643 . 123650) (TYPENAME 123634 . 123642) (punctuation 123632 . 123633) (symbol 123631 . 123632) (TYPENAME 123622 . 123630) (punctuation 123621 . 123622) (TEMPLATE 123612 . 123620) (USING 123520 . 123525) (punctuation 123518 . 123519) (symbol 123517 . 123518) (TYPENAME 123508 . 123516) (punctuation 123507 . 123508) (TEMPLATE 123498 . 123506) (USING 123436 . 123441) (punctuation 123434 . 123435) (symbol 123433 . 123434) (TYPENAME 123424 . 123432) (punctuation 123423 . 123424) (TEMPLATE 123414 . 123422) (punctuation 121998 . 121999) (symbol 121989 . 121997) (USING 121983 . 121988) (punctuation 121937 . 121938) (symbol 121922 . 121936) (USING 121916 . 121921) (punctuation 121867 . 121868) (symbol 121849 . 121866) (USING 121843 . 121848) (punctuation 121795 . 121796) (symbol 121778 . 121794) (USING 121772 . 121777) (punctuation 121658 . 121659) (symbol 121648 . 121657) (symbol 121634 . 121647) (punctuation 119062 . 119063) (symbol 118129 . 118138) (punctuation 113191 . 113192) (DEFAULT 113184 . 113191) (punctuation 113182 . 113183) (semantic-list 113179 . 113181) (symbol 113151 . 113179) (punctuation 113150 . 113151) (punctuation 113144 . 113145) (DEFAULT 113137 . 113144) (punctuation 113135 . 113136) (semantic-list 113102 . 113134) (punctuation 113101 . 113102) (OPERATOR 113093 . 113101) (punctuation 113132 . 113133) (punctuation 113091 . 113092) (symbol 113063 . 113091) (punctuation 113132 . 113133) (punctuation 113057 . 113058) (DELETE 113051 . 113057) (punctuation 113049 . 113050) (semantic-list 113011 . 113048) (punctuation 113010 . 113011) (OPERATOR 113002 . 113010) (punctuation 113000 . 113001) (symbol 112972 . 113000) (punctuation 112966 . 112967) (DEFAULT 112959 . 112966) (punctuation 112957 . 112958) (semantic-list 112924 . 112956) (symbol 112896 . 112924) (punctuation 112954 . 112955) (punctuation 112890 . 112891) (DELETE 112884 . 112890) (punctuation 112882 . 112883) (semantic-list 112844 . 112881) (symbol 112816 . 112844) (punctuation 112442 . 112443) (symbol 112428 . 112441) (USING 112422 . 112427) (punctuation 112373 . 112374) (symbol 112355 . 112372) (USING 112349 . 112354) (punctuation 112309 . 112310) (symbol 112300 . 112308) (USING 112294 . 112299) (punctuation 112248 . 112249) (symbol 112233 . 112247) (USING 112227 . 112232) (punctuation 112178 . 112179) (symbol 112160 . 112177) (USING 112154 . 112159) (punctuation 112106 . 112107) (symbol 112089 . 112105) (USING 112083 . 112088) (punctuation 110963 . 110964) (symbol 110571 . 110580) (punctuation 107752 . 107753) (DEFAULT 107745 . 107752) (punctuation 107743 . 107744) (semantic-list 107740 . 107742) (symbol 107721 . 107740) (punctuation 107720 . 107721) (punctuation 107714 . 107715) (DEFAULT 107707 . 107714) (punctuation 107705 . 107706) (semantic-list 107681 . 107704) (punctuation 107680 . 107681) (OPERATOR 107672 . 107680) (punctuation 107702 . 107703) (punctuation 107670 . 107671) (symbol 107651 . 107670) (punctuation 107702 . 107703) (punctuation 107645 . 107646) (DELETE 107639 . 107645) (punctuation 107637 . 107638) (semantic-list 107608 . 107636) (punctuation 107607 . 107608) (OPERATOR 107599 . 107607) (punctuation 107597 . 107598) (symbol 107578 . 107597) (punctuation 107572 . 107573) (DEFAULT 107565 . 107572) (punctuation 107563 . 107564) (semantic-list 107539 . 107562) (symbol 107520 . 107539) (punctuation 107560 . 107561) (punctuation 107514 . 107515) (DELETE 107508 . 107514) (punctuation 107506 . 107507) (semantic-list 107477 . 107505) (symbol 107458 . 107477) (EXPLICIT 107279 . 107287) (punctuation 107045 . 107046) (symbol 107036 . 107044) (USING 107030 . 107035) (punctuation 106984 . 106985) (symbol 106969 . 106983) (USING 106963 . 106968) (punctuation 106914 . 106915) (symbol 106896 . 106913) (USING 106890 . 106895) (punctuation 106842 . 106843) (symbol 106825 . 106841) (USING 106819 . 106824) (punctuation 106189 . 106190) (DEFAULT 106182 . 106189) (punctuation 106180 . 106181) (semantic-list 106177 . 106179) (symbol 106169 . 106177) (punctuation 106168 . 106169) (VIRTUAL 106160 . 106167) (punctuation 103425 . 103426) (symbol 103416 . 103424) (USING 103410 . 103415) (punctuation 103339 . 103340) (symbol 103324 . 103338) (USING 103318 . 103323) (punctuation 103229 . 103230) (symbol 103211 . 103228) (USING 103205 . 103210) (punctuation 103122 . 103123) (symbol 103105 . 103121) (USING 103099 . 103104) (OPERATOR 102258 . 102266) (punctuation 102148 . 102149) (number 102147 . 102148) (punctuation 102145 . 102146) (symbol 102140 . 102144) (punctuation 102139 . 102140) (punctuation 102138 . 102139) (punctuation 102137 . 102138) (INT 102134 . 102137) (punctuation 102104 . 102105) (symbol 102099 . 102104) (punctuation 102098 . 102099) (punctuation 102097 . 102098) (punctuation 102096 . 102097) (symbol 102079 . 102096) (punctuation 102078 . 102079) (punctuation 102077 . 102078) (punctuation 102076 . 102077) (semantic-list 102021 . 102076) (symbol 102013 . 102021) (semantic-list 102032 . 102075) (punctuation 102012 . 102013) (symbol 101997 . 102012) (TYPENAME 101988 . 101996) (punctuation 101986 . 101987) (symbol 101960 . 101986) (punctuation 101959 . 101960) (punctuation 101958 . 101959) (symbol 101955 . 101958) (punctuation 101954 . 101955) (symbol 101944 . 101954) (punctuation 101943 . 101944) (punctuation 101942 . 101943) (symbol 101939 . 101942) (symbol 101907 . 101910) (symbol 101901 . 101906) (punctuation 101900 . 101901) (punctuation 101899 . 101900) (punctuation 101898 . 101899) (symbol 101879 . 101898) (punctuation 101878 . 101879) (symbol 101868 . 101878) (punctuation 101867 . 101868) (punctuation 101866 . 101867) (symbol 101863 . 101866) (symbol 101859 . 101862) (punctuation 101858 . 101859) (symbol 101849 . 101858) (punctuation 101848 . 101849) (punctuation 101847 . 101848) (symbol 101844 . 101847) (TYPENAME 101822 . 101830) (punctuation 101820 . 101821) (symbol 101801 . 101820) (CLASS 101795 . 101800) (punctuation 101794 . 101795) (TEMPLATE 101786 . 101794) (semantic-list 101666 . 101669) (semantic-list 101658 . 101666) (punctuation 100205 . 100206) (number 100204 . 100205) (punctuation 100202 . 100203) (symbol 100197 . 100201) (punctuation 100196 . 100197) (punctuation 100195 . 100196) (punctuation 100194 . 100195) (INT 100191 . 100194) (punctuation 100172 . 100173) (symbol 100167 . 100172) (punctuation 100166 . 100167) (punctuation 100165 . 100166) (punctuation 100164 . 100165) (symbol 100138 . 100164) (punctuation 100137 . 100138) (punctuation 100136 . 100137) (symbol 100133 . 100136) (punctuation 100131 . 100132) (symbol 100114 . 100131) (punctuation 100113 . 100114) (punctuation 100112 . 100113) (punctuation 100111 . 100112) (symbol 100099 . 100111) (punctuation 100098 . 100099) (symbol 100083 . 100098) (TYPENAME 100074 . 100082) (punctuation 100073 . 100074) (symbol 100066 . 100073) (punctuation 100065 . 100066) (punctuation 100064 . 100065) (symbol 100061 . 100064) (punctuation 100042 . 100043) (symbol 100033 . 100042) (punctuation 100032 . 100033) (punctuation 100031 . 100032) (symbol 100028 . 100031) (TYPENAME 100019 . 100027) (punctuation 100004 . 100005) (symbol 99992 . 100004) (CLASS 99986 . 99991) (punctuation 99985 . 99986) (TEMPLATE 99977 . 99985) (punctuation 99746 . 99747) (number 99745 . 99746) (punctuation 99743 . 99744) (symbol 99738 . 99742) (punctuation 99737 . 99738) (punctuation 99736 . 99737) (punctuation 99735 . 99736) (INT 99732 . 99735) (punctuation 99713 . 99714) (number 99712 . 99713) (punctuation 99710 . 99711) (punctuation 99709 . 99710) (semantic-list 99665 . 99708) (SIZEOF 99659 . 99665) (symbol 99638 . 99641) (symbol 99632 . 99637) (punctuation 99631 . 99632) (punctuation 99630 . 99631) (punctuation 99629 . 99630) (symbol 99625 . 99629) (punctuation 99624 . 99625) (punctuation 99623 . 99624) (punctuation 99622 . 99623) (symbol 99617 . 99622) (punctuation 99616 . 99617) (symbol 99602 . 99616) (punctuation 99601 . 99602) (punctuation 99600 . 99601) (symbol 99597 . 99600) (TYPENAME 99588 . 99596) (punctuation 99587 . 99588) (symbol 99576 . 99587) (punctuation 99575 . 99576) (punctuation 99574 . 99575) (symbol 99571 . 99574) (symbol 99550 . 99553) (symbol 99544 . 99549) (punctuation 99543 . 99544) (punctuation 99542 . 99543) (punctuation 99541 . 99542) (symbol 99536 . 99541) (punctuation 99535 . 99536) (symbol 99525 . 99535) (punctuation 99524 . 99525) (punctuation 99523 . 99524) (symbol 99520 . 99523) (punctuation 99501 . 99502) (symbol 99492 . 99501) (punctuation 99491 . 99492) (punctuation 99490 . 99491) (symbol 99487 . 99490) (TYPENAME 99478 . 99486) (punctuation 99463 . 99464) (symbol 99458 . 99463) (TYPENAME 99449 . 99457) (punctuation 99448 . 99449) (TEMPLATE 99440 . 99448) (punctuation 99233 . 99234) (number 99232 . 99233) (punctuation 99230 . 99231) (symbol 99225 . 99229) (punctuation 99224 . 99225) (punctuation 99223 . 99224) (punctuation 99222 . 99223) (INT 99219 . 99222) (punctuation 99200 . 99201) (number 99199 . 99200) (punctuation 99197 . 99198) (punctuation 99196 . 99197) (semantic-list 99152 . 99195) (SIZEOF 99146 . 99152) (symbol 99125 . 99128) (symbol 99119 . 99124) (punctuation 99118 . 99119) (punctuation 99117 . 99118) (punctuation 99116 . 99117) (symbol 99112 . 99116) (punctuation 99111 . 99112) (punctuation 99110 . 99111) (punctuation 99109 . 99110) (symbol 99104 . 99109) (punctuation 99103 . 99104) (symbol 99089 . 99103) (punctuation 99088 . 99089) (punctuation 99087 . 99088) (symbol 99084 . 99087) (TYPENAME 99075 . 99083) (punctuation 99074 . 99075) (symbol 99063 . 99074) (punctuation 99062 . 99063) (punctuation 99061 . 99062) (symbol 99058 . 99061) (symbol 99037 . 99040) (symbol 99031 . 99036) (punctuation 99030 . 99031) (punctuation 99029 . 99030) (punctuation 99028 . 99029) (symbol 99023 . 99028) (punctuation 99022 . 99023) (symbol 99012 . 99022) (punctuation 99011 . 99012) (punctuation 99010 . 99011) (symbol 99007 . 99010) (punctuation 98988 . 98989) (symbol 98979 . 98988) (punctuation 98978 . 98979) (punctuation 98977 . 98978) (symbol 98974 . 98977) (TYPENAME 98965 . 98973) (punctuation 98950 . 98951) (symbol 98945 . 98950) (TYPENAME 98936 . 98944) (punctuation 98935 . 98936) (TEMPLATE 98927 . 98935) (punctuation 98451 . 98452) (semantic-list 96992 . 97438) (symbol 96979 . 96987) (symbol 96970 . 96978) (semantic-list 96967 . 96969) (symbol 96954 . 96967) (symbol 96945 . 96953) (punctuation 96944 . 96945) (punctuation 96943 . 96944) (punctuation 96942 . 96943) (CHAR 96938 . 96942) (punctuation 96937 . 96938) (symbol 96926 . 96937) (punctuation 96925 . 96926) (punctuation 96924 . 96925) (symbol 96921 . 96924) (punctuation 96900 . 96901) (symbol 96883 . 96891) (semantic-list 96857 . 96882) (symbol 96832 . 96857) (EXPLICIT 96823 . 96831) (semantic-list 91149 . 91333) (symbol 91136 . 91144) (symbol 91127 . 91135) (semantic-list 91124 . 91126) (symbol 91111 . 91124) (symbol 91102 . 91110) (punctuation 91101 . 91102) (punctuation 91100 . 91101) (punctuation 91099 . 91100) (CHAR 91095 . 91099) (punctuation 91094 . 91095) (symbol 91083 . 91094) (punctuation 91082 . 91083) (punctuation 91081 . 91082) (symbol 91078 . 91081) (punctuation 91071 . 91072) (DEFAULT 91064 . 91071) (punctuation 91062 . 91063) (symbol 91053 . 91061) (semantic-list 91050 . 91052) (symbol 91030 . 91050) (punctuation 91029 . 91030) (punctuation 91023 . 91024) (DELETE 91017 . 91023) (punctuation 91015 . 91016) (semantic-list 90990 . 91014) (punctuation 90989 . 90990) (OPERATOR 90981 . 90989) (punctuation 91012 . 91013) (punctuation 90979 . 90980) (symbol 90959 . 90979) (punctuation 91012 . 91013) (punctuation 90953 . 90954) (DELETE 90947 . 90953) (punctuation 90945 . 90946) (semantic-list 90920 . 90944) (symbol 90900 . 90920) (punctuation 90942 . 90943) (punctuation 90894 . 90895) (DELETE 90888 . 90894) (punctuation 90886 . 90887) (semantic-list 90862 . 90885) (punctuation 90861 . 90862) (OPERATOR 90853 . 90861) (punctuation 90851 . 90852) (symbol 90831 . 90851) (punctuation 90825 . 90826) (DELETE 90819 . 90825) (punctuation 90817 . 90818) (semantic-list 90787 . 90816) (symbol 90767 . 90787) (punctuation 90688 . 90689) (symbol 90671 . 90679) (semantic-list 90634 . 90670) (symbol 90614 . 90634) (semantic-list 90179 . 90405) (symbol 90166 . 90174) (semantic-list 90163 . 90165) (symbol 90150 . 90163) (symbol 90141 . 90149) (punctuation 90140 . 90141) (punctuation 90139 . 90140) (punctuation 90138 . 90139) (CHAR 90134 . 90138) (punctuation 90133 . 90134) (symbol 90122 . 90133) (punctuation 90121 . 90122) (punctuation 90120 . 90121) (symbol 90117 . 90120) (punctuation 89903 . 89904) (DELETE 89897 . 89903) (punctuation 89895 . 89896) (semantic-list 89870 . 89894) (punctuation 89869 . 89870) (OPERATOR 89861 . 89869) (punctuation 89892 . 89893) (punctuation 89859 . 89860) (symbol 89839 . 89859) (punctuation 89892 . 89893) (punctuation 89833 . 89834) (DELETE 89827 . 89833) (punctuation 89825 . 89826) (semantic-list 89800 . 89824) (symbol 89780 . 89800) (punctuation 89822 . 89823) (punctuation 89774 . 89775) (DELETE 89768 . 89774) (punctuation 89766 . 89767) (semantic-list 89742 . 89765) (punctuation 89741 . 89742) (OPERATOR 89733 . 89741) (punctuation 89731 . 89732) (symbol 89711 . 89731) (punctuation 89705 . 89706) (DELETE 89699 . 89705) (punctuation 89697 . 89698) (semantic-list 89667 . 89696) (symbol 89647 . 89667) (EXPLICIT 89515 . 89523) (semantic-list 89333 . 89509) (symbol 89320 . 89328) (semantic-list 89317 . 89319) (symbol 89297 . 89317) (punctuation 89296 . 89297) (semantic-list 88596 . 88638) (symbol 88583 . 88591) (symbol 88574 . 88582) (semantic-list 88571 . 88573) (symbol 88558 . 88571) (symbol 88549 . 88557) (punctuation 88548 . 88549) (punctuation 88547 . 88548) (punctuation 88546 . 88547) (CHAR 88542 . 88546) (punctuation 88541 . 88542) (symbol 88530 . 88541) (punctuation 88529 . 88530) (punctuation 88528 . 88529) (symbol 88525 . 88528) (punctuation 88518 . 88519) (DEFAULT 88511 . 88518) (punctuation 88509 . 88510) (symbol 88500 . 88508) (semantic-list 88497 . 88499) (symbol 88479 . 88497) (punctuation 88478 . 88479) (punctuation 88472 . 88473) (DEFAULT 88465 . 88472) (punctuation 88463 . 88464) (semantic-list 88440 . 88462) (punctuation 88439 . 88440) (OPERATOR 88431 . 88439) (punctuation 88460 . 88461) (punctuation 88429 . 88430) (symbol 88411 . 88429) (punctuation 88460 . 88461) (punctuation 88405 . 88406) (DELETE 88399 . 88405) (punctuation 88397 . 88398) (semantic-list 88369 . 88396) (punctuation 88368 . 88369) (OPERATOR 88360 . 88368) (punctuation 88358 . 88359) (symbol 88340 . 88358) (punctuation 88334 . 88335) (DEFAULT 88327 . 88334) (punctuation 88325 . 88326) (semantic-list 88302 . 88324) (symbol 88284 . 88302) (punctuation 88322 . 88323) (punctuation 88278 . 88279) (DELETE 88272 . 88278) (punctuation 88270 . 88271) (semantic-list 88242 . 88269) (symbol 88224 . 88242) (punctuation 88172 . 88173) (symbol 88155 . 88163) (semantic-list 88139 . 88153) (symbol 88121 . 88139) (EXPLICIT 88112 . 88120) (punctuation 87851 . 87852) (symbol 87835 . 87850) (USING 87829 . 87834) (punctuation 87789 . 87790) (DEFAULT 87782 . 87789) (punctuation 87780 . 87781) (semantic-list 87777 . 87779) (symbol 87755 . 87777) (punctuation 87754 . 87755) (VIRTUAL 87746 . 87753) (symbol 86951 . 86955) (punctuation 86949 . 86950) (symbol 86943 . 86949) (punctuation 86941 . 86942) (symbol 86934 . 86941) (punctuation 86932 . 86933) (symbol 86928 . 86932) (punctuation 86926 . 86927) (symbol 86922 . 86926) (ENUM 86894 . 86898) (semantic-list 85350 . 85352) (semantic-list 85311 . 85344) (punctuation 85293 . 85294) (punctuation 85292 . 85293) (punctuation 85281 . 85282) (punctuation 85280 . 85281) (semantic-list 85202 . 85275) (symbol 85194 . 85202) (semantic-list 85220 . 85274) (semantic-list 85158 . 85193) (symbol 85151 . 85158) (punctuation 85187 . 85188) (symbol 85146 . 85150) (punctuation 85187 . 85188) (STATIC 85139 . 85145) (punctuation 85187 . 85188) (punctuation 85133 . 85134) (symbol 85124 . 85133) (TYPENAME 85115 . 85123) (punctuation 85113 . 85114) (symbol 85100 . 85113) (TYPENAME 85091 . 85099) (punctuation 85090 . 85091) (TEMPLATE 85081 . 85089) (punctuation 85187 . 85188) (semantic-list 84749 . 84751) (semantic-list 84706 . 84743) (punctuation 84686 . 84687) (punctuation 84685 . 84686) (punctuation 84674 . 84675) (punctuation 84673 . 84674) (semantic-list 84589 . 84668) (symbol 84581 . 84589) (semantic-list 84607 . 84667) (semantic-list 84545 . 84580) (symbol 84536 . 84545) (punctuation 84560 . 84561) (symbol 84531 . 84535) (punctuation 84560 . 84561) (STATIC 84524 . 84530) (punctuation 84560 . 84561) (punctuation 84518 . 84519) (symbol 84509 . 84518) (TYPENAME 84500 . 84508) (punctuation 84498 . 84499) (symbol 84485 . 84498) (TYPENAME 84476 . 84484) (punctuation 84475 . 84476) (TEMPLATE 84467 . 84475) (punctuation 84560 . 84561) (punctuation 84140 . 84141) (TYPENAME 84132 . 84140) (punctuation 84130 . 84131) (TYPENAME 84122 . 84130) (punctuation 84121 . 84122) (TEMPLATE 84113 . 84121) (punctuation 83998 . 83999) (symbol 83990 . 83997) (punctuation 83988 . 83989) (symbol 83984 . 83988) (CONST 83978 . 83983) (symbol 83968 . 83977) (semantic-list 83815 . 83817) (semantic-list 83784 . 83809) (punctuation 83766 . 83767) (punctuation 83765 . 83766) (semantic-list 83716 . 83760) (symbol 83708 . 83716) (semantic-list 83725 . 83759) (CONST 83702 . 83707) (semantic-list 83725 . 83759) (semantic-list 83674 . 83701) (semantic-list 83672 . 83674) (OPERATOR 83664 . 83672) (punctuation 83695 . 83696) (symbol 83659 . 83663) (punctuation 83695 . 83696) (punctuation 83653 . 83654) (symbol 83652 . 83653) (TYPENAME 83643 . 83651) (punctuation 83641 . 83642) (symbol 83628 . 83641) (TYPENAME 83619 . 83627) (punctuation 83618 . 83619) (TEMPLATE 83610 . 83618) (punctuation 83695 . 83696) (punctuation 83514 . 83515) (punctuation 83513 . 83514) (punctuation 83512 . 83513) (punctuation 83511 . 83512) (punctuation 83510 . 83511) (punctuation 83505 . 83506) (punctuation 83456 . 83457) (symbol 83452 . 83456) (punctuation 83450 . 83451) (punctuation 83449 . 83450) (punctuation 83448 . 83449) (TYPENAME 83440 . 83448) (punctuation 83438 . 83439) (symbol 83425 . 83438) (TYPENAME 83416 . 83424) (punctuation 83415 . 83416) (TEMPLATE 83407 . 83415) (punctuation 83355 . 83356) (punctuation 83354 . 83355) (punctuation 83353 . 83354) (punctuation 83352 . 83353) (punctuation 83348 . 83349) (punctuation 83274 . 83275) (symbol 83271 . 83274) (punctuation 83269 . 83270) (punctuation 83268 . 83269) (punctuation 83267 . 83268) (symbol 83261 . 83267) (punctuation 83260 . 83261) (punctuation 83259 . 83260) (symbol 83256 . 83259) (punctuation 83254 . 83255) (symbol 83249 . 83254) (TYPENAME 83240 . 83248) (punctuation 83238 . 83239) (symbol 83225 . 83238) (TYPENAME 83216 . 83224) (punctuation 83215 . 83216) (TEMPLATE 83207 . 83215) (punctuation 83123 . 83124) (number 83122 . 83123) (punctuation 83120 . 83121) (punctuation 83118 . 83119) (INT 83115 . 83118) (punctuation 83113 . 83114) (symbol 83108 . 83113) (punctuation 83107 . 83108) (punctuation 83106 . 83107) (punctuation 83105 . 83106) (punctuation 83104 . 83105) (symbol 83096 . 83104) (punctuation 83095 . 83096) (punctuation 83094 . 83095) (symbol 83081 . 83094) (TYPENAME 83072 . 83080) (punctuation 83071 . 83072) (symbol 83050 . 83071) (punctuation 83048 . 83049) (symbol 83047 . 83048) (punctuation 83046 . 83047) (symbol 83039 . 83046) (punctuation 83038 . 83039) (punctuation 83037 . 83038) (symbol 83034 . 83037) (punctuation 83033 . 83034) (symbol 83022 . 83033) (punctuation 83009 . 83010) (symbol 83008 . 83009) (TYPENAME 82999 . 83007) (punctuation 82997 . 82998) (symbol 82984 . 82997) (TYPENAME 82975 . 82983) (punctuation 82973 . 82974) (TEMPLATE 82964 . 82972) (punctuation 82873 . 82874) (punctuation 82872 . 82873) (punctuation 82871 . 82872) (punctuation 82870 . 82871) (punctuation 82869 . 82870) (punctuation 82864 . 82865) (punctuation 82816 . 82817) (symbol 82812 . 82816) (punctuation 82810 . 82811) (punctuation 82809 . 82810) (punctuation 82808 . 82809) (TYPENAME 82800 . 82808) (punctuation 82798 . 82799) (symbol 82785 . 82798) (TYPENAME 82776 . 82784) (punctuation 82775 . 82776) (TEMPLATE 82767 . 82775) (semantic-list 82696 . 82699) (semantic-list 82690 . 82696) (punctuation 82650 . 82651) (number 82648 . 82649) (punctuation 82646 . 82647) (punctuation 82644 . 82645) (INT 82641 . 82644) (punctuation 82623 . 82624) (symbol 82618 . 82623) (punctuation 82617 . 82618) (punctuation 82616 . 82617) (punctuation 82615 . 82616) (punctuation 82610 . 82611) (punctuation 82584 . 82585) (symbol 82576 . 82584) (punctuation 82575 . 82576) (punctuation 82574 . 82575) (symbol 82561 . 82574) (TYPENAME 82552 . 82560) (punctuation 82551 . 82552) (symbol 82535 . 82551) (punctuation 82534 . 82535) (punctuation 82533 . 82534) (symbol 82530 . 82533) (symbol 82526 . 82529) (punctuation 82525 . 82526) (symbol 82514 . 82525) (punctuation 82508 . 82509) (symbol 82507 . 82508) (symbol 82500 . 82506) (punctuation 82499 . 82500) (punctuation 82498 . 82499) (symbol 82495 . 82498) (punctuation 82493 . 82494) (symbol 82492 . 82493) (TYPENAME 82483 . 82491) (punctuation 82481 . 82482) (symbol 82468 . 82481) (TYPENAME 82459 . 82467) (punctuation 82453 . 82454) (TEMPLATE 82444 . 82452) (punctuation 82359 . 82360) (punctuation 82129 . 82130) (number 82128 . 82129) (punctuation 82126 . 82127) (punctuation 82124 . 82125) (INT 82121 . 82124) (punctuation 82119 . 82120) (symbol 82114 . 82119) (punctuation 82113 . 82114) (punctuation 82112 . 82113) (punctuation 82111 . 82112) (symbol 82091 . 82111) (punctuation 82090 . 82091) (symbol 82077 . 82090) (symbol 82073 . 82076) (symbol 82069 . 82072) (symbol 82063 . 82068) (punctuation 82062 . 82063) (punctuation 82061 . 82062) (punctuation 82060 . 82061) (symbol 82040 . 82060) (punctuation 82038 . 82039) (symbol 82025 . 82038) (punctuation 82024 . 82025) (symbol 81999 . 82024) (punctuation 81998 . 81999) (symbol 81987 . 81998) (punctuation 81976 . 81977) (symbol 81956 . 81976) (TYPENAME 81947 . 81955) (punctuation 81945 . 81946) (symbol 81932 . 81945) (TYPENAME 81923 . 81931) (punctuation 81922 . 81923) (TEMPLATE 81914 . 81922) (punctuation 81830 . 81831) (punctuation 81595 . 81596) (number 81594 . 81595) (punctuation 81592 . 81593) (punctuation 81590 . 81591) (INT 81587 . 81590) (punctuation 81585 . 81586) (symbol 81580 . 81585) (punctuation 81579 . 81580) (punctuation 81578 . 81579) (punctuation 81577 . 81578) (symbol 81564 . 81577) (punctuation 81562 . 81563) (symbol 81561 . 81562) (punctuation 81560 . 81561) (symbol 81546 . 81560) (punctuation 81545 . 81546) (punctuation 81544 . 81545) (symbol 81541 . 81544) (punctuation 81540 . 81541) (symbol 81529 . 81540) (punctuation 81518 . 81519) (symbol 81517 . 81518) (TYPENAME 81508 . 81516) (punctuation 81506 . 81507) (symbol 81493 . 81506) (TYPENAME 81484 . 81492) (punctuation 81483 . 81484) (TEMPLATE 81475 . 81483) (punctuation 81344 . 81345) (number 81343 . 81344) (punctuation 81341 . 81342) (punctuation 81339 . 81340) (INT 81336 . 81339) (punctuation 81312 . 81313) (symbol 81307 . 81312) (punctuation 81306 . 81307) (punctuation 81305 . 81306) (punctuation 81304 . 81305) (symbol 81285 . 81304) (punctuation 81284 . 81285) (symbol 81271 . 81284) (symbol 81267 . 81270) (symbol 81241 . 81244) (symbol 81235 . 81240) (punctuation 81234 . 81235) (punctuation 81233 . 81234) (punctuation 81232 . 81233) (symbol 81213 . 81232) (punctuation 81211 . 81212) (symbol 81198 . 81211) (punctuation 81197 . 81198) (symbol 81172 . 81197) (symbol 81168 . 81171) (symbol 81142 . 81145) (symbol 81136 . 81141) (punctuation 81135 . 81136) (punctuation 81134 . 81135) (punctuation 81133 . 81134) (symbol 81114 . 81133) (punctuation 81112 . 81113) (symbol 81099 . 81112) (punctuation 81071 . 81072) (symbol 81046 . 81071) (symbol 81042 . 81045) (symbol 81016 . 81019) (symbol 81010 . 81015) (punctuation 81009 . 81010) (punctuation 81008 . 81009) (punctuation 81007 . 81008) (symbol 80988 . 81007) (punctuation 80964 . 80965) (symbol 80951 . 80964) (punctuation 80950 . 80951) (symbol 80926 . 80950) (punctuation 80925 . 80926) (symbol 80914 . 80925) (punctuation 80902 . 80903) (symbol 80883 . 80902) (TYPENAME 80874 . 80882) (punctuation 80872 . 80873) (symbol 80859 . 80872) (TYPENAME 80850 . 80858) (punctuation 80849 . 80850) (TEMPLATE 80840 . 80848) (semantic-list 80506 . 80682) (symbol 80497 . 80505) (semantic-list 80466 . 80496) (symbol 80459 . 80466) (VOID 80454 . 80458) (punctuation 80452 . 80453) (number 80451 . 80452) (punctuation 80449 . 80450) (punctuation 80447 . 80448) (INT 80444 . 80447) (punctuation 80442 . 80443) (symbol 80437 . 80442) (punctuation 80436 . 80437) (punctuation 80435 . 80436) (punctuation 80434 . 80435) (symbol 80426 . 80434) (punctuation 80425 . 80426) (symbol 80418 . 80425) (punctuation 80417 . 80418) (punctuation 80416 . 80417) (symbol 80413 . 80416) (punctuation 80412 . 80413) (symbol 80401 . 80412) (punctuation 80390 . 80391) (symbol 80382 . 80390) (TYPENAME 80373 . 80381) (punctuation 80371 . 80372) (symbol 80358 . 80371) (TYPENAME 80349 . 80357) (punctuation 80348 . 80349) (TEMPLATE 80340 . 80348) (semantic-list 80210 . 80338) (symbol 80201 . 80209) (semantic-list 80149 . 80200) (symbol 80142 . 80149) (VOID 80137 . 80141) (punctuation 80135 . 80136) (number 80134 . 80135) (punctuation 80132 . 80133) (punctuation 80130 . 80131) (INT 80127 . 80130) (punctuation 80125 . 80126) (symbol 80120 . 80125) (punctuation 80119 . 80120) (punctuation 80118 . 80119) (punctuation 80117 . 80118) (symbol 80090 . 80117) (punctuation 80088 . 80089) (symbol 80072 . 80088) (punctuation 80071 . 80072) (punctuation 80070 . 80071) (symbol 80057 . 80070) (TYPENAME 80048 . 80056) (punctuation 80047 . 80048) (symbol 80021 . 80047) (punctuation 80020 . 80021) (symbol 80009 . 80020) (punctuation 79998 . 79999) (symbol 79971 . 79998) (TYPENAME 79962 . 79970) (punctuation 79960 . 79961) (symbol 79947 . 79960) (TYPENAME 79938 . 79946) (punctuation 79937 . 79938) (TEMPLATE 79929 . 79937) (semantic-list 79797 . 79927) (symbol 79788 . 79796) (semantic-list 79735 . 79787) (symbol 79728 . 79735) (VOID 79723 . 79727) (punctuation 79721 . 79722) (number 79720 . 79721) (punctuation 79718 . 79719) (punctuation 79716 . 79717) (INT 79713 . 79716) (punctuation 79711 . 79712) (symbol 79706 . 79711) (punctuation 79705 . 79706) (punctuation 79704 . 79705) (punctuation 79703 . 79704) (symbol 79675 . 79703) (punctuation 79673 . 79674) (symbol 79656 . 79673) (punctuation 79655 . 79656) (punctuation 79654 . 79655) (symbol 79641 . 79654) (TYPENAME 79632 . 79640) (punctuation 79631 . 79632) (symbol 79605 . 79631) (punctuation 79604 . 79605) (symbol 79593 . 79604) (punctuation 79582 . 79583) (symbol 79554 . 79582) (TYPENAME 79545 . 79553) (punctuation 79543 . 79544) (symbol 79530 . 79543) (TYPENAME 79521 . 79529) (punctuation 79520 . 79521) (TEMPLATE 79512 . 79520) (semantic-list 79386 . 79510) (symbol 79377 . 79385) (semantic-list 79343 . 79376) (symbol 79336 . 79343) (VOID 79331 . 79335) (punctuation 79329 . 79330) (number 79328 . 79329) (punctuation 79326 . 79327) (punctuation 79324 . 79325) (INT 79321 . 79324) (punctuation 79319 . 79320) (symbol 79314 . 79319) (punctuation 79313 . 79314) (punctuation 79312 . 79313) (punctuation 79311 . 79312) (symbol 79302 . 79311) (punctuation 79301 . 79302) (symbol 79284 . 79301) (punctuation 79283 . 79284) (punctuation 79282 . 79283) (symbol 79279 . 79282) (punctuation 79278 . 79279) (symbol 79267 . 79278) (punctuation 79256 . 79257) (symbol 79247 . 79256) (TYPENAME 79238 . 79246) (punctuation 79236 . 79237) (symbol 79223 . 79236) (TYPENAME 79214 . 79222) (punctuation 79213 . 79214) (TEMPLATE 79205 . 79213) (punctuation 79124 . 79125) (punctuation 78902 . 78903) (number 78901 . 78902) (punctuation 78899 . 78900) (punctuation 78897 . 78898) (INT 78894 . 78897) (punctuation 78892 . 78893) (symbol 78887 . 78892) (punctuation 78886 . 78887) (punctuation 78885 . 78886) (punctuation 78884 . 78885) (symbol 78868 . 78884) (punctuation 78866 . 78867) (symbol 78858 . 78866) (punctuation 78857 . 78858) (punctuation 78856 . 78857) (symbol 78843 . 78856) (TYPENAME 78834 . 78842) (punctuation 78833 . 78834) (symbol 78817 . 78833) (punctuation 78816 . 78817) (punctuation 78815 . 78816) (symbol 78812 . 78815) (punctuation 78811 . 78812) (symbol 78800 . 78811) (punctuation 78789 . 78790) (symbol 78773 . 78789) (TYPENAME 78764 . 78772) (punctuation 78762 . 78763) (symbol 78749 . 78762) (TYPENAME 78740 . 78748) (punctuation 78739 . 78740) (TEMPLATE 78731 . 78739) (semantic-list 78665 . 78729) (symbol 78656 . 78664) (semantic-list 78632 . 78655) (symbol 78625 . 78632) (VOID 78620 . 78624) (punctuation 78618 . 78619) (number 78617 . 78618) (punctuation 78615 . 78616) (punctuation 78613 . 78614) (INT 78610 . 78613) (punctuation 78608 . 78609) (symbol 78603 . 78608) (punctuation 78602 . 78603) (punctuation 78601 . 78602) (punctuation 78600 . 78601) (symbol 78591 . 78600) (punctuation 78590 . 78591) (punctuation 78589 . 78590) (symbol 78576 . 78589) (TYPENAME 78567 . 78575) (punctuation 78565 . 78566) (symbol 78564 . 78565) (punctuation 78563 . 78564) (symbol 78556 . 78563) (punctuation 78555 . 78556) (punctuation 78554 . 78555) (symbol 78551 . 78554) (punctuation 78550 . 78551) (symbol 78539 . 78550) (punctuation 78528 . 78529) (symbol 78527 . 78528) (TYPENAME 78518 . 78526) (punctuation 78516 . 78517) (symbol 78503 . 78516) (TYPENAME 78494 . 78502) (punctuation 78493 . 78494) (TEMPLATE 78485 . 78493) (punctuation 78128 . 78129) (number 78127 . 78128) (punctuation 78125 . 78126) (punctuation 78123 . 78124) (INT 78120 . 78123) (punctuation 78118 . 78119) (symbol 78113 . 78118) (punctuation 78112 . 78113) (punctuation 78111 . 78112) (punctuation 78110 . 78111) (symbol 78102 . 78110) (punctuation 78101 . 78102) (punctuation 78100 . 78101) (symbol 78087 . 78100) (TYPENAME 78078 . 78086) (punctuation 78076 . 78077) (symbol 78056 . 78076) (punctuation 78055 . 78056) (symbol 78048 . 78055) (punctuation 78047 . 78048) (punctuation 78046 . 78047) (symbol 78043 . 78046) (symbol 78039 . 78042) (punctuation 78038 . 78039) (symbol 78027 . 78038) (punctuation 78012 . 78013) (symbol 77992 . 78012) (TYPENAME 77983 . 77991) (punctuation 77981 . 77982) (symbol 77968 . 77981) (TYPENAME 77959 . 77967) (punctuation 77958 . 77959) (TEMPLATE 77950 . 77958) (punctuation 77824 . 77825) (punctuation 77108 . 77109) (number 77107 . 77108) (punctuation 77105 . 77106) (punctuation 77103 . 77104) (INT 77100 . 77103) (punctuation 77098 . 77099) (symbol 77093 . 77098) (punctuation 77092 . 77093) (punctuation 77091 . 77092) (punctuation 77090 . 77091) (symbol 77077 . 77090) (punctuation 77075 . 77076) (symbol 77074 . 77075) (punctuation 77073 . 77074) (symbol 77059 . 77073) (punctuation 77058 . 77059) (punctuation 77057 . 77058) (symbol 77054 . 77057) (punctuation 77053 . 77054) (symbol 77042 . 77053) (punctuation 77027 . 77028) (symbol 77026 . 77027) (TYPENAME 77017 . 77025) (punctuation 77015 . 77016) (symbol 77002 . 77015) (TYPENAME 76993 . 77001) (punctuation 76992 . 76993) (TEMPLATE 76984 . 76992) (punctuation 76307 . 76308) (number 76306 . 76307) (punctuation 76304 . 76305) (punctuation 76302 . 76303) (INT 76299 . 76302) (punctuation 76272 . 76273) (symbol 76267 . 76272) (punctuation 76266 . 76267) (punctuation 76265 . 76266) (punctuation 76264 . 76265) (symbol 76257 . 76264) (punctuation 76256 . 76257) (punctuation 76255 . 76256) (symbol 76242 . 76255) (TYPENAME 76233 . 76241) (punctuation 76231 . 76232) (symbol 76212 . 76231) (punctuation 76211 . 76212) (symbol 76204 . 76211) (punctuation 76203 . 76204) (punctuation 76202 . 76203) (symbol 76199 . 76202) (symbol 76195 . 76198) (punctuation 76194 . 76195) (symbol 76183 . 76194) (punctuation 76168 . 76169) (symbol 76149 . 76168) (TYPENAME 76140 . 76148) (punctuation 76138 . 76139) (symbol 76125 . 76138) (TYPENAME 76116 . 76124) (punctuation 76115 . 76116) (TEMPLATE 76107 . 76115) (punctuation 75982 . 75983) (semantic-list 75473 . 75579) (symbol 75460 . 75468) (semantic-list 75395 . 75459) (symbol 75386 . 75395) (VOID 75381 . 75385) (STATIC 75374 . 75380) (punctuation 75368 . 75369) (symbol 75355 . 75368) (TYPENAME 75346 . 75354) (punctuation 75345 . 75346) (TEMPLATE 75337 . 75345) (semantic-list 75155 . 75262) (symbol 75142 . 75150) (semantic-list 75076 . 75141) (symbol 75067 . 75076) (VOID 75062 . 75066) (STATIC 75055 . 75061) (punctuation 75049 . 75050) (symbol 75036 . 75049) (TYPENAME 75027 . 75035) (punctuation 75026 . 75027) (TEMPLATE 75018 . 75026) (semantic-list 74838 . 74942) (symbol 74825 . 74833) (semantic-list 74762 . 74824) (symbol 74753 . 74762) (VOID 74748 . 74752) (STATIC 74741 . 74747) (punctuation 74735 . 74736) (symbol 74722 . 74735) (TYPENAME 74713 . 74721) (punctuation 74712 . 74713) (TEMPLATE 74704 . 74712) (punctuation 74390 . 74391) (number 74389 . 74390) (punctuation 74387 . 74388) (punctuation 74385 . 74386) (INT 74382 . 74385) (punctuation 74355 . 74356) (symbol 74350 . 74355) (punctuation 74349 . 74350) (punctuation 74348 . 74349) (punctuation 74347 . 74348) (symbol 74339 . 74347) (punctuation 74338 . 74339) (punctuation 74337 . 74338) (symbol 74324 . 74337) (TYPENAME 74315 . 74323) (punctuation 74313 . 74314) (symbol 74293 . 74313) (punctuation 74292 . 74293) (symbol 74285 . 74292) (punctuation 74284 . 74285) (punctuation 74283 . 74284) (symbol 74280 . 74283) (symbol 74276 . 74279) (punctuation 74275 . 74276) (symbol 74264 . 74275) (punctuation 74249 . 74250) (symbol 74229 . 74249) (TYPENAME 74220 . 74228) (punctuation 74218 . 74219) (symbol 74205 . 74218) (TYPENAME 74196 . 74204) (punctuation 74195 . 74196) (TEMPLATE 74187 . 74195) (punctuation 74065 . 74066) (semantic-list 73565 . 73662) (symbol 73552 . 73560) (semantic-list 73496 . 73551) (symbol 73487 . 73496) (VOID 73482 . 73486) (STATIC 73475 . 73481) (punctuation 73469 . 73470) (symbol 73456 . 73469) (TYPENAME 73447 . 73455) (punctuation 73446 . 73447) (TEMPLATE 73438 . 73446) (punctuation 72997 . 72998) (semantic-list 72822 . 72997) (punctuation 72820 . 72821) (punctuation 72819 . 72820) (symbol 72806 . 72818) (punctuation 72805 . 72806) (symbol 72784 . 72805) (punctuation 72783 . 72784) (punctuation 72782 . 72783) (symbol 72776 . 72782) (punctuation 72775 . 72776) (punctuation 72774 . 72775) (symbol 72766 . 72774) (punctuation 72765 . 72766) (punctuation 72764 . 72765) (punctuation 72762 . 72763) (symbol 72761 . 72762) (punctuation 72760 . 72761) (symbol 72747 . 72760) (CLASS 72741 . 72746) (punctuation 72739 . 72740) (symbol 72727 . 72739) (TYPENAME 72718 . 72726) (punctuation 72716 . 72717) (symbol 72715 . 72716) (symbol 72708 . 72714) (punctuation 72707 . 72708) (punctuation 72706 . 72707) (symbol 72703 . 72706) (punctuation 72702 . 72703) (TEMPLATE 72693 . 72701) (PUBLIC 72642 . 72648) (punctuation 72640 . 72641) (punctuation 72626 . 72627) (punctuation 72625 . 72626) (symbol 72613 . 72625) (punctuation 72612 . 72613) (symbol 72591 . 72612) (punctuation 72590 . 72591) (punctuation 72589 . 72590) (symbol 72583 . 72589) (punctuation 72582 . 72583) (punctuation 72581 . 72582) (symbol 72573 . 72581) (punctuation 72572 . 72573) (punctuation 72571 . 72572) (punctuation 72570 . 72571) (symbol 72560 . 72570) (CLASS 72554 . 72559) (punctuation 72552 . 72553) (symbol 72540 . 72552) (TYPENAME 72531 . 72539) (punctuation 72530 . 72531) (TEMPLATE 72521 . 72529) (semantic-list 71993 . 71995) (punctuation 71987 . 71988) (punctuation 71975 . 71976) (punctuation 71974 . 71975) (semantic-list 71909 . 71973) (symbol 71906 . 71909) (symbol 71901 . 71905) (punctuation 71899 . 71900) (number 71898 . 71899) (punctuation 71896 . 71897) (punctuation 71894 . 71895) (INT 71891 . 71894) (punctuation 71889 . 71890) (number 71888 . 71889) (punctuation 71886 . 71887) (punctuation 71885 . 71886) (symbol 71883 . 71884) (punctuation 71882 . 71883) (symbol 71871 . 71882) (punctuation 71869 . 71870) (symbol 71857 . 71869) (TYPENAME 71848 . 71856) (punctuation 71846 . 71847) (symbol 71845 . 71846) (symbol 71838 . 71844) (punctuation 71837 . 71838) (punctuation 71836 . 71837) (symbol 71833 . 71836) (punctuation 71832 . 71833) (TEMPLATE 71823 . 71831) (semantic-list 71631 . 71633) (punctuation 71627 . 71628) (punctuation 71615 . 71616) (punctuation 71614 . 71615) (semantic-list 71549 . 71613) (symbol 71546 . 71549) (symbol 71541 . 71545) (punctuation 71539 . 71540) (number 71538 . 71539) (punctuation 71536 . 71537) (punctuation 71534 . 71535) (INT 71531 . 71534) (punctuation 71529 . 71530) (number 71528 . 71529) (punctuation 71526 . 71527) (punctuation 71525 . 71526) (symbol 71523 . 71524) (punctuation 71522 . 71523) (symbol 71511 . 71522) (punctuation 71509 . 71510) (symbol 71497 . 71509) (TYPENAME 71488 . 71496) (punctuation 71486 . 71487) (symbol 71485 . 71486) (symbol 71478 . 71484) (punctuation 71477 . 71478) (punctuation 71476 . 71477) (symbol 71473 . 71476) (punctuation 71472 . 71473) (TEMPLATE 71463 . 71471) (semantic-list 71219 . 71295) (symbol 71206 . 71214) (semantic-list 71203 . 71205) (symbol 71200 . 71203) (punctuation 71198 . 71199) (symbol 71186 . 71198) (punctuation 71185 . 71186) (symbol 71164 . 71185) (semantic-list 71023 . 71101) (symbol 71010 . 71018) (semantic-list 71007 . 71009) (symbol 71002 . 71007) (punctuation 71000 . 71001) (symbol 70988 . 71000) (punctuation 70987 . 70988) (symbol 70966 . 70987) (punctuation 70881 . 70882) (symbol 70864 . 70872) (semantic-list 70824 . 70863) (symbol 70809 . 70824) (EXPLICIT 70800 . 70808) (punctuation 68999 . 69000) (symbol 68990 . 68998) (semantic-list 68972 . 68989) (symbol 68951 . 68972) (EXPLICIT 68942 . 68950) (punctuation 68466 . 68467) (symbol 68448 . 68465) (USING 68442 . 68447) (punctuation 68436 . 68437) (punctuation 68434 . 68435) (symbol 68423 . 68433) (punctuation 68421 . 68422) (symbol 68411 . 68420) (USING 68405 . 68410) (punctuation 68399 . 68400) (punctuation 68397 . 68398) (symbol 68386 . 68396) (punctuation 68384 . 68385) (symbol 68376 . 68383) (USING 68370 . 68375) (USING 68324 . 68329) (punctuation 68302 . 68303) (symbol 68286 . 68301) (USING 68280 . 68285) (punctuation 67327 . 67328) (symbol 67317 . 67326) (punctuation 67315 . 67316) (symbol 67311 . 67315) (CONST 67305 . 67310) (symbol 67295 . 67304) (semantic-list 67051 . 67053) (semantic-list 67037 . 67045) (punctuation 67017 . 67018) (punctuation 67016 . 67017) (semantic-list 66982 . 67011) (symbol 66974 . 66982) (semantic-list 66991 . 67010) (CONST 66964 . 66969) (semantic-list 66991 . 67010) (semantic-list 66931 . 66963) (semantic-list 66929 . 66931) (OPERATOR 66921 . 66929) (symbol 66916 . 66920) (punctuation 66910 . 66911) (symbol 66909 . 66910) (TYPENAME 66900 . 66908) (punctuation 66898 . 66899) (symbol 66885 . 66898) (TYPENAME 66876 . 66884) (punctuation 66875 . 66876) (TEMPLATE 66867 . 66875) (punctuation 66282 . 66283) (punctuation 66281 . 66282) (symbol 66276 . 66281) (punctuation 66275 . 66276) (punctuation 66274 . 66275) (punctuation 66273 . 66274) (symbol 66270 . 66273) (punctuation 66268 . 66269) (symbol 66260 . 66268) (punctuation 66259 . 66260) (punctuation 66258 . 66259) (symbol 66245 . 66258) (TYPENAME 66236 . 66244) (punctuation 66197 . 66198) (symbol 66181 . 66197) (punctuation 66180 . 66181) (punctuation 66179 . 66180) (symbol 66176 . 66179) (symbol 66172 . 66175) (punctuation 66171 . 66172) (symbol 66160 . 66171) (punctuation 66158 . 66159) (TYPENAME 66149 . 66157) (punctuation 66137 . 66138) (symbol 66128 . 66137) (TYPENAME 66119 . 66127) (punctuation 66117 . 66118) (symbol 66109 . 66117) (TYPENAME 66100 . 66108) (punctuation 66098 . 66099) (symbol 66094 . 66098) (TYPENAME 66085 . 66093) (punctuation 66083 . 66084) (symbol 66078 . 66083) (TYPENAME 66069 . 66077) (punctuation 66067 . 66068) (symbol 66064 . 66067) (TYPENAME 66055 . 66063) (punctuation 66053 . 66054) (symbol 66040 . 66053) (TYPENAME 66031 . 66039) (punctuation 66030 . 66031) (TEMPLATE 66021 . 66029) (punctuation 65479 . 65480) (punctuation 65478 . 65479) (symbol 65473 . 65478) (punctuation 65472 . 65473) (punctuation 65471 . 65472) (punctuation 65470 . 65471) (symbol 65467 . 65470) (punctuation 65465 . 65466) (symbol 65457 . 65465) (punctuation 65456 . 65457) (punctuation 65455 . 65456) (symbol 65442 . 65455) (TYPENAME 65433 . 65441) (punctuation 65394 . 65395) (symbol 65378 . 65394) (punctuation 65377 . 65378) (punctuation 65376 . 65377) (symbol 65373 . 65376) (symbol 65369 . 65372) (punctuation 65368 . 65369) (symbol 65357 . 65368) (punctuation 65355 . 65356) (TYPENAME 65346 . 65354) (punctuation 65334 . 65335) (symbol 65325 . 65334) (TYPENAME 65316 . 65324) (punctuation 65314 . 65315) (symbol 65307 . 65314) (TYPENAME 65298 . 65306) (punctuation 65296 . 65297) (symbol 65291 . 65296) (TYPENAME 65282 . 65290) (punctuation 65280 . 65281) (symbol 65277 . 65280) (TYPENAME 65268 . 65276) (punctuation 65266 . 65267) (symbol 65253 . 65266) (TYPENAME 65244 . 65252) (punctuation 65243 . 65244) (TEMPLATE 65234 . 65242) (punctuation 65160 . 65161) (punctuation 65159 . 65160) (punctuation 65158 . 65159) (punctuation 65157 . 65158) (punctuation 65156 . 65157) (punctuation 65151 . 65152) (punctuation 65100 . 65101) (symbol 65096 . 65100) (punctuation 65094 . 65095) (punctuation 65093 . 65094) (punctuation 65092 . 65093) (TYPENAME 65084 . 65092) (punctuation 65082 . 65083) (symbol 65069 . 65082) (TYPENAME 65060 . 65068) (punctuation 65059 . 65060) (TEMPLATE 65051 . 65059) (punctuation 64931 . 64932) (punctuation 64930 . 64931) (punctuation 64929 . 64930) (punctuation 64928 . 64929) (punctuation 64924 . 64925) (punctuation 64848 . 64849) (symbol 64845 . 64848) (punctuation 64843 . 64844) (punctuation 64842 . 64843) (punctuation 64841 . 64842) (symbol 64835 . 64841) (punctuation 64834 . 64835) (punctuation 64833 . 64834) (symbol 64830 . 64833) (punctuation 64828 . 64829) (symbol 64823 . 64828) (TYPENAME 64814 . 64822) (punctuation 64812 . 64813) (symbol 64799 . 64812) (TYPENAME 64790 . 64798) (punctuation 64789 . 64790) (TEMPLATE 64781 . 64789) (punctuation 63578 . 63579) (number 63577 . 63578) (punctuation 63575 . 63576) (punctuation 63573 . 63574) (INT 63570 . 63573) (punctuation 63555 . 63556) (symbol 63550 . 63555) (punctuation 63549 . 63550) (punctuation 63548 . 63549) (punctuation 63547 . 63548) (symbol 63538 . 63547) (punctuation 63537 . 63538) (punctuation 63536 . 63537) (symbol 63523 . 63536) (TYPENAME 63514 . 63522) (punctuation 63512 . 63513) (symbol 63498 . 63512) (punctuation 63497 . 63498) (symbol 63490 . 63497) (punctuation 63489 . 63490) (punctuation 63488 . 63489) (symbol 63485 . 63488) (symbol 63481 . 63484) (symbol 63464 . 63467) (symbol 63458 . 63463) (punctuation 63457 . 63458) (punctuation 63456 . 63457) (punctuation 63455 . 63456) (symbol 63441 . 63455) (punctuation 63440 . 63441) (punctuation 63439 . 63440) (symbol 63426 . 63439) (TYPENAME 63417 . 63425) (punctuation 63415 . 63416) (symbol 63401 . 63415) (punctuation 63400 . 63401) (symbol 63393 . 63400) (punctuation 63392 . 63393) (punctuation 63391 . 63392) (symbol 63388 . 63391) (symbol 63384 . 63387) (symbol 63367 . 63370) (symbol 63361 . 63366) (punctuation 63360 . 63361) (punctuation 63359 . 63360) (punctuation 63358 . 63359) (symbol 63342 . 63358) (punctuation 63341 . 63342) (punctuation 63340 . 63341) (symbol 63327 . 63340) (TYPENAME 63318 . 63326) (punctuation 63316 . 63317) (symbol 63302 . 63316) (punctuation 63301 . 63302) (symbol 63294 . 63301) (punctuation 63293 . 63294) (punctuation 63292 . 63293) (symbol 63289 . 63292) (symbol 63285 . 63288) (symbol 63268 . 63271) (symbol 63262 . 63267) (punctuation 63261 . 63262) (punctuation 63260 . 63261) (punctuation 63259 . 63260) (symbol 63242 . 63259) (punctuation 63241 . 63242) (punctuation 63240 . 63241) (symbol 63227 . 63240) (TYPENAME 63218 . 63226) (punctuation 63216 . 63217) (symbol 63202 . 63216) (punctuation 63201 . 63202) (symbol 63194 . 63201) (punctuation 63193 . 63194) (punctuation 63192 . 63193) (symbol 63189 . 63192) (symbol 63185 . 63188) (symbol 63168 . 63171) (symbol 63162 . 63167) (punctuation 63161 . 63162) (punctuation 63160 . 63161) (punctuation 63159 . 63160) (symbol 63145 . 63159) (punctuation 63144 . 63145) (symbol 63131 . 63144) (punctuation 63130 . 63131) (punctuation 63129 . 63130) (symbol 63126 . 63129) (punctuation 63111 . 63112) (symbol 63099 . 63110) (punctuation 63088 . 63089) (symbol 63074 . 63088) (TYPENAME 63065 . 63073) (punctuation 63063 . 63064) (symbol 63050 . 63063) (TYPENAME 63041 . 63049) (punctuation 63040 . 63041) (TEMPLATE 63032 . 63040) (punctuation 62084 . 62085) (number 62083 . 62084) (punctuation 62081 . 62082) (punctuation 62079 . 62080) (INT 62076 . 62079) (punctuation 62074 . 62075) (symbol 62069 . 62074) (punctuation 62068 . 62069) (punctuation 62067 . 62068) (punctuation 62066 . 62067) (symbol 62043 . 62066) (punctuation 62041 . 62042) (symbol 62028 . 62041) (punctuation 62027 . 62028) (symbol 61999 . 62027) (punctuation 61998 . 61999) (symbol 61987 . 61998) (punctuation 61976 . 61977) (symbol 61953 . 61976) (TYPENAME 61944 . 61952) (punctuation 61942 . 61943) (symbol 61929 . 61942) (TYPENAME 61920 . 61928) (punctuation 61919 . 61920) (TEMPLATE 61911 . 61919) (semantic-list 61651 . 61653) (semantic-list 61643 . 61645) (punctuation 61642 . 61643) (punctuation 61598 . 61599) (TEMPLATE 61586 . 61594) (punctuation 61585 . 61586) (semantic-list 61554 . 61582) (punctuation 61523 . 61524) (punctuation 61522 . 61523) (semantic-list 61468 . 61521) (symbol 61459 . 61468) (symbol 61454 . 61458) (punctuation 61451 . 61452) (number 61449 . 61450) (punctuation 61447 . 61448) (punctuation 61445 . 61446) (INT 61441 . 61444) (punctuation 61425 . 61426) (symbol 61420 . 61425) (punctuation 61419 . 61420) (punctuation 61418 . 61419) (punctuation 61417 . 61418) (symbol 61395 . 61417) (punctuation 61394 . 61395) (symbol 61381 . 61394) (symbol 61377 . 61380) (symbol 61359 . 61362) (symbol 61353 . 61358) (punctuation 61352 . 61353) (punctuation 61351 . 61352) (punctuation 61350 . 61351) (symbol 61328 . 61350) (punctuation 61326 . 61327) (symbol 61313 . 61326) (punctuation 61312 . 61313) (symbol 61284 . 61312) (symbol 61280 . 61283) (symbol 61262 . 61265) (symbol 61256 . 61261) (punctuation 61255 . 61256) (punctuation 61254 . 61255) (punctuation 61253 . 61254) (symbol 61231 . 61253) (punctuation 61229 . 61230) (symbol 61216 . 61229) (punctuation 61215 . 61216) (symbol 61187 . 61215) (symbol 61183 . 61186) (symbol 61165 . 61168) (symbol 61159 . 61164) (punctuation 61158 . 61159) (punctuation 61157 . 61158) (punctuation 61156 . 61157) (symbol 61134 . 61156) (punctuation 61132 . 61133) (symbol 61119 . 61132) (punctuation 61118 . 61119) (symbol 61091 . 61118) (punctuation 61075 . 61076) (symbol 61063 . 61074) (punctuation 61051 . 61052) (symbol 61029 . 61051) (TYPENAME 61020 . 61028) (punctuation 61018 . 61019) (symbol 61005 . 61018) (TYPENAME 60996 . 61004) (punctuation 60995 . 60996) (TEMPLATE 60986 . 60994) (semantic-list 60037 . 60039) (semantic-list 60025 . 60027) (punctuation 60024 . 60025) (punctuation 59980 . 59981) (TEMPLATE 59968 . 59976) (punctuation 59967 . 59968) (semantic-list 59900 . 59960) (punctuation 59892 . 59893) (punctuation 59873 . 59874) (punctuation 59872 . 59873) (semantic-list 59790 . 59871) (symbol 59770 . 59790) (symbol 59765 . 59769) (punctuation 59763 . 59764) (symbol 59741 . 59763) (TYPENAME 59732 . 59740) (punctuation 59730 . 59731) (symbol 59717 . 59730) (TYPENAME 59708 . 59716) (punctuation 59707 . 59708) (TEMPLATE 59699 . 59707) (semantic-list 59594 . 59596) (semantic-list 59586 . 59588) (TEMPLATE 59571 . 59579) (punctuation 59570 . 59571) (punctuation 59558 . 59559) (punctuation 59557 . 59558) (semantic-list 59455 . 59556) (symbol 59435 . 59455) (symbol 59430 . 59434) (punctuation 59428 . 59429) (symbol 59427 . 59428) (symbol 59420 . 59426) (punctuation 59419 . 59420) (punctuation 59418 . 59419) (symbol 59415 . 59418) (punctuation 59413 . 59414) (symbol 59412 . 59413) (TYPENAME 59403 . 59411) (punctuation 59401 . 59402) (symbol 59388 . 59401) (TYPENAME 59379 . 59387) (punctuation 59378 . 59379) (TEMPLATE 59369 . 59377) (punctuation 58813 . 58814) (number 58812 . 58813) (punctuation 58810 . 58811) (punctuation 58808 . 58809) (INT 58805 . 58808) (punctuation 58803 . 58804) (symbol 58798 . 58803) (punctuation 58797 . 58798) (punctuation 58796 . 58797) (punctuation 58795 . 58796) (symbol 58794 . 58795) (punctuation 58792 . 58793) (symbol 58779 . 58792) (punctuation 58778 . 58779) (symbol 58764 . 58778) (punctuation 58763 . 58764) (punctuation 58762 . 58763) (symbol 58759 . 58762) (punctuation 58758 . 58759) (symbol 58747 . 58758) (punctuation 58736 . 58737) (symbol 58735 . 58736) (TYPENAME 58726 . 58734) (punctuation 58724 . 58725) (symbol 58711 . 58724) (TYPENAME 58702 . 58710) (punctuation 58701 . 58702) (TEMPLATE 58693 . 58701) (punctuation 58249 . 58250) (number 58248 . 58249) (punctuation 58246 . 58247) (punctuation 58244 . 58245) (INT 58241 . 58244) (punctuation 58239 . 58240) (symbol 58234 . 58239) (punctuation 58233 . 58234) (punctuation 58232 . 58233) (punctuation 58231 . 58232) (symbol 58230 . 58231) (punctuation 58228 . 58229) (symbol 58215 . 58228) (punctuation 58214 . 58215) (symbol 58200 . 58214) (punctuation 58199 . 58200) (punctuation 58198 . 58199) (symbol 58195 . 58198) (punctuation 58194 . 58195) (symbol 58183 . 58194) (punctuation 58172 . 58173) (symbol 58163 . 58172) (TYPENAME 58154 . 58162) (punctuation 58152 . 58153) (symbol 58151 . 58152) (TYPENAME 58142 . 58150) (punctuation 58140 . 58141) (symbol 58127 . 58140) (TYPENAME 58118 . 58126) (punctuation 58117 . 58118) (TEMPLATE 58109 . 58117) (punctuation 57879 . 57880) (number 57878 . 57879) (punctuation 57876 . 57877) (punctuation 57874 . 57875) (INT 57871 . 57874) (punctuation 57869 . 57870) (symbol 57864 . 57869) (punctuation 57863 . 57864) (punctuation 57862 . 57863) (punctuation 57861 . 57862) (symbol 57853 . 57861) (punctuation 57852 . 57853) (symbol 57845 . 57852) (punctuation 57844 . 57845) (punctuation 57843 . 57844) (symbol 57840 . 57843) (punctuation 57839 . 57840) (symbol 57828 . 57839) (punctuation 57817 . 57818) (symbol 57809 . 57817) (TYPENAME 57800 . 57808) (punctuation 57798 . 57799) (symbol 57785 . 57798) (TYPENAME 57776 . 57784) (punctuation 57775 . 57776) (TEMPLATE 57767 . 57775) (punctuation 56987 . 56988) (number 56985 . 56986) (punctuation 56983 . 56984) (punctuation 56981 . 56982) (INT 56977 . 56980) (punctuation 56967 . 56968) (symbol 56962 . 56967) (punctuation 56961 . 56962) (punctuation 56960 . 56961) (punctuation 56959 . 56960) (symbol 56936 . 56959) (punctuation 56909 . 56910) (symbol 56901 . 56909) (punctuation 56900 . 56901) (punctuation 56899 . 56900) (symbol 56886 . 56899) (TYPENAME 56877 . 56885) (punctuation 56876 . 56877) (symbol 56869 . 56876) (punctuation 56868 . 56869) (punctuation 56867 . 56868) (symbol 56864 . 56867) (symbol 56860 . 56863) (symbol 56848 . 56851) (symbol 56842 . 56847) (punctuation 56841 . 56842) (punctuation 56840 . 56841) (punctuation 56839 . 56840) (symbol 56816 . 56839) (punctuation 56814 . 56815) (symbol 56801 . 56814) (punctuation 56800 . 56801) (symbol 56772 . 56800) (punctuation 56762 . 56763) (symbol 56750 . 56761) (punctuation 56744 . 56745) (symbol 56721 . 56744) (TYPENAME 56712 . 56720) (punctuation 56710 . 56711) (symbol 56697 . 56710) (TYPENAME 56688 . 56696) (punctuation 56682 . 56683) (TEMPLATE 56673 . 56681) (punctuation 55136 . 55137) (number 55135 . 55136) (punctuation 55133 . 55134) (punctuation 55131 . 55132) (INT 55128 . 55131) (punctuation 55105 . 55106) (symbol 55100 . 55105) (punctuation 55099 . 55100) (punctuation 55098 . 55099) (punctuation 55097 . 55098) (symbol 55088 . 55097) (punctuation 55087 . 55088) (punctuation 55086 . 55087) (symbol 55073 . 55086) (TYPENAME 55064 . 55072) (punctuation 55062 . 55063) (symbol 55048 . 55062) (punctuation 55047 . 55048) (symbol 55040 . 55047) (punctuation 55039 . 55040) (punctuation 55038 . 55039) (symbol 55035 . 55038) (symbol 55031 . 55034) (symbol 55006 . 55009) (symbol 55000 . 55005) (punctuation 54999 . 55000) (punctuation 54998 . 54999) (punctuation 54997 . 54998) (symbol 54983 . 54997) (punctuation 54982 . 54983) (symbol 54969 . 54982) (punctuation 54968 . 54969) (punctuation 54967 . 54968) (symbol 54964 . 54967) (punctuation 54963 . 54964) (symbol 54952 . 54963) (punctuation 54941 . 54942) (symbol 54927 . 54941) (TYPENAME 54918 . 54926) (punctuation 54916 . 54917) (symbol 54903 . 54916) (TYPENAME 54894 . 54902) (punctuation 54893 . 54894) (TEMPLATE 54885 . 54893) (semantic-list 54026 . 54468) (symbol 54017 . 54025) (semantic-list 53978 . 54016) (punctuation 53977 . 53978) (OPERATOR 53969 . 53977) (BOOL 53964 . 53968) (INLINE 53957 . 53963) (symbol 53616 . 53625) (punctuation 53571 . 53572) (symbol 53559 . 53571) (punctuation 53515 . 53516) (symbol 53500 . 53515) (punctuation 53457 . 53458) (symbol 53443 . 53457) (punctuation 53409 . 53410) (symbol 53402 . 53409) (punctuation 53368 . 53369) (symbol 53362 . 53368) (punctuation 53303 . 53304) (symbol 53298 . 53303) (punctuation 53234 . 53235) (symbol 53228 . 53234) (punctuation 53194 . 53195) (symbol 53190 . 53194) (ENUM 53150 . 53154) (punctuation 51467 . 51468) (semantic-list 51371 . 51467) (punctuation 51369 . 51370) (punctuation 51368 . 51369) (symbol 51362 . 51367) (punctuation 51361 . 51362) (punctuation 51360 . 51361) (punctuation 51359 . 51360) (symbol 51345 . 51359) (punctuation 51344 . 51345) (symbol 51328 . 51344) (punctuation 51327 . 51328) (symbol 51316 . 51327) (punctuation 51310 . 51311) (symbol 51296 . 51310) (punctuation 51294 . 51295) (symbol 51281 . 51294) (punctuation 51275 . 51276) (symbol 51251 . 51274) (STRUCT 51244 . 51250) (punctuation 51242 . 51243) (symbol 51228 . 51242) (TYPENAME 51219 . 51227) (punctuation 51217 . 51218) (symbol 51204 . 51217) (TYPENAME 51195 . 51203) (punctuation 51194 . 51195) (TEMPLATE 51185 . 51193) (punctuation 51130 . 51131) (VOID 51126 . 51130) (punctuation 51124 . 51125) (TYPENAME 51115 . 51123) (punctuation 51113 . 51114) (symbol 51099 . 51113) (TYPENAME 51090 . 51098) (punctuation 51088 . 51089) (symbol 51075 . 51088) (TYPENAME 51066 . 51074) (punctuation 51065 . 51066) (TEMPLATE 51056 . 51064) (punctuation 50850 . 50851) (semantic-list 50424 . 50850) (punctuation 50422 . 50423) (punctuation 50421 . 50422) (symbol 50415 . 50420) (punctuation 50414 . 50415) (punctuation 50413 . 50414) (punctuation 50412 . 50413) (symbol 50385 . 50412) (punctuation 50383 . 50384) (BOOL 50379 . 50383) (punctuation 50378 . 50379) (symbol 50371 . 50378) (punctuation 50370 . 50371) (punctuation 50369 . 50370) (symbol 50366 . 50369) (symbol 50362 . 50365) (symbol 50354 . 50357) (symbol 50348 . 50353) (punctuation 50347 . 50348) (punctuation 50346 . 50347) (punctuation 50345 . 50346) (symbol 50318 . 50345) (punctuation 50317 . 50318) (symbol 50306 . 50317) (punctuation 50305 . 50306) (punctuation 50304 . 50305) (symbol 50301 . 50304) (symbol 50293 . 50296) (symbol 50287 . 50292) (punctuation 50286 . 50287) (punctuation 50285 . 50286) (punctuation 50284 . 50285) (symbol 50269 . 50284) (punctuation 50268 . 50269) (symbol 50257 . 50268) (punctuation 50256 . 50257) (punctuation 50255 . 50256) (symbol 50252 . 50255) (punctuation 50251 . 50252) (symbol 50240 . 50251) (punctuation 50234 . 50235) (symbol 50207 . 50234) (punctuation 50205 . 50206) (symbol 50190 . 50205) (punctuation 50184 . 50185) (symbol 50152 . 50183) (STRUCT 50145 . 50151) (punctuation 50143 . 50144) (symbol 50116 . 50143) (TYPENAME 50107 . 50115) (punctuation 50105 . 50106) (symbol 50090 . 50105) (TYPENAME 50081 . 50089) (punctuation 50080 . 50081) (TEMPLATE 50071 . 50079) (punctuation 50007 . 50008) (VOID 50003 . 50007) (punctuation 50001 . 50002) (TYPENAME 49992 . 50000) (punctuation 49980 . 49981) (symbol 49953 . 49980) (TYPENAME 49944 . 49952) (punctuation 49942 . 49943) (symbol 49927 . 49942) (TYPENAME 49918 . 49926) (punctuation 49917 . 49918) (TEMPLATE 49908 . 49916) (punctuation 49720 . 49721) (semantic-list 48938 . 49720) (punctuation 48936 . 48937) (punctuation 48935 . 48936) (symbol 48929 . 48934) (punctuation 48928 . 48929) (punctuation 48927 . 48928) (punctuation 48926 . 48927) (punctuation 48925 . 48926) (symbol 48903 . 48925) (punctuation 48901 . 48902) (symbol 48889 . 48901) (punctuation 48888 . 48889) (symbol 48878 . 48888) (punctuation 48872 . 48873) (symbol 48856 . 48872) (symbol 48848 . 48851) (symbol 48842 . 48847) (punctuation 48841 . 48842) (punctuation 48840 . 48841) (punctuation 48839 . 48840) (symbol 48817 . 48839) (punctuation 48815 . 48816) (symbol 48805 . 48815) (punctuation 48804 . 48805) (symbol 48793 . 48804) (symbol 48785 . 48788) (symbol 48779 . 48784) (punctuation 48778 . 48779) (punctuation 48777 . 48778) (punctuation 48776 . 48777) (symbol 48754 . 48776) (punctuation 48752 . 48753) (symbol 48740 . 48752) (punctuation 48739 . 48740) (symbol 48728 . 48739) (symbol 48720 . 48723) (symbol 48714 . 48719) (punctuation 48713 . 48714) (punctuation 48712 . 48713) (punctuation 48711 . 48712) (symbol 48701 . 48711) (punctuation 48700 . 48701) (punctuation 48699 . 48700) (symbol 48686 . 48699) (TYPENAME 48677 . 48685) (punctuation 48671 . 48672) (symbol 48649 . 48671) (punctuation 48648 . 48649) (symbol 48641 . 48648) (punctuation 48640 . 48641) (punctuation 48639 . 48640) (symbol 48636 . 48639) (symbol 48632 . 48635) (punctuation 48631 . 48632) (symbol 48620 . 48631) (punctuation 48614 . 48615) (symbol 48592 . 48614) (punctuation 48590 . 48591) (symbol 48577 . 48590) (punctuation 48571 . 48572) (symbol 48538 . 48570) (STRUCT 48531 . 48537) (punctuation 48529 . 48530) (symbol 48507 . 48529) (TYPENAME 48498 . 48506) (punctuation 48496 . 48497) (symbol 48483 . 48496) (TYPENAME 48474 . 48482) (punctuation 48473 . 48474) (TEMPLATE 48464 . 48472) (punctuation 48442 . 48443) (punctuation 48428 . 48429) (punctuation 48427 . 48428) (symbol 48421 . 48426) (punctuation 48420 . 48421) (punctuation 48419 . 48420) (punctuation 48418 . 48419) (symbol 48408 . 48418) (punctuation 48407 . 48408) (punctuation 48406 . 48407) (symbol 48393 . 48406) (TYPENAME 48384 . 48392) (punctuation 48378 . 48379) (symbol 48356 . 48378) (punctuation 48355 . 48356) (symbol 48348 . 48355) (punctuation 48347 . 48348) (punctuation 48346 . 48347) (symbol 48343 . 48346) (punctuation 48342 . 48343) (symbol 48331 . 48342) (punctuation 48325 . 48326) (symbol 48303 . 48325) (punctuation 48301 . 48302) (symbol 48288 . 48301) (punctuation 48282 . 48283) (symbol 48249 . 48281) (STRUCT 48242 . 48248) (punctuation 48240 . 48241) (symbol 48218 . 48240) (TYPENAME 48209 . 48217) (punctuation 48207 . 48208) (symbol 48194 . 48207) (TYPENAME 48185 . 48193) (punctuation 48184 . 48185) (TEMPLATE 48175 . 48183) (punctuation 48110 . 48111) (VOID 48106 . 48110) (punctuation 48104 . 48105) (TYPENAME 48095 . 48103) (punctuation 48093 . 48094) (symbol 48071 . 48093) (TYPENAME 48062 . 48070) (punctuation 48060 . 48061) (symbol 48047 . 48060) (TYPENAME 48038 . 48046) (punctuation 48037 . 48038) (TEMPLATE 48028 . 48036) (punctuation 47852 . 47853) (semantic-list 47712 . 47852) (punctuation 47710 . 47711) (punctuation 47709 . 47710) (symbol 47703 . 47708) (punctuation 47702 . 47703) (punctuation 47701 . 47702) (punctuation 47700 . 47701) (punctuation 47699 . 47700) (symbol 47680 . 47699) (punctuation 47679 . 47680) (symbol 47664 . 47679) (punctuation 47658 . 47659) (symbol 47640 . 47658) (symbol 47636 . 47639) (symbol 47447 . 47450) (symbol 47441 . 47446) (punctuation 47440 . 47441) (punctuation 47439 . 47440) (punctuation 47438 . 47439) (symbol 47419 . 47438) (punctuation 47417 . 47418) (symbol 47407 . 47417) (punctuation 47406 . 47407) (symbol 47395 . 47406) (symbol 47387 . 47390) (symbol 47381 . 47386) (punctuation 47380 . 47381) (punctuation 47379 . 47380) (punctuation 47378 . 47379) (symbol 47359 . 47378) (punctuation 47357 . 47358) (symbol 47345 . 47357) (punctuation 47344 . 47345) (symbol 47333 . 47344) (punctuation 47332 . 47333) (symbol 47321 . 47332) (punctuation 47315 . 47316) (symbol 47296 . 47315) (punctuation 47294 . 47295) (symbol 47281 . 47294) (punctuation 47275 . 47276) (symbol 47245 . 47274) (STRUCT 47238 . 47244) (punctuation 47236 . 47237) (symbol 47217 . 47236) (TYPENAME 47208 . 47216) (punctuation 47206 . 47207) (symbol 47193 . 47206) (TYPENAME 47184 . 47192) (punctuation 47183 . 47184) (TEMPLATE 47174 . 47182) (punctuation 47112 . 47113) (VOID 47108 . 47112) (punctuation 47106 . 47107) (TYPENAME 47097 . 47105) (punctuation 47095 . 47096) (symbol 47076 . 47095) (TYPENAME 47067 . 47075) (punctuation 47065 . 47066) (symbol 47052 . 47065) (TYPENAME 47043 . 47051) (punctuation 47042 . 47043) (TEMPLATE 47033 . 47041) (punctuation 46841 . 46842) (semantic-list 46699 . 46841) (punctuation 46697 . 46698) (punctuation 46696 . 46697) (symbol 46690 . 46695) (punctuation 46689 . 46690) (punctuation 46688 . 46689) (punctuation 46687 . 46688) (symbol 46664 . 46687) (punctuation 46662 . 46663) (symbol 46650 . 46662) (punctuation 46644 . 46645) (symbol 46634 . 46644) (punctuation 46633 . 46634) (punctuation 46632 . 46633) (symbol 46624 . 46632) (punctuation 46623 . 46624) (punctuation 46622 . 46623) (symbol 46609 . 46622) (TYPENAME 46600 . 46608) (punctuation 46599 . 46600) (symbol 46582 . 46599) (punctuation 46581 . 46582) (symbol 46570 . 46581) (punctuation 46564 . 46565) (symbol 46541 . 46564) (punctuation 46539 . 46540) (symbol 46526 . 46539) (punctuation 46520 . 46521) (symbol 46486 . 46519) (STRUCT 46479 . 46485) (punctuation 46477 . 46478) (symbol 46454 . 46477) (TYPENAME 46445 . 46453) (punctuation 46443 . 46444) (symbol 46430 . 46443) (TYPENAME 46421 . 46429) (punctuation 46420 . 46421) (TEMPLATE 46411 . 46419) (punctuation 46345 . 46346) (VOID 46341 . 46345) (punctuation 46339 . 46340) (TYPENAME 46330 . 46338) (punctuation 46318 . 46319) (symbol 46295 . 46318) (TYPENAME 46286 . 46294) (punctuation 46284 . 46285) (symbol 46271 . 46284) (TYPENAME 46262 . 46270) (punctuation 46261 . 46262) (TEMPLATE 46252 . 46260) (punctuation 46066 . 46067) (semantic-list 45935 . 46066) (punctuation 45933 . 45934) (punctuation 45932 . 45933) (symbol 45926 . 45931) (punctuation 45925 . 45926) (punctuation 45924 . 45925) (punctuation 45923 . 45924) (symbol 45903 . 45923) (punctuation 45901 . 45902) (symbol 45889 . 45901) (punctuation 45883 . 45884) (symbol 45873 . 45883) (punctuation 45872 . 45873) (punctuation 45871 . 45872) (symbol 45863 . 45871) (punctuation 45862 . 45863) (punctuation 45861 . 45862) (symbol 45848 . 45861) (TYPENAME 45839 . 45847) (punctuation 45838 . 45839) (symbol 45821 . 45838) (punctuation 45820 . 45821) (symbol 45809 . 45820) (punctuation 45803 . 45804) (symbol 45783 . 45803) (punctuation 45781 . 45782) (symbol 45768 . 45781) (punctuation 45762 . 45763) (symbol 45731 . 45761) (STRUCT 45724 . 45730) (punctuation 45722 . 45723) (symbol 45702 . 45722) (TYPENAME 45693 . 45701) (punctuation 45691 . 45692) (symbol 45678 . 45691) (TYPENAME 45669 . 45677) (punctuation 45668 . 45669) (TEMPLATE 45659 . 45667) (punctuation 45596 . 45597) (VOID 45592 . 45596) (punctuation 45590 . 45591) (TYPENAME 45581 . 45589) (punctuation 45569 . 45570) (symbol 45549 . 45569) (TYPENAME 45540 . 45548) (punctuation 45538 . 45539) (symbol 45525 . 45538) (TYPENAME 45516 . 45524) (punctuation 45515 . 45516) (TEMPLATE 45506 . 45514) (punctuation 45308 . 45309) (semantic-list 44786 . 45308) (punctuation 44784 . 44785) (punctuation 44783 . 44784) (symbol 44777 . 44782) (punctuation 44776 . 44777) (punctuation 44775 . 44776) (punctuation 44774 . 44775) (symbol 44751 . 44774) (punctuation 44749 . 44750) (symbol 44739 . 44749) (punctuation 44738 . 44739) (symbol 44727 . 44738) (symbol 44719 . 44722) (symbol 44713 . 44718) (punctuation 44712 . 44713) (punctuation 44711 . 44712) (punctuation 44710 . 44711) (symbol 44687 . 44710) (punctuation 44685 . 44686) (symbol 44672 . 44685) (punctuation 44671 . 44672) (symbol 44660 . 44671) (punctuation 44659 . 44660) (symbol 44648 . 44659) (punctuation 44642 . 44643) (symbol 44619 . 44642) (punctuation 44617 . 44618) (symbol 44604 . 44617) (punctuation 44598 . 44599) (symbol 44564 . 44597) (STRUCT 44557 . 44563) (punctuation 44555 . 44556) (symbol 44532 . 44555) (TYPENAME 44523 . 44531) (punctuation 44521 . 44522) (symbol 44508 . 44521) (TYPENAME 44499 . 44507) (punctuation 44498 . 44499) (TEMPLATE 44489 . 44497) (punctuation 44423 . 44424) (VOID 44419 . 44423) (punctuation 44417 . 44418) (TYPENAME 44408 . 44416) (punctuation 44396 . 44397) (symbol 44373 . 44396) (TYPENAME 44364 . 44372) (punctuation 44362 . 44363) (symbol 44349 . 44362) (TYPENAME 44340 . 44348) (punctuation 44339 . 44340) (TEMPLATE 44330 . 44338) (punctuation 44150 . 44151) (semantic-list 43747 . 44150) (punctuation 43745 . 43746) (punctuation 43744 . 43745) (symbol 43738 . 43743) (punctuation 43737 . 43738) (punctuation 43736 . 43737) (punctuation 43735 . 43736) (symbol 43715 . 43735) (punctuation 43713 . 43714) (symbol 43703 . 43713) (punctuation 43702 . 43703) (symbol 43691 . 43702) (symbol 43683 . 43686) (symbol 43677 . 43682) (punctuation 43676 . 43677) (punctuation 43675 . 43676) (punctuation 43674 . 43675) (symbol 43654 . 43674) (punctuation 43652 . 43653) (symbol 43639 . 43652) (punctuation 43638 . 43639) (symbol 43627 . 43638) (punctuation 43626 . 43627) (symbol 43615 . 43626) (punctuation 43609 . 43610) (symbol 43589 . 43609) (punctuation 43587 . 43588) (symbol 43574 . 43587) (punctuation 43568 . 43569) (symbol 43537 . 43567) (STRUCT 43530 . 43536) (punctuation 43528 . 43529) (symbol 43508 . 43528) (TYPENAME 43499 . 43507) (punctuation 43497 . 43498) (symbol 43484 . 43497) (TYPENAME 43475 . 43483) (punctuation 43474 . 43475) (TEMPLATE 43465 . 43473) (punctuation 43402 . 43403) (VOID 43398 . 43402) (punctuation 43396 . 43397) (TYPENAME 43387 . 43395) (punctuation 43375 . 43376) (symbol 43355 . 43375) (TYPENAME 43346 . 43354) (punctuation 43344 . 43345) (symbol 43331 . 43344) (TYPENAME 43322 . 43330) (punctuation 43321 . 43322) (TEMPLATE 43312 . 43320) (punctuation 43290 . 43291) (punctuation 43288 . 43289) (semantic-list 43271 . 43288) (symbol 43263 . 43271) (semantic-list 43276 . 43287) (punctuation 43261 . 43262) (symbol 43260 . 43261) (punctuation 43259 . 43260) (symbol 43243 . 43259) (STRUCT 43236 . 43242) (punctuation 43234 . 43235) (symbol 43233 . 43234) (TYPENAME 43224 . 43232) (punctuation 43223 . 43224) (TEMPLATE 43214 . 43222) (punctuation 43165 . 43166) (VOID 43161 . 43165) (punctuation 43159 . 43160) (TYPENAME 43150 . 43158) (punctuation 43148 . 43149) (symbol 43147 . 43148) (TYPENAME 43138 . 43146) (punctuation 43137 . 43138) (TEMPLATE 43128 . 43136) (punctuation 43008 . 43009) (punctuation 43007 . 43008) (punctuation 43006 . 43007) (symbol 43000 . 43006) (punctuation 42998 . 42999) (symbol 42979 . 42998) (punctuation 42978 . 42979) (symbol 42967 . 42978) (punctuation 42957 . 42958) (punctuation 42956 . 42957) (symbol 42950 . 42955) (punctuation 42949 . 42950) (punctuation 42948 . 42949) (punctuation 42947 . 42948) (symbol 42941 . 42947) (punctuation 42939 . 42940) (symbol 42930 . 42939) (punctuation 42929 . 42930) (symbol 42918 . 42929) (punctuation 42908 . 42909) (punctuation 42907 . 42908) (symbol 42901 . 42906) (punctuation 42900 . 42901) (punctuation 42899 . 42900) (punctuation 42898 . 42899) (symbol 42892 . 42898) (punctuation 42890 . 42891) (symbol 42873 . 42890) (punctuation 42872 . 42873) (symbol 42861 . 42872) (punctuation 42851 . 42852) (punctuation 42850 . 42851) (symbol 42844 . 42849) (punctuation 42843 . 42844) (punctuation 42842 . 42843) (punctuation 42841 . 42842) (symbol 42835 . 42841) (punctuation 42833 . 42834) (symbol 42821 . 42833) (punctuation 42820 . 42821) (symbol 42809 . 42820) (punctuation 42799 . 42800) (symbol 42793 . 42798) (symbol 42788 . 42792) (symbol 42778 . 42787) (STATIC 42771 . 42777) (punctuation 42734 . 42735) (symbol 42727 . 42733) (USING 42721 . 42726) (punctuation 42585 . 42586) (VOID 42581 . 42585) (punctuation 42579 . 42580) (TYPENAME 42570 . 42578) (punctuation 42568 . 42569) (symbol 42567 . 42568) (TYPENAME 42558 . 42566) (punctuation 42557 . 42558) (TEMPLATE 42548 . 42556) (punctuation 42383 . 42384) (symbol 42377 . 42382) (BOOL 42372 . 42376) (symbol 42362 . 42371) (STATIC 42355 . 42361) (TEMPLATE 42315 . 42323) (punctuation 42314 . 42315) (punctuation 42313 . 42314) (symbol 42300 . 42313) (TYPENAME 42291 . 42299) (punctuation 42289 . 42290) (symbol 42278 . 42288) (USING 42272 . 42277) (punctuation 42097 . 42098) (VOID 42093 . 42097) (punctuation 42091 . 42092) (TYPENAME 42082 . 42090) (punctuation 42080 . 42081) (symbol 42079 . 42080) (TYPENAME 42070 . 42078) (punctuation 42068 . 42069) (symbol 42055 . 42068) (TYPENAME 42046 . 42054) (punctuation 42045 . 42046) (TEMPLATE 42036 . 42044) (punctuation 41747 . 41748) (symbol 41741 . 41746) (BOOL 41736 . 41740) (symbol 41726 . 41735) (STATIC 41719 . 41725) (TEMPLATE 41679 . 41687) (punctuation 41678 . 41679) (punctuation 41677 . 41678) (symbol 41664 . 41677) (TYPENAME 41655 . 41663) (punctuation 41653 . 41654) (symbol 41642 . 41652) (USING 41636 . 41641) (punctuation 41434 . 41435) (VOID 41430 . 41434) (punctuation 41428 . 41429) (TYPENAME 41419 . 41427) (punctuation 41417 . 41418) (symbol 41416 . 41417) (TYPENAME 41407 . 41415) (punctuation 41405 . 41406) (symbol 41392 . 41405) (TYPENAME 41383 . 41391) (punctuation 41382 . 41383) (TEMPLATE 41373 . 41381) (punctuation 41114 . 41115) (symbol 41108 . 41113) (BOOL 41103 . 41107) (symbol 41093 . 41102) (STATIC 41086 . 41092) (TEMPLATE 41046 . 41054) (punctuation 41045 . 41046) (punctuation 41044 . 41045) (symbol 41031 . 41044) (TYPENAME 41022 . 41030) (punctuation 41020 . 41021) (symbol 41009 . 41019) (USING 41003 . 41008) (punctuation 40813 . 40814) (VOID 40809 . 40813) (punctuation 40807 . 40808) (TYPENAME 40798 . 40806) (punctuation 40796 . 40797) (symbol 40795 . 40796) (TYPENAME 40786 . 40794) (punctuation 40784 . 40785) (symbol 40771 . 40784) (TYPENAME 40762 . 40770) (punctuation 40761 . 40762) (TEMPLATE 40752 . 40760) (USING 40598 . 40603) (punctuation 40596 . 40597) (symbol 40595 . 40596) (TYPENAME 40586 . 40594) (punctuation 40584 . 40585) (symbol 40583 . 40584) (TYPENAME 40574 . 40582) (punctuation 40573 . 40574) (TEMPLATE 40564 . 40572) (USING 40487 . 40492) (punctuation 40485 . 40486) (symbol 40481 . 40485) (punctuation 40479 . 40480) (punctuation 40478 . 40479) (punctuation 40477 . 40478) (TYPENAME 40469 . 40477) (punctuation 40467 . 40468) (symbol 40466 . 40467) (TYPENAME 40457 . 40465) (punctuation 40456 . 40457) (TEMPLATE 40447 . 40455) (USING 40374 . 40379) (punctuation 40372 . 40373) (symbol 40368 . 40372) (punctuation 40366 . 40367) (punctuation 40365 . 40366) (punctuation 40364 . 40365) (TYPENAME 40356 . 40364) (punctuation 40354 . 40355) (symbol 40353 . 40354) (TYPENAME 40344 . 40352) (punctuation 40343 . 40344) (TEMPLATE 40334 . 40342) (punctuation 40309 . 40310) (symbol 40298 . 40308) (USING 40292 . 40297) (punctuation 40290 . 40291) (symbol 40289 . 40290) (TYPENAME 40280 . 40288) (punctuation 40279 . 40280) (TEMPLATE 40270 . 40278) (punctuation 40236 . 40237) (symbol 40216 . 40235) (USING 40210 . 40215) (punctuation 40208 . 40209) (symbol 40207 . 40208) (TYPENAME 40198 . 40206) (punctuation 40197 . 40198) (TEMPLATE 40188 . 40196) (punctuation 40162 . 40163) (symbol 40150 . 40161) (USING 40144 . 40149) (punctuation 40142 . 40143) (symbol 40141 . 40142) (TYPENAME 40132 . 40140) (punctuation 40131 . 40132) (TEMPLATE 40122 . 40130) (punctuation 40098 . 40099) (symbol 40088 . 40097) (USING 40082 . 40087) (punctuation 40080 . 40081) (symbol 40079 . 40080) (TYPENAME 40070 . 40078) (punctuation 40069 . 40070) (TEMPLATE 40060 . 40068) (punctuation 40028 . 40029) (symbol 40010 . 40027) (USING 40004 . 40009) (punctuation 40002 . 40003) (symbol 40001 . 40002) (TYPENAME 39992 . 40000) (punctuation 39991 . 39992) (TEMPLATE 39982 . 39990) (punctuation 39955 . 39956) (symbol 39942 . 39954) (USING 39936 . 39941) (punctuation 39934 . 39935) (symbol 39933 . 39934) (TYPENAME 39924 . 39932) (punctuation 39923 . 39924) (TEMPLATE 39914 . 39922) (punctuation 39889 . 39890) (symbol 39878 . 39888) (USING 39872 . 39877) (punctuation 39870 . 39871) (symbol 39869 . 39870) (TYPENAME 39860 . 39868) (punctuation 39859 . 39860) (TEMPLATE 39850 . 39858) (punctuation 39822 . 39823) (symbol 39808 . 39821) (USING 39802 . 39807) (punctuation 39800 . 39801) (symbol 39799 . 39800) (TYPENAME 39790 . 39798) (punctuation 39789 . 39790) (TEMPLATE 39780 . 39788) (symbol 39594 . 39629) (punctuation 39548 . 39549) (TYPENAME 39540 . 39548) (punctuation 39539 . 39540) (TEMPLATE 39531 . 39539) (punctuation 38770 . 38771) (symbol 38765 . 38769) (USING 38759 . 38764) (punctuation 38209 . 38210) (symbol 38195 . 38209) (punctuation 38184 . 38185) (symbol 38169 . 38183) (CLASS 38163 . 38168) (punctuation 38161 . 38162) (VOID 38157 . 38161) (punctuation 38155 . 38156) (symbol 38148 . 38154) (TYPENAME 38139 . 38147) (punctuation 38137 . 38138) (symbol 38136 . 38137) (TYPENAME 38127 . 38135) (punctuation 38126 . 38127) (TEMPLATE 38118 . 38126) (punctuation 38107 . 38108) (symbol 38098 . 38107) (punctuation 38097 . 38098) (punctuation 38096 . 38097) (symbol 38093 . 38096) (punctuation 38091 . 38092) (symbol 38077 . 38090) (CLASS 38071 . 38076) (punctuation 38069 . 38070) (symbol 38068 . 38069) (TYPENAME 38059 . 38067) (punctuation 38058 . 38059) (TEMPLATE 38050 . 38058) (punctuation 38039 . 38040) (DOUBLE 38033 . 38039) (punctuation 38031 . 38032) (symbol 38015 . 38030) (CLASS 38009 . 38014) (punctuation 37998 . 37999) (symbol 37990 . 37998) (punctuation 37989 . 37990) (punctuation 37988 . 37989) (symbol 37985 . 37988) (punctuation 37983 . 37984) (symbol 37964 . 37982) (CLASS 37958 . 37963) (punctuation 37947 . 37948) (symbol 37940 . 37947) (punctuation 37939 . 37940) (punctuation 37938 . 37939) (symbol 37935 . 37938) (punctuation 37933 . 37934) (symbol 37915 . 37932) (CLASS 37909 . 37914) (punctuation 37898 . 37899) (BOOL 37894 . 37898) (punctuation 37892 . 37893) (symbol 37880 . 37891) (CLASS 37874 . 37879) (punctuation 37872 . 37873) (symbol 37866 . 37872) (punctuation 37865 . 37866) (punctuation 37864 . 37865) (symbol 37861 . 37864) (punctuation 37859 . 37860) (symbol 37848 . 37858) (CLASS 37842 . 37847) (punctuation 37831 . 37832) (symbol 37825 . 37831) (punctuation 37824 . 37825) (punctuation 37823 . 37824) (symbol 37820 . 37823) (punctuation 37818 . 37819) (symbol 37808 . 37817) (CLASS 37802 . 37807) (punctuation 37800 . 37801) (symbol 37796 . 37800) (punctuation 37794 . 37795) (punctuation 37793 . 37794) (punctuation 37792 . 37793) (TYPENAME 37784 . 37792) (punctuation 37782 . 37783) (symbol 37781 . 37782) (TYPENAME 37772 . 37780) (punctuation 37771 . 37772) (TEMPLATE 37763 . 37771) (punctuation 37752 . 37753) (symbol 37749 . 37752) (punctuation 37748 . 37749) (punctuation 37747 . 37748) (symbol 37744 . 37747) (punctuation 37733 . 37734) (symbol 37722 . 37732) (CLASS 37716 . 37721) (punctuation 37714 . 37715) (symbol 37710 . 37714) (punctuation 37708 . 37709) (punctuation 37707 . 37708) (punctuation 37706 . 37707) (TYPENAME 37698 . 37706) (punctuation 37696 . 37697) (symbol 37695 . 37696) (TYPENAME 37686 . 37694) (punctuation 37684 . 37685) (symbol 37683 . 37684) (TYPENAME 37674 . 37682) (punctuation 37673 . 37674) (TEMPLATE 37665 . 37673) (punctuation 37664 . 37665) (TEMPLATE 37656 . 37664) (punctuation 37630 . 37631) (VOID 37626 . 37630) (punctuation 37624 . 37625) (symbol 37617 . 37623) (TYPENAME 37608 . 37616) (punctuation 37606 . 37607) (VOID 37602 . 37606) (punctuation 37600 . 37601) (symbol 37598 . 37599) (TYPENAME 37589 . 37597) (punctuation 37588 . 37589) (TEMPLATE 37580 . 37588) (punctuation 36934 . 36935) (punctuation 36933 . 36934) (symbol 36931 . 36933) (punctuation 36929 . 36930) (punctuation 36928 . 36929) (punctuation 36927 . 36928) (punctuation 36926 . 36927) (punctuation 36925 . 36926) (symbol 36921 . 36925) (punctuation 36919 . 36920) (symbol 36917 . 36919) (punctuation 36916 . 36917) (symbol 36906 . 36916) (punctuation 36905 . 36906) (symbol 36891 . 36905) (punctuation 36890 . 36891) (punctuation 36889 . 36890) (symbol 36886 . 36889) (punctuation 36880 . 36881) (symbol 36856 . 36879) (USING 36850 . 36855) (punctuation 36848 . 36849) (symbol 36844 . 36848) (punctuation 36842 . 36843) (punctuation 36841 . 36842) (punctuation 36840 . 36841) (CLASS 36835 . 36840) (punctuation 36833 . 36834) (symbol 36831 . 36833) (CLASS 36825 . 36830) (punctuation 36823 . 36824) (punctuation 36822 . 36823) (punctuation 36821 . 36822) (punctuation 36820 . 36821) (CLASS 36815 . 36820) (punctuation 36814 . 36815) (TEMPLATE 36805 . 36813) (punctuation 36803 . 36804) (symbol 36801 . 36803) (CLASS 36795 . 36800) (punctuation 36794 . 36795) (TEMPLATE 36785 . 36793) (punctuation 36782 . 36783) (punctuation 36781 . 36782) (punctuation 36780 . 36781) (punctuation 36779 . 36780) (punctuation 36778 . 36779) (punctuation 36777 . 36778) (symbol 36773 . 36777) (punctuation 36771 . 36772) (symbol 36769 . 36771) (punctuation 36768 . 36769) (symbol 36758 . 36768) (punctuation 36756 . 36757) (symbol 36748 . 36756) (punctuation 36747 . 36748) (symbol 36740 . 36747) (punctuation 36739 . 36740) (punctuation 36738 . 36739) (symbol 36735 . 36738) (punctuation 36733 . 36734) (symbol 36715 . 36732) (USING 36709 . 36714) (punctuation 36707 . 36708) (symbol 36703 . 36707) (punctuation 36701 . 36702) (punctuation 36700 . 36701) (punctuation 36699 . 36700) (CLASS 36694 . 36699) (punctuation 36692 . 36693) (symbol 36690 . 36692) (CLASS 36684 . 36689) (punctuation 36682 . 36683) (punctuation 36681 . 36682) (punctuation 36680 . 36681) (punctuation 36679 . 36680) (CLASS 36674 . 36679) (punctuation 36673 . 36674) (TEMPLATE 36664 . 36672) (punctuation 36662 . 36663) (symbol 36654 . 36662) (CLASS 36648 . 36653) (punctuation 36647 . 36648) (TEMPLATE 36638 . 36646) (punctuation 36630 . 36631) (punctuation 36629 . 36630) (punctuation 36628 . 36629) (punctuation 36627 . 36628) (punctuation 36626 . 36627) (punctuation 36625 . 36626) (symbol 36621 . 36625) (punctuation 36619 . 36620) (symbol 36617 . 36619) (punctuation 36615 . 36616) (symbol 36608 . 36615) (punctuation 36607 . 36608) (symbol 36596 . 36607) (TYPENAME 36587 . 36595) (punctuation 36585 . 36586) (symbol 36571 . 36584) (USING 36565 . 36570) (punctuation 36563 . 36564) (symbol 36559 . 36563) (punctuation 36557 . 36558) (punctuation 36556 . 36557) (punctuation 36555 . 36556) (CLASS 36550 . 36555) (punctuation 36548 . 36549) (symbol 36546 . 36548) (CLASS 36540 . 36545) (punctuation 36538 . 36539) (punctuation 36537 . 36538) (punctuation 36536 . 36537) (punctuation 36535 . 36536) (CLASS 36530 . 36535) (punctuation 36529 . 36530) (TEMPLATE 36520 . 36528) (punctuation 36518 . 36519) (symbol 36511 . 36518) (CLASS 36505 . 36510) (punctuation 36504 . 36505) (TEMPLATE 36495 . 36503) (punctuation 36492 . 36493) (punctuation 36491 . 36492) (punctuation 36490 . 36491) (punctuation 36489 . 36490) (punctuation 36488 . 36489) (symbol 36484 . 36488) (punctuation 36482 . 36483) (symbol 36480 . 36482) (punctuation 36478 . 36479) (VOID 36474 . 36478) (punctuation 36472 . 36473) (symbol 36465 . 36472) (punctuation 36464 . 36465) (symbol 36456 . 36464) (punctuation 36454 . 36455) (symbol 36442 . 36453) (USING 36436 . 36441) (punctuation 36434 . 36435) (symbol 36430 . 36434) (punctuation 36428 . 36429) (punctuation 36427 . 36428) (punctuation 36426 . 36427) (CLASS 36421 . 36426) (punctuation 36419 . 36420) (symbol 36417 . 36419) (CLASS 36411 . 36416) (punctuation 36409 . 36410) (punctuation 36408 . 36409) (punctuation 36407 . 36408) (punctuation 36406 . 36407) (CLASS 36401 . 36406) (punctuation 36400 . 36401) (TEMPLATE 36391 . 36399) (punctuation 36389 . 36390) (symbol 36382 . 36389) (CLASS 36376 . 36381) (punctuation 36375 . 36376) (TEMPLATE 36366 . 36374) (punctuation 36358 . 36359) (punctuation 36357 . 36358) (punctuation 36356 . 36357) (punctuation 36355 . 36356) (punctuation 36354 . 36355) (punctuation 36353 . 36354) (symbol 36349 . 36353) (punctuation 36347 . 36348) (symbol 36345 . 36347) (punctuation 36343 . 36344) (VOID 36339 . 36343) (punctuation 36337 . 36338) (symbol 36329 . 36337) (punctuation 36328 . 36329) (symbol 36320 . 36328) (TYPENAME 36311 . 36319) (punctuation 36309 . 36310) (symbol 36298 . 36308) (USING 36292 . 36297) (punctuation 36290 . 36291) (symbol 36286 . 36290) (punctuation 36284 . 36285) (punctuation 36283 . 36284) (punctuation 36282 . 36283) (CLASS 36277 . 36282) (punctuation 36275 . 36276) (symbol 36273 . 36275) (CLASS 36267 . 36272) (punctuation 36265 . 36266) (punctuation 36264 . 36265) (punctuation 36263 . 36264) (punctuation 36262 . 36263) (CLASS 36257 . 36262) (punctuation 36256 . 36257) (TEMPLATE 36247 . 36255) (punctuation 36246 . 36247) (TEMPLATE 36237 . 36245) (punctuation 36226 . 36227) (punctuation 36225 . 36226) (punctuation 36224 . 36225) (punctuation 36223 . 36224) (punctuation 36222 . 36223) (punctuation 36221 . 36222) (symbol 36217 . 36221) (punctuation 36215 . 36216) (symbol 36213 . 36215) (punctuation 36211 . 36212) (VOID 36207 . 36211) (punctuation 36205 . 36206) (symbol 36197 . 36205) (punctuation 36196 . 36197) (symbol 36188 . 36196) (TYPENAME 36179 . 36187) (punctuation 36177 . 36178) (symbol 36165 . 36176) (USING 36159 . 36164) (punctuation 36157 . 36158) (symbol 36153 . 36157) (punctuation 36151 . 36152) (punctuation 36150 . 36151) (punctuation 36149 . 36150) (CLASS 36144 . 36149) (punctuation 36142 . 36143) (symbol 36140 . 36142) (CLASS 36134 . 36139) (punctuation 36132 . 36133) (punctuation 36131 . 36132) (punctuation 36130 . 36131) (punctuation 36129 . 36130) (CLASS 36124 . 36129) (punctuation 36123 . 36124) (TEMPLATE 36114 . 36122) (punctuation 36113 . 36114) (TEMPLATE 36104 . 36112) (punctuation 36101 . 36102) (semantic-list 36032 . 36101) (punctuation 36030 . 36031) (punctuation 36029 . 36030) (punctuation 36028 . 36029) (punctuation 36027 . 36028) (symbol 36023 . 36027) (punctuation 36021 . 36022) (symbol 36019 . 36021) (punctuation 36017 . 36018) (punctuation 36016 . 36017) (punctuation 36015 . 36016) (punctuation 36014 . 36015) (punctuation 36013 . 36014) (punctuation 36012 . 36013) (symbol 36008 . 36012) (punctuation 36007 . 36008) (symbol 36005 . 36007) (punctuation 36004 . 36005) (symbol 35998 . 36004) (punctuation 35996 . 35997) (symbol 35989 . 35996) (punctuation 35988 . 35989) (symbol 35980 . 35988) (STRUCT 35973 . 35979) (punctuation 35971 . 35972) (symbol 35967 . 35971) (punctuation 35965 . 35966) (punctuation 35964 . 35965) (punctuation 35963 . 35964) (CLASS 35958 . 35963) (punctuation 35956 . 35957) (symbol 35954 . 35956) (CLASS 35948 . 35953) (punctuation 35946 . 35947) (punctuation 35945 . 35946) (punctuation 35944 . 35945) (punctuation 35943 . 35944) (CLASS 35938 . 35943) (punctuation 35937 . 35938) (TEMPLATE 35928 . 35936) (punctuation 35926 . 35927) (symbol 35919 . 35926) (CLASS 35913 . 35918) (punctuation 35912 . 35913) (TEMPLATE 35903 . 35911) (USING 35877 . 35882) (punctuation 35854 . 35855) (symbol 35846 . 35853) (USING 35840 . 35845) (punctuation 35816 . 35817) (symbol 35812 . 35816) (punctuation 35810 . 35811) (punctuation 35809 . 35810) (punctuation 35808 . 35809) (CLASS 35803 . 35808) (punctuation 35791 . 35792) (symbol 35789 . 35791) (CLASS 35783 . 35788) (punctuation 35781 . 35782) (punctuation 35780 . 35781) (punctuation 35779 . 35780) (punctuation 35778 . 35779) (CLASS 35773 . 35778) (punctuation 35772 . 35773) (TEMPLATE 35763 . 35771) (punctuation 35751 . 35752) (symbol 35741 . 35751) (CLASS 35735 . 35740) (punctuation 35723 . 35724) (symbol 35716 . 35723) (CLASS 35710 . 35715) (punctuation 35709 . 35710) (TEMPLATE 35700 . 35708) (punctuation 35694 . 35695) (DELETE 35688 . 35694) (punctuation 35686 . 35687) (semantic-list 35673 . 35685) (punctuation 35672 . 35673) (OPERATOR 35664 . 35672) (punctuation 35683 . 35684) (VOID 35659 . 35663) (punctuation 35683 . 35684) (punctuation 35653 . 35654) (DELETE 35647 . 35653) (punctuation 35645 . 35646) (semantic-list 35627 . 35644) (punctuation 35626 . 35627) (OPERATOR 35618 . 35626) (VOID 35613 . 35617) (punctuation 35607 . 35608) (DELETE 35601 . 35607) (punctuation 35599 . 35600) (semantic-list 35580 . 35598) (symbol 35572 . 35580) (punctuation 35596 . 35597) (punctuation 35566 . 35567) (DELETE 35560 . 35566) (punctuation 35558 . 35559) (semantic-list 35540 . 35557) (symbol 35532 . 35540) (punctuation 35526 . 35527) (DELETE 35520 . 35526) (punctuation 35518 . 35519) (semantic-list 35515 . 35517) (symbol 35507 . 35515) (punctuation 35506 . 35507) (punctuation 35500 . 35501) (DELETE 35494 . 35500) (punctuation 35492 . 35493) (semantic-list 35489 . 35491) (symbol 35481 . 35489) (punctuation 35086 . 35087) (punctuation 35085 . 35086) (symbol 35084 . 35085) (punctuation 35082 . 35083) (symbol 35072 . 35081) (USING 35066 . 35071) (punctuation 35060 . 35061) (punctuation 35059 . 35060) (symbol 35058 . 35059) (punctuation 35056 . 35057) (symbol 35048 . 35055) (USING 35042 . 35047) (USING 35003 . 35008) (USING 34977 . 34982) (punctuation 34938 . 34939) (symbol 34920 . 34937) (USING 34914 . 34919) (punctuation 34794 . 34795) (punctuation 34780 . 34781) (punctuation 34779 . 34780) (symbol 34773 . 34778) (punctuation 34772 . 34773) (punctuation 34771 . 34772) (punctuation 34770 . 34771) (symbol 34769 . 34770) (punctuation 34768 . 34769) (symbol 34758 . 34768) (punctuation 34757 . 34758) (punctuation 34756 . 34757) (symbol 34753 . 34756) (punctuation 34752 . 34753) (punctuation 34750 . 34751) (symbol 34738 . 34749) (punctuation 34736 . 34737) (symbol 34735 . 34736) (punctuation 34733 . 34734) (symbol 34717 . 34732) (STRUCT 34710 . 34716) (punctuation 34708 . 34709) (symbol 34707 . 34708) (TYPENAME 34698 . 34706) (punctuation 34697 . 34698) (TEMPLATE 34688 . 34696) (punctuation 34657 . 34658) (VOID 34653 . 34657) (punctuation 34651 . 34652) (TYPENAME 34642 . 34650) (punctuation 34640 . 34641) (symbol 34639 . 34640) (TYPENAME 34630 . 34638) (punctuation 34629 . 34630) (TEMPLATE 34620 . 34628) (punctuation 34455 . 34456) (semantic-list 34196 . 34455) (punctuation 34194 . 34195) (punctuation 34193 . 34194) (symbol 34175 . 34192) (punctuation 34174 . 34175) (punctuation 34173 . 34174) (symbol 34171 . 34173) (TYPENAME 34162 . 34170) (punctuation 34160 . 34161) (symbol 34151 . 34160) (punctuation 34150 . 34151) (punctuation 34149 . 34150) (symbol 34147 . 34149) (TYPENAME 34138 . 34146) (punctuation 34132 . 34133) (symbol 34125 . 34132) (punctuation 34124 . 34125) (punctuation 34123 . 34124) (symbol 34121 . 34123) (TYPENAME 34112 . 34120) (punctuation 34110 . 34111) (symbol 34100 . 34110) (punctuation 34099 . 34100) (punctuation 34098 . 34099) (symbol 34096 . 34098) (TYPENAME 34087 . 34095) (punctuation 34085 . 34086) (symbol 34070 . 34085) (punctuation 34069 . 34070) (punctuation 34068 . 34069) (symbol 34066 . 34068) (TYPENAME 34057 . 34065) (punctuation 34056 . 34057) (symbol 34050 . 34056) (punctuation 34044 . 34045) (symbol 34042 . 34044) (punctuation 34036 . 34037) (symbol 34021 . 34035) (STRUCT 34014 . 34020) (punctuation 34012 . 34013) (symbol 34010 . 34012) (TYPENAME 34001 . 34009) (punctuation 34000 . 34001) (TEMPLATE 33991 . 33999) (punctuation 33962 . 33963) (VOID 33958 . 33962) (punctuation 33956 . 33957) (TYPENAME 33947 . 33955) (punctuation 33945 . 33946) (symbol 33943 . 33945) (TYPENAME 33934 . 33942) (punctuation 33933 . 33934) (TEMPLATE 33924 . 33932) (punctuation 33777 . 33778) (punctuation 33776 . 33777) (punctuation 33775 . 33776) (punctuation 33774 . 33775) (punctuation 33773 . 33774) (punctuation 33772 . 33773) (symbol 33770 . 33772) (punctuation 33769 . 33770) (symbol 33760 . 33769) (TYPENAME 33751 . 33759) (punctuation 33749 . 33750) (symbol 33742 . 33748) (USING 33736 . 33741) (punctuation 33734 . 33735) (symbol 33732 . 33734) (punctuation 33731 . 33732) (punctuation 33730 . 33731) (punctuation 33729 . 33730) (TYPENAME 33720 . 33728) (punctuation 33719 . 33720) (TEMPLATE 33710 . 33718) (punctuation 33705 . 33706) (VOID 33701 . 33705) (punctuation 33699 . 33700) (symbol 33694 . 33698) (USING 33688 . 33693) (punctuation 33663 . 33664) (symbol 33661 . 33663) (punctuation 33660 . 33661) (punctuation 33659 . 33660) (punctuation 33658 . 33659) (TYPENAME 33649 . 33657) (punctuation 33648 . 33649) (TEMPLATE 33639 . 33647) (symbol 33119 . 33128) (punctuation 33117 . 33118) (symbol 33116 . 33117) (TYPENAME 33107 . 33115) (punctuation 33106 . 33107) (TEMPLATE 33098 . 33106) (symbol 33073 . 33082) (STATIC 33066 . 33072) (punctuation 32954 . 32955) (semantic-list 32952 . 32954) (punctuation 32950 . 32951) (number 32948 . 32949) (punctuation 32946 . 32947) (symbol 32944 . 32945) (punctuation 32942 . 32943) (symbol 32929 . 32941) (punctuation 32927 . 32928) (symbol 32914 . 32926) (STRUCT 32907 . 32913) (punctuation 32905 . 32906) (symbol 32904 . 32905) (UNSIGNED 32895 . 32903) (punctuation 32894 . 32895) (TEMPLATE 32886 . 32894) (punctuation 32840 . 32841) (punctuation 32839 . 32840) (semantic-list 32835 . 32839) (punctuation 32834 . 32835) (punctuation 32833 . 32834) (punctuation 32832 . 32833) (SIZEOF 32826 . 32832) (punctuation 32825 . 32826) (symbol 32806 . 32825) (punctuation 32804 . 32805) (symbol 32785 . 32803) (USING 32779 . 32784) (punctuation 32777 . 32778) (symbol 32775 . 32777) (punctuation 32773 . 32774) (punctuation 32772 . 32773) (punctuation 32771 . 32772) (TYPENAME 32763 . 32771) (punctuation 32762 . 32763) (TEMPLATE 32754 . 32762) (punctuation 32621 . 32622) (semantic-list 32619 . 32621) (punctuation 32617 . 32618) (symbol 32612 . 32616) (punctuation 32611 . 32612) (punctuation 32610 . 32611) (punctuation 32609 . 32610) (number 32607 . 32608) (punctuation 32605 . 32606) (symbol 32603 . 32604) (punctuation 32601 . 32602) (symbol 32599 . 32600) (punctuation 32597 . 32598) (symbol 32577 . 32596) (TYPENAME 32568 . 32576) (punctuation 32560 . 32561) (symbol 32556 . 32560) (punctuation 32555 . 32556) (punctuation 32554 . 32555) (punctuation 32553 . 32554) (number 32551 . 32552) (punctuation 32549 . 32550) (symbol 32547 . 32548) (punctuation 32545 . 32546) (symbol 32525 . 32544) (TYPENAME 32516 . 32524) (punctuation 32514 . 32515) (symbol 32495 . 32513) (punctuation 32493 . 32494) (symbol 32469 . 32488) (STRUCT 32462 . 32468) (punctuation 32460 . 32461) (symbol 32459 . 32460) (symbol 32452 . 32458) (punctuation 32451 . 32452) (punctuation 32450 . 32451) (symbol 32447 . 32450) (punctuation 32446 . 32447) (TEMPLATE 32438 . 32446) (punctuation 32435 . 32436) (semantic-list 32433 . 32435) (punctuation 32431 . 32432) (punctuation 32429 . 32430) (punctuation 32428 . 32429) (punctuation 32427 . 32428) (semantic-list 32407 . 32427) (punctuation 32405 . 32406) (punctuation 32404 . 32405) (punctuation 32403 . 32404) (punctuation 32402 . 32403) (symbol 32400 . 32402) (punctuation 32398 . 32399) (symbol 32383 . 32397) (punctuation 32381 . 32382) (punctuation 32371 . 32372) (punctuation 32370 . 32371) (punctuation 32369 . 32370) (punctuation 32368 . 32369) (punctuation 32367 . 32368) (symbol 32365 . 32367) (punctuation 32364 . 32365) (symbol 32350 . 32364) (punctuation 32348 . 32349) (punctuation 32347 . 32348) (punctuation 32346 . 32347) (punctuation 32345 . 32346) (punctuation 32344 . 32345) (symbol 32342 . 32344) (punctuation 32341 . 32342) (symbol 32327 . 32341) (punctuation 32326 . 32327) (symbol 32308 . 32326) (STRUCT 32301 . 32307) (punctuation 32299 . 32300) (symbol 32297 . 32299) (punctuation 32295 . 32296) (punctuation 32294 . 32295) (punctuation 32293 . 32294) (symbol 32287 . 32293) (punctuation 32286 . 32287) (punctuation 32285 . 32286) (symbol 32282 . 32285) (punctuation 32280 . 32281) (symbol 32278 . 32280) (punctuation 32276 . 32277) (punctuation 32275 . 32276) (punctuation 32274 . 32275) (symbol 32268 . 32274) (punctuation 32267 . 32268) (punctuation 32266 . 32267) (symbol 32263 . 32266) (punctuation 32262 . 32263) (TEMPLATE 32254 . 32262) (semantic-list 32139 . 32178) (symbol 32126 . 32134) (semantic-list 32123 . 32125) (symbol 32119 . 32123) (symbol 32112 . 32118) (punctuation 32111 . 32112) (punctuation 32110 . 32111) (symbol 32107 . 32110) (symbol 32097 . 32106) (STATIC 32090 . 32096) (punctuation 32071 . 32072) (symbol 32060 . 32070) (USING 32054 . 32059) (USING 32021 . 32026) (punctuation 31991 . 31992) (symbol 31987 . 31991) (punctuation 31985 . 31986) (punctuation 31984 . 31985) (punctuation 31983 . 31984) (symbol 31977 . 31983) (punctuation 31976 . 31977) (punctuation 31975 . 31976) (symbol 31972 . 31975) (punctuation 31971 . 31972) (TEMPLATE 31963 . 31971) (punctuation 31850 . 31851) (punctuation 31849 . 31850) (punctuation 31848 . 31849) (symbol 31844 . 31848) (punctuation 31843 . 31844) (punctuation 31842 . 31843) (punctuation 31841 . 31842) (symbol 31840 . 31841) (punctuation 31839 . 31840) (symbol 31823 . 31839) (punctuation 31822 . 31823) (punctuation 31821 . 31822) (symbol 31818 . 31821) (TYPENAME 31809 . 31817) (punctuation 31808 . 31809) (symbol 31799 . 31808) (punctuation 31798 . 31799) (punctuation 31797 . 31798) (symbol 31794 . 31797) (TYPENAME 31785 . 31793) (punctuation 31783 . 31784) (symbol 31773 . 31782) (USING 31767 . 31772) (punctuation 31765 . 31766) (symbol 31764 . 31765) (TYPENAME 31755 . 31763) (punctuation 31754 . 31755) (TEMPLATE 31746 . 31754) (punctuation 31706 . 31707) (symbol 31694 . 31705) (USING 31688 . 31693) (punctuation 31686 . 31687) (VOID 31682 . 31686) (punctuation 31680 . 31681) (symbol 31678 . 31679) (TYPENAME 31669 . 31677) (punctuation 31667 . 31668) (symbol 31666 . 31667) (BOOL 31661 . 31665) (punctuation 31660 . 31661) (TEMPLATE 31652 . 31660) (string 25382 . 25397) (symbol 25374 . 25381) (symbol 25363 . 25373) (symbol 25359 . 25362) (symbol 25352 . 25358) (punctuation 25351 . 25352) (symbol 25342 . 25346) (symbol 25331 . 25341) (symbol 25327 . 25330) (symbol 25320 . 25326) (punctuation 25319 . 25320) (semantic-list 4853 . 4885) (symbol 4840 . 4848) (symbol 4831 . 4839) (CONST 4825 . 4830) (semantic-list 4822 . 4824) (symbol 4818 . 4822) (punctuation 4816 . 4817) (CHAR 4812 . 4816) (CONST 4806 . 4811) (OPERATOR 3394 . 3402) (symbol 3384 . 3393) (punctuation 36934 . 36935) (punctuation 36933 . 36934) (symbol 36931 . 36933) (punctuation 36929 . 36930) (punctuation 36928 . 36929) (punctuation 36927 . 36928) (punctuation 36926 . 36927) (punctuation 36925 . 36926) (symbol 36921 . 36925) (punctuation 36919 . 36920) (symbol 36917 . 36919) (punctuation 36916 . 36917) (symbol 36906 . 36916) (punctuation 36905 . 36906) (symbol 36891 . 36905) (punctuation 36890 . 36891) (punctuation 36889 . 36890) (symbol 36886 . 36889) (punctuation 36880 . 36881) (symbol 36856 . 36879) (USING 36850 . 36855) (punctuation 36848 . 36849) (symbol 36844 . 36848) (punctuation 36842 . 36843) (punctuation 36841 . 36842) (punctuation 36840 . 36841) (CLASS 36835 . 36840) (punctuation 36833 . 36834) (symbol 36831 . 36833) (CLASS 36825 . 36830) (punctuation 36823 . 36824) (punctuation 36822 . 36823) (punctuation 36821 . 36822) (punctuation 36820 . 36821) (CLASS 36815 . 36820) (punctuation 36814 . 36815) (TEMPLATE 36805 . 36813) (punctuation 36803 . 36804) (symbol 36801 . 36803) (CLASS 36795 . 36800) (punctuation 36794 . 36795) (TEMPLATE 36785 . 36793) (punctuation 36782 . 36783) (punctuation 36781 . 36782) (punctuation 36780 . 36781) (punctuation 36779 . 36780) (punctuation 36778 . 36779) (punctuation 36777 . 36778) (symbol 36773 . 36777) (punctuation 36771 . 36772) (symbol 36769 . 36771) (punctuation 36768 . 36769) (symbol 36758 . 36768) (punctuation 36756 . 36757) (symbol 36748 . 36756) (punctuation 36747 . 36748) (symbol 36740 . 36747) (punctuation 36739 . 36740) (punctuation 36738 . 36739) (symbol 36735 . 36738) (punctuation 36733 . 36734) (symbol 36715 . 36732) (USING 36709 . 36714) (punctuation 36707 . 36708) (symbol 36703 . 36707) (punctuation 36701 . 36702) (punctuation 36700 . 36701) (punctuation 36699 . 36700) (CLASS 36694 . 36699) (punctuation 36692 . 36693) (symbol 36690 . 36692) (CLASS 36684 . 36689) (punctuation 36682 . 36683) (punctuation 36681 . 36682) (punctuation 36680 . 36681) (punctuation 36679 . 36680) (CLASS 36674 . 36679) (punctuation 36673 . 36674) (TEMPLATE 36664 . 36672) (punctuation 36662 . 36663) (symbol 36654 . 36662) (CLASS 36648 . 36653) (punctuation 36647 . 36648) (TEMPLATE 36638 . 36646) (punctuation 36630 . 36631) (punctuation 36629 . 36630) (punctuation 36628 . 36629) (punctuation 36627 . 36628) (punctuation 36626 . 36627) (punctuation 36625 . 36626) (symbol 36621 . 36625) (punctuation 36619 . 36620) (symbol 36617 . 36619) (punctuation 36615 . 36616) (symbol 36608 . 36615) (punctuation 36607 . 36608) (symbol 36596 . 36607) (TYPENAME 36587 . 36595) (punctuation 36585 . 36586) (symbol 36571 . 36584) (USING 36565 . 36570) (punctuation 36563 . 36564) (symbol 36559 . 36563) (punctuation 36557 . 36558) (punctuation 36556 . 36557) (punctuation 36555 . 36556) (CLASS 36550 . 36555) (punctuation 36548 . 36549) (symbol 36546 . 36548) (CLASS 36540 . 36545) (punctuation 36538 . 36539) (punctuation 36537 . 36538) (punctuation 36536 . 36537) (punctuation 36535 . 36536) (CLASS 36530 . 36535) (punctuation 36529 . 36530) (TEMPLATE 36520 . 36528) (punctuation 36518 . 36519) (symbol 36511 . 36518) (CLASS 36505 . 36510) (punctuation 36504 . 36505) (TEMPLATE 36495 . 36503) (punctuation 36492 . 36493) (punctuation 36491 . 36492) (punctuation 36490 . 36491) (punctuation 36489 . 36490) (punctuation 36488 . 36489) (symbol 36484 . 36488) (punctuation 36482 . 36483) (symbol 36480 . 36482) (punctuation 36478 . 36479) (VOID 36474 . 36478) (punctuation 36472 . 36473) (symbol 36465 . 36472) (punctuation 36464 . 36465) (symbol 36456 . 36464) (punctuation 36454 . 36455) (symbol 36442 . 36453) (USING 36436 . 36441) (punctuation 36434 . 36435) (symbol 36430 . 36434) (punctuation 36428 . 36429) (punctuation 36427 . 36428) (punctuation 36426 . 36427) (CLASS 36421 . 36426) (punctuation 36419 . 36420) (symbol 36417 . 36419) (CLASS 36411 . 36416) (punctuation 36409 . 36410) (punctuation 36408 . 36409) (punctuation 36407 . 36408) (punctuation 36406 . 36407) (CLASS 36401 . 36406) (punctuation 36400 . 36401) (TEMPLATE 36391 . 36399) (punctuation 36389 . 36390) (symbol 36382 . 36389) (CLASS 36376 . 36381) (punctuation 36375 . 36376) (TEMPLATE 36366 . 36374) (punctuation 36358 . 36359) (punctuation 36357 . 36358) (punctuation 36356 . 36357) (punctuation 36355 . 36356) (punctuation 36354 . 36355) (punctuation 36353 . 36354) (symbol 36349 . 36353) (punctuation 36347 . 36348) (symbol 36345 . 36347) (punctuation 36343 . 36344) (VOID 36339 . 36343) (punctuation 36337 . 36338) (symbol 36329 . 36337) (punctuation 36328 . 36329) (symbol 36320 . 36328) (TYPENAME 36311 . 36319) (punctuation 36309 . 36310) (symbol 36298 . 36308) (USING 36292 . 36297) (punctuation 36290 . 36291) (symbol 36286 . 36290) (punctuation 36284 . 36285) (punctuation 36283 . 36284) (punctuation 36282 . 36283) (CLASS 36277 . 36282) (punctuation 36275 . 36276) (symbol 36273 . 36275) (CLASS 36267 . 36272) (punctuation 36265 . 36266) (punctuation 36264 . 36265) (punctuation 36263 . 36264) (punctuation 36262 . 36263) (CLASS 36257 . 36262) (punctuation 36256 . 36257) (TEMPLATE 36247 . 36255) (punctuation 36246 . 36247) (TEMPLATE 36237 . 36245) (punctuation 36226 . 36227) (punctuation 36225 . 36226) (punctuation 36224 . 36225) (punctuation 36223 . 36224) (punctuation 36222 . 36223) (punctuation 36221 . 36222) (symbol 36217 . 36221) (punctuation 36215 . 36216) (symbol 36213 . 36215) (punctuation 36211 . 36212) (VOID 36207 . 36211) (punctuation 36205 . 36206) (symbol 36197 . 36205) (punctuation 36196 . 36197) (symbol 36188 . 36196) (TYPENAME 36179 . 36187) (punctuation 36177 . 36178) (symbol 36165 . 36176) (USING 36159 . 36164) (punctuation 36157 . 36158) (symbol 36153 . 36157) (punctuation 36151 . 36152) (punctuation 36150 . 36151) (punctuation 36149 . 36150) (CLASS 36144 . 36149) (punctuation 36142 . 36143) (symbol 36140 . 36142) (CLASS 36134 . 36139) (punctuation 36132 . 36133) (punctuation 36131 . 36132) (punctuation 36130 . 36131) (punctuation 36129 . 36130) (CLASS 36124 . 36129) (punctuation 36123 . 36124) (TEMPLATE 36114 . 36122) (punctuation 36113 . 36114) (TEMPLATE 36104 . 36112) (punctuation 36101 . 36102) (semantic-list 36032 . 36101) (punctuation 36030 . 36031) (punctuation 36029 . 36030) (punctuation 36028 . 36029) (punctuation 36027 . 36028) (symbol 36023 . 36027) (punctuation 36021 . 36022) (symbol 36019 . 36021) (punctuation 36017 . 36018) (punctuation 36016 . 36017) (punctuation 36015 . 36016) (punctuation 36014 . 36015) (punctuation 36013 . 36014) (punctuation 36012 . 36013) (symbol 36008 . 36012) (punctuation 36007 . 36008) (symbol 36005 . 36007) (punctuation 36004 . 36005) (symbol 35998 . 36004) (punctuation 35996 . 35997) (symbol 35989 . 35996) (punctuation 35988 . 35989) (symbol 35980 . 35988) (STRUCT 35973 . 35979) (punctuation 35971 . 35972) (symbol 35967 . 35971) (punctuation 35965 . 35966) (punctuation 35964 . 35965) (punctuation 35963 . 35964) (CLASS 35958 . 35963) (punctuation 35956 . 35957) (symbol 35954 . 35956) (CLASS 35948 . 35953) (punctuation 35946 . 35947) (punctuation 35945 . 35946) (punctuation 35944 . 35945) (punctuation 35943 . 35944) (CLASS 35938 . 35943) (punctuation 35937 . 35938) (TEMPLATE 35928 . 35936) (punctuation 35926 . 35927) (symbol 35919 . 35926) (CLASS 35913 . 35918) (punctuation 35912 . 35913) (TEMPLATE 35903 . 35911) (USING 35877 . 35882) (punctuation 35854 . 35855) (symbol 35846 . 35853) (USING 35840 . 35845) (punctuation 35816 . 35817) (symbol 35812 . 35816) (punctuation 35810 . 35811) (punctuation 35809 . 35810) (punctuation 35808 . 35809) (CLASS 35803 . 35808) (punctuation 35791 . 35792) (symbol 35789 . 35791) (CLASS 35783 . 35788) (punctuation 35781 . 35782) (punctuation 35780 . 35781) (punctuation 35779 . 35780) (punctuation 35778 . 35779) (CLASS 35773 . 35778) (punctuation 35772 . 35773) (TEMPLATE 35763 . 35771) (punctuation 35751 . 35752) (symbol 35741 . 35751) (CLASS 35735 . 35740) (punctuation 35723 . 35724) (symbol 35716 . 35723) (CLASS 35710 . 35715) (punctuation 35709 . 35710) (TEMPLATE 35700 . 35708) (punctuation 35694 . 35695) (DELETE 35688 . 35694) (punctuation 35686 . 35687) (semantic-list 35673 . 35685) (punctuation 35672 . 35673) (OPERATOR 35664 . 35672) (punctuation 35683 . 35684) (VOID 35659 . 35663) (punctuation 35683 . 35684) (punctuation 35653 . 35654) (DELETE 35647 . 35653) (punctuation 35645 . 35646) (semantic-list 35627 . 35644) (punctuation 35626 . 35627) (OPERATOR 35618 . 35626) (VOID 35613 . 35617) (punctuation 35607 . 35608) (DELETE 35601 . 35607) (punctuation 35599 . 35600) (semantic-list 35580 . 35598) (symbol 35572 . 35580) (punctuation 35596 . 35597) (punctuation 35566 . 35567) (DELETE 35560 . 35566) (punctuation 35558 . 35559) (semantic-list 35540 . 35557) (symbol 35532 . 35540) (punctuation 35526 . 35527) (DELETE 35520 . 35526) (punctuation 35518 . 35519) (semantic-list 35515 . 35517) (symbol 35507 . 35515) (punctuation 35506 . 35507) (punctuation 35500 . 35501) (DELETE 35494 . 35500) (punctuation 35492 . 35493) (semantic-list 35489 . 35491) (symbol 35481 . 35489) (punctuation 35086 . 35087) (punctuation 35085 . 35086) (symbol 35084 . 35085) (punctuation 35082 . 35083) (symbol 35072 . 35081) (USING 35066 . 35071) (punctuation 35060 . 35061) (punctuation 35059 . 35060) (symbol 35058 . 35059) (punctuation 35056 . 35057) (symbol 35048 . 35055) (USING 35042 . 35047) (USING 35003 . 35008) (USING 34977 . 34982) (punctuation 34938 . 34939) (symbol 34920 . 34937) (USING 34914 . 34919) (punctuation 34794 . 34795) (punctuation 34780 . 34781) (punctuation 34779 . 34780) (symbol 34773 . 34778) (punctuation 34772 . 34773) (punctuation 34771 . 34772) (punctuation 34770 . 34771) (symbol 34769 . 34770) (punctuation 34768 . 34769) (symbol 34758 . 34768) (punctuation 34757 . 34758) (punctuation 34756 . 34757) (symbol 34753 . 34756) (punctuation 34752 . 34753) (punctuation 34750 . 34751) (symbol 34738 . 34749) (punctuation 34736 . 34737) (symbol 34735 . 34736) (punctuation 34733 . 34734) (symbol 34717 . 34732) (STRUCT 34710 . 34716) (punctuation 34708 . 34709) (symbol 34707 . 34708) (TYPENAME 34698 . 34706) (punctuation 34697 . 34698) (TEMPLATE 34688 . 34696) (punctuation 34657 . 34658) (VOID 34653 . 34657) (punctuation 34651 . 34652) (TYPENAME 34642 . 34650) (punctuation 34640 . 34641) (symbol 34639 . 34640) (TYPENAME 34630 . 34638) (punctuation 34629 . 34630) (TEMPLATE 34620 . 34628) (punctuation 34455 . 34456) (semantic-list 34196 . 34455) (punctuation 34194 . 34195) (punctuation 34193 . 34194) (symbol 34175 . 34192) (punctuation 34174 . 34175) (punctuation 34173 . 34174) (symbol 34171 . 34173) (TYPENAME 34162 . 34170) (punctuation 34160 . 34161) (symbol 34151 . 34160) (punctuation 34150 . 34151) (punctuation 34149 . 34150) (symbol 34147 . 34149) (TYPENAME 34138 . 34146) (punctuation 34132 . 34133) (symbol 34125 . 34132) (punctuation 34124 . 34125) (punctuation 34123 . 34124) (symbol 34121 . 34123) (TYPENAME 34112 . 34120) (punctuation 34110 . 34111) (symbol 34100 . 34110) (punctuation 34099 . 34100) (punctuation 34098 . 34099) (symbol 34096 . 34098) (TYPENAME 34087 . 34095) (punctuation 34085 . 34086) (symbol 34070 . 34085) (punctuation 34069 . 34070) (punctuation 34068 . 34069) (symbol 34066 . 34068) (TYPENAME 34057 . 34065) (punctuation 34056 . 34057) (symbol 34050 . 34056) (punctuation 34044 . 34045) (symbol 34042 . 34044) (punctuation 34036 . 34037) (symbol 34021 . 34035) (STRUCT 34014 . 34020) (punctuation 34012 . 34013) (symbol 34010 . 34012) (TYPENAME 34001 . 34009) (punctuation 34000 . 34001) (TEMPLATE 33991 . 33999) (punctuation 33962 . 33963) (VOID 33958 . 33962) (punctuation 33956 . 33957) (TYPENAME 33947 . 33955) (punctuation 33945 . 33946) (symbol 33943 . 33945) (TYPENAME 33934 . 33942) (punctuation 33933 . 33934) (TEMPLATE 33924 . 33932) (punctuation 33777 . 33778) (punctuation 33776 . 33777) (punctuation 33775 . 33776) (punctuation 33774 . 33775) (punctuation 33773 . 33774) (punctuation 33772 . 33773) (symbol 33770 . 33772) (punctuation 33769 . 33770) (symbol 33760 . 33769) (TYPENAME 33751 . 33759) (punctuation 33749 . 33750) (symbol 33742 . 33748) (USING 33736 . 33741) (punctuation 33734 . 33735) (symbol 33732 . 33734) (punctuation 33731 . 33732) (punctuation 33730 . 33731) (punctuation 33729 . 33730) (TYPENAME 33720 . 33728) (punctuation 33719 . 33720) (TEMPLATE 33710 . 33718) (punctuation 33705 . 33706) (VOID 33701 . 33705) (punctuation 33699 . 33700) (symbol 33694 . 33698) (USING 33688 . 33693) (punctuation 33663 . 33664) (symbol 33661 . 33663) (punctuation 33660 . 33661) (punctuation 33659 . 33660) (punctuation 33658 . 33659) (TYPENAME 33649 . 33657) (punctuation 33648 . 33649) (TEMPLATE 33639 . 33647) (symbol 33119 . 33128) (punctuation 33117 . 33118) (symbol 33116 . 33117) (TYPENAME 33107 . 33115) (punctuation 33106 . 33107) (TEMPLATE 33098 . 33106) (symbol 33073 . 33082) (STATIC 33066 . 33072) (punctuation 32954 . 32955) (semantic-list 32952 . 32954) (punctuation 32950 . 32951) (number 32948 . 32949) (punctuation 32946 . 32947) (symbol 32944 . 32945) (punctuation 32942 . 32943) (symbol 32929 . 32941) (punctuation 32927 . 32928) (symbol 32914 . 32926) (STRUCT 32907 . 32913) (punctuation 32905 . 32906) (symbol 32904 . 32905) (UNSIGNED 32895 . 32903) (punctuation 32894 . 32895) (TEMPLATE 32886 . 32894) (punctuation 32840 . 32841) (punctuation 32839 . 32840) (semantic-list 32835 . 32839) (punctuation 32834 . 32835) (punctuation 32833 . 32834) (punctuation 32832 . 32833) (SIZEOF 32826 . 32832) (punctuation 32825 . 32826) (symbol 32806 . 32825) (punctuation 32804 . 32805) (symbol 32785 . 32803) (USING 32779 . 32784) (punctuation 32777 . 32778) (symbol 32775 . 32777) (punctuation 32773 . 32774) (punctuation 32772 . 32773) (punctuation 32771 . 32772) (TYPENAME 32763 . 32771) (punctuation 32762 . 32763) (TEMPLATE 32754 . 32762) (punctuation 32621 . 32622) (semantic-list 32619 . 32621) (punctuation 32617 . 32618) (symbol 32612 . 32616) (punctuation 32611 . 32612) (punctuation 32610 . 32611) (punctuation 32609 . 32610) (number 32607 . 32608) (punctuation 32605 . 32606) (symbol 32603 . 32604) (punctuation 32601 . 32602) (symbol 32599 . 32600) (punctuation 32597 . 32598) (symbol 32577 . 32596) (TYPENAME 32568 . 32576) (punctuation 32560 . 32561) (symbol 32556 . 32560) (punctuation 32555 . 32556) (punctuation 32554 . 32555) (punctuation 32553 . 32554) (number 32551 . 32552) (punctuation 32549 . 32550) (symbol 32547 . 32548) (punctuation 32545 . 32546) (symbol 32525 . 32544) (TYPENAME 32516 . 32524) (punctuation 32514 . 32515) (symbol 32495 . 32513) (punctuation 32493 . 32494) (symbol 32469 . 32488) (STRUCT 32462 . 32468) (punctuation 32460 . 32461) (symbol 32459 . 32460) (symbol 32452 . 32458) (punctuation 32451 . 32452) (punctuation 32450 . 32451) (symbol 32447 . 32450) (punctuation 32446 . 32447) (TEMPLATE 32438 . 32446) (punctuation 32435 . 32436) (semantic-list 32433 . 32435) (punctuation 32431 . 32432) (punctuation 32429 . 32430) (punctuation 32428 . 32429) (punctuation 32427 . 32428) (semantic-list 32407 . 32427) (punctuation 32405 . 32406) (punctuation 32404 . 32405) (punctuation 32403 . 32404) (punctuation 32402 . 32403) (symbol 32400 . 32402) (punctuation 32398 . 32399) (symbol 32383 . 32397) (punctuation 32381 . 32382) (punctuation 32371 . 32372) (punctuation 32370 . 32371) (punctuation 32369 . 32370) (punctuation 32368 . 32369) (punctuation 32367 . 32368) (symbol 32365 . 32367) (punctuation 32364 . 32365) (symbol 32350 . 32364) (punctuation 32348 . 32349) (punctuation 32347 . 32348) (punctuation 32346 . 32347) (punctuation 32345 . 32346) (punctuation 32344 . 32345) (symbol 32342 . 32344) (punctuation 32341 . 32342) (symbol 32327 . 32341) (punctuation 32326 . 32327) (symbol 32308 . 32326) (STRUCT 32301 . 32307) (punctuation 32299 . 32300) (symbol 32297 . 32299) (punctuation 32295 . 32296) (punctuation 32294 . 32295) (punctuation 32293 . 32294) (symbol 32287 . 32293) (punctuation 32286 . 32287) (punctuation 32285 . 32286) (symbol 32282 . 32285) (punctuation 32280 . 32281) (symbol 32278 . 32280) (punctuation 32276 . 32277) (punctuation 32275 . 32276) (punctuation 32274 . 32275) (symbol 32268 . 32274) (punctuation 32267 . 32268) (punctuation 32266 . 32267) (symbol 32263 . 32266) (punctuation 32262 . 32263) (TEMPLATE 32254 . 32262) (semantic-list 32139 . 32178) (symbol 32126 . 32134) (semantic-list 32123 . 32125) (symbol 32119 . 32123) (symbol 32112 . 32118) (punctuation 32111 . 32112) (punctuation 32110 . 32111) (symbol 32107 . 32110) (symbol 32097 . 32106) (STATIC 32090 . 32096) (punctuation 32071 . 32072) (symbol 32060 . 32070) (USING 32054 . 32059) (USING 32021 . 32026) (punctuation 31991 . 31992) (symbol 31987 . 31991) (punctuation 31985 . 31986) (punctuation 31984 . 31985) (punctuation 31983 . 31984) (symbol 31977 . 31983) (punctuation 31976 . 31977) (punctuation 31975 . 31976) (symbol 31972 . 31975) (punctuation 31971 . 31972) (TEMPLATE 31963 . 31971) (punctuation 31850 . 31851) (punctuation 31849 . 31850) (punctuation 31848 . 31849) (symbol 31844 . 31848) (punctuation 31843 . 31844) (punctuation 31842 . 31843) (punctuation 31841 . 31842) (symbol 31840 . 31841) (punctuation 31839 . 31840) (symbol 31823 . 31839) (punctuation 31822 . 31823) (punctuation 31821 . 31822) (symbol 31818 . 31821) (TYPENAME 31809 . 31817) (punctuation 31808 . 31809) (symbol 31799 . 31808) (punctuation 31798 . 31799) (punctuation 31797 . 31798) (symbol 31794 . 31797) (TYPENAME 31785 . 31793) (punctuation 31783 . 31784) (symbol 31773 . 31782) (USING 31767 . 31772) (punctuation 31765 . 31766) (symbol 31764 . 31765) (TYPENAME 31755 . 31763) (punctuation 31754 . 31755) (TEMPLATE 31746 . 31754) (punctuation 31706 . 31707) (symbol 31694 . 31705) (USING 31688 . 31693) (punctuation 31686 . 31687) (VOID 31682 . 31686) (punctuation 31680 . 31681) (symbol 31678 . 31679) (TYPENAME 31669 . 31677) (punctuation 31667 . 31668) (symbol 31666 . 31667) (BOOL 31661 . 31665) (punctuation 31660 . 31661) (TEMPLATE 31652 . 31660) (string 25382 . 25397) (symbol 25374 . 25381) (symbol 25363 . 25373) (symbol 25359 . 25362) (symbol 25352 . 25358) (punctuation 25351 . 25352) (symbol 25342 . 25346) (symbol 25331 . 25341) (symbol 25327 . 25330) (symbol 25320 . 25326) (punctuation 25319 . 25320) (semantic-list 4853 . 4885) (symbol 4840 . 4848) (symbol 4831 . 4839) (CONST 4825 . 4830) (semantic-list 4822 . 4824) (symbol 4818 . 4822) (punctuation 4816 . 4817) (CHAR 4812 . 4816) (CONST 4806 . 4811) (OPERATOR 3394 . 3402) (symbol 3384 . 3393))
      :lexical-table 
        '(("NLOHMANN_JSON_SERIALIZE_ENUM" (spp-arg-list ("ENUM_TYPE" "...") 28068 . 28084) . 
              ((TEMPLATE "template" 28133 . 28141) (punctuation "<" 28141 . 28142) (TYPENAME "typename" 28142 . 28150) (symbol "BasicJsonType" 28151 . 28164) (punctuation ">" 28164 . 28165) (INLINE "inline" 28230 . 28236) (VOID "void" 28237 . 28241) (symbol "to_json" 28242 . 28249) (semantic-list "(BasicJsonType& j, const ENUM_TYPE& e)" 28249 . 28287) (semantic-list "{                                                                                          \\
        static_assert(std::is_enum<ENUM_TYPE>::value, #ENUM_TYPE \" must be an enum!\");         \\
        static const std::pair<ENUM_TYPE, BasicJsonType> m[] = __VA_ARGS__;                    \\
        auto it = std::find_if(std::begin(m), std::end(m),                                     \\
                               [e](const std::pair<ENUM_TYPE, BasicJsonType>& ej_pair) -> bool \\
        {                                                                                      \\
            return ej_pair.first == e;                                                         \\
        });                                                                                    \\
        j = ((it != std::end(m)) ? it : std::begin(m))->second;                                \\
    }" 28327 . 29201) (TEMPLATE "template" 29297 . 29305) (punctuation "<" 29305 . 29306) (TYPENAME "typename" 29306 . 29314) (symbol "BasicJsonType" 29315 . 29328) (punctuation ">" 29328 . 29329) (INLINE "inline" 29394 . 29400) (VOID "void" 29401 . 29405) (symbol "from_json" 29406 . 29415) (semantic-list "(const BasicJsonType& j, ENUM_TYPE& e)" 29415 . 29453) (semantic-list "{                                                                                          \\
        static_assert(std::is_enum<ENUM_TYPE>::value, #ENUM_TYPE \" must be an enum!\");         \\
        static const std::pair<ENUM_TYPE, BasicJsonType> m[] = __VA_ARGS__;                    \\
        auto it = std::find_if(std::begin(m), std::end(m),                                     \\
                               [j](const std::pair<ENUM_TYPE, BasicJsonType>& ej_pair) -> bool \\
        {                                                                                      \\
            return ej_pair.second == j;                                                        \\
        });                                                                                    \\
        e = ((it != std::end(m)) ? it : std::begin(m))->first;                                 \\
    }" 29491 . 30365)))
          ("NLOHMANN_JSON_VERSION_MAJOR" . ((number "3" 1513 . 1514)))
          ("NLOHMANN_JSON_VERSION_PATCH" . ((number "1" 1589 . 1590)))
          ("INCLUDE_NLOHMANN_JSON_HPP_")
          ("NLOHMANN_JSON_VERSION_MINOR" . ((number "6" 1551 . 1552)))
          ("INCLUDE_NLOHMANN_JSON_FWD_HPP_")
          )
))
  :file "!home!rvbust!Rvbust!Sources!RVS!Externals!Json11!include!Json11!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
